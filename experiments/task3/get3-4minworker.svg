<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1174" onload="init(evt)" viewBox="0 0 1200 1174" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1157"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1157"> </text>
<g id="frames">
<g>
<title>all (3,689 samples, 100.00%)</title><rect x="10.0" y="1123.0" width="1180.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="13.0" y="1134.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=32633] (312 samples, 8.46%)</title><rect x="10.0" y="1107.0" width="99.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="13.0" y="1118.0">[NIO Selecto..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="10.0" y="1091.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="13.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (311 samples, 8.43%)</title><rect x="10.3" y="1091.0" width="99.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="13.3" y="1102.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.19%)</title><rect x="11.3" y="1075.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="14.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.19%)</title><rect x="11.3" y="1059.0" width="2.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="14.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (99 samples, 2.68%)</title><rect x="13.5" y="1075.0" width="31.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.5" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.05%)</title><rect x="14.2" y="1059.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="17.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.05%)</title><rect x="14.2" y="1043.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="17.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (95 samples, 2.58%)</title><rect x="14.8" y="1059.0" width="30.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="17.8" y="1070.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.08%)</title><rect x="16.7" y="1043.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="19.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (82 samples, 2.22%)</title><rect x="17.7" y="1043.0" width="26.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="20.7" y="1054.0">[..</text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="17.7" y="1027.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="20.7" y="1038.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.08%)</title><rect x="18.0" y="1027.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="21.0" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.11%)</title><rect x="19.0" y="1027.0" width="1.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="22.0" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="19.9" y="1011.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="22.9" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (74 samples, 2.01%)</title><rect x="20.2" y="1027.0" width="23.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="23.2" y="1038.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 1.63%)</title><rect x="24.7" y="1011.0" width="19.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="27.7" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 1.63%)</title><rect x="24.7" y="995.0" width="19.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.7" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (58 samples, 1.57%)</title><rect x="25.4" y="979.0" width="18.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="28.4" y="990.0"></text>
</g>
<g>
<title>do_epoll_wait (57 samples, 1.55%)</title><rect x="25.7" y="963.0" width="18.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="28.7" y="974.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="26.6" y="947.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="29.6" y="958.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="26.6" y="931.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="29.6" y="942.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="26.6" y="915.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.6" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="26.6" y="899.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="29.6" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="26.6" y="883.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="29.6" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="26.6" y="867.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="29.6" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="26.6" y="851.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="29.6" y="862.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="26.6" y="835.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="29.6" y="846.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="26.6" y="819.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="29.6" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="26.6" y="803.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="29.6" y="814.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="27.0" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="30.0" y="958.0"></text>
</g>
<g>
<title>ep_poll (50 samples, 1.36%)</title><rect x="27.3" y="947.0" width="16.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="30.3" y="958.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (16 samples, 0.43%)</title><rect x="29.5" y="931.0" width="5.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="32.5" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.22%)</title><rect x="31.4" y="915.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="34.4" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (6 samples, 0.16%)</title><rect x="32.1" y="899.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.1" y="910.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.05%)</title><rect x="33.0" y="883.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="36.0" y="894.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="33.0" y="867.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="36.0" y="878.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="33.4" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="36.4" y="878.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="33.7" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.7" y="894.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="34.0" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="37.0" y="926.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="34.3" y="915.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="37.3" y="926.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="34.6" y="931.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="37.6" y="942.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="34.9" y="931.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="37.9" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (25 samples, 0.68%)</title><rect x="35.3" y="931.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="38.3" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (25 samples, 0.68%)</title><rect x="35.3" y="915.0" width="8.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="38.3" y="926.0"></text>
</g>
<g>
<title>schedule (24 samples, 0.65%)</title><rect x="35.6" y="899.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="38.6" y="910.0"></text>
</g>
<g>
<title>__schedule (24 samples, 0.65%)</title><rect x="35.6" y="883.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="38.6" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 0.62%)</title><rect x="35.9" y="867.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="38.9" y="878.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="42.9" y="851.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="45.9" y="862.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="42.9" y="835.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="45.9" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="42.9" y="819.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="45.9" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="42.9" y="803.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="45.9" y="814.0"></text>
</g>
<g>
<title>tasklet_hi_action (1 samples, 0.03%)</title><rect x="42.9" y="787.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="45.9" y="798.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.23 (1 samples, 0.03%)</title><rect x="42.9" y="771.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="45.9" y="782.0"></text>
</g>
<g>
<title>execlists_submission_tasklet	[i915] (1 samples, 0.03%)</title><rect x="42.9" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="45.9" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="42.9" y="739.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="45.9" y="750.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="43.3" y="947.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="46.3" y="958.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="43.9" y="1043.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="46.9" y="1054.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.05%)</title><rect x="44.5" y="1043.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="47.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (202 samples, 5.48%)</title><rect x="45.2" y="1075.0" width="64.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.2" y="1086.0">one/nio..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="45.5" y="1059.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="48.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (199 samples, 5.39%)</title><rect x="46.1" y="1059.0" width="63.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="49.1" y="1070.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (133 samples, 3.61%)</title><rect x="46.1" y="1043.0" width="42.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.1" y="1054.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (105 samples, 2.85%)</title><rect x="46.8" y="1027.0" width="33.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.8" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (105 samples, 2.85%)</title><rect x="46.8" y="1011.0" width="33.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="49.8" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.05%)</title><rect x="46.8" y="995.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.8" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="46.8" y="979.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="49.8" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="46.8" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="49.8" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="46.8" y="947.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="49.8" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="47.1" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="47.1" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="50.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="47.1" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="50.1" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="47.4" y="995.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="50.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="47.4" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="50.4" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="47.4" y="963.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="50.4" y="974.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="47.4" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="50.4" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="47.7" y="963.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.7" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (101 samples, 2.74%)</title><rect x="48.1" y="995.0" width="32.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.1" y="1006.0">ru..</text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="48.1" y="979.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.03%)</title><rect x="48.1" y="963.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="51.1" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="48.4" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="51.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="48.4" y="963.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="51.4" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="48.4" y="947.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.4" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="48.4" y="931.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="51.4" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (99 samples, 2.68%)</title><rect x="48.7" y="979.0" width="31.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="51.7" y="990.0">ru..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.14%)</title><rect x="49.0" y="963.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.0" y="974.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.08%)</title><rect x="49.3" y="947.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="52.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="50.3" y="947.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.3" y="958.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (93 samples, 2.52%)</title><rect x="50.6" y="963.0" width="29.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.6" y="974.0">on..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (93 samples, 2.52%)</title><rect x="50.6" y="947.0" width="29.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="53.6" y="958.0">ja..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (92 samples, 2.49%)</title><rect x="50.9" y="931.0" width="29.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="53.9" y="942.0">on..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (92 samples, 2.49%)</title><rect x="50.9" y="915.0" width="29.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="53.9" y="926.0">on..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (92 samples, 2.49%)</title><rect x="50.9" y="899.0" width="29.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="53.9" y="910.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (92 samples, 2.49%)</title><rect x="50.9" y="883.0" width="29.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="53.9" y="894.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (82 samples, 2.22%)</title><rect x="51.3" y="867.0" width="26.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.3" y="878.0">j..</text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="51.3" y="851.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="54.3" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="51.3" y="835.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="54.3" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (81 samples, 2.20%)</title><rect x="51.6" y="851.0" width="25.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="54.6" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (81 samples, 2.20%)</title><rect x="51.6" y="835.0" width="25.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="54.6" y="846.0">j..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="51.6" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="54.6" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="51.9" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="54.9" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="52.2" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="55.2" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.33%)</title><rect x="52.5" y="819.0" width="3.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="55.5" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="53.8" y="803.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="56.8" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="54.1" y="803.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="57.1" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.05%)</title><rect x="54.8" y="803.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="57.8" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="55.4" y="803.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="58.4" y="814.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="56.1" y="803.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="59.1" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="56.4" y="819.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="59.4" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (65 samples, 1.76%)</title><rect x="56.7" y="819.0" width="20.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="59.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 1.44%)</title><rect x="60.5" y="803.0" width="17.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="63.5" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="60.5" y="787.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="63.5" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (52 samples, 1.41%)</title><rect x="60.9" y="787.0" width="16.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="63.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (52 samples, 1.41%)</title><rect x="60.9" y="771.0" width="16.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="63.9" y="782.0"></text>
</g>
<g>
<title>do_futex (52 samples, 1.41%)</title><rect x="60.9" y="755.0" width="16.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="63.9" y="766.0"></text>
</g>
<g>
<title>futex_wake (51 samples, 1.38%)</title><rect x="60.9" y="739.0" width="16.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="63.9" y="750.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="61.8" y="723.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="64.8" y="734.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="62.5" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="65.5" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.11%)</title><rect x="62.8" y="723.0" width="1.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="65.8" y="734.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.03%)</title><rect x="63.7" y="707.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="66.7" y="718.0"></text>
</g>
<g>
<title>wake_up_q (41 samples, 1.11%)</title><rect x="64.1" y="723.0" width="13.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="67.1" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (40 samples, 1.08%)</title><rect x="64.4" y="707.0" width="12.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="67.4" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (40 samples, 1.08%)</title><rect x="64.4" y="691.0" width="12.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="67.4" y="702.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="77.2" y="739.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="80.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 0.08%)</title><rect x="77.5" y="867.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="80.5" y="878.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.05%)</title><rect x="77.8" y="851.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="80.8" y="862.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.05%)</title><rect x="77.8" y="835.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="80.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (5 samples, 0.14%)</title><rect x="78.5" y="867.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.5" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (3 samples, 0.08%)</title><rect x="79.1" y="851.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.1" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="80.1" y="867.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="83.1" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (13 samples, 0.35%)</title><rect x="80.4" y="1027.0" width="4.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="83.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.11%)</title><rect x="81.0" y="1011.0" width="1.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="84.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="81.3" y="995.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="84.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="81.3" y="979.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.3" y="990.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.08%)</title><rect x="81.3" y="963.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="84.3" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.19%)</title><rect x="82.3" y="1011.0" width="2.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.19%)</title><rect x="82.3" y="995.0" width="2.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="85.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="84.2" y="979.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="87.2" y="990.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.03%)</title><rect x="84.2" y="963.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.03%)</title><rect x="84.2" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="87.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.08%)</title><rect x="84.5" y="1027.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="87.5" y="1038.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="85.2" y="1011.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="88.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.03%)</title><rect x="85.5" y="1027.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="88.5" y="1038.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="85.5" y="1011.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="88.5" y="1022.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="85.5" y="995.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.5" y="1006.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="85.5" y="979.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.5" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="85.5" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="88.5" y="974.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="85.5" y="947.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.5" y="958.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="85.5" y="931.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.5" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="85.5" y="915.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="88.5" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.11%)</title><rect x="85.8" y="1027.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="88.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="86.1" y="1011.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="89.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="86.4" y="1011.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.4" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="86.4" y="995.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="86.8" y="979.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.8" y="990.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="86.8" y="963.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.8" y="974.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="86.8" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="89.8" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.14%)</title><rect x="87.1" y="1027.0" width="1.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="90.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.14%)</title><rect x="87.1" y="1011.0" width="1.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="90.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="87.7" y="995.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="90.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="87.7" y="979.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="90.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="87.7" y="963.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="90.7" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="87.7" y="947.0" width="0.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="90.7" y="958.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="88.4" y="995.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.4" y="1006.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="88.4" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="91.4" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="88.4" y="963.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="91.4" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="88.4" y="947.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (66 samples, 1.79%)</title><rect x="88.7" y="1043.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="91.7" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (64 samples, 1.73%)</title><rect x="88.7" y="1027.0" width="20.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="91.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.41%)</title><rect x="90.0" y="1011.0" width="4.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="93.0" y="1022.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.41%)</title><rect x="90.0" y="995.0" width="4.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="93.0" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.27%)</title><rect x="90.0" y="979.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="93.0" y="990.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="90.0" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="93.0" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.05%)</title><rect x="90.3" y="963.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="93.3" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.19%)</title><rect x="90.9" y="963.0" width="2.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="93.9" y="974.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.05%)</title><rect x="91.2" y="947.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="94.2" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="91.9" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="94.9" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.05%)</title><rect x="92.2" y="947.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="95.2" y="958.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="92.8" y="947.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="95.8" y="958.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="93.2" y="979.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="96.2" y="990.0"></text>
</g>
<g>
<title>recv (4 samples, 0.11%)</title><rect x="93.5" y="979.0" width="1.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="96.5" y="990.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="94.8" y="1011.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="97.8" y="1022.0"></text>
</g>
<g>
<title>recv (44 samples, 1.19%)</title><rect x="95.1" y="1011.0" width="14.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="98.1" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.00%)</title><rect x="97.3" y="995.0" width="11.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.3" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.00%)</title><rect x="97.3" y="979.0" width="11.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="100.3" y="990.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="98.6" y="963.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="101.6" y="974.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (32 samples, 0.87%)</title><rect x="98.9" y="963.0" width="10.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="101.9" y="974.0"></text>
</g>
<g>
<title>__sys_recvfrom (32 samples, 0.87%)</title><rect x="98.9" y="947.0" width="10.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="101.9" y="958.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="99.2" y="931.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="102.2" y="942.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="99.2" y="915.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="102.2" y="926.0"></text>
</g>
<g>
<title>sock_recvmsg (27 samples, 0.73%)</title><rect x="99.6" y="931.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="102.6" y="942.0"></text>
</g>
<g>
<title>inet_recvmsg (17 samples, 0.46%)</title><rect x="99.6" y="915.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="102.6" y="926.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.03%)</title><rect x="99.6" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="102.6" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.43%)</title><rect x="99.9" y="899.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="102.9" y="910.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="100.8" y="883.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="103.8" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="100.8" y="867.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="103.8" y="878.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="101.2" y="883.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="104.2" y="894.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="101.2" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="104.2" y="878.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.24%)</title><rect x="101.5" y="883.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="104.5" y="894.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.22%)</title><rect x="101.5" y="867.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.5" y="878.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.22%)</title><rect x="101.5" y="851.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="104.5" y="862.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.11%)</title><rect x="101.5" y="835.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="104.5" y="846.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="101.5" y="819.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.5" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.08%)</title><rect x="101.8" y="819.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="104.8" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.05%)</title><rect x="102.8" y="835.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="105.8" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.05%)</title><rect x="103.4" y="835.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.4" y="846.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="103.4" y="819.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.4" y="830.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="104.0" y="867.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="107.0" y="878.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.05%)</title><rect x="104.4" y="883.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="107.4" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (9 samples, 0.24%)</title><rect x="105.0" y="915.0" width="2.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="108.0" y="926.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="105.3" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="108.3" y="910.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.19%)</title><rect x="105.6" y="899.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="108.6" y="910.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.19%)</title><rect x="105.6" y="883.0" width="2.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="108.6" y="894.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.19%)</title><rect x="105.6" y="867.0" width="2.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="108.6" y="878.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.11%)</title><rect x="106.6" y="851.0" width="1.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="109.6" y="862.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.08%)</title><rect x="106.9" y="835.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="109.9" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.03%)</title><rect x="107.9" y="915.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="110.9" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.08%)</title><rect x="108.2" y="931.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="111.2" y="942.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.08%)</title><rect x="108.2" y="915.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="111.2" y="926.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.08%)</title><rect x="108.2" y="899.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="111.2" y="910.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.08%)</title><rect x="108.2" y="883.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="111.2" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (2 samples, 0.05%)</title><rect x="109.2" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.2" y="1038.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=32634] (316 samples, 8.57%)</title><rect x="109.8" y="1107.0" width="101.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="112.8" y="1118.0">[NIO Selecto..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="109.8" y="1091.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="112.8" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="109.8" y="1075.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="112.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (315 samples, 8.54%)</title><rect x="110.1" y="1091.0" width="100.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="113.1" y="1102.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (114 samples, 3.09%)</title><rect x="110.4" y="1075.0" width="36.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="113.4" y="1086.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (5 samples, 0.14%)</title><rect x="111.1" y="1059.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="114.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.11%)</title><rect x="111.4" y="1043.0" width="1.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="114.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (107 samples, 2.90%)</title><rect x="112.7" y="1059.0" width="34.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="115.7" y="1070.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.11%)</title><rect x="115.2" y="1043.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="118.2" y="1054.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 2.47%)</title><rect x="116.5" y="1043.0" width="29.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="119.5" y="1054.0">[u..</text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.11%)</title><rect x="116.5" y="1027.0" width="1.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="119.5" y="1038.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.03%)</title><rect x="117.8" y="1027.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="120.8" y="1038.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="118.1" y="1027.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="121.1" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="118.8" y="1027.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="121.8" y="1038.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="118.8" y="1011.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="121.8" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (82 samples, 2.22%)</title><rect x="119.4" y="1027.0" width="26.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="122.4" y="1038.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 1.73%)</title><rect x="125.2" y="1011.0" width="20.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="128.2" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (64 samples, 1.73%)</title><rect x="125.2" y="995.0" width="20.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="128.2" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (62 samples, 1.68%)</title><rect x="125.8" y="979.0" width="19.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="128.8" y="990.0"></text>
</g>
<g>
<title>do_epoll_wait (61 samples, 1.65%)</title><rect x="126.1" y="963.0" width="19.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="129.1" y="974.0"></text>
</g>
<g>
<title>ep_poll (59 samples, 1.60%)</title><rect x="126.1" y="947.0" width="18.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="129.1" y="958.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (25 samples, 0.68%)</title><rect x="128.0" y="931.0" width="8.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="131.0" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.38%)</title><rect x="130.9" y="915.0" width="4.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="133.9" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (12 samples, 0.33%)</title><rect x="131.2" y="899.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="134.2" y="910.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.30%)</title><rect x="131.6" y="883.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="134.6" y="894.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.11%)</title><rect x="133.5" y="867.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="136.5" y="878.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.03%)</title><rect x="134.1" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.1" y="862.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.03%)</title><rect x="134.1" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="137.1" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="134.1" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.1" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="134.1" y="803.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.1" y="814.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="134.4" y="851.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.4" y="862.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="134.7" y="867.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.7" y="878.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="135.1" y="899.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="138.1" y="910.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="135.4" y="915.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="138.4" y="926.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.03%)</title><rect x="135.7" y="915.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="138.7" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (28 samples, 0.76%)</title><rect x="136.0" y="931.0" width="9.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="139.0" y="942.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="136.0" y="915.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="139.0" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 0.73%)</title><rect x="136.3" y="915.0" width="8.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="139.3" y="926.0"></text>
</g>
<g>
<title>schedule (26 samples, 0.70%)</title><rect x="136.7" y="899.0" width="8.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="139.7" y="910.0"></text>
</g>
<g>
<title>__schedule (26 samples, 0.70%)</title><rect x="136.7" y="883.0" width="8.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="139.7" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (25 samples, 0.68%)</title><rect x="137.0" y="867.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="140.0" y="878.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="144.7" y="851.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="147.7" y="862.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="144.7" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="147.7" y="846.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="144.7" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="147.7" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="144.7" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="147.7" y="814.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="144.7" y="787.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="147.7" y="798.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="144.7" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="147.7" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="144.7" y="755.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="147.7" y="766.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="145.0" y="947.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="148.0" y="958.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="145.6" y="1043.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="148.6" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="146.3" y="1043.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="149.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (200 samples, 5.42%)</title><rect x="146.9" y="1075.0" width="64.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.9" y="1086.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (200 samples, 5.42%)</title><rect x="146.9" y="1059.0" width="64.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="149.9" y="1070.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (124 samples, 3.36%)</title><rect x="147.5" y="1043.0" width="39.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="150.5" y="1054.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (99 samples, 2.68%)</title><rect x="148.5" y="1027.0" width="31.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.5" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (99 samples, 2.68%)</title><rect x="148.5" y="1011.0" width="31.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.5" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.05%)</title><rect x="148.5" y="995.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.5" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="148.5" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="151.5" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.05%)</title><rect x="148.5" y="963.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="151.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.05%)</title><rect x="148.5" y="947.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.5" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="149.1" y="995.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="152.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="149.1" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="152.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="149.1" y="963.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="152.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="149.1" y="947.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="152.1" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="149.1" y="931.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="152.1" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="149.5" y="947.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (95 samples, 2.58%)</title><rect x="149.8" y="995.0" width="30.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="152.8" y="1006.0">ru..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="149.8" y="979.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="149.8" y="963.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (94 samples, 2.55%)</title><rect x="150.1" y="979.0" width="30.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="153.1" y="990.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="150.4" y="963.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="153.4" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="150.7" y="947.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="153.7" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="150.7" y="931.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.7" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="150.7" y="915.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="153.7" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="150.7" y="899.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.7" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="150.7" y="883.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.7" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="150.7" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="153.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.11%)</title><rect x="151.1" y="963.0" width="1.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="151.1" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="154.1" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="151.1" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="154.1" y="942.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="151.4" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.4" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="151.7" y="947.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="154.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="152.0" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="155.0" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="152.0" y="931.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="155.0" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="152.0" y="915.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="155.0" y="926.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (87 samples, 2.36%)</title><rect x="152.3" y="963.0" width="27.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="155.3" y="974.0">o..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (87 samples, 2.36%)</title><rect x="152.3" y="947.0" width="27.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.3" y="958.0">j..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (86 samples, 2.33%)</title><rect x="152.7" y="931.0" width="27.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="155.7" y="942.0">o..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (86 samples, 2.33%)</title><rect x="152.7" y="915.0" width="27.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="155.7" y="926.0">o..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (85 samples, 2.30%)</title><rect x="153.0" y="899.0" width="27.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.0" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (85 samples, 2.30%)</title><rect x="153.0" y="883.0" width="27.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="156.0" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (83 samples, 2.25%)</title><rect x="153.3" y="867.0" width="26.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="156.3" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (83 samples, 2.25%)</title><rect x="153.3" y="851.0" width="26.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.3" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (83 samples, 2.25%)</title><rect x="153.3" y="835.0" width="26.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.3" y="846.0">j..</text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.03%)</title><rect x="153.6" y="819.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="156.6" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.33%)</title><rect x="153.9" y="819.0" width="3.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="156.9" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.05%)</title><rect x="153.9" y="803.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="156.9" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="154.6" y="803.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="157.6" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="154.9" y="803.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="157.9" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (6 samples, 0.16%)</title><rect x="155.2" y="803.0" width="1.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="158.2" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.03%)</title><rect x="157.1" y="803.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="160.1" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="157.5" y="803.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="160.5" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.08%)</title><rect x="157.8" y="819.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="160.8" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (66 samples, 1.79%)</title><rect x="158.7" y="819.0" width="21.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="161.7" y="830.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 1.57%)</title><rect x="161.3" y="803.0" width="18.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="164.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.57%)</title><rect x="161.3" y="787.0" width="18.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="164.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (55 samples, 1.49%)</title><rect x="161.9" y="771.0" width="17.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="164.9" y="782.0"></text>
</g>
<g>
<title>do_futex (55 samples, 1.49%)</title><rect x="161.9" y="755.0" width="17.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="164.9" y="766.0"></text>
</g>
<g>
<title>futex_wake (55 samples, 1.49%)</title><rect x="161.9" y="739.0" width="17.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="164.9" y="750.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="162.3" y="723.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="165.3" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.11%)</title><rect x="162.6" y="723.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.6" y="734.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.03%)</title><rect x="163.5" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="166.5" y="718.0"></text>
</g>
<g>
<title>wake_up_q (49 samples, 1.33%)</title><rect x="163.9" y="723.0" width="15.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="166.9" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (47 samples, 1.27%)</title><rect x="164.5" y="707.0" width="15.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="167.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (47 samples, 1.27%)</title><rect x="164.5" y="691.0" width="15.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="167.5" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="179.2" y="675.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="182.2" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="179.2" y="659.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="182.2" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="179.2" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="182.2" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="179.2" y="627.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="182.2" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="179.2" y="611.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="182.2" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="179.2" y="595.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="182.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="179.2" y="579.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="182.2" y="590.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="179.5" y="771.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="182.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.03%)</title><rect x="179.9" y="867.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.9" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.03%)</title><rect x="179.9" y="851.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="182.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (12 samples, 0.33%)</title><rect x="180.2" y="1027.0" width="3.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (5 samples, 0.14%)</title><rect x="180.8" y="1011.0" width="1.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="183.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="181.1" y="995.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="184.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="181.1" y="979.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="184.1" y="990.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.08%)</title><rect x="181.1" y="963.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="184.1" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="182.1" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="185.1" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.14%)</title><rect x="182.4" y="1011.0" width="1.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="185.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.14%)</title><rect x="182.4" y="995.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="185.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="183.7" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="186.7" y="990.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.05%)</title><rect x="184.0" y="1027.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="187.0" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.03%)</title><rect x="184.3" y="1011.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="187.3" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.11%)</title><rect x="184.6" y="1027.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="187.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.05%)</title><rect x="185.0" y="1011.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="188.0" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="185.6" y="1011.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.6" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="185.6" y="995.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="188.6" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.11%)</title><rect x="185.9" y="1027.0" width="1.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="188.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.11%)</title><rect x="185.9" y="1011.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="188.9" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="186.6" y="995.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="189.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="186.6" y="979.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="189.6" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="186.6" y="963.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="189.6" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="186.9" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="189.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (74 samples, 2.01%)</title><rect x="187.2" y="1043.0" width="23.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.2" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (74 samples, 2.01%)</title><rect x="187.2" y="1027.0" width="23.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.2" y="1038.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.08%)</title><rect x="189.1" y="1011.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="192.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.43%)</title><rect x="190.1" y="1011.0" width="5.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="193.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.43%)</title><rect x="190.1" y="995.0" width="5.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="193.1" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.24%)</title><rect x="190.1" y="979.0" width="2.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="193.1" y="990.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="190.1" y="963.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="193.1" y="974.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="190.4" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="193.4" y="974.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="191.0" y="963.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="194.0" y="974.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="191.4" y="963.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="194.4" y="974.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="191.7" y="963.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="194.7" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.08%)</title><rect x="192.0" y="963.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="195.0" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.05%)</title><rect x="192.0" y="947.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="195.0" y="958.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="192.6" y="947.0" width="0.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="195.6" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="193.0" y="979.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="196.0" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="193.3" y="979.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="196.3" y="990.0"></text>
</g>
<g>
<title>recv (4 samples, 0.11%)</title><rect x="193.9" y="979.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="196.9" y="990.0"></text>
</g>
<g>
<title>recv (49 samples, 1.33%)</title><rect x="195.2" y="1011.0" width="15.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="198.2" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 1.00%)</title><rect x="199.0" y="995.0" width="11.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="202.0" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.00%)</title><rect x="199.0" y="979.0" width="11.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="202.0" y="990.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="199.7" y="963.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="202.7" y="974.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (34 samples, 0.92%)</title><rect x="200.0" y="963.0" width="10.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="203.0" y="974.0"></text>
</g>
<g>
<title>__sys_recvfrom (33 samples, 0.89%)</title><rect x="200.0" y="947.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="203.0" y="958.0"></text>
</g>
<g>
<title>sock_recvmsg (27 samples, 0.73%)</title><rect x="200.3" y="931.0" width="8.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="203.3" y="942.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.03%)</title><rect x="201.0" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="204.0" y="926.0"></text>
</g>
<g>
<title>inet_recvmsg (21 samples, 0.57%)</title><rect x="201.3" y="915.0" width="6.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="204.3" y="926.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.03%)</title><rect x="201.3" y="899.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="204.3" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.54%)</title><rect x="201.6" y="899.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="204.6" y="910.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.11%)</title><rect x="202.2" y="883.0" width="1.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="205.2" y="894.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.08%)</title><rect x="202.2" y="867.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="205.2" y="878.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="202.2" y="851.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="205.2" y="862.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="202.9" y="851.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="205.9" y="862.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="203.2" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="206.2" y="878.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.03%)</title><rect x="203.5" y="883.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="206.5" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="203.5" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="206.5" y="878.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="203.8" y="883.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="206.8" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="203.8" y="867.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="206.8" y="878.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.22%)</title><rect x="204.2" y="883.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="207.2" y="894.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.22%)</title><rect x="204.2" y="867.0" width="2.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="207.2" y="878.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.03%)</title><rect x="204.8" y="851.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="207.8" y="862.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.14%)</title><rect x="205.1" y="851.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="208.1" y="862.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="205.1" y="835.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="208.1" y="846.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="205.4" y="835.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="208.4" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.08%)</title><rect x="205.8" y="835.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="208.8" y="846.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.08%)</title><rect x="205.8" y="819.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="208.8" y="830.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.03%)</title><rect x="206.7" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="209.7" y="894.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.05%)</title><rect x="207.0" y="883.0" width="0.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="210.0" y="894.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.03%)</title><rect x="207.7" y="883.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="210.7" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.08%)</title><rect x="208.0" y="915.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="211.0" y="926.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.08%)</title><rect x="208.0" y="899.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="211.0" y="910.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.08%)</title><rect x="208.0" y="883.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.0" y="894.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.08%)</title><rect x="208.0" y="867.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="211.0" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.14%)</title><rect x="209.0" y="931.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="212.0" y="942.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.14%)</title><rect x="209.0" y="915.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="212.0" y="926.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.14%)</title><rect x="209.0" y="899.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="212.0" y="910.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.08%)</title><rect x="209.6" y="883.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="212.6" y="894.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.03%)</title><rect x="210.6" y="947.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="213.6" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=32635] (317 samples, 8.59%)</title><rect x="210.9" y="1107.0" width="101.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="213.9" y="1118.0">[NIO Selecto..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (317 samples, 8.59%)</title><rect x="210.9" y="1091.0" width="101.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="213.9" y="1102.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (1 samples, 0.03%)</title><rect x="211.2" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="214.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (14 samples, 0.38%)</title><rect x="211.5" y="1075.0" width="4.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="214.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (14 samples, 0.38%)</title><rect x="211.5" y="1059.0" width="4.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="214.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (110 samples, 2.98%)</title><rect x="216.0" y="1075.0" width="35.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.0" y="1086.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.03%)</title><rect x="216.0" y="1059.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="219.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.03%)</title><rect x="216.0" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="219.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (109 samples, 2.95%)</title><rect x="216.3" y="1059.0" width="34.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="219.3" y="1070.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.05%)</title><rect x="219.5" y="1043.0" width="0.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="222.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (90 samples, 2.44%)</title><rect x="220.2" y="1043.0" width="28.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="223.2" y="1054.0">[u..</text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="220.2" y="1027.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="223.2" y="1038.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.03%)</title><rect x="220.5" y="1027.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="223.5" y="1038.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="220.8" y="1027.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="223.8" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.16%)</title><rect x="221.4" y="1027.0" width="2.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="224.4" y="1038.0"></text>
</g>
<g>
<title>[vdso] (4 samples, 0.11%)</title><rect x="222.1" y="1011.0" width="1.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="225.1" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (80 samples, 2.17%)</title><rect x="223.4" y="1027.0" width="25.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="226.4" y="1038.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 1.68%)</title><rect x="229.1" y="1011.0" width="19.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="232.1" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.03%)</title><rect x="229.1" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="232.1" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 1.65%)</title><rect x="229.4" y="995.0" width="19.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="232.4" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (59 samples, 1.60%)</title><rect x="230.1" y="979.0" width="18.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="233.1" y="990.0"></text>
</g>
<g>
<title>do_epoll_wait (59 samples, 1.60%)</title><rect x="230.1" y="963.0" width="18.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="233.1" y="974.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.08%)</title><rect x="230.1" y="947.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="233.1" y="958.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.08%)</title><rect x="230.1" y="931.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="233.1" y="942.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="230.4" y="915.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="233.4" y="926.0"></text>
</g>
<g>
<title>ep_poll (53 samples, 1.44%)</title><rect x="231.0" y="947.0" width="17.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="234.0" y="958.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (25 samples, 0.68%)</title><rect x="234.5" y="931.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="237.5" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.46%)</title><rect x="236.8" y="915.0" width="5.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="239.8" y="926.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (11 samples, 0.30%)</title><rect x="238.4" y="899.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="241.4" y="910.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.27%)</title><rect x="238.7" y="883.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="241.7" y="894.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.16%)</title><rect x="239.3" y="867.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.3" y="878.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="240.9" y="851.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.9" y="862.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="241.3" y="867.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="244.3" y="878.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="241.9" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="244.9" y="910.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="242.2" y="915.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="245.2" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (17 samples, 0.46%)</title><rect x="242.5" y="931.0" width="5.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="245.5" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (17 samples, 0.46%)</title><rect x="242.5" y="915.0" width="5.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="245.5" y="926.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.43%)</title><rect x="242.9" y="899.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="245.9" y="910.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.41%)</title><rect x="243.2" y="883.0" width="4.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="246.2" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.38%)</title><rect x="243.5" y="867.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="246.5" y="878.0"></text>
</g>
<g>
<title>apic_timer_interrupt (4 samples, 0.11%)</title><rect x="246.7" y="851.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="249.7" y="862.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (4 samples, 0.11%)</title><rect x="246.7" y="835.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="249.7" y="846.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.11%)</title><rect x="246.7" y="819.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="249.7" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.11%)</title><rect x="246.7" y="803.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="249.7" y="814.0"></text>
</g>
<g>
<title>run_rebalance_domains (4 samples, 0.11%)</title><rect x="246.7" y="787.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="249.7" y="798.0"></text>
</g>
<g>
<title>update_blocked_averages (4 samples, 0.11%)</title><rect x="246.7" y="771.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="249.7" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.11%)</title><rect x="246.7" y="755.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="249.7" y="766.0"></text>
</g>
<g>
<title>fput (3 samples, 0.08%)</title><rect x="248.0" y="947.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.0" y="958.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="248.9" y="1043.0" width="0.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="251.9" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.08%)</title><rect x="249.6" y="1043.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="252.6" y="1054.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.03%)</title><rect x="250.5" y="1043.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="253.5" y="1054.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.03%)</title><rect x="250.9" y="1043.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="253.9" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="250.9" y="1027.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.9" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="250.9" y="1011.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="253.9" y="1022.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="250.9" y="995.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="253.9" y="1006.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="250.9" y="979.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.9" y="990.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="250.9" y="963.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.9" y="974.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="250.9" y="947.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="253.9" y="958.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.03%)</title><rect x="250.9" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="253.9" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="250.9" y="915.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="253.9" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (191 samples, 5.18%)</title><rect x="251.2" y="1075.0" width="61.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="254.2" y="1086.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="252.5" y="1059.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="255.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (184 samples, 4.99%)</title><rect x="253.1" y="1059.0" width="58.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="256.1" y="1070.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (122 samples, 3.31%)</title><rect x="253.4" y="1043.0" width="39.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="256.4" y="1054.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (94 samples, 2.55%)</title><rect x="253.4" y="1027.0" width="30.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="256.4" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (94 samples, 2.55%)</title><rect x="253.4" y="1011.0" width="30.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="256.4" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.03%)</title><rect x="253.4" y="995.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.4" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.03%)</title><rect x="253.4" y="979.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="256.4" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.05%)</title><rect x="253.7" y="995.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="256.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="253.7" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="256.7" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="253.7" y="963.0" width="0.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="256.7" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="253.7" y="947.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="256.7" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="253.7" y="931.0" width="0.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="256.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (91 samples, 2.47%)</title><rect x="254.4" y="995.0" width="29.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="257.4" y="1006.0">ru..</text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="254.4" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="257.4" y="990.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="254.4" y="963.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="257.4" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.03%)</title><rect x="254.7" y="979.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="257.7" y="990.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="254.7" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="257.7" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="254.7" y="947.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="257.7" y="958.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="254.7" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="257.7" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (89 samples, 2.41%)</title><rect x="255.0" y="979.0" width="28.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="258.0" y="990.0">ru..</text>
</g>
<g>
<title>java/lang/String.isEmpty (1 samples, 0.03%)</title><rect x="255.3" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="258.3" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="255.7" y="963.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.7" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="255.7" y="947.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="258.7" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="255.7" y="931.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="258.7" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="255.7" y="915.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="258.7" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="256.0" y="899.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="259.0" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="256.0" y="883.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="259.0" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="256.0" y="867.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="259.0" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.14%)</title><rect x="256.3" y="963.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="259.3" y="974.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.05%)</title><rect x="256.3" y="947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="259.3" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.05%)</title><rect x="256.9" y="947.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="259.9" y="958.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="257.3" y="931.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="260.3" y="942.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.03%)</title><rect x="257.6" y="947.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="260.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="257.6" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="260.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.03%)</title><rect x="257.6" y="915.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="260.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="257.6" y="899.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="260.6" y="910.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (80 samples, 2.17%)</title><rect x="257.9" y="963.0" width="25.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="260.9" y="974.0">o..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (80 samples, 2.17%)</title><rect x="257.9" y="947.0" width="25.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="260.9" y="958.0">j..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (79 samples, 2.14%)</title><rect x="258.2" y="931.0" width="25.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="261.2" y="942.0">o..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (79 samples, 2.14%)</title><rect x="258.2" y="915.0" width="25.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.2" y="926.0">o..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (79 samples, 2.14%)</title><rect x="258.2" y="899.0" width="25.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="261.2" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (79 samples, 2.14%)</title><rect x="258.2" y="883.0" width="25.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="261.2" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (76 samples, 2.06%)</title><rect x="258.5" y="867.0" width="24.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.5" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (75 samples, 2.03%)</title><rect x="258.9" y="851.0" width="23.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.9" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (75 samples, 2.03%)</title><rect x="258.9" y="835.0" width="23.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="261.9" y="846.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.05%)</title><rect x="258.9" y="819.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="261.9" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="259.5" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="262.5" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.38%)</title><rect x="259.8" y="819.0" width="4.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="262.8" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (4 samples, 0.11%)</title><rect x="260.5" y="803.0" width="1.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="263.5" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="261.7" y="803.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="264.7" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="261.7" y="787.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="264.7" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="261.7" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="264.7" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="261.7" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.7" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="261.7" y="739.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="264.7" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="261.7" y="723.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="264.7" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="261.7" y="707.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.7" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="261.7" y="691.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="264.7" y="702.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="262.1" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="265.1" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.08%)</title><rect x="262.4" y="803.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="265.4" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="263.3" y="803.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="266.3" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="264.0" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="267.0" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.08%)</title><rect x="264.3" y="819.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="267.3" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (55 samples, 1.49%)</title><rect x="265.3" y="819.0" width="17.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="268.3" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="266.2" y="803.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="269.2" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="266.2" y="787.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="269.2" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="266.2" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="269.2" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="266.2" y="755.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.2" y="766.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="266.2" y="739.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="269.2" y="750.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="266.2" y="723.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="269.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="266.2" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="269.2" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.38%)</title><rect x="266.5" y="803.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="269.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.38%)</title><rect x="266.5" y="787.0" width="16.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="269.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (49 samples, 1.33%)</title><rect x="267.2" y="771.0" width="15.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="270.2" y="782.0"></text>
</g>
<g>
<title>do_futex (48 samples, 1.30%)</title><rect x="267.2" y="755.0" width="15.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="270.2" y="766.0"></text>
</g>
<g>
<title>futex_wake (47 samples, 1.27%)</title><rect x="267.5" y="739.0" width="15.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="270.5" y="750.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="268.1" y="723.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="271.1" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="268.1" y="707.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="271.1" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="268.1" y="691.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="271.1" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="268.1" y="675.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="271.1" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="268.1" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="271.1" y="670.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="268.1" y="643.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="271.1" y="654.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="268.1" y="627.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="271.1" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="268.1" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="271.1" y="622.0"></text>
</g>
<g>
<title>wake_up_q (44 samples, 1.19%)</title><rect x="268.5" y="723.0" width="14.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="271.5" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (43 samples, 1.17%)</title><rect x="268.8" y="707.0" width="13.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="271.8" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (42 samples, 1.14%)</title><rect x="269.1" y="691.0" width="13.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="272.1" y="702.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="282.5" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="285.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.03%)</title><rect x="282.8" y="867.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.8" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (1 samples, 0.03%)</title><rect x="282.8" y="851.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="285.8" y="862.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.03%)</title><rect x="283.2" y="867.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.2" y="878.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (14 samples, 0.38%)</title><rect x="283.5" y="1027.0" width="4.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="286.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.16%)</title><rect x="284.1" y="1011.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.1" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="284.8" y="995.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="287.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.05%)</title><rect x="284.8" y="979.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="287.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.05%)</title><rect x="284.8" y="963.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.8" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.05%)</title><rect x="285.4" y="995.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="288.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.16%)</title><rect x="286.0" y="1011.0" width="2.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.16%)</title><rect x="286.0" y="995.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.0" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="287.6" y="979.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="290.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.03%)</title><rect x="287.6" y="963.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="290.6" y="974.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.03%)</title><rect x="287.6" y="947.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="290.6" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.14%)</title><rect x="288.0" y="1027.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="291.0" y="1038.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="288.9" y="1011.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="291.9" y="1022.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="289.2" y="1011.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="292.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.11%)</title><rect x="289.6" y="1027.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="292.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="290.2" y="1011.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="293.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="290.2" y="995.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.14%)</title><rect x="290.8" y="1027.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="293.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.14%)</title><rect x="290.8" y="1011.0" width="1.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="293.8" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="292.1" y="995.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="295.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="292.1" y="979.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.03%)</title><rect x="292.1" y="963.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="295.1" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="292.1" y="947.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="295.1" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (61 samples, 1.65%)</title><rect x="292.4" y="1043.0" width="19.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="295.4" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (61 samples, 1.65%)</title><rect x="292.4" y="1027.0" width="19.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.4" y="1038.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.38%)</title><rect x="293.1" y="1011.0" width="4.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="296.1" y="1022.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.38%)</title><rect x="293.1" y="995.0" width="4.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="296.1" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.22%)</title><rect x="293.1" y="979.0" width="2.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="296.1" y="990.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="293.1" y="963.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="296.1" y="974.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="293.7" y="963.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="296.7" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.08%)</title><rect x="294.0" y="963.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="297.0" y="974.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="294.0" y="947.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="297.0" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="294.4" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="297.4" y="958.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="294.7" y="947.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="297.7" y="958.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.05%)</title><rect x="295.0" y="963.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="298.0" y="974.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="295.6" y="979.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="298.6" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="296.0" y="979.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="299.0" y="990.0"></text>
</g>
<g>
<title>recv (4 samples, 0.11%)</title><rect x="296.3" y="979.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="299.3" y="990.0"></text>
</g>
<g>
<title>recv (45 samples, 1.22%)</title><rect x="297.6" y="1011.0" width="14.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="300.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 1.06%)</title><rect x="299.5" y="995.0" width="12.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="302.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 1.06%)</title><rect x="299.5" y="979.0" width="12.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="302.5" y="990.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.03%)</title><rect x="299.5" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="302.5" y="974.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (38 samples, 1.03%)</title><rect x="299.8" y="963.0" width="12.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="302.8" y="974.0"></text>
</g>
<g>
<title>__sys_recvfrom (37 samples, 1.00%)</title><rect x="299.8" y="947.0" width="11.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="302.8" y="958.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.03%)</title><rect x="300.1" y="931.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="303.1" y="942.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.03%)</title><rect x="300.4" y="931.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.4" y="942.0"></text>
</g>
<g>
<title>sock_recvmsg (27 samples, 0.73%)</title><rect x="300.8" y="931.0" width="8.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="303.8" y="942.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="301.4" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.4" y="926.0"></text>
</g>
<g>
<title>inet_recvmsg (17 samples, 0.46%)</title><rect x="301.7" y="915.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="304.7" y="926.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.03%)</title><rect x="302.0" y="899.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="305.0" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.41%)</title><rect x="302.4" y="899.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="305.4" y="910.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.08%)</title><rect x="303.3" y="883.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="306.3" y="894.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.08%)</title><rect x="303.3" y="867.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.3" y="878.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.05%)</title><rect x="303.3" y="851.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="306.3" y="862.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="303.6" y="835.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="306.6" y="846.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="304.0" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="307.0" y="862.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="304.3" y="883.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="307.3" y="894.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="304.3" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="307.3" y="878.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.22%)</title><rect x="304.6" y="883.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="307.6" y="894.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.16%)</title><rect x="304.9" y="867.0" width="1.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="307.9" y="878.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.16%)</title><rect x="304.9" y="851.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="307.9" y="862.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.08%)</title><rect x="305.2" y="835.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="308.2" y="846.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="305.6" y="819.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="308.6" y="830.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="305.9" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="308.9" y="830.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.05%)</title><rect x="306.2" y="835.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="309.2" y="846.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="306.2" y="819.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="309.2" y="830.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.03%)</title><rect x="306.8" y="867.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="309.8" y="878.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.19%)</title><rect x="307.2" y="915.0" width="2.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="310.2" y="926.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.19%)</title><rect x="307.2" y="899.0" width="2.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="310.2" y="910.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.03%)</title><rect x="307.2" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="310.2" y="894.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.16%)</title><rect x="307.5" y="883.0" width="1.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="310.5" y="894.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.16%)</title><rect x="307.5" y="867.0" width="1.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="310.5" y="878.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.05%)</title><rect x="308.8" y="851.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="311.8" y="862.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.03%)</title><rect x="308.8" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.8" y="846.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.03%)</title><rect x="309.1" y="835.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="312.1" y="846.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.19%)</title><rect x="309.4" y="931.0" width="2.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="312.4" y="942.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.16%)</title><rect x="309.4" y="915.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="312.4" y="926.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="309.4" y="899.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="312.4" y="910.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.14%)</title><rect x="309.7" y="899.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="312.7" y="910.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.08%)</title><rect x="310.4" y="883.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="313.4" y="894.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="311.3" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="314.3" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="311.6" y="947.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="314.6" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="312.0" y="1059.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="315.0" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="312.0" y="1043.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="315.0" y="1054.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=32638] (311 samples, 8.43%)</title><rect x="312.3" y="1107.0" width="99.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="315.3" y="1118.0">[NIO Selecto..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="312.3" y="1091.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="315.3" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="312.3" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="315.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (310 samples, 8.40%)</title><rect x="312.6" y="1091.0" width="99.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.6" y="1102.0">one/nio/serv..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (121 samples, 3.28%)</title><rect x="312.9" y="1075.0" width="38.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="315.9" y="1086.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (5 samples, 0.14%)</title><rect x="314.2" y="1059.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="317.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.08%)</title><rect x="314.8" y="1043.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (112 samples, 3.04%)</title><rect x="315.8" y="1059.0" width="35.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="318.8" y="1070.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.03%)</title><rect x="320.0" y="1043.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="323.0" y="1054.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 2.55%)</title><rect x="320.3" y="1043.0" width="30.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="323.3" y="1054.0">[u..</text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.05%)</title><rect x="320.3" y="1027.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="323.3" y="1038.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="320.9" y="1027.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="323.9" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.08%)</title><rect x="321.2" y="1027.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="324.2" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="321.9" y="1011.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="324.9" y="1022.0"></text>
</g>
<g>
<title>epoll_wait (88 samples, 2.39%)</title><rect x="322.2" y="1027.0" width="28.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="325.2" y="1038.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 1.82%)</title><rect x="328.9" y="1011.0" width="21.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="331.9" y="1022.0">e..</text>
</g>
<g>
<title>do_syscall_64 (67 samples, 1.82%)</title><rect x="328.9" y="995.0" width="21.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="331.9" y="1006.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (64 samples, 1.73%)</title><rect x="329.9" y="979.0" width="20.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.9" y="990.0"></text>
</g>
<g>
<title>do_epoll_wait (61 samples, 1.65%)</title><rect x="329.9" y="963.0" width="19.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.9" y="974.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="329.9" y="947.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="332.9" y="958.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="329.9" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="332.9" y="942.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="329.9" y="915.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="332.9" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.03%)</title><rect x="330.2" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="333.2" y="958.0"></text>
</g>
<g>
<title>ep_poll (55 samples, 1.49%)</title><rect x="330.5" y="947.0" width="17.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="333.5" y="958.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (23 samples, 0.62%)</title><rect x="331.8" y="931.0" width="7.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="334.8" y="942.0"></text>
</g>
<g>
<title>ep_send_events_proc (14 samples, 0.38%)</title><rect x="334.0" y="915.0" width="4.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="337.0" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="335.0" y="899.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="338.0" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="335.0" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="338.0" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="335.0" y="867.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="338.0" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="335.0" y="851.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="338.0" y="862.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="335.0" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="338.0" y="846.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="335.0" y="819.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="338.0" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="335.0" y="803.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="338.0" y="814.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (9 samples, 0.24%)</title><rect x="335.3" y="899.0" width="2.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="338.3" y="910.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.16%)</title><rect x="336.3" y="883.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="339.3" y="894.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.03%)</title><rect x="337.9" y="867.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="340.9" y="878.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.03%)</title><rect x="338.2" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="341.2" y="910.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="338.5" y="915.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="341.5" y="926.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.03%)</title><rect x="339.1" y="931.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="342.1" y="942.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.05%)</title><rect x="339.5" y="931.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="342.5" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (25 samples, 0.68%)</title><rect x="340.1" y="931.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="343.1" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (25 samples, 0.68%)</title><rect x="340.1" y="915.0" width="8.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="343.1" y="926.0"></text>
</g>
<g>
<title>schedule (24 samples, 0.65%)</title><rect x="340.4" y="899.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="343.4" y="910.0"></text>
</g>
<g>
<title>__schedule (24 samples, 0.65%)</title><rect x="340.4" y="883.0" width="7.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="343.4" y="894.0"></text>
</g>
<g>
<title>finish_task_switch (23 samples, 0.62%)</title><rect x="340.7" y="867.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.7" y="878.0"></text>
</g>
<g>
<title>fput (3 samples, 0.08%)</title><rect x="348.1" y="947.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="351.1" y="958.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.03%)</title><rect x="349.1" y="947.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.1" y="958.0"></text>
</g>
<g>
<title>fput (3 samples, 0.08%)</title><rect x="349.4" y="963.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="352.4" y="974.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="350.3" y="1043.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="353.3" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="351.0" y="1043.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="354.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (188 samples, 5.10%)</title><rect x="351.6" y="1075.0" width="60.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="354.6" y="1086.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="352.6" y="1059.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="355.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (184 samples, 4.99%)</title><rect x="352.9" y="1059.0" width="58.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="355.9" y="1070.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (124 samples, 3.36%)</title><rect x="352.9" y="1043.0" width="39.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.9" y="1054.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (95 samples, 2.58%)</title><rect x="353.2" y="1027.0" width="30.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="356.2" y="1038.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (95 samples, 2.58%)</title><rect x="353.2" y="1011.0" width="30.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="356.2" y="1022.0">on..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.05%)</title><rect x="353.2" y="995.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="356.2" y="1006.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.05%)</title><rect x="353.2" y="979.0" width="0.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.2" y="990.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.03%)</title><rect x="353.2" y="963.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.2" y="974.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.03%)</title><rect x="353.2" y="947.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.2" y="958.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.03%)</title><rect x="353.5" y="963.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.5" y="974.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.03%)</title><rect x="353.5" y="947.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="356.5" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="353.5" y="931.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="356.5" y="942.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.08%)</title><rect x="353.9" y="995.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="356.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.08%)</title><rect x="353.9" y="979.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="356.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.05%)</title><rect x="353.9" y="963.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="356.9" y="974.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.03%)</title><rect x="353.9" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="356.9" y="958.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="353.9" y="931.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="356.9" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="354.2" y="947.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="357.2" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="354.5" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="357.5" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (90 samples, 2.44%)</title><rect x="354.8" y="995.0" width="28.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="357.8" y="1006.0">ru..</text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.05%)</title><rect x="354.8" y="979.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.8" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.05%)</title><rect x="354.8" y="963.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="357.8" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (88 samples, 2.39%)</title><rect x="355.5" y="979.0" width="28.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="358.5" y="990.0">ru..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.08%)</title><rect x="356.1" y="963.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="359.1" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.08%)</title><rect x="356.1" y="947.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="359.1" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="356.1" y="931.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="359.1" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="356.1" y="915.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.1" y="926.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.08%)</title><rect x="356.1" y="899.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="359.1" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.05%)</title><rect x="356.4" y="883.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="359.4" y="894.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="356.7" y="867.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="359.7" y="878.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.05%)</title><rect x="357.1" y="963.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.03%)</title><rect x="357.1" y="947.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.03%)</title><rect x="357.4" y="947.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="360.4" y="958.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.03%)</title><rect x="357.4" y="931.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="360.4" y="942.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.03%)</title><rect x="357.4" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="360.4" y="926.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (81 samples, 2.20%)</title><rect x="357.7" y="963.0" width="25.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="360.7" y="974.0">o..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (81 samples, 2.20%)</title><rect x="357.7" y="947.0" width="25.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="360.7" y="958.0">j..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (80 samples, 2.17%)</title><rect x="358.0" y="931.0" width="25.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="361.0" y="942.0">o..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (80 samples, 2.17%)</title><rect x="358.0" y="915.0" width="25.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.0" y="926.0">o..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (80 samples, 2.17%)</title><rect x="358.0" y="899.0" width="25.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.0" y="910.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (80 samples, 2.17%)</title><rect x="358.0" y="883.0" width="25.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="361.0" y="894.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (76 samples, 2.06%)</title><rect x="358.0" y="867.0" width="24.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="361.0" y="878.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (75 samples, 2.03%)</title><rect x="358.3" y="851.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="361.3" y="862.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (75 samples, 2.03%)</title><rect x="358.3" y="835.0" width="24.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="361.3" y="846.0">j..</text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.03%)</title><rect x="358.7" y="819.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="361.7" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.03%)</title><rect x="359.0" y="819.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="362.0" y="830.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.03%)</title><rect x="359.3" y="819.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="362.3" y="830.0"></text>
</g>
<g>
<title>Unsafe_Unpark (17 samples, 0.46%)</title><rect x="359.6" y="819.0" width="5.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="362.6" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.05%)</title><rect x="360.3" y="803.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="363.3" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (3 samples, 0.08%)</title><rect x="360.9" y="803.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="363.9" y="814.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.05%)</title><rect x="361.9" y="803.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="364.9" y="814.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (5 samples, 0.14%)</title><rect x="362.5" y="803.0" width="1.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="365.5" y="814.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.05%)</title><rect x="364.1" y="803.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="367.1" y="814.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.03%)</title><rect x="364.7" y="803.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="367.7" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="365.1" y="819.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="368.1" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.03%)</title><rect x="365.4" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="368.4" y="830.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (52 samples, 1.41%)</title><rect x="365.7" y="819.0" width="16.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="368.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.27%)</title><rect x="367.3" y="803.0" width="15.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="370.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 1.27%)</title><rect x="367.3" y="787.0" width="15.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="370.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (44 samples, 1.19%)</title><rect x="367.9" y="771.0" width="14.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="370.9" y="782.0"></text>
</g>
<g>
<title>do_futex (44 samples, 1.19%)</title><rect x="367.9" y="755.0" width="14.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="370.9" y="766.0"></text>
</g>
<g>
<title>futex_wake (43 samples, 1.17%)</title><rect x="367.9" y="739.0" width="13.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="370.9" y="750.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="368.3" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="371.3" y="734.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.03%)</title><rect x="368.6" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="371.6" y="734.0"></text>
</g>
<g>
<title>wake_up_q (40 samples, 1.08%)</title><rect x="368.9" y="723.0" width="12.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="371.9" y="734.0"></text>
</g>
<g>
<title>try_to_wake_up (39 samples, 1.06%)</title><rect x="369.2" y="707.0" width="12.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="372.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (38 samples, 1.03%)</title><rect x="369.5" y="691.0" width="12.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="372.5" y="702.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="381.7" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.7" y="750.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="382.0" y="771.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="385.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (4 samples, 0.11%)</title><rect x="382.3" y="867.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="385.3" y="878.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (2 samples, 0.05%)</title><rect x="383.0" y="851.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="386.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (17 samples, 0.46%)</title><rect x="383.6" y="1027.0" width="5.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="386.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.16%)</title><rect x="384.2" y="1011.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="387.2" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="384.6" y="995.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.6" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.08%)</title><rect x="384.6" y="979.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="387.6" y="990.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.05%)</title><rect x="384.6" y="963.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="387.6" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.03%)</title><rect x="385.2" y="963.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="388.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.05%)</title><rect x="385.5" y="995.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="388.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.24%)</title><rect x="386.2" y="1011.0" width="2.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="389.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.24%)</title><rect x="386.2" y="995.0" width="2.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="389.2" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.19%)</title><rect x="389.0" y="1027.0" width="2.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="392.0" y="1038.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.03%)</title><rect x="390.0" y="1011.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="393.0" y="1022.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="390.3" y="1011.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="393.3" y="1022.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="391.0" y="1011.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="394.0" y="1022.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.11%)</title><rect x="391.3" y="1027.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="394.3" y="1038.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.11%)</title><rect x="391.3" y="1011.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="394.3" y="1022.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="391.9" y="995.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.05%)</title><rect x="391.9" y="979.0" width="0.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="394.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.05%)</title><rect x="391.9" y="963.0" width="0.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="394.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.05%)</title><rect x="391.9" y="947.0" width="0.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="394.9" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (60 samples, 1.63%)</title><rect x="392.6" y="1043.0" width="19.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="395.6" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (59 samples, 1.60%)</title><rect x="392.6" y="1027.0" width="18.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="395.6" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.08%)</title><rect x="392.9" y="1011.0" width="0.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="395.9" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.24%)</title><rect x="393.8" y="1011.0" width="2.9" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="396.8" y="1022.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.24%)</title><rect x="393.8" y="995.0" width="2.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="396.8" y="1006.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.24%)</title><rect x="393.8" y="979.0" width="2.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="396.8" y="990.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="394.2" y="963.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="397.2" y="974.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="394.8" y="963.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="397.8" y="974.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.08%)</title><rect x="395.1" y="963.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="398.1" y="974.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="396.1" y="963.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="399.1" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="396.4" y="963.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="399.4" y="974.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="396.4" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="399.4" y="958.0"></text>
</g>
<g>
<title>recv (46 samples, 1.25%)</title><rect x="396.7" y="1011.0" width="14.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="399.7" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 1.03%)</title><rect x="399.3" y="995.0" width="12.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="402.3" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.03%)</title><rect x="399.3" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="402.3" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 1.00%)</title><rect x="399.6" y="979.0" width="11.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="402.6" y="990.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (35 samples, 0.95%)</title><rect x="400.2" y="963.0" width="11.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="403.2" y="974.0"></text>
</g>
<g>
<title>__sys_recvfrom (35 samples, 0.95%)</title><rect x="400.2" y="947.0" width="11.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="403.2" y="958.0"></text>
</g>
<g>
<title>sock_recvmsg (33 samples, 0.89%)</title><rect x="400.2" y="931.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="403.2" y="942.0"></text>
</g>
<g>
<title>inet_recvmsg (24 samples, 0.65%)</title><rect x="400.9" y="915.0" width="7.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="403.9" y="926.0"></text>
</g>
<g>
<title>tcp_recvmsg (24 samples, 0.65%)</title><rect x="400.9" y="899.0" width="7.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="403.9" y="910.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.14%)</title><rect x="403.4" y="883.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="406.4" y="894.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="403.4" y="867.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="406.4" y="878.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.11%)</title><rect x="403.8" y="867.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="406.8" y="878.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.08%)</title><rect x="403.8" y="851.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="406.8" y="862.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.03%)</title><rect x="404.7" y="851.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="407.7" y="862.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.03%)</title><rect x="404.7" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="407.7" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="405.0" y="883.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="408.0" y="894.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.19%)</title><rect x="405.4" y="883.0" width="2.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="408.4" y="894.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.19%)</title><rect x="405.4" y="867.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="408.4" y="878.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.19%)</title><rect x="405.4" y="851.0" width="2.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="408.4" y="862.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.03%)</title><rect x="405.4" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="408.4" y="846.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.05%)</title><rect x="405.7" y="835.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="408.7" y="846.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.11%)</title><rect x="406.3" y="835.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="409.3" y="846.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.08%)</title><rect x="406.6" y="819.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="409.6" y="830.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.05%)</title><rect x="407.6" y="883.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="410.6" y="894.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="407.6" y="867.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.6" y="878.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="407.6" y="851.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="410.6" y="862.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="408.2" y="883.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="411.2" y="894.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.16%)</title><rect x="408.6" y="915.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.6" y="926.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.03%)</title><rect x="408.6" y="899.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="411.6" y="910.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.14%)</title><rect x="408.9" y="899.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.9" y="910.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.14%)</title><rect x="408.9" y="883.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="411.9" y="894.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.14%)</title><rect x="408.9" y="867.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.9" y="878.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.05%)</title><rect x="409.8" y="851.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="412.8" y="862.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.03%)</title><rect x="409.8" y="835.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="412.8" y="846.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.03%)</title><rect x="410.2" y="835.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="413.2" y="846.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.03%)</title><rect x="410.5" y="915.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="413.5" y="926.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.05%)</title><rect x="410.8" y="931.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="413.8" y="942.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="410.8" y="915.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="413.8" y="926.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="410.8" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="413.8" y="910.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.03%)</title><rect x="410.8" y="883.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="413.8" y="894.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="411.1" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="414.1" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.listen (1 samples, 0.03%)</title><rect x="411.4" y="1027.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="414.4" y="1038.0"></text>
</g>
<g>
<title>[NIO Worker #3 tid=32689] (592 samples, 16.05%)</title><rect x="411.8" y="1107.0" width="189.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="414.8" y="1118.0">[NIO Worker #3 tid=32689]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="411.8" y="1091.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="414.8" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="411.8" y="1075.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="414.8" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="411.8" y="1059.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="414.8" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="411.8" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="414.8" y="1054.0"></text>
</g>
<g>
<title>[not_walkable_Java] (7 samples, 0.19%)</title><rect x="412.1" y="1091.0" width="2.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="415.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.19%)</title><rect x="412.1" y="1075.0" width="2.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="415.1" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.19%)</title><rect x="412.1" y="1059.0" width="2.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="415.1" y="1070.0"></text>
</g>
<g>
<title>[vdso] (7 samples, 0.19%)</title><rect x="412.1" y="1043.0" width="2.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="415.1" y="1054.0"></text>
</g>
<g>
<title>java/lang/Thread.run (584 samples, 15.83%)</title><rect x="414.3" y="1091.0" width="186.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="417.3" y="1102.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (584 samples, 15.83%)</title><rect x="414.3" y="1075.0" width="186.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="417.3" y="1086.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (584 samples, 15.83%)</title><rect x="414.3" y="1059.0" width="186.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="417.3" y="1070.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (177 samples, 4.80%)</title><rect x="414.6" y="1043.0" width="56.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="417.6" y="1054.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (174 samples, 4.72%)</title><rect x="415.6" y="1027.0" width="55.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="418.6" y="1038.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (174 samples, 4.72%)</title><rect x="415.6" y="1011.0" width="55.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="418.6" y="1022.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (124 samples, 3.36%)</title><rect x="416.6" y="995.0" width="39.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="419.6" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (123 samples, 3.33%)</title><rect x="416.9" y="979.0" width="39.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="419.9" y="990.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (123 samples, 3.33%)</title><rect x="416.9" y="963.0" width="39.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="419.9" y="974.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.05%)</title><rect x="416.9" y="947.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="419.9" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (71 samples, 1.92%)</title><rect x="417.5" y="947.0" width="22.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="420.5" y="958.0">U..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.05%)</title><rect x="419.4" y="931.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="422.4" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (16 samples, 0.43%)</title><rect x="420.1" y="931.0" width="5.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="423.1" y="942.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.08%)</title><rect x="423.3" y="915.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="426.3" y="926.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="423.9" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="426.9" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="424.2" y="915.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="427.2" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="424.9" y="915.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="427.9" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.05%)</title><rect x="425.2" y="931.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="428.2" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="425.8" y="931.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="428.8" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (32 samples, 0.87%)</title><rect x="426.2" y="931.0" width="10.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="429.2" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.62%)</title><rect x="429.0" y="915.0" width="7.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="432.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="429.0" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="432.0" y="910.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.03%)</title><rect x="429.3" y="899.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="432.3" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.57%)</title><rect x="429.7" y="899.0" width="6.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="432.7" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (16 samples, 0.43%)</title><rect x="430.6" y="883.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="433.6" y="894.0"></text>
</g>
<g>
<title>do_futex (14 samples, 0.38%)</title><rect x="430.9" y="867.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="433.9" y="878.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.18 (1 samples, 0.03%)</title><rect x="431.3" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="434.3" y="862.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.27%)</title><rect x="431.6" y="851.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="434.6" y="862.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.11%)</title><rect x="433.5" y="835.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="436.5" y="846.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="434.8" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="437.8" y="862.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.03%)</title><rect x="435.1" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="438.1" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="435.4" y="867.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="438.4" y="878.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.05%)</title><rect x="435.7" y="883.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.7" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.08%)</title><rect x="436.4" y="931.0" width="0.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="439.4" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.08%)</title><rect x="437.3" y="931.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="440.3" y="942.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="438.3" y="931.0" width="0.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="441.3" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.08%)</title><rect x="438.9" y="931.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="441.9" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.03%)</title><rect x="439.9" y="931.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="442.9" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (48 samples, 1.30%)</title><rect x="440.2" y="947.0" width="15.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="443.2" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 0.95%)</title><rect x="444.4" y="931.0" width="11.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="447.4" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 0.95%)</title><rect x="444.4" y="915.0" width="11.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="447.4" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (34 samples, 0.92%)</title><rect x="444.7" y="899.0" width="10.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="447.7" y="910.0"></text>
</g>
<g>
<title>do_futex (32 samples, 0.87%)</title><rect x="445.0" y="883.0" width="10.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="448.0" y="894.0"></text>
</g>
<g>
<title>futex_wait (30 samples, 0.81%)</title><rect x="445.7" y="867.0" width="9.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="448.7" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (21 samples, 0.57%)</title><rect x="446.0" y="851.0" width="6.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="449.0" y="862.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.14%)</title><rect x="446.0" y="835.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.0" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.14%)</title><rect x="446.0" y="819.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="449.0" y="830.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.43%)</title><rect x="447.6" y="835.0" width="5.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="450.6" y="846.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.41%)</title><rect x="447.9" y="819.0" width="4.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="450.9" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.38%)</title><rect x="448.2" y="803.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="451.2" y="814.0"></text>
</g>
<g>
<title>futex_wait_setup (4 samples, 0.11%)</title><rect x="452.7" y="851.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="455.7" y="862.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="453.7" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="456.7" y="846.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="454.0" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="457.0" y="862.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="454.3" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.3" y="862.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.05%)</title><rect x="454.6" y="851.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.6" y="862.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.05%)</title><rect x="454.6" y="835.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.6" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="454.6" y="819.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.6" y="830.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="455.3" y="883.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="458.3" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="455.6" y="947.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="458.6" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="455.9" y="947.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="458.9" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.03%)</title><rect x="456.2" y="995.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="459.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="456.2" y="979.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="459.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="456.2" y="963.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="459.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (45 samples, 1.22%)</title><rect x="456.5" y="995.0" width="14.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="459.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (35 samples, 0.95%)</title><rect x="459.7" y="979.0" width="11.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="462.7" y="990.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="470.6" y="963.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="473.6" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="470.6" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="473.6" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="470.6" y="931.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="473.6" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="470.6" y="915.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.6" y="926.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="470.6" y="899.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.6" y="910.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="470.6" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="473.6" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="470.6" y="867.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="473.6" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="470.9" y="995.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="473.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (1 samples, 0.03%)</title><rect x="471.3" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="474.3" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1167666647.run (404 samples, 10.95%)</title><rect x="471.6" y="1043.0" width="129.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="474.6" y="1054.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (404 samples, 10.95%)</title><rect x="471.6" y="1027.0" width="129.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="474.6" y="1038.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (259 samples, 7.02%)</title><rect x="471.6" y="1011.0" width="82.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="474.6" y="1022.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="472.9" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="475.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="472.9" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="475.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="472.9" y="963.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="475.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="472.9" y="947.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="475.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (253 samples, 6.86%)</title><rect x="473.2" y="995.0" width="80.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="476.2" y="1006.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.24%)</title><rect x="473.2" y="979.0" width="2.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="476.2" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="473.8" y="963.0" width="0.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="476.8" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.14%)</title><rect x="474.5" y="963.0" width="1.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="477.5" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.08%)</title><rect x="474.8" y="947.0" width="0.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="477.8" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="475.1" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="478.1" y="942.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.charAt (1 samples, 0.03%)</title><rect x="475.1" y="915.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="478.1" y="926.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="475.4" y="931.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.03%)</title><rect x="475.4" y="915.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="478.4" y="926.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="475.7" y="947.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="478.7" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.03%)</title><rect x="475.7" y="931.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="478.7" y="942.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="475.7" y="915.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="478.7" y="926.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="475.7" y="899.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="478.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (244 samples, 6.61%)</title><rect x="476.1" y="979.0" width="78.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.1" y="990.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (244 samples, 6.61%)</title><rect x="476.1" y="963.0" width="78.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="479.1" y="974.0">one/nio/n..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="476.4" y="947.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="479.4" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (239 samples, 6.48%)</title><rect x="477.0" y="947.0" width="76.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="480.0" y="958.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (239 samples, 6.48%)</title><rect x="477.0" y="931.0" width="76.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="480.0" y="942.0">one/nio/..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="478.3" y="915.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="481.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="478.3" y="899.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="481.3" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="478.3" y="883.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="481.3" y="894.0"></text>
</g>
<g>
<title>__send (2 samples, 0.05%)</title><rect x="478.6" y="883.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="481.6" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="479.2" y="915.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="482.2" y="926.0"></text>
</g>
<g>
<title>__send (231 samples, 6.26%)</title><rect x="479.6" y="915.0" width="73.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="482.6" y="926.0">__send</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="481.2" y="899.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="484.2" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="481.2" y="883.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="484.2" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="481.2" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="484.2" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="481.2" y="851.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="484.2" y="862.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="481.2" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="484.2" y="846.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="481.2" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="484.2" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="481.2" y="803.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (225 samples, 6.10%)</title><rect x="481.5" y="899.0" width="72.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="484.5" y="910.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.03%)</title><rect x="481.5" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="484.5" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (224 samples, 6.07%)</title><rect x="481.8" y="883.0" width="71.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="484.8" y="894.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (222 samples, 6.02%)</title><rect x="482.1" y="867.0" width="71.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="485.1" y="878.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (219 samples, 5.94%)</title><rect x="482.1" y="851.0" width="70.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="485.1" y="862.0">__sys_se..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="483.1" y="835.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="486.1" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (208 samples, 5.64%)</title><rect x="483.4" y="835.0" width="66.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="486.4" y="846.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (198 samples, 5.37%)</title><rect x="483.7" y="819.0" width="63.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="486.7" y="830.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (196 samples, 5.31%)</title><rect x="484.4" y="803.0" width="62.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="487.4" y="814.0">tcp_se..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="484.7" y="787.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="487.7" y="798.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="485.0" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="488.0" y="798.0"></text>
</g>
<g>
<title>skb_put (1 samples, 0.03%)</title><rect x="485.3" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="488.3" y="798.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.03%)</title><rect x="485.6" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="488.6" y="798.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (3 samples, 0.08%)</title><rect x="486.0" y="787.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="489.0" y="798.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="486.9" y="787.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="489.9" y="798.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.03%)</title><rect x="487.2" y="787.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="490.2" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (186 samples, 5.04%)</title><rect x="487.6" y="787.0" width="59.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.6" y="798.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="489.2" y="771.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="492.2" y="782.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="489.2" y="755.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.2" y="766.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.05%)</title><rect x="489.5" y="771.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="492.5" y="782.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.03%)</title><rect x="489.8" y="755.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="492.8" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.24%)</title><rect x="490.1" y="771.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.1" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.22%)</title><rect x="490.4" y="755.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="493.4" y="766.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.11%)</title><rect x="490.4" y="739.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="493.4" y="750.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.08%)</title><rect x="491.7" y="739.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="494.7" y="750.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="492.7" y="739.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="495.7" y="750.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="493.0" y="771.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="496.0" y="782.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.03%)</title><rect x="493.3" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="496.3" y="782.0"></text>
</g>
<g>
<title>tcp_push (162 samples, 4.39%)</title><rect x="493.6" y="771.0" width="51.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="496.6" y="782.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (161 samples, 4.36%)</title><rect x="494.0" y="755.0" width="51.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="497.0" y="766.0">__tcp..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="494.0" y="739.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="497.0" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (160 samples, 4.34%)</title><rect x="494.3" y="739.0" width="51.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="497.3" y="750.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (152 samples, 4.12%)</title><rect x="495.2" y="723.0" width="48.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.2" y="734.0">__tc..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.03%)</title><rect x="497.2" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="500.2" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (145 samples, 3.93%)</title><rect x="497.5" y="707.0" width="46.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="500.5" y="718.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (145 samples, 3.93%)</title><rect x="497.5" y="691.0" width="46.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="500.5" y="702.0">__ip..</text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.03%)</title><rect x="497.5" y="675.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="500.5" y="686.0"></text>
</g>
<g>
<title>ip_local_out (143 samples, 3.88%)</title><rect x="497.8" y="675.0" width="45.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="500.8" y="686.0">ip_l..</text>
</g>
<g>
<title>ip_output (143 samples, 3.88%)</title><rect x="497.8" y="659.0" width="45.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="500.8" y="670.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (142 samples, 3.85%)</title><rect x="498.1" y="643.0" width="45.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="501.1" y="654.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="498.4" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="501.4" y="638.0"></text>
</g>
<g>
<title>ip_finish_output2 (139 samples, 3.77%)</title><rect x="498.8" y="627.0" width="44.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="501.8" y="638.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (120 samples, 3.25%)</title><rect x="500.7" y="611.0" width="38.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="503.7" y="622.0">__l..</text>
</g>
<g>
<title>do_softirq.part.21 (119 samples, 3.23%)</title><rect x="501.0" y="595.0" width="38.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="504.0" y="606.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (118 samples, 3.20%)</title><rect x="501.3" y="579.0" width="37.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="504.3" y="590.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (118 samples, 3.20%)</title><rect x="501.3" y="563.0" width="37.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="504.3" y="574.0">__s..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="502.0" y="547.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="505.0" y="558.0"></text>
</g>
<g>
<title>net_rx_action (115 samples, 3.12%)</title><rect x="502.3" y="547.0" width="36.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="505.3" y="558.0">net..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="502.9" y="531.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="505.9" y="542.0"></text>
</g>
<g>
<title>process_backlog (112 samples, 3.04%)</title><rect x="503.2" y="531.0" width="35.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="506.2" y="542.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (111 samples, 3.01%)</title><rect x="503.2" y="515.0" width="35.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="506.2" y="526.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (111 samples, 3.01%)</title><rect x="503.2" y="499.0" width="35.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="506.2" y="510.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.11%)</title><rect x="503.2" y="483.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="506.2" y="494.0"></text>
</g>
<g>
<title>ip_rcv (107 samples, 2.90%)</title><rect x="504.5" y="483.0" width="34.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="507.5" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.11%)</title><rect x="505.2" y="467.0" width="1.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="508.2" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (101 samples, 2.74%)</title><rect x="506.4" y="467.0" width="32.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="509.4" y="478.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (99 samples, 2.68%)</title><rect x="506.8" y="451.0" width="31.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="509.8" y="462.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (99 samples, 2.68%)</title><rect x="506.8" y="435.0" width="31.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="509.8" y="446.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (96 samples, 2.60%)</title><rect x="506.8" y="419.0" width="30.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="509.8" y="430.0">ip..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="507.4" y="403.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.4" y="414.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="507.7" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="510.7" y="414.0"></text>
</g>
<g>
<title>tcp_v4_rcv (92 samples, 2.49%)</title><rect x="508.0" y="403.0" width="29.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="511.0" y="414.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.05%)</title><rect x="508.4" y="387.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="511.4" y="398.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="509.0" y="387.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="512.0" y="398.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="509.0" y="371.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="512.0" y="382.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.03%)</title><rect x="509.3" y="387.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="512.3" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (86 samples, 2.33%)</title><rect x="509.6" y="387.0" width="27.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="512.6" y="398.0">t..</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.03%)</title><rect x="509.6" y="371.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="512.6" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (85 samples, 2.30%)</title><rect x="510.0" y="371.0" width="27.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="513.0" y="382.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.05%)</title><rect x="510.3" y="355.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="513.3" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="510.3" y="339.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="513.3" y="350.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="510.3" y="323.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="513.3" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="510.6" y="323.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="513.6" y="334.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="510.6" y="307.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="513.6" y="318.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="510.9" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="513.9" y="366.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="511.2" y="355.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="514.2" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="511.6" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="514.6" y="366.0"></text>
</g>
<g>
<title>tcp_ack (26 samples, 0.70%)</title><rect x="511.9" y="355.0" width="8.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.9" y="366.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="512.8" y="339.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="515.8" y="350.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="513.2" y="339.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="516.2" y="350.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="513.5" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="516.5" y="350.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (16 samples, 0.43%)</title><rect x="513.8" y="339.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="516.8" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.27%)</title><rect x="515.1" y="323.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.1" y="334.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.08%)</title><rect x="515.1" y="307.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="518.1" y="318.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.05%)</title><rect x="515.4" y="291.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.4" y="302.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.05%)</title><rect x="515.4" y="275.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="518.4" y="286.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.16%)</title><rect x="516.0" y="307.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="519.0" y="318.0"></text>
</g>
<g>
<title>skb_release_data (6 samples, 0.16%)</title><rect x="516.0" y="291.0" width="2.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="519.0" y="302.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.11%)</title><rect x="516.7" y="275.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="519.7" y="286.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.11%)</title><rect x="516.7" y="259.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="519.7" y="270.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="517.6" y="243.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="520.6" y="254.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.03%)</title><rect x="518.0" y="307.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="521.0" y="318.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.03%)</title><rect x="518.3" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="521.3" y="334.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.03%)</title><rect x="518.6" y="323.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.6" y="334.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="518.9" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="521.9" y="350.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="519.2" y="339.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="522.2" y="350.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="519.6" y="339.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="522.6" y="350.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (2 samples, 0.05%)</title><rect x="520.2" y="355.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="523.2" y="366.0"></text>
</g>
<g>
<title>tcp_data_queue (46 samples, 1.25%)</title><rect x="520.8" y="355.0" width="14.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="523.8" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (44 samples, 1.19%)</title><rect x="521.2" y="339.0" width="14.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="524.2" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 1.19%)</title><rect x="521.2" y="323.0" width="14.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="524.2" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (44 samples, 1.19%)</title><rect x="521.2" y="307.0" width="14.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="524.2" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (44 samples, 1.19%)</title><rect x="521.2" y="291.0" width="14.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="524.2" y="302.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="535.2" y="339.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="538.2" y="350.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="535.5" y="355.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="538.5" y="366.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="535.5" y="339.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="538.5" y="350.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="535.9" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="538.9" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="536.2" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.2" y="366.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="536.5" y="355.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.5" y="366.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.03%)</title><rect x="536.8" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="539.8" y="366.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="537.1" y="387.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="540.1" y="398.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="537.5" y="419.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="540.5" y="430.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.05%)</title><rect x="537.8" y="419.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="540.8" y="430.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.03%)</title><rect x="538.4" y="451.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="541.4" y="462.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.03%)</title><rect x="538.7" y="515.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="541.7" y="526.0"></text>
</g>
<g>
<title>dev_queue_xmit (13 samples, 0.35%)</title><rect x="539.1" y="611.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="542.1" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.35%)</title><rect x="539.1" y="595.0" width="4.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.1" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.16%)</title><rect x="540.0" y="579.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="543.0" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.08%)</title><rect x="540.3" y="563.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="543.3" y="574.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.03%)</title><rect x="540.7" y="547.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="543.7" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.03%)</title><rect x="540.7" y="531.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="543.7" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.03%)</title><rect x="540.7" y="515.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="543.7" y="526.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="541.0" y="547.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="544.0" y="558.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="541.3" y="563.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.3" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.08%)</title><rect x="541.9" y="579.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="544.9" y="590.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="542.9" y="579.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="545.9" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.03%)</title><rect x="542.9" y="563.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="545.9" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="543.2" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="546.2" y="638.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="543.5" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="546.5" y="686.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="543.9" y="723.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="546.9" y="734.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.03%)</title><rect x="544.2" y="723.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="547.2" y="734.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="544.2" y="707.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="547.2" y="718.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="544.2" y="691.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.2" y="702.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="544.2" y="675.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="544.2" y="659.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="547.2" y="670.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.03%)</title><rect x="544.5" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.5" y="734.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.05%)</title><rect x="544.8" y="723.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="547.8" y="734.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.11%)</title><rect x="545.5" y="771.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="548.5" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="545.5" y="755.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="548.5" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.05%)</title><rect x="546.1" y="755.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="549.1" y="766.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="546.4" y="739.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="549.4" y="750.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="546.7" y="771.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="549.7" y="782.0"></text>
</g>
<g>
<title>security_socket_sendmsg (9 samples, 0.24%)</title><rect x="547.1" y="819.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="550.1" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.22%)</title><rect x="547.4" y="803.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="550.4" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.22%)</title><rect x="547.4" y="787.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="550.4" y="798.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.03%)</title><rect x="547.4" y="771.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="550.4" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.19%)</title><rect x="547.7" y="771.0" width="2.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="550.7" y="782.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.08%)</title><rect x="549.0" y="755.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="552.0" y="766.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.03%)</title><rect x="549.6" y="739.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="552.6" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.19%)</title><rect x="549.9" y="835.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="552.9" y="846.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.16%)</title><rect x="549.9" y="819.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="552.9" y="830.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.16%)</title><rect x="549.9" y="803.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="552.9" y="814.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.14%)</title><rect x="550.3" y="787.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="553.3" y="798.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="551.5" y="771.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="554.5" y="782.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="551.5" y="755.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="554.5" y="766.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="551.5" y="739.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="554.5" y="750.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="551.5" y="723.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="554.5" y="734.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="551.5" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="554.5" y="718.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="551.5" y="691.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="554.5" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="551.5" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="554.5" y="686.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="551.9" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="554.9" y="830.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="552.2" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="555.2" y="862.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="552.5" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="555.5" y="862.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="552.8" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.8" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="553.1" y="867.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="556.1" y="878.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="553.1" y="851.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="556.1" y="862.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="553.1" y="835.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="556.1" y="846.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="553.1" y="819.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="556.1" y="830.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="553.5" y="947.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="556.5" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="553.5" y="931.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="556.5" y="942.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="553.8" y="931.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="556.8" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="553.8" y="915.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="556.8" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="554.1" y="995.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="557.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.03%)</title><rect x="554.1" y="979.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.1" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (145 samples, 3.93%)</title><rect x="554.4" y="1011.0" width="46.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="557.4" y="1022.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (141 samples, 3.82%)</title><rect x="554.4" y="995.0" width="45.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.4" y="1006.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (138 samples, 3.74%)</title><rect x="554.7" y="979.0" width="44.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.7" y="990.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (137 samples, 3.71%)</title><rect x="555.1" y="963.0" width="43.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="558.1" y="974.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (126 samples, 3.42%)</title><rect x="555.4" y="947.0" width="40.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="558.4" y="958.0">Jav..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="556.0" y="931.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="559.0" y="942.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.08%)</title><rect x="556.3" y="931.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="559.3" y="942.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="557.3" y="931.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="560.3" y="942.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.05%)</title><rect x="557.6" y="931.0" width="0.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="560.6" y="942.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.05%)</title><rect x="558.3" y="931.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="561.3" y="942.0"></text>
</g>
<g>
<title>operator delete[](void*) (3 samples, 0.08%)</title><rect x="558.9" y="931.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="561.9" y="942.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.08%)</title><rect x="559.9" y="931.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="562.9" y="942.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.08%)</title><rect x="560.8" y="931.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="563.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.03%)</title><rect x="561.8" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="564.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="562.1" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="565.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.08%)</title><rect x="562.4" y="931.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="565.4" y="942.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (99 samples, 2.68%)</title><rect x="563.4" y="931.0" width="31.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="566.4" y="942.0">ro..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.03%)</title><rect x="563.4" y="915.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="566.4" y="926.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="563.7" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="566.7" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="564.0" y="915.0" width="0.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="567.0" y="926.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="564.7" y="915.0" width="0.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="567.7" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.14%)</title><rect x="565.0" y="915.0" width="1.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="568.0" y="926.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="565.3" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="568.3" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="565.6" y="899.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="568.6" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="565.9" y="899.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="568.9" y="910.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="566.3" y="899.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="569.3" y="910.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.03%)</title><rect x="566.6" y="915.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="569.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (74 samples, 2.01%)</title><rect x="566.9" y="915.0" width="23.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="569.9" y="926.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="566.9" y="899.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="569.9" y="910.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.03%)</title><rect x="567.2" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="570.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (71 samples, 1.92%)</title><rect x="567.5" y="899.0" width="22.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="570.5" y="910.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (70 samples, 1.90%)</title><rect x="567.9" y="883.0" width="22.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="570.9" y="894.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="567.9" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="570.9" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="568.2" y="867.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="571.2" y="878.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (2 samples, 0.05%)</title><rect x="568.8" y="867.0" width="0.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="571.8" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (62 samples, 1.68%)</title><rect x="569.5" y="867.0" width="19.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="572.5" y="878.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (1 samples, 0.03%)</title><rect x="570.7" y="851.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="573.7" y="862.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="571.1" y="851.0" width="0.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="574.1" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="571.4" y="851.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="574.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.11%)</title><rect x="572.0" y="851.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="575.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="573.0" y="835.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="576.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="573.3" y="851.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.3" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.05%)</title><rect x="573.6" y="851.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="576.6" y="862.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="573.6" y="835.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="576.6" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="573.9" y="835.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="576.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.05%)</title><rect x="574.3" y="851.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="577.3" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (43 samples, 1.17%)</title><rect x="574.9" y="851.0" width="13.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="577.9" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (39 samples, 1.06%)</title><rect x="575.8" y="835.0" width="12.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="578.8" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.05%)</title><rect x="576.5" y="819.0" width="0.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="579.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (32 samples, 0.87%)</title><rect x="577.1" y="819.0" width="10.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="580.1" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.05%)</title><rect x="583.2" y="803.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="586.2" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.08%)</title><rect x="583.8" y="803.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="586.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.22%)</title><rect x="584.8" y="803.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="587.8" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (1 samples, 0.03%)</title><rect x="585.4" y="787.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="588.4" y="798.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (5 samples, 0.14%)</title><rect x="585.8" y="787.0" width="1.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="588.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.03%)</title><rect x="587.4" y="819.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="590.4" y="830.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="587.7" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="590.7" y="830.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="588.0" y="819.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="591.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="588.3" y="835.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="591.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="588.6" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="591.6" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="589.0" y="851.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="592.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="589.3" y="867.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="592.3" y="878.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.03%)</title><rect x="589.6" y="867.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="592.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.03%)</title><rect x="589.9" y="867.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="592.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.03%)</title><rect x="590.2" y="899.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="593.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.03%)</title><rect x="590.6" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="593.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (13 samples, 0.35%)</title><rect x="590.9" y="915.0" width="4.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="593.9" y="926.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.05%)</title><rect x="591.2" y="899.0" width="0.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="594.2" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="591.5" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="594.5" y="894.0"></text>
</g>
<g>
<title>jni_NewByteArray (10 samples, 0.27%)</title><rect x="591.8" y="899.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="594.8" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="592.2" y="883.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="595.2" y="894.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="592.5" y="883.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="595.5" y="894.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="592.8" y="883.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="595.8" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="593.1" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="596.1" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.14%)</title><rect x="593.4" y="883.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="596.4" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.08%)</title><rect x="593.8" y="867.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="596.8" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.08%)</title><rect x="593.8" y="851.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="596.8" y="862.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="594.1" y="835.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="597.1" y="846.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="594.4" y="835.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="597.4" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="594.7" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="597.7" y="878.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.03%)</title><rect x="595.0" y="931.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="598.0" y="942.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="595.4" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="598.4" y="942.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.05%)</title><rect x="595.7" y="947.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="598.7" y="958.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="596.3" y="947.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="599.3" y="958.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="596.6" y="947.0" width="0.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="599.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.05%)</title><rect x="597.3" y="947.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="600.3" y="958.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="597.9" y="947.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="600.9" y="958.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.05%)</title><rect x="598.2" y="947.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="601.2" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (2 samples, 0.05%)</title><rect x="598.9" y="979.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="601.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (4 samples, 0.11%)</title><rect x="599.5" y="995.0" width="1.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.11%)</title><rect x="599.5" y="979.0" width="1.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="602.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="599.5" y="963.0" width="1.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="602.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="599.5" y="947.0" width="1.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="602.5" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.03%)</title><rect x="600.5" y="931.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="603.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (1 samples, 0.03%)</title><rect x="600.8" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="603.8" y="1054.0"></text>
</g>
<g>
<title>[NIO Worker #5 tid=32697] (597 samples, 16.18%)</title><rect x="601.1" y="1107.0" width="191.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="604.1" y="1118.0">[NIO Worker #5 tid=32697]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.08%)</title><rect x="601.1" y="1091.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="604.1" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (3 samples, 0.08%)</title><rect x="601.1" y="1075.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="604.1" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="601.4" y="1059.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="604.4" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="601.4" y="1043.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="604.4" y="1054.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="601.4" y="1027.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="604.4" y="1038.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="601.4" y="1011.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="604.4" y="1022.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="601.4" y="995.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.4" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="601.4" y="979.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="604.4" y="990.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="601.4" y="963.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.4" y="974.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="601.4" y="947.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.4" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="601.4" y="931.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="604.4" y="942.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="601.8" y="1059.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="604.8" y="1070.0"></text>
</g>
<g>
<title>[not_walkable_Java] (17 samples, 0.46%)</title><rect x="602.1" y="1091.0" width="5.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="605.1" y="1102.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.46%)</title><rect x="602.1" y="1075.0" width="5.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="605.1" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="602.1" y="1059.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="605.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="602.1" y="1043.0" width="0.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="605.1" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="602.1" y="1027.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="605.1" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="602.1" y="1011.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="605.1" y="1022.0"></text>
</g>
<g>
<title>clock_gettime (16 samples, 0.43%)</title><rect x="602.4" y="1059.0" width="5.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="605.4" y="1070.0"></text>
</g>
<g>
<title>[vdso] (15 samples, 0.41%)</title><rect x="602.7" y="1043.0" width="4.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="605.7" y="1054.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="607.5" y="1091.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="610.5" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="607.5" y="1075.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="610.5" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="607.5" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="610.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.run (576 samples, 15.61%)</title><rect x="607.8" y="1091.0" width="184.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.8" y="1102.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (576 samples, 15.61%)</title><rect x="607.8" y="1075.0" width="184.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.8" y="1086.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (576 samples, 15.61%)</title><rect x="607.8" y="1059.0" width="184.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="610.8" y="1070.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.05%)</title><rect x="608.2" y="1043.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="611.2" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.05%)</title><rect x="608.2" y="1027.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="611.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (172 samples, 4.66%)</title><rect x="608.8" y="1043.0" width="55.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="611.8" y="1054.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (167 samples, 4.53%)</title><rect x="610.4" y="1027.0" width="53.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="613.4" y="1038.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (165 samples, 4.47%)</title><rect x="610.7" y="1011.0" width="52.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="613.7" y="1022.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 0.05%)</title><rect x="612.3" y="995.0" width="0.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (114 samples, 3.09%)</title><rect x="613.0" y="995.0" width="36.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.0" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (114 samples, 3.09%)</title><rect x="613.0" y="979.0" width="36.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.0" y="990.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (114 samples, 3.09%)</title><rect x="613.0" y="963.0" width="36.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="616.0" y="974.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="613.3" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="616.3" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="613.6" y="947.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="616.6" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (58 samples, 1.57%)</title><rect x="613.9" y="947.0" width="18.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="616.9" y="958.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="614.9" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="617.9" y="942.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.05%)</title><rect x="615.2" y="931.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="618.2" y="942.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="615.8" y="931.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="618.8" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.33%)</title><rect x="616.2" y="931.0" width="3.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="619.2" y="942.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.08%)</title><rect x="617.4" y="915.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="620.4" y="926.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="618.1" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="621.1" y="910.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="618.4" y="915.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="621.4" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.08%)</title><rect x="618.7" y="915.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="621.7" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="619.7" y="915.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="622.7" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="620.0" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="623.0" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.05%)</title><rect x="620.3" y="931.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="623.3" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (21 samples, 0.57%)</title><rect x="621.0" y="931.0" width="6.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="624.0" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.35%)</title><rect x="623.5" y="915.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="626.5" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="623.5" y="899.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="626.5" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (12 samples, 0.33%)</title><rect x="623.8" y="899.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="626.8" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (11 samples, 0.30%)</title><rect x="624.2" y="883.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.2" y="894.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.16%)</title><rect x="625.4" y="867.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="628.4" y="878.0"></text>
</g>
<g>
<title>drop_futex_key_refs.isra.18 (1 samples, 0.03%)</title><rect x="625.4" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="628.4" y="862.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.14%)</title><rect x="625.7" y="851.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="628.7" y="862.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="627.0" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="630.0" y="846.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.03%)</title><rect x="627.0" y="819.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="630.0" y="830.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="627.3" y="867.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="630.3" y="878.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="627.7" y="931.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="630.7" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="628.0" y="931.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="631.0" y="942.0"></text>
</g>
<g>
<title>_init (3 samples, 0.08%)</title><rect x="628.3" y="931.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="631.3" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="628.9" y="915.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="631.9" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="628.9" y="899.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="631.9" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="628.9" y="883.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="631.9" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="628.9" y="867.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="631.9" y="878.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="628.9" y="851.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="631.9" y="862.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="628.9" y="835.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="631.9" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="628.9" y="819.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="631.9" y="830.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="629.3" y="931.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="632.3" y="942.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.03%)</title><rect x="629.6" y="931.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="632.6" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (7 samples, 0.19%)</title><rect x="629.9" y="931.0" width="2.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="632.9" y="942.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="632.1" y="931.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="635.1" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="632.5" y="947.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="635.5" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="632.5" y="931.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="635.5" y="942.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="632.8" y="947.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="635.8" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (45 samples, 1.22%)</title><rect x="633.1" y="947.0" width="14.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="636.1" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (34 samples, 0.92%)</title><rect x="636.6" y="931.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="639.6" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (34 samples, 0.92%)</title><rect x="636.6" y="915.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="639.6" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.89%)</title><rect x="636.9" y="899.0" width="10.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="639.9" y="910.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.89%)</title><rect x="636.9" y="883.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="639.9" y="894.0"></text>
</g>
<g>
<title>futex_wait (32 samples, 0.87%)</title><rect x="637.3" y="867.0" width="10.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="640.3" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (24 samples, 0.65%)</title><rect x="638.2" y="851.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="641.2" y="862.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.11%)</title><rect x="639.2" y="835.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="642.2" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.11%)</title><rect x="639.2" y="819.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="642.2" y="830.0"></text>
</g>
<g>
<title>plist_add (2 samples, 0.05%)</title><rect x="640.5" y="835.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="643.5" y="846.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.41%)</title><rect x="641.1" y="835.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="644.1" y="846.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.41%)</title><rect x="641.1" y="819.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="644.1" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.38%)</title><rect x="641.4" y="803.0" width="4.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="644.4" y="814.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.08%)</title><rect x="645.9" y="851.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="648.9" y="862.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="646.2" y="835.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="649.2" y="846.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="646.9" y="851.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="649.9" y="862.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="647.2" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="650.2" y="862.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="647.2" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="650.2" y="846.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="647.5" y="947.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="650.5" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (2 samples, 0.05%)</title><rect x="647.8" y="947.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="650.8" y="958.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="648.5" y="947.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="651.5" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.05%)</title><rect x="648.8" y="947.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="651.8" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.03%)</title><rect x="649.4" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="652.4" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.03%)</title><rect x="649.4" y="979.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="652.4" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.03%)</title><rect x="649.4" y="963.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="652.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (41 samples, 1.11%)</title><rect x="649.7" y="995.0" width="13.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="652.7" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (31 samples, 0.84%)</title><rect x="652.9" y="979.0" width="10.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="655.9" y="990.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.05%)</title><rect x="662.2" y="963.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="665.2" y="974.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.03%)</title><rect x="662.9" y="995.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="665.9" y="1006.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="663.2" y="995.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="666.2" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (1 samples, 0.03%)</title><rect x="663.5" y="1011.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="666.5" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1167666647.run (399 samples, 10.82%)</title><rect x="663.8" y="1043.0" width="127.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="666.8" y="1054.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (399 samples, 10.82%)</title><rect x="663.8" y="1027.0" width="127.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="666.8" y="1038.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (240 samples, 6.51%)</title><rect x="663.8" y="1011.0" width="76.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="666.8" y="1022.0">one/nio/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.05%)</title><rect x="664.1" y="995.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="667.1" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.05%)</title><rect x="664.1" y="979.0" width="0.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="667.1" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.05%)</title><rect x="664.1" y="963.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="667.1" y="974.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (236 samples, 6.40%)</title><rect x="664.8" y="995.0" width="75.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="667.8" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.19%)</title><rect x="664.8" y="979.0" width="2.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="667.8" y="990.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.14%)</title><rect x="665.4" y="963.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="668.4" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.05%)</title><rect x="665.4" y="947.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="668.4" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.08%)</title><rect x="666.1" y="947.0" width="0.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="669.1" y="958.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.08%)</title><rect x="666.1" y="931.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="669.1" y="942.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.putByte (1 samples, 0.03%)</title><rect x="666.7" y="915.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="669.7" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (229 samples, 6.21%)</title><rect x="667.0" y="979.0" width="73.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="670.0" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (227 samples, 6.15%)</title><rect x="667.7" y="963.0" width="72.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="670.7" y="974.0">one/nio/..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.05%)</title><rect x="667.7" y="947.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="670.7" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (224 samples, 6.07%)</title><rect x="668.3" y="947.0" width="71.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="671.3" y="958.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (223 samples, 6.04%)</title><rect x="668.6" y="931.0" width="71.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="671.6" y="942.0">one/nio/..</text>
</g>
<g>
<title>[unknown] (9 samples, 0.24%)</title><rect x="670.2" y="915.0" width="2.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="673.2" y="926.0"></text>
</g>
<g>
<title>[unknown] (9 samples, 0.24%)</title><rect x="670.2" y="899.0" width="2.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="673.2" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.08%)</title><rect x="670.2" y="883.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="673.2" y="894.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="671.2" y="883.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="674.2" y="894.0"></text>
</g>
<g>
<title>__send (2 samples, 0.05%)</title><rect x="671.5" y="883.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="674.5" y="894.0"></text>
</g>
<g>
<title>_init (3 samples, 0.08%)</title><rect x="672.1" y="883.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="675.1" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="673.1" y="915.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="676.1" y="926.0"></text>
</g>
<g>
<title>__send (207 samples, 5.61%)</title><rect x="673.7" y="915.0" width="66.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="676.7" y="926.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (204 samples, 5.53%)</title><rect x="674.7" y="899.0" width="65.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="677.7" y="910.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (204 samples, 5.53%)</title><rect x="674.7" y="883.0" width="65.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="677.7" y="894.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (203 samples, 5.50%)</title><rect x="675.0" y="867.0" width="64.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="678.0" y="878.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (198 samples, 5.37%)</title><rect x="675.0" y="851.0" width="63.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="678.0" y="862.0">__sys_s..</text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="675.6" y="835.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="678.6" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (188 samples, 5.10%)</title><rect x="676.3" y="835.0" width="60.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="679.3" y="846.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (183 samples, 4.96%)</title><rect x="676.3" y="819.0" width="58.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="679.3" y="830.0">inet_s..</text>
</g>
<g>
<title>release_sock (2 samples, 0.05%)</title><rect x="676.6" y="803.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="679.6" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg (180 samples, 4.88%)</title><rect x="677.2" y="803.0" width="57.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.2" y="814.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="677.2" y="787.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="680.2" y="798.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="677.6" y="787.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="680.6" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (176 samples, 4.77%)</title><rect x="677.9" y="787.0" width="56.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="680.9" y="798.0">tcp_se..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="678.8" y="771.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="681.8" y="782.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.08%)</title><rect x="679.2" y="771.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="682.2" y="782.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.05%)</title><rect x="679.2" y="755.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="682.2" y="766.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="679.8" y="755.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="682.8" y="766.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.03%)</title><rect x="680.1" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="683.1" y="782.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.19%)</title><rect x="680.4" y="771.0" width="2.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="683.4" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.19%)</title><rect x="680.4" y="755.0" width="2.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="683.4" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.08%)</title><rect x="680.8" y="739.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="683.8" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.05%)</title><rect x="681.1" y="723.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="684.1" y="734.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="681.4" y="707.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="684.4" y="718.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.05%)</title><rect x="681.7" y="739.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="684.7" y="750.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="682.4" y="739.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="685.4" y="750.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="682.7" y="771.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="685.7" y="782.0"></text>
</g>
<g>
<title>tcp_push (152 samples, 4.12%)</title><rect x="683.0" y="771.0" width="48.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="686.0" y="782.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (152 samples, 4.12%)</title><rect x="683.0" y="755.0" width="48.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="686.0" y="766.0">__tc..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="683.0" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="686.0" y="750.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (1 samples, 0.03%)</title><rect x="683.3" y="739.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="686.3" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (150 samples, 4.07%)</title><rect x="683.6" y="739.0" width="48.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="686.6" y="750.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (139 samples, 3.77%)</title><rect x="684.3" y="723.0" width="44.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="687.3" y="734.0">__tc..</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="685.2" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="688.2" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (135 samples, 3.66%)</title><rect x="685.6" y="707.0" width="43.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="688.6" y="718.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (133 samples, 3.61%)</title><rect x="685.6" y="691.0" width="42.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="688.6" y="702.0">__ip..</text>
</g>
<g>
<title>ip_local_out (130 samples, 3.52%)</title><rect x="685.6" y="675.0" width="41.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="688.6" y="686.0">ip_..</text>
</g>
<g>
<title>ip_output (130 samples, 3.52%)</title><rect x="685.6" y="659.0" width="41.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="688.6" y="670.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (130 samples, 3.52%)</title><rect x="685.6" y="643.0" width="41.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="688.6" y="654.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (130 samples, 3.52%)</title><rect x="685.6" y="627.0" width="41.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="688.6" y="638.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (114 samples, 3.09%)</title><rect x="686.5" y="611.0" width="36.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.5" y="622.0">__l..</text>
</g>
<g>
<title>do_softirq.part.21 (114 samples, 3.09%)</title><rect x="686.5" y="595.0" width="36.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="689.5" y="606.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (113 samples, 3.06%)</title><rect x="686.8" y="579.0" width="36.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="689.8" y="590.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (113 samples, 3.06%)</title><rect x="686.8" y="563.0" width="36.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="689.8" y="574.0">__s..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.03%)</title><rect x="686.8" y="547.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="689.8" y="558.0"></text>
</g>
<g>
<title>net_rx_action (111 samples, 3.01%)</title><rect x="687.2" y="547.0" width="35.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="690.2" y="558.0">net..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.03%)</title><rect x="688.1" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="691.1" y="542.0"></text>
</g>
<g>
<title>process_backlog (107 samples, 2.90%)</title><rect x="688.4" y="531.0" width="34.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="691.4" y="542.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (105 samples, 2.85%)</title><rect x="689.1" y="515.0" width="33.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="692.1" y="526.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (104 samples, 2.82%)</title><rect x="689.1" y="499.0" width="33.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="692.1" y="510.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.11%)</title><rect x="689.1" y="483.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="692.1" y="494.0"></text>
</g>
<g>
<title>ip_rcv (100 samples, 2.71%)</title><rect x="690.4" y="483.0" width="32.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="693.4" y="494.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (100 samples, 2.71%)</title><rect x="690.4" y="467.0" width="32.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="693.4" y="478.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (97 samples, 2.63%)</title><rect x="691.0" y="451.0" width="31.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="694.0" y="462.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (96 samples, 2.60%)</title><rect x="691.3" y="435.0" width="30.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="694.3" y="446.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (96 samples, 2.60%)</title><rect x="691.3" y="419.0" width="30.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="694.3" y="430.0">ip..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="691.3" y="403.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="694.3" y="414.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.03%)</title><rect x="691.6" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="694.6" y="414.0"></text>
</g>
<g>
<title>tcp_v4_rcv (94 samples, 2.55%)</title><rect x="692.0" y="403.0" width="30.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="695.0" y="414.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.19%)</title><rect x="693.2" y="387.0" width="2.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="696.2" y="398.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.03%)</title><rect x="695.5" y="387.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="698.5" y="398.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="695.8" y="387.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="698.8" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (81 samples, 2.20%)</title><rect x="696.1" y="387.0" width="25.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="699.1" y="398.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (78 samples, 2.11%)</title><rect x="696.4" y="371.0" width="25.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="699.4" y="382.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.14%)</title><rect x="697.4" y="355.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="700.4" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.14%)</title><rect x="697.4" y="339.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.4" y="350.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="697.4" y="323.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="700.4" y="334.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.11%)</title><rect x="697.7" y="323.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="700.7" y="334.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.11%)</title><rect x="697.7" y="307.0" width="1.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="700.7" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.08%)</title><rect x="698.0" y="291.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="701.0" y="302.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="699.0" y="355.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="702.0" y="366.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.03%)</title><rect x="699.3" y="355.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="702.3" y="366.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="699.6" y="355.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="702.6" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.05%)</title><rect x="700.0" y="355.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="703.0" y="366.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.38%)</title><rect x="700.6" y="355.0" width="4.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="703.6" y="366.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="700.9" y="339.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="703.9" y="350.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.03%)</title><rect x="701.2" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="704.2" y="350.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.19%)</title><rect x="701.6" y="339.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.6" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.05%)</title><rect x="702.5" y="323.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="705.5" y="334.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.05%)</title><rect x="702.5" y="307.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="705.5" y="318.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.05%)</title><rect x="702.5" y="291.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.5" y="302.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.05%)</title><rect x="702.5" y="275.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="705.5" y="286.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="702.5" y="259.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="705.5" y="270.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.03%)</title><rect x="702.8" y="259.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="705.8" y="270.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.03%)</title><rect x="703.2" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="706.2" y="334.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="703.5" y="323.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="706.5" y="334.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="703.8" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.8" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="704.1" y="339.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="707.1" y="350.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.05%)</title><rect x="704.4" y="339.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="707.4" y="350.0"></text>
</g>
<g>
<title>tcp_data_queue (49 samples, 1.33%)</title><rect x="705.1" y="355.0" width="15.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="708.1" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (44 samples, 1.19%)</title><rect x="705.7" y="339.0" width="14.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="708.7" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (43 samples, 1.17%)</title><rect x="706.0" y="323.0" width="13.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="709.0" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (43 samples, 1.17%)</title><rect x="706.0" y="307.0" width="13.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="709.0" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (43 samples, 1.17%)</title><rect x="706.0" y="291.0" width="13.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="709.0" y="302.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.08%)</title><rect x="719.8" y="339.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="722.8" y="350.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="720.8" y="355.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="723.8" y="366.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="720.8" y="339.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="723.8" y="350.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="720.8" y="323.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="723.8" y="334.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="721.1" y="355.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="724.1" y="366.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.05%)</title><rect x="721.4" y="371.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="724.4" y="382.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="722.0" y="451.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="725.0" y="462.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="722.4" y="499.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="725.4" y="510.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="722.7" y="547.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="725.7" y="558.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="722.7" y="531.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="725.7" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="722.7" y="515.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="725.7" y="526.0"></text>
</g>
<g>
<title>dev_queue_xmit (13 samples, 0.35%)</title><rect x="723.0" y="611.0" width="4.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.0" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.35%)</title><rect x="723.0" y="595.0" width="4.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="726.0" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.11%)</title><rect x="723.0" y="579.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="726.0" y="590.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="723.3" y="563.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="726.3" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="723.6" y="563.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="726.6" y="574.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.03%)</title><rect x="723.6" y="547.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="726.6" y="558.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.03%)</title><rect x="723.9" y="563.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="726.9" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="724.3" y="579.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="727.3" y="590.0"></text>
</g>
<g>
<title>validate_xmit_skb (7 samples, 0.19%)</title><rect x="724.6" y="579.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="727.6" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (3 samples, 0.08%)</title><rect x="725.5" y="563.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="728.5" y="574.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.03%)</title><rect x="726.5" y="563.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="729.5" y="574.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="726.8" y="579.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="729.8" y="590.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.08%)</title><rect x="727.1" y="675.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="730.1" y="686.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.05%)</title><rect x="728.1" y="691.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="731.1" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="728.7" y="723.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="731.7" y="734.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.03%)</title><rect x="729.1" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.1" y="734.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="729.4" y="723.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="732.4" y="734.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.08%)</title><rect x="729.7" y="723.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="732.7" y="734.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.03%)</title><rect x="730.3" y="707.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="733.3" y="718.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.03%)</title><rect x="730.7" y="723.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="733.7" y="734.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="731.0" y="723.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="734.0" y="734.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="731.3" y="723.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="734.3" y="734.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="731.6" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="734.6" y="782.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.14%)</title><rect x="731.9" y="771.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="734.9" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="732.6" y="755.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="735.6" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.03%)</title><rect x="733.2" y="755.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="736.2" y="766.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.05%)</title><rect x="733.5" y="771.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="736.5" y="782.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="734.2" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="737.2" y="798.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="734.5" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="737.5" y="798.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.14%)</title><rect x="734.8" y="819.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="737.8" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.14%)</title><rect x="734.8" y="803.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="737.8" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.14%)</title><rect x="734.8" y="787.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="737.8" y="798.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.03%)</title><rect x="735.1" y="771.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="738.1" y="782.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.08%)</title><rect x="735.5" y="771.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="738.5" y="782.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.03%)</title><rect x="736.1" y="755.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="739.1" y="766.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.03%)</title><rect x="736.1" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="739.1" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.16%)</title><rect x="736.4" y="835.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="739.4" y="846.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.16%)</title><rect x="736.4" y="819.0" width="1.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="739.4" y="830.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.16%)</title><rect x="736.4" y="803.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.4" y="814.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.16%)</title><rect x="736.4" y="787.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="739.4" y="798.0"></text>
</g>
<g>
<title>fput (2 samples, 0.05%)</title><rect x="738.3" y="851.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="741.3" y="862.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.05%)</title><rect x="739.0" y="851.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="742.0" y="862.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="739.6" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="742.6" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="739.9" y="947.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="742.9" y="958.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="739.9" y="931.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="742.9" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="739.9" y="915.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="742.9" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="740.3" y="995.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="743.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="740.3" y="979.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="743.3" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="740.3" y="963.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="743.3" y="974.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="740.3" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.3" y="958.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.03%)</title><rect x="740.3" y="931.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.3" y="942.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.03%)</title><rect x="740.3" y="915.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="743.3" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (158 samples, 4.28%)</title><rect x="740.6" y="1011.0" width="50.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="743.6" y="1022.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="740.6" y="995.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="743.6" y="1006.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="740.6" y="979.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="743.6" y="990.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="740.6" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="743.6" y="974.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="740.6" y="947.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="743.6" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (155 samples, 4.20%)</title><rect x="740.9" y="995.0" width="49.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="743.9" y="1006.0">ru/ma..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (147 samples, 3.98%)</title><rect x="740.9" y="979.0" width="47.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="743.9" y="990.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (147 samples, 3.98%)</title><rect x="740.9" y="963.0" width="47.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="743.9" y="974.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (137 samples, 3.71%)</title><rect x="740.9" y="947.0" width="43.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="743.9" y="958.0">Java..</text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.05%)</title><rect x="741.2" y="931.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="744.2" y="942.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.05%)</title><rect x="741.9" y="931.0" width="0.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="744.9" y="942.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.05%)</title><rect x="742.5" y="931.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="745.5" y="942.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="743.1" y="931.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="746.1" y="942.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.03%)</title><rect x="743.5" y="931.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="746.5" y="942.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.03%)</title><rect x="743.8" y="931.0" width="0.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="746.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.03%)</title><rect x="744.1" y="931.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="747.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="744.4" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="747.4" y="942.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (123 samples, 3.33%)</title><rect x="744.7" y="931.0" width="39.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="747.7" y="942.0">roc..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.05%)</title><rect x="745.1" y="915.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="748.1" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.08%)</title><rect x="745.7" y="915.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="748.7" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="746.7" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="749.7" y="926.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="747.0" y="915.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="750.0" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.14%)</title><rect x="747.3" y="915.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="750.3" y="926.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.08%)</title><rect x="747.9" y="899.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="750.9" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.03%)</title><rect x="748.9" y="915.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="751.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (90 samples, 2.44%)</title><rect x="749.2" y="915.0" width="28.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="752.2" y="926.0">ro..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.03%)</title><rect x="749.5" y="899.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="752.5" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (88 samples, 2.39%)</title><rect x="749.9" y="899.0" width="28.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="752.9" y="910.0">ro..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (84 samples, 2.28%)</title><rect x="750.2" y="883.0" width="26.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="753.2" y="894.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="750.2" y="867.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="753.2" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="750.8" y="867.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="753.8" y="878.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="751.1" y="867.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="754.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.11%)</title><rect x="751.5" y="867.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="754.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.03%)</title><rect x="752.7" y="867.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="755.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.05%)</title><rect x="753.1" y="867.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="756.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (70 samples, 1.90%)</title><rect x="753.7" y="867.0" width="22.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="756.7" y="878.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.05%)</title><rect x="756.9" y="851.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="759.9" y="862.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.03%)</title><rect x="757.5" y="851.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="760.5" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="757.9" y="851.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="760.9" y="862.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="758.5" y="851.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="761.5" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="758.8" y="835.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="761.8" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="758.8" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="761.8" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="758.8" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="761.8" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="758.8" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="761.8" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="758.8" y="771.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="761.8" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="758.8" y="755.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="761.8" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="758.8" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="761.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.08%)</title><rect x="759.1" y="851.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="762.1" y="862.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="759.8" y="835.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="762.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="760.1" y="851.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="763.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.11%)</title><rect x="760.4" y="851.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="763.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.05%)</title><rect x="760.4" y="835.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="763.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="760.4" y="819.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="763.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="760.7" y="819.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="763.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="760.7" y="803.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="763.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.03%)</title><rect x="761.1" y="835.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="764.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="761.4" y="835.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="764.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (43 samples, 1.17%)</title><rect x="761.7" y="851.0" width="13.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="764.7" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (36 samples, 0.98%)</title><rect x="762.7" y="835.0" width="11.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="765.7" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.05%)</title><rect x="763.0" y="819.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="766.0" y="830.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="763.6" y="819.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="766.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (26 samples, 0.70%)</title><rect x="764.3" y="819.0" width="8.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="767.3" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (1 samples, 0.03%)</title><rect x="768.4" y="803.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="771.4" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="768.7" y="803.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="771.7" y="814.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="769.1" y="803.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="772.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.24%)</title><rect x="769.7" y="803.0" width="2.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="772.7" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.05%)</title><rect x="770.7" y="787.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="773.7" y="798.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (4 samples, 0.11%)</title><rect x="771.3" y="787.0" width="1.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="774.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.03%)</title><rect x="772.6" y="819.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="775.6" y="830.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="772.9" y="819.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="775.9" y="830.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.08%)</title><rect x="773.2" y="819.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="776.2" y="830.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.05%)</title><rect x="774.2" y="835.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="777.2" y="846.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="774.8" y="835.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="777.8" y="846.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="775.1" y="835.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="778.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.03%)</title><rect x="775.4" y="851.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="778.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="775.8" y="851.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="778.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="776.1" y="867.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="779.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.03%)</title><rect x="776.4" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="779.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.03%)</title><rect x="776.7" y="867.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="779.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (3 samples, 0.08%)</title><rect x="777.0" y="883.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="780.0" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.05%)</title><rect x="778.0" y="915.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="781.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (16 samples, 0.43%)</title><rect x="778.6" y="915.0" width="5.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="781.6" y="926.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="779.0" y="899.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="782.0" y="910.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="779.0" y="883.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="782.0" y="894.0"></text>
</g>
<g>
<title>jni_NewByteArray (11 samples, 0.30%)</title><rect x="779.3" y="899.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="782.3" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.05%)</title><rect x="779.6" y="883.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="782.6" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.05%)</title><rect x="780.2" y="883.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="783.2" y="894.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="780.9" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="783.9" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.14%)</title><rect x="781.2" y="883.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="784.2" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.11%)</title><rect x="781.2" y="867.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="784.2" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.08%)</title><rect x="781.2" y="851.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="784.2" y="862.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.05%)</title><rect x="781.2" y="835.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="784.2" y="846.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.03%)</title><rect x="781.8" y="835.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="784.8" y="846.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="782.2" y="851.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="785.2" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="782.5" y="867.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="785.5" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.08%)</title><rect x="782.8" y="899.0" width="1.0" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="785.8" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="783.1" y="883.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="786.1" y="894.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.03%)</title><rect x="783.4" y="883.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="786.4" y="894.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="783.8" y="915.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="786.8" y="926.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.05%)</title><rect x="784.1" y="931.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="787.1" y="942.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="784.7" y="947.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="787.7" y="958.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.03%)</title><rect x="785.0" y="947.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="788.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.11%)</title><rect x="785.4" y="947.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="788.4" y="958.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.05%)</title><rect x="786.6" y="947.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="789.6" y="958.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.05%)</title><rect x="787.3" y="947.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="790.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (8 samples, 0.22%)</title><rect x="787.9" y="979.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="790.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (6 samples, 0.16%)</title><rect x="788.6" y="963.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="791.6" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (5 samples, 0.14%)</title><rect x="788.6" y="947.0" width="1.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="791.6" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (5 samples, 0.14%)</title><rect x="788.6" y="931.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="791.6" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="788.6" y="915.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="791.6" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="788.6" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="791.6" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="788.6" y="883.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="791.6" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="788.6" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="791.6" y="878.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="788.6" y="851.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="791.6" y="862.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="788.6" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="791.6" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="788.6" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="791.6" y="830.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="788.9" y="915.0" width="0.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="791.9" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.05%)</title><rect x="789.5" y="915.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="792.5" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="790.2" y="947.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="793.2" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="790.2" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.2" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="790.2" y="915.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="793.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (2 samples, 0.05%)</title><rect x="790.5" y="995.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="793.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.05%)</title><rect x="790.5" y="979.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="793.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="790.5" y="963.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="793.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="790.5" y="947.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="793.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (1 samples, 0.03%)</title><rect x="791.1" y="1011.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="794.1" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="791.1" y="995.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="794.1" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.03%)</title><rect x="791.1" y="979.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.1" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="791.1" y="963.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="794.1" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="791.1" y="947.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.1" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="791.1" y="931.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.1" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="791.1" y="915.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="794.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (2 samples, 0.05%)</title><rect x="791.4" y="1043.0" width="0.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="794.4" y="1054.0"></text>
</g>
<g>
<title>[NIO Worker #7 tid=32690] (592 samples, 16.05%)</title><rect x="792.1" y="1107.0" width="189.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="795.1" y="1118.0">[NIO Worker #7 tid=32690]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.03%)</title><rect x="792.1" y="1091.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="795.1" y="1102.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="792.1" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="795.1" y="1086.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.03%)</title><rect x="792.1" y="1059.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="795.1" y="1070.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="792.1" y="1043.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="795.1" y="1054.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="792.1" y="1027.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="795.1" y="1038.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="792.1" y="1011.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="795.1" y="1022.0"></text>
</g>
<g>
<title>ThreadLocalAllocBuffer::clear_before_allocation() (1 samples, 0.03%)</title><rect x="792.1" y="995.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="795.1" y="1006.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.03%)</title><rect x="792.1" y="979.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="795.1" y="990.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="792.4" y="1091.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="795.4" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="792.4" y="1075.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="795.4" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="792.4" y="1059.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="795.4" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="792.4" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="795.4" y="1054.0"></text>
</g>
<g>
<title>[not_walkable_Java] (16 samples, 0.43%)</title><rect x="792.7" y="1091.0" width="5.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="795.7" y="1102.0"></text>
</g>
<g>
<title>[unknown] (16 samples, 0.43%)</title><rect x="792.7" y="1075.0" width="5.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="795.7" y="1086.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="792.7" y="1059.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="795.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="792.7" y="1043.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="795.7" y="1054.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="792.7" y="1027.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="795.7" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="793.0" y="1027.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="796.0" y="1038.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="793.0" y="1011.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="796.0" y="1022.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.05%)</title><rect x="793.4" y="1059.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="796.4" y="1070.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.05%)</title><rect x="794.0" y="1059.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="797.0" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.27%)</title><rect x="794.6" y="1059.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="797.6" y="1070.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.27%)</title><rect x="794.6" y="1043.0" width="3.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="797.6" y="1054.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="797.8" y="1091.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="800.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="797.8" y="1075.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="800.8" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="797.8" y="1059.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="800.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.run (573 samples, 15.53%)</title><rect x="798.2" y="1091.0" width="183.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="801.2" y="1102.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (573 samples, 15.53%)</title><rect x="798.2" y="1075.0" width="183.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.2" y="1086.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (573 samples, 15.53%)</title><rect x="798.2" y="1059.0" width="183.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="801.2" y="1070.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (159 samples, 4.31%)</title><rect x="798.2" y="1043.0" width="50.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="801.2" y="1054.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.03%)</title><rect x="798.2" y="1027.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="801.2" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (158 samples, 4.28%)</title><rect x="798.5" y="1027.0" width="50.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.5" y="1038.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (157 samples, 4.26%)</title><rect x="798.5" y="1011.0" width="50.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.5" y="1022.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (123 samples, 3.33%)</title><rect x="799.1" y="995.0" width="39.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="802.1" y="1006.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (123 samples, 3.33%)</title><rect x="799.1" y="979.0" width="39.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="802.1" y="990.0">jav..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (123 samples, 3.33%)</title><rect x="799.1" y="963.0" width="39.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="802.1" y="974.0">jdk..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="800.4" y="947.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="803.4" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (53 samples, 1.44%)</title><rect x="800.7" y="947.0" width="17.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="803.7" y="958.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.08%)</title><rect x="802.3" y="931.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="805.3" y="942.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="803.3" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="806.3" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.33%)</title><rect x="803.6" y="931.0" width="3.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="806.6" y="942.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.08%)</title><rect x="804.9" y="915.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="807.9" y="926.0"></text>
</g>
<g>
<title>Monitor::unlock() (2 samples, 0.05%)</title><rect x="805.8" y="915.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="808.8" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="806.5" y="915.0" width="0.6" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="809.5" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="807.1" y="915.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="810.1" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="807.4" y="931.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="810.4" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="807.8" y="931.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="810.8" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (20 samples, 0.54%)</title><rect x="808.1" y="931.0" width="6.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="811.1" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.38%)</title><rect x="810.0" y="915.0" width="4.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="813.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="810.0" y="899.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="813.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.35%)</title><rect x="810.3" y="899.0" width="4.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="813.3" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.22%)</title><rect x="811.6" y="883.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="814.6" y="894.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.19%)</title><rect x="811.6" y="867.0" width="2.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="814.6" y="878.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.08%)</title><rect x="811.9" y="851.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="814.9" y="862.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="812.6" y="835.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="815.6" y="846.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.05%)</title><rect x="812.9" y="851.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="815.9" y="862.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.03%)</title><rect x="813.5" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="816.5" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.03%)</title><rect x="813.8" y="867.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="816.8" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="814.2" y="883.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="817.2" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.03%)</title><rect x="814.5" y="931.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="817.5" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="814.8" y="931.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="817.8" y="942.0"></text>
</g>
<g>
<title>_init (4 samples, 0.11%)</title><rect x="815.1" y="931.0" width="1.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="818.1" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="816.4" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="819.4" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.05%)</title><rect x="816.7" y="931.0" width="0.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="819.7" y="942.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="817.4" y="931.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="820.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="817.7" y="947.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="820.7" y="958.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="817.7" y="931.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="820.7" y="942.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.03%)</title><rect x="818.0" y="947.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="821.0" y="958.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (56 samples, 1.52%)</title><rect x="818.3" y="947.0" width="17.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="821.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.19%)</title><rect x="822.1" y="931.0" width="14.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="825.1" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 1.19%)</title><rect x="822.1" y="915.0" width="14.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="825.1" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (42 samples, 1.14%)</title><rect x="822.5" y="899.0" width="13.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="825.5" y="910.0"></text>
</g>
<g>
<title>_copy_from_user (1 samples, 0.03%)</title><rect x="823.1" y="883.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="826.1" y="894.0"></text>
</g>
<g>
<title>do_futex (38 samples, 1.03%)</title><rect x="823.4" y="883.0" width="12.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="826.4" y="894.0"></text>
</g>
<g>
<title>futex_wait (34 samples, 0.92%)</title><rect x="824.4" y="867.0" width="10.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="827.4" y="878.0"></text>
</g>
<g>
<title>__hrtimer_init (1 samples, 0.03%)</title><rect x="824.7" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="827.7" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (27 samples, 0.73%)</title><rect x="825.0" y="851.0" width="8.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="828.0" y="862.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (9 samples, 0.24%)</title><rect x="826.0" y="835.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="829.0" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (9 samples, 0.24%)</title><rect x="826.0" y="819.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="829.0" y="830.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.41%)</title><rect x="828.9" y="835.0" width="4.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="831.9" y="846.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.33%)</title><rect x="829.8" y="819.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="832.8" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.30%)</title><rect x="830.1" y="803.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="833.1" y="814.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.03%)</title><rect x="833.7" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="836.7" y="862.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="833.7" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="836.7" y="846.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.03%)</title><rect x="834.0" y="851.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="837.0" y="862.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (1 samples, 0.03%)</title><rect x="834.0" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.0" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="834.0" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="837.0" y="830.0"></text>
</g>
<g>
<title>hrtimer_init (3 samples, 0.08%)</title><rect x="834.3" y="851.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="837.3" y="862.0"></text>
</g>
<g>
<title>__hrtimer_init (3 samples, 0.08%)</title><rect x="834.3" y="835.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="837.3" y="846.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="835.3" y="867.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="838.3" y="878.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.03%)</title><rect x="835.6" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="838.6" y="894.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="835.6" y="867.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="838.6" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="835.9" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="838.9" y="910.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.05%)</title><rect x="836.2" y="947.0" width="0.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="839.2" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="836.9" y="947.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="839.9" y="958.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="837.2" y="947.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="840.2" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="837.8" y="947.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="840.8" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="838.1" y="947.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="841.1" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (32 samples, 0.87%)</title><rect x="838.5" y="995.0" width="10.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="841.5" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (25 samples, 0.68%)</title><rect x="840.7" y="979.0" width="8.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="843.7" y="990.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="847.4" y="963.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="850.4" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="847.4" y="947.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="850.4" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="847.4" y="931.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="850.4" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="847.4" y="915.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="850.4" y="926.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="847.4" y="899.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="850.4" y="910.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="847.4" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="850.4" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="847.4" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="850.4" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="847.7" y="963.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="850.7" y="974.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.05%)</title><rect x="848.1" y="963.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="851.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (1 samples, 0.03%)</title><rect x="848.7" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="851.7" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.05%)</title><rect x="849.0" y="1043.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="852.0" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1167666647.run (412 samples, 11.17%)</title><rect x="849.7" y="1043.0" width="131.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.7" y="1054.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (412 samples, 11.17%)</title><rect x="849.7" y="1027.0" width="131.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="852.7" y="1038.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (255 samples, 6.91%)</title><rect x="849.7" y="1011.0" width="81.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="852.7" y="1022.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.03%)</title><rect x="850.9" y="995.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="853.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="850.9" y="979.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="853.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="850.9" y="963.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="850.9" y="947.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="853.9" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (249 samples, 6.75%)</title><rect x="851.3" y="995.0" width="79.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="854.3" y="1006.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.05%)</title><rect x="851.3" y="979.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="854.3" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="851.6" y="963.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="854.6" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (247 samples, 6.70%)</title><rect x="851.9" y="979.0" width="79.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="854.9" y="990.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (246 samples, 6.67%)</title><rect x="852.2" y="963.0" width="78.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="855.2" y="974.0">one/nio/n..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="852.2" y="947.0" width="0.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="855.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (244 samples, 6.61%)</title><rect x="852.5" y="947.0" width="78.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="855.5" y="958.0">one/nio/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (244 samples, 6.61%)</title><rect x="852.5" y="931.0" width="78.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="855.5" y="942.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="853.8" y="915.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="856.8" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.14%)</title><rect x="854.1" y="915.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="857.1" y="926.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.14%)</title><rect x="854.1" y="899.0" width="1.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="857.1" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.08%)</title><rect x="854.1" y="883.0" width="1.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="857.1" y="894.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="854.5" y="867.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="857.5" y="878.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="854.8" y="867.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="857.8" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="854.8" y="851.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="857.8" y="862.0"></text>
</g>
<g>
<title>__send (2 samples, 0.05%)</title><rect x="855.1" y="883.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="858.1" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="855.7" y="915.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="858.7" y="926.0"></text>
</g>
<g>
<title>__send (233 samples, 6.32%)</title><rect x="856.1" y="915.0" width="74.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="859.1" y="926.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (228 samples, 6.18%)</title><rect x="857.7" y="899.0" width="72.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="860.7" y="910.0">entry_SY..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.05%)</title><rect x="857.7" y="883.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="860.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (226 samples, 6.13%)</title><rect x="858.3" y="883.0" width="72.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="861.3" y="894.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_sendto (225 samples, 6.10%)</title><rect x="858.6" y="867.0" width="72.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="861.6" y="878.0">__x64_sy..</text>
</g>
<g>
<title>__sys_sendto (222 samples, 6.02%)</title><rect x="858.6" y="851.0" width="71.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="861.6" y="862.0">__sys_se..</text>
</g>
<g>
<title>__fdget (1 samples, 0.03%)</title><rect x="859.3" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="862.3" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (212 samples, 5.75%)</title><rect x="859.6" y="835.0" width="67.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="862.6" y="846.0">sock_se..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.05%)</title><rect x="860.2" y="819.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="863.2" y="830.0"></text>
</g>
<g>
<title>inet_sendmsg (197 samples, 5.34%)</title><rect x="860.9" y="819.0" width="63.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="863.9" y="830.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (197 samples, 5.34%)</title><rect x="860.9" y="803.0" width="63.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="863.9" y="814.0">tcp_sen..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.03%)</title><rect x="860.9" y="787.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="863.9" y="798.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.03%)</title><rect x="861.2" y="787.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="864.2" y="798.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="861.5" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="864.5" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (193 samples, 5.23%)</title><rect x="861.8" y="787.0" width="61.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="864.8" y="798.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.03%)</title><rect x="864.1" y="771.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="867.1" y="782.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.03%)</title><rect x="864.1" y="755.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="867.1" y="766.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.03%)</title><rect x="864.4" y="771.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="867.4" y="782.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.03%)</title><rect x="864.4" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.4" y="766.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.30%)</title><rect x="864.7" y="771.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="867.7" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (11 samples, 0.30%)</title><rect x="864.7" y="755.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="867.7" y="766.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (5 samples, 0.14%)</title><rect x="864.7" y="739.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="867.7" y="750.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.14%)</title><rect x="864.7" y="723.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="867.7" y="734.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.16%)</title><rect x="866.3" y="739.0" width="1.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="869.3" y="750.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="867.6" y="723.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="870.6" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.03%)</title><rect x="867.9" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="870.9" y="734.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.03%)</title><rect x="867.9" y="707.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="870.9" y="718.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.03%)</title><rect x="868.2" y="771.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="871.2" y="782.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.03%)</title><rect x="868.2" y="755.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="871.2" y="766.0"></text>
</g>
<g>
<title>tcp_push (166 samples, 4.50%)</title><rect x="868.5" y="771.0" width="53.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="871.5" y="782.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (165 samples, 4.47%)</title><rect x="868.9" y="755.0" width="52.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="871.9" y="766.0">__tcp..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="868.9" y="739.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="871.9" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (164 samples, 4.45%)</title><rect x="869.2" y="739.0" width="52.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="872.2" y="750.0">tcp_w..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.03%)</title><rect x="869.5" y="723.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="872.5" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (155 samples, 4.20%)</title><rect x="869.8" y="723.0" width="49.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="872.8" y="734.0">__tcp..</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.03%)</title><rect x="872.4" y="707.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="875.4" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (143 samples, 3.88%)</title><rect x="872.7" y="707.0" width="45.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="875.7" y="718.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (142 samples, 3.85%)</title><rect x="872.7" y="691.0" width="45.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="875.7" y="702.0">__ip..</text>
</g>
<g>
<title>ip_local_out (140 samples, 3.80%)</title><rect x="873.3" y="675.0" width="44.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="876.3" y="686.0">ip_l..</text>
</g>
<g>
<title>ip_output (140 samples, 3.80%)</title><rect x="873.3" y="659.0" width="44.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="876.3" y="670.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="873.6" y="643.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="876.6" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (138 samples, 3.74%)</title><rect x="874.0" y="643.0" width="44.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="877.0" y="654.0">ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (137 samples, 3.71%)</title><rect x="874.3" y="627.0" width="43.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="877.3" y="638.0">ip_f..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.03%)</title><rect x="875.2" y="611.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="878.2" y="622.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (118 samples, 3.20%)</title><rect x="875.6" y="611.0" width="37.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.6" y="622.0">__l..</text>
</g>
<g>
<title>do_softirq.part.21 (118 samples, 3.20%)</title><rect x="875.6" y="595.0" width="37.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="878.6" y="606.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (118 samples, 3.20%)</title><rect x="875.6" y="579.0" width="37.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="878.6" y="590.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (118 samples, 3.20%)</title><rect x="875.6" y="563.0" width="37.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="878.6" y="574.0">__s..</text>
</g>
<g>
<title>net_rx_action (116 samples, 3.14%)</title><rect x="876.2" y="547.0" width="37.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="879.2" y="558.0">net..</text>
</g>
<g>
<title>process_backlog (116 samples, 3.14%)</title><rect x="876.2" y="531.0" width="37.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="879.2" y="542.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (113 samples, 3.06%)</title><rect x="877.2" y="515.0" width="36.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="880.2" y="526.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (111 samples, 3.01%)</title><rect x="877.5" y="499.0" width="35.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="880.5" y="510.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.11%)</title><rect x="877.5" y="483.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="880.5" y="494.0"></text>
</g>
<g>
<title>ip_rcv (107 samples, 2.90%)</title><rect x="878.8" y="483.0" width="34.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="881.8" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="878.8" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="881.8" y="478.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.05%)</title><rect x="879.1" y="467.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="882.1" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (104 samples, 2.82%)</title><rect x="879.7" y="467.0" width="33.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="882.7" y="478.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (103 samples, 2.79%)</title><rect x="879.7" y="451.0" width="33.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="882.7" y="462.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (103 samples, 2.79%)</title><rect x="879.7" y="435.0" width="33.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="882.7" y="446.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (100 samples, 2.71%)</title><rect x="879.7" y="419.0" width="32.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="882.7" y="430.0">ip..</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="880.0" y="403.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="883.0" y="414.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.03%)</title><rect x="880.4" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="883.4" y="414.0"></text>
</g>
<g>
<title>tcp_v4_rcv (97 samples, 2.63%)</title><rect x="880.7" y="403.0" width="31.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="883.7" y="414.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (6 samples, 0.16%)</title><rect x="881.6" y="387.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="884.6" y="398.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.03%)</title><rect x="883.6" y="387.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="886.6" y="398.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.05%)</title><rect x="883.9" y="387.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="886.9" y="398.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="884.5" y="387.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="887.5" y="398.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.03%)</title><rect x="884.5" y="371.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="887.5" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (83 samples, 2.25%)</title><rect x="884.8" y="387.0" width="26.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="887.8" y="398.0">t..</text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.03%)</title><rect x="884.8" y="371.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="887.8" y="382.0"></text>
</g>
<g>
<title>tcp_rcv_established (82 samples, 2.22%)</title><rect x="885.2" y="371.0" width="26.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="888.2" y="382.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.08%)</title><rect x="886.4" y="355.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="889.4" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.08%)</title><rect x="886.4" y="339.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="889.4" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.08%)</title><rect x="886.4" y="323.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="889.4" y="334.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.08%)</title><rect x="886.4" y="307.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.4" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="887.1" y="291.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="890.1" y="302.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="887.4" y="355.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="890.4" y="366.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 0.43%)</title><rect x="887.7" y="355.0" width="5.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="890.7" y="366.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="888.4" y="339.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="891.4" y="350.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 0.30%)</title><rect x="888.7" y="339.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="891.7" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.14%)</title><rect x="889.0" y="323.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="892.0" y="334.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="889.0" y="307.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.0" y="318.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="889.0" y="291.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="892.0" y="302.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="889.0" y="275.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="892.0" y="286.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.11%)</title><rect x="889.3" y="307.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="892.3" y="318.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.11%)</title><rect x="889.3" y="291.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="892.3" y="302.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.05%)</title><rect x="890.0" y="275.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="893.0" y="286.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.05%)</title><rect x="890.0" y="259.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="893.0" y="270.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.03%)</title><rect x="890.6" y="323.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="893.6" y="334.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.03%)</title><rect x="890.9" y="323.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="893.9" y="334.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.03%)</title><rect x="891.2" y="323.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="894.2" y="334.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.03%)</title><rect x="891.6" y="323.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="894.6" y="334.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.03%)</title><rect x="891.9" y="323.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="894.9" y="334.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="892.2" y="339.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="895.2" y="350.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.03%)</title><rect x="892.5" y="339.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="895.5" y="350.0"></text>
</g>
<g>
<title>tcp_data_queue (53 samples, 1.44%)</title><rect x="892.8" y="355.0" width="17.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="895.8" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (52 samples, 1.41%)</title><rect x="893.2" y="339.0" width="16.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="896.2" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (51 samples, 1.38%)</title><rect x="893.5" y="323.0" width="16.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="896.5" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (51 samples, 1.38%)</title><rect x="893.5" y="307.0" width="16.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="896.5" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (51 samples, 1.38%)</title><rect x="893.5" y="291.0" width="16.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="896.5" y="302.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.03%)</title><rect x="909.8" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="912.8" y="366.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="909.8" y="339.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="912.8" y="350.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="909.8" y="323.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="912.8" y="334.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.05%)</title><rect x="910.1" y="355.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="913.1" y="366.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="910.8" y="355.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.8" y="366.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="911.1" y="355.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.1" y="366.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.03%)</title><rect x="911.4" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="914.4" y="398.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.08%)</title><rect x="911.7" y="419.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="914.7" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.03%)</title><rect x="912.7" y="451.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="915.7" y="462.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.03%)</title><rect x="913.0" y="499.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="916.0" y="510.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.41%)</title><rect x="913.3" y="611.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="916.3" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.38%)</title><rect x="913.3" y="595.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="916.3" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.24%)</title><rect x="914.3" y="579.0" width="2.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="917.3" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.14%)</title><rect x="915.2" y="563.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="918.2" y="574.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.05%)</title><rect x="915.6" y="547.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.6" y="558.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.05%)</title><rect x="916.2" y="547.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="919.2" y="558.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.05%)</title><rect x="916.2" y="531.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="919.2" y="542.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.05%)</title><rect x="916.2" y="515.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.2" y="526.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.03%)</title><rect x="916.8" y="563.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="919.8" y="574.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.05%)</title><rect x="917.2" y="579.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="920.2" y="590.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.05%)</title><rect x="917.2" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="920.2" y="574.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.03%)</title><rect x="917.8" y="595.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="920.8" y="606.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="918.1" y="691.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="921.1" y="702.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.05%)</title><rect x="918.4" y="707.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.4" y="718.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.05%)</title><rect x="918.4" y="691.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="921.4" y="702.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.03%)</title><rect x="919.1" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.1" y="718.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="919.4" y="723.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="922.4" y="734.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.03%)</title><rect x="919.7" y="723.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="922.7" y="734.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="919.7" y="707.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="922.7" y="718.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.03%)</title><rect x="920.0" y="723.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="923.0" y="734.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.05%)</title><rect x="920.3" y="723.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="923.3" y="734.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.03%)</title><rect x="920.3" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="923.3" y="718.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.03%)</title><rect x="920.3" y="691.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="923.3" y="702.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="920.7" y="707.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="923.7" y="718.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="920.7" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="923.7" y="702.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="920.7" y="675.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="923.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="920.7" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="923.7" y="670.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.03%)</title><rect x="921.0" y="723.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="924.0" y="734.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="921.3" y="723.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="924.3" y="734.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="921.3" y="707.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="924.3" y="718.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.14%)</title><rect x="921.6" y="771.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="924.6" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="921.6" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="924.6" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.11%)</title><rect x="921.9" y="755.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="924.9" y="766.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.05%)</title><rect x="922.6" y="739.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="925.6" y="750.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.03%)</title><rect x="923.2" y="771.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="926.2" y="782.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.03%)</title><rect x="923.5" y="787.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="926.5" y="798.0"></text>
</g>
<g>
<title>security_socket_sendmsg (11 samples, 0.30%)</title><rect x="923.9" y="819.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="926.9" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (10 samples, 0.27%)</title><rect x="924.2" y="803.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="927.2" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.27%)</title><rect x="924.2" y="787.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.2" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.24%)</title><rect x="924.5" y="771.0" width="2.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.5" y="782.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.03%)</title><rect x="924.8" y="755.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="927.8" y="766.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (7 samples, 0.19%)</title><rect x="925.1" y="755.0" width="2.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="928.1" y="766.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.03%)</title><rect x="925.8" y="739.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="928.8" y="750.0"></text>
</g>
<g>
<title>aa_profile_af_perm (4 samples, 0.11%)</title><rect x="926.1" y="739.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="929.1" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.19%)</title><rect x="927.4" y="835.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="930.4" y="846.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.16%)</title><rect x="927.4" y="819.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="930.4" y="830.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.16%)</title><rect x="927.4" y="803.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="930.4" y="814.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.14%)</title><rect x="927.7" y="787.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="930.7" y="798.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.03%)</title><rect x="929.3" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="932.3" y="830.0"></text>
</g>
<g>
<title>fput (1 samples, 0.03%)</title><rect x="929.6" y="851.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="932.6" y="862.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.03%)</title><rect x="929.9" y="851.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="932.9" y="862.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.03%)</title><rect x="930.3" y="851.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="933.3" y="862.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="930.6" y="947.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="933.6" y="958.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="930.6" y="931.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="933.6" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="930.6" y="915.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="933.6" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="930.9" y="995.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="933.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.03%)</title><rect x="930.9" y="979.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="933.9" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.03%)</title><rect x="930.9" y="963.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="933.9" y="974.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (155 samples, 4.20%)</title><rect x="931.2" y="1011.0" width="49.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="934.2" y="1022.0">ru/ma..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.03%)</title><rect x="932.5" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.5" y="1006.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="932.5" y="979.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="935.5" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (145 samples, 3.93%)</title><rect x="932.8" y="995.0" width="46.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.8" y="1006.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (139 samples, 3.77%)</title><rect x="932.8" y="979.0" width="44.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="935.8" y="990.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (139 samples, 3.77%)</title><rect x="932.8" y="963.0" width="44.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="935.8" y="974.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (134 samples, 3.63%)</title><rect x="932.8" y="947.0" width="42.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="935.8" y="958.0">Java..</text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (3 samples, 0.08%)</title><rect x="933.5" y="931.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="936.5" y="942.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.03%)</title><rect x="934.1" y="915.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.1" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.03%)</title><rect x="934.1" y="899.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="937.1" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.03%)</title><rect x="934.1" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="937.1" y="894.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.03%)</title><rect x="934.1" y="867.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="937.1" y="878.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="934.1" y="851.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="937.1" y="862.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.03%)</title><rect x="934.1" y="835.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="937.1" y="846.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="934.4" y="931.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="937.4" y="942.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.05%)</title><rect x="934.7" y="931.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="937.7" y="942.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.08%)</title><rect x="935.4" y="931.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="938.4" y="942.0"></text>
</g>
<g>
<title>operator delete(void*) (3 samples, 0.08%)</title><rect x="936.3" y="931.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="939.3" y="942.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.05%)</title><rect x="937.3" y="931.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="940.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.03%)</title><rect x="937.9" y="931.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="940.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.05%)</title><rect x="938.3" y="931.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="941.3" y="942.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (112 samples, 3.04%)</title><rect x="938.9" y="931.0" width="35.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="941.9" y="942.0">roc..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="939.2" y="915.0" width="0.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="942.2" y="926.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.11%)</title><rect x="939.9" y="915.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="942.9" y="926.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="940.5" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="943.5" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.03%)</title><rect x="940.8" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="943.8" y="910.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="941.1" y="915.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="944.1" y="926.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.08%)</title><rect x="941.5" y="915.0" width="0.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="944.5" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="942.4" y="915.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="945.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.03%)</title><rect x="942.7" y="915.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="945.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (77 samples, 2.09%)</title><rect x="943.1" y="915.0" width="24.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="946.1" y="926.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.05%)</title><rect x="943.1" y="899.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="946.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (2 samples, 0.05%)</title><rect x="943.7" y="899.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="946.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (73 samples, 1.98%)</title><rect x="944.3" y="899.0" width="23.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="947.3" y="910.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (71 samples, 1.92%)</title><rect x="944.7" y="883.0" width="22.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="947.7" y="894.0">r..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="945.0" y="867.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="948.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.03%)</title><rect x="945.6" y="867.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="948.6" y="878.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.05%)</title><rect x="945.9" y="867.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="948.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (59 samples, 1.60%)</title><rect x="946.6" y="867.0" width="18.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="949.6" y="878.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="947.5" y="851.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="950.5" y="862.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.03%)</title><rect x="947.9" y="851.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="950.9" y="862.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.05%)</title><rect x="948.2" y="851.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="951.2" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (6 samples, 0.16%)</title><rect x="948.8" y="851.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="951.8" y="862.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="949.8" y="835.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="952.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="950.1" y="835.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="953.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.03%)</title><rect x="950.4" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="953.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.03%)</title><rect x="950.4" y="819.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="953.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="950.7" y="851.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="953.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.11%)</title><rect x="951.1" y="851.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="954.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.05%)</title><rect x="951.1" y="835.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="954.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.05%)</title><rect x="951.1" y="819.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="954.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (2 samples, 0.05%)</title><rect x="951.7" y="835.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="954.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.03%)</title><rect x="952.3" y="851.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="955.3" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (36 samples, 0.98%)</title><rect x="952.7" y="851.0" width="11.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="955.7" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (36 samples, 0.98%)</title><rect x="952.7" y="835.0" width="11.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="955.7" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (6 samples, 0.16%)</title><rect x="953.0" y="819.0" width="1.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="956.0" y="830.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.05%)</title><rect x="954.3" y="803.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="957.3" y="814.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="954.9" y="819.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="957.9" y="830.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (25 samples, 0.68%)</title><rect x="955.2" y="819.0" width="8.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="958.2" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.05%)</title><rect x="959.4" y="803.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="962.4" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="959.7" y="787.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="962.7" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="959.7" y="771.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.7" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="959.7" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="962.7" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="959.7" y="739.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="962.7" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="959.7" y="723.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="962.7" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="959.7" y="707.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="962.7" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="959.7" y="691.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="962.7" y="702.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="960.0" y="803.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="963.0" y="814.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="960.3" y="803.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="963.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.22%)</title><rect x="960.7" y="803.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="963.7" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (1 samples, 0.03%)</title><rect x="961.6" y="787.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="964.6" y="798.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (4 samples, 0.11%)</title><rect x="961.9" y="787.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="964.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.03%)</title><rect x="963.2" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="966.2" y="830.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (2 samples, 0.05%)</title><rect x="963.5" y="819.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="966.5" y="830.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.03%)</title><rect x="964.2" y="851.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="967.2" y="862.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.03%)</title><rect x="964.5" y="851.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="967.5" y="862.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.03%)</title><rect x="964.8" y="851.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="967.8" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.03%)</title><rect x="965.1" y="851.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="968.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.05%)</title><rect x="965.5" y="867.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="968.5" y="878.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (3 samples, 0.08%)</title><rect x="966.1" y="867.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="969.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.03%)</title><rect x="967.1" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="970.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.03%)</title><rect x="967.4" y="883.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="970.4" y="894.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (20 samples, 0.54%)</title><rect x="967.7" y="915.0" width="6.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="970.7" y="926.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.03%)</title><rect x="967.7" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="970.7" y="910.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="968.0" y="899.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="971.0" y="910.0"></text>
</g>
<g>
<title>jni_NewByteArray (16 samples, 0.43%)</title><rect x="968.3" y="899.0" width="5.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="971.3" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (3 samples, 0.08%)</title><rect x="968.7" y="883.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="971.7" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.11%)</title><rect x="969.6" y="883.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="972.6" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.22%)</title><rect x="970.9" y="883.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="973.9" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.11%)</title><rect x="971.5" y="867.0" width="1.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="974.5" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="971.8" y="851.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="974.8" y="862.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.03%)</title><rect x="971.8" y="835.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="974.8" y="846.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.03%)</title><rect x="972.2" y="835.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="975.2" y="846.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.03%)</title><rect x="972.5" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="975.5" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.05%)</title><rect x="972.8" y="867.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="975.8" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.05%)</title><rect x="973.4" y="899.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="976.4" y="910.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.05%)</title><rect x="974.1" y="915.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="977.1" y="926.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.05%)</title><rect x="974.7" y="931.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="977.7" y="942.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="975.4" y="931.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="978.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="975.7" y="947.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="978.7" y="958.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.05%)</title><rect x="975.7" y="931.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="978.7" y="942.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.05%)</title><rect x="975.7" y="915.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="978.7" y="926.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.03%)</title><rect x="976.3" y="947.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="979.3" y="958.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.03%)</title><rect x="976.6" y="947.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="979.6" y="958.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="977.0" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="980.0" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (6 samples, 0.16%)</title><rect x="977.3" y="979.0" width="1.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.3" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (4 samples, 0.11%)</title><rect x="977.9" y="963.0" width="1.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="980.9" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.08%)</title><rect x="978.2" y="947.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="981.2" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.08%)</title><rect x="978.2" y="931.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.2" y="942.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="978.2" y="915.0" width="0.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="981.2" y="926.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="978.9" y="915.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="981.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (5 samples, 0.14%)</title><rect x="979.2" y="995.0" width="1.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.2" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.14%)</title><rect x="979.2" y="979.0" width="1.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="982.2" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.14%)</title><rect x="979.2" y="963.0" width="1.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="982.2" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.14%)</title><rect x="979.2" y="947.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="982.2" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.03%)</title><rect x="980.5" y="931.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="983.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (2 samples, 0.05%)</title><rect x="980.8" y="1011.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="983.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="980.8" y="995.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="980.8" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="983.8" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="980.8" y="963.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="983.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="980.8" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.8" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="980.8" y="931.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="983.8" y="942.0"></text>
</g>
<g>
<title>[NIO Worker #8 tid=32698] (595 samples, 16.13%)</title><rect x="981.4" y="1107.0" width="190.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="984.4" y="1118.0">[NIO Worker #8 tid=32698]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.03%)</title><rect x="981.4" y="1091.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="984.4" y="1102.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.03%)</title><rect x="981.4" y="1075.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="984.4" y="1086.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.03%)</title><rect x="981.4" y="1059.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="984.4" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.03%)</title><rect x="981.4" y="1043.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="984.4" y="1054.0"></text>
</g>
<g>
<title>[not_walkable_Java] (14 samples, 0.38%)</title><rect x="981.8" y="1091.0" width="4.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="984.8" y="1102.0"></text>
</g>
<g>
<title>[unknown] (14 samples, 0.38%)</title><rect x="981.8" y="1075.0" width="4.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="984.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="981.8" y="1059.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="984.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="981.8" y="1043.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="984.8" y="1054.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="981.8" y="1027.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="984.8" y="1038.0"></text>
</g>
<g>
<title>clock_gettime (13 samples, 0.35%)</title><rect x="982.1" y="1059.0" width="4.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="985.1" y="1070.0"></text>
</g>
<g>
<title>[vdso] (12 samples, 0.33%)</title><rect x="982.4" y="1043.0" width="3.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="985.4" y="1054.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.03%)</title><rect x="986.2" y="1091.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="989.2" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="986.2" y="1075.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="989.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/Thread.run (579 samples, 15.70%)</title><rect x="986.6" y="1091.0" width="185.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="989.6" y="1102.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (579 samples, 15.70%)</title><rect x="986.6" y="1075.0" width="185.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="989.6" y="1086.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (579 samples, 15.70%)</title><rect x="986.6" y="1059.0" width="185.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="989.6" y="1070.0">java/util/concurrent/Thr..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.03%)</title><rect x="986.6" y="1043.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="989.6" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.03%)</title><rect x="986.6" y="1027.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="989.6" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (169 samples, 4.58%)</title><rect x="986.9" y="1043.0" width="54.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="989.9" y="1054.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.03%)</title><rect x="987.5" y="1027.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="990.5" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (166 samples, 4.50%)</title><rect x="987.8" y="1027.0" width="53.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="990.8" y="1038.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (163 samples, 4.42%)</title><rect x="988.2" y="1011.0" width="52.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="991.2" y="1022.0">java/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (135 samples, 3.66%)</title><rect x="989.1" y="995.0" width="43.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="992.1" y="1006.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (135 samples, 3.66%)</title><rect x="989.1" y="979.0" width="43.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.1" y="990.0">java..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (135 samples, 3.66%)</title><rect x="989.1" y="963.0" width="43.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="992.1" y="974.0">jdk/..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.03%)</title><rect x="990.1" y="947.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="993.1" y="958.0"></text>
</g>
<g>
<title>Unsafe_Park (63 samples, 1.71%)</title><rect x="990.4" y="947.0" width="20.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="993.4" y="958.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.03%)</title><rect x="992.3" y="931.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="995.3" y="942.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.33%)</title><rect x="992.6" y="931.0" width="3.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="995.6" y="942.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.05%)</title><rect x="993.6" y="915.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="996.6" y="926.0"></text>
</g>
<g>
<title>Monitor::unlock() (3 samples, 0.08%)</title><rect x="994.2" y="915.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="997.2" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.08%)</title><rect x="995.2" y="915.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="998.2" y="926.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.03%)</title><rect x="996.2" y="915.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="999.2" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.03%)</title><rect x="996.5" y="931.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="999.5" y="942.0"></text>
</g>
<g>
<title>__lll_unlock_wake (27 samples, 0.73%)</title><rect x="996.8" y="931.0" width="8.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="999.8" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (20 samples, 0.54%)</title><rect x="999.0" y="915.0" width="6.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1002.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.08%)</title><rect x="999.0" y="899.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1002.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.46%)</title><rect x="1000.0" y="899.0" width="5.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1003.0" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (13 samples, 0.35%)</title><rect x="1001.0" y="883.0" width="4.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1004.0" y="894.0"></text>
</g>
<g>
<title>do_futex (11 samples, 0.30%)</title><rect x="1001.6" y="867.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1004.6" y="878.0"></text>
</g>
<g>
<title>futex_wake (9 samples, 0.24%)</title><rect x="1001.9" y="851.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1004.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock (2 samples, 0.05%)</title><rect x="1003.8" y="835.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1006.8" y="846.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1004.5" y="835.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1007.5" y="846.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.03%)</title><rect x="1004.8" y="851.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1007.8" y="862.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1005.1" y="883.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1008.1" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.05%)</title><rect x="1005.4" y="931.0" width="0.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1008.4" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (3 samples, 0.08%)</title><rect x="1006.1" y="931.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1009.1" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1006.7" y="915.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1009.7" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1006.7" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1009.7" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1006.7" y="883.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1009.7" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1006.7" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1009.7" y="878.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1006.7" y="851.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1009.7" y="862.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1006.7" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1009.7" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1006.7" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1009.7" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1007.0" y="931.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1010.0" y="942.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="1007.7" y="931.0" width="0.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1010.7" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.03%)</title><rect x="1008.3" y="931.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1011.3" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (6 samples, 0.16%)</title><rect x="1008.6" y="931.0" width="2.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1011.6" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1010.6" y="947.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1013.6" y="958.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.03%)</title><rect x="1010.6" y="931.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1013.6" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (63 samples, 1.71%)</title><rect x="1010.9" y="947.0" width="20.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1013.9" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 1.27%)</title><rect x="1016.0" y="931.0" width="15.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1019.0" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (47 samples, 1.27%)</title><rect x="1016.0" y="915.0" width="15.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1019.0" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (46 samples, 1.25%)</title><rect x="1016.3" y="899.0" width="14.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1019.3" y="910.0"></text>
</g>
<g>
<title>do_futex (43 samples, 1.17%)</title><rect x="1017.0" y="883.0" width="13.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1020.0" y="894.0"></text>
</g>
<g>
<title>futex_wait (41 samples, 1.11%)</title><rect x="1017.3" y="867.0" width="13.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1020.3" y="878.0"></text>
</g>
<g>
<title>futex_wait_queue_me (30 samples, 0.81%)</title><rect x="1017.3" y="851.0" width="9.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1020.3" y="862.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.03%)</title><rect x="1019.2" y="835.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1022.2" y="846.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (7 samples, 0.19%)</title><rect x="1019.5" y="835.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1022.5" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (6 samples, 0.16%)</title><rect x="1019.5" y="819.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1022.5" y="830.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.21 (1 samples, 0.03%)</title><rect x="1021.4" y="819.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.4" y="830.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="1021.7" y="835.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1024.7" y="846.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.41%)</title><rect x="1022.1" y="835.0" width="4.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1025.1" y="846.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.41%)</title><rect x="1022.1" y="819.0" width="4.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1025.1" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.41%)</title><rect x="1022.1" y="803.0" width="4.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1025.1" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1026.2" y="787.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1029.2" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1026.2" y="771.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1029.2" y="782.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="1026.2" y="755.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1029.2" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="1026.2" y="739.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1029.2" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.05%)</title><rect x="1026.2" y="723.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1029.2" y="734.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.05%)</title><rect x="1026.2" y="707.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="1026.2" y="691.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1029.2" y="702.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.14%)</title><rect x="1026.9" y="851.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1028.1" y="835.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1031.1" y="846.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.05%)</title><rect x="1028.5" y="851.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1031.5" y="862.0"></text>
</g>
<g>
<title>hrtimer_cancel (1 samples, 0.03%)</title><rect x="1029.1" y="851.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1032.1" y="862.0"></text>
</g>
<g>
<title>hrtimer_active (1 samples, 0.03%)</title><rect x="1029.1" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1032.1" y="846.0"></text>
</g>
<g>
<title>hrtimer_init (2 samples, 0.05%)</title><rect x="1029.4" y="851.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1032.4" y="862.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.05%)</title><rect x="1029.4" y="835.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1032.4" y="846.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.03%)</title><rect x="1030.1" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1033.1" y="862.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.03%)</title><rect x="1030.4" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1033.4" y="878.0"></text>
</g>
<g>
<title>get_timespec64 (1 samples, 0.03%)</title><rect x="1030.7" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1033.7" y="894.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.03%)</title><rect x="1030.7" y="867.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1033.7" y="878.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.03%)</title><rect x="1031.0" y="947.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1034.0" y="958.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.05%)</title><rect x="1031.3" y="947.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1034.3" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (1 samples, 0.03%)</title><rect x="1032.0" y="947.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1035.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (25 samples, 0.68%)</title><rect x="1032.3" y="995.0" width="8.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1035.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (20 samples, 0.54%)</title><rect x="1033.9" y="979.0" width="6.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1036.9" y="990.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1040.0" y="963.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1043.0" y="974.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (1 samples, 0.03%)</title><rect x="1040.0" y="947.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1043.0" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/TimeUnit.toNanos (2 samples, 0.05%)</title><rect x="1040.3" y="1011.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1043.3" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicInteger.get (2 samples, 0.05%)</title><rect x="1040.9" y="1043.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1043.9" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1167666647.run (407 samples, 11.03%)</title><rect x="1041.6" y="1043.0" width="130.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1044.6" y="1054.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (407 samples, 11.03%)</title><rect x="1041.6" y="1027.0" width="130.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1044.6" y="1038.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (241 samples, 6.53%)</title><rect x="1041.9" y="1011.0" width="77.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1044.9" y="1022.0">one/nio/h..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.08%)</title><rect x="1043.2" y="995.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1046.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.08%)</title><rect x="1043.2" y="979.0" width="0.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1046.2" y="990.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.08%)</title><rect x="1043.2" y="963.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1046.2" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.03%)</title><rect x="1043.8" y="947.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1046.8" y="958.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (232 samples, 6.29%)</title><rect x="1044.1" y="995.0" width="74.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1047.1" y="1006.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.22%)</title><rect x="1044.1" y="979.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1047.1" y="990.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.08%)</title><rect x="1044.8" y="963.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1047.8" y="974.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.08%)</title><rect x="1045.7" y="963.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1048.7" y="974.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.05%)</title><rect x="1046.1" y="947.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1049.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.03%)</title><rect x="1046.4" y="931.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1049.4" y="942.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.03%)</title><rect x="1046.4" y="915.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1049.4" y="926.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (224 samples, 6.07%)</title><rect x="1046.7" y="979.0" width="71.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1049.7" y="990.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (221 samples, 5.99%)</title><rect x="1047.7" y="963.0" width="70.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1050.7" y="974.0">one/nio/..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1047.7" y="947.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1050.7" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.03%)</title><rect x="1047.7" y="931.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1050.7" y="942.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (218 samples, 5.91%)</title><rect x="1048.0" y="947.0" width="69.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1051.0" y="958.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (218 samples, 5.91%)</title><rect x="1048.0" y="931.0" width="69.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1051.0" y="942.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.03%)</title><rect x="1049.3" y="915.0" width="0.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1052.3" y="926.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.27%)</title><rect x="1049.6" y="915.0" width="3.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1052.6" y="926.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.27%)</title><rect x="1049.6" y="899.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1052.6" y="910.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.08%)</title><rect x="1049.6" y="883.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1052.6" y="894.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1049.6" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1052.6" y="878.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1049.6" y="851.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1052.6" y="862.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1049.6" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1052.6" y="846.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1049.6" y="819.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1052.6" y="830.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1049.6" y="803.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1052.6" y="814.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1049.6" y="787.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1052.6" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1049.6" y="771.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1052.6" y="782.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.05%)</title><rect x="1049.9" y="867.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1052.9" y="878.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="1050.2" y="851.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1053.2" y="862.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.03%)</title><rect x="1050.5" y="883.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1053.5" y="894.0"></text>
</g>
<g>
<title>__send (3 samples, 0.08%)</title><rect x="1050.9" y="883.0" width="0.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1053.9" y="894.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="1051.8" y="883.0" width="0.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1054.8" y="894.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="1052.5" y="883.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1055.5" y="894.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.03%)</title><rect x="1052.8" y="915.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1055.8" y="926.0"></text>
</g>
<g>
<title>__send (202 samples, 5.48%)</title><rect x="1053.1" y="915.0" width="64.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1056.1" y="926.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (200 samples, 5.42%)</title><rect x="1053.7" y="899.0" width="64.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1056.7" y="910.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.05%)</title><rect x="1053.7" y="883.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1056.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (198 samples, 5.37%)</title><rect x="1054.4" y="883.0" width="63.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1057.4" y="894.0">do_sysc..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.03%)</title><rect x="1056.0" y="867.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1059.0" y="878.0"></text>
</g>
<g>
<title>__x64_sys_sendto (192 samples, 5.20%)</title><rect x="1056.3" y="867.0" width="61.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1059.3" y="878.0">__x64_..</text>
</g>
<g>
<title>__sys_sendto (192 samples, 5.20%)</title><rect x="1056.3" y="851.0" width="61.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1059.3" y="862.0">__sys_..</text>
</g>
<g>
<title>__fdget (2 samples, 0.05%)</title><rect x="1056.6" y="835.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1059.6" y="846.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.03%)</title><rect x="1057.3" y="835.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1060.3" y="846.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.03%)</title><rect x="1057.6" y="835.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1060.6" y="846.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.03%)</title><rect x="1057.9" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1060.9" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (182 samples, 4.93%)</title><rect x="1058.2" y="835.0" width="58.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1061.2" y="846.0">sock_s..</text>
</g>
<g>
<title>inet_sendmsg (179 samples, 4.85%)</title><rect x="1058.2" y="819.0" width="57.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.2" y="830.0">inet_s..</text>
</g>
<g>
<title>tcp_sendmsg (179 samples, 4.85%)</title><rect x="1058.2" y="803.0" width="57.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1061.2" y="814.0">tcp_se..</text>
</g>
<g>
<title>release_sock (1 samples, 0.03%)</title><rect x="1058.5" y="787.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.5" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.03%)</title><rect x="1058.5" y="771.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1061.5" y="782.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.03%)</title><rect x="1058.5" y="755.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1061.5" y="766.0"></text>
</g>
<g>
<title>do_softirq.part.21 (1 samples, 0.03%)</title><rect x="1058.5" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1061.5" y="750.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.03%)</title><rect x="1058.5" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1061.5" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1058.5" y="707.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1061.5" y="718.0"></text>
</g>
<g>
<title>tasklet_action (1 samples, 0.03%)</title><rect x="1058.5" y="691.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1061.5" y="702.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.23 (1 samples, 0.03%)</title><rect x="1058.5" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1061.5" y="686.0"></text>
</g>
<g>
<title>kbd_bh (1 samples, 0.03%)</title><rect x="1058.5" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1061.5" y="670.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.03%)</title><rect x="1058.9" y="787.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1061.9" y="798.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.03%)</title><rect x="1059.2" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1062.2" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (175 samples, 4.74%)</title><rect x="1059.5" y="787.0" width="56.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1062.5" y="798.0">tcp_s..</text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.03%)</title><rect x="1060.1" y="771.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1063.1" y="782.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.05%)</title><rect x="1060.5" y="771.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1063.5" y="782.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (6 samples, 0.16%)</title><rect x="1061.1" y="771.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1064.1" y="782.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.16%)</title><rect x="1061.1" y="755.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1064.1" y="766.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.11%)</title><rect x="1061.1" y="739.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1064.1" y="750.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.03%)</title><rect x="1062.1" y="723.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1065.1" y="734.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.03%)</title><rect x="1062.4" y="739.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1065.4" y="750.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.03%)</title><rect x="1062.7" y="739.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1065.7" y="750.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.08%)</title><rect x="1063.0" y="771.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1066.0" y="782.0"></text>
</g>
<g>
<title>tcp_push (155 samples, 4.20%)</title><rect x="1064.0" y="771.0" width="49.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1067.0" y="782.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (154 samples, 4.17%)</title><rect x="1064.0" y="755.0" width="49.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1067.0" y="766.0">__tcp..</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="1064.0" y="739.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1067.0" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (153 samples, 4.15%)</title><rect x="1064.3" y="739.0" width="48.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1067.3" y="750.0">tcp_..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.05%)</title><rect x="1064.6" y="723.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1067.6" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (144 samples, 3.90%)</title><rect x="1065.3" y="723.0" width="46.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1068.3" y="734.0">__tc..</text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.03%)</title><rect x="1065.6" y="707.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1068.6" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (141 samples, 3.82%)</title><rect x="1065.9" y="707.0" width="45.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1068.9" y="718.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (141 samples, 3.82%)</title><rect x="1065.9" y="691.0" width="45.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1068.9" y="702.0">__ip..</text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.03%)</title><rect x="1066.2" y="675.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1069.2" y="686.0"></text>
</g>
<g>
<title>ip_local_out (136 samples, 3.69%)</title><rect x="1066.5" y="675.0" width="43.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.5" y="686.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.03%)</title><rect x="1066.5" y="659.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1069.5" y="670.0"></text>
</g>
<g>
<title>ip_output (133 samples, 3.61%)</title><rect x="1066.9" y="659.0" width="42.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1069.9" y="670.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.03%)</title><rect x="1066.9" y="643.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1069.9" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (132 samples, 3.58%)</title><rect x="1067.2" y="643.0" width="42.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1070.2" y="654.0">ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (132 samples, 3.58%)</title><rect x="1067.2" y="627.0" width="42.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1070.2" y="638.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (114 samples, 3.09%)</title><rect x="1068.4" y="611.0" width="36.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1071.4" y="622.0">__l..</text>
</g>
<g>
<title>do_softirq.part.21 (113 samples, 3.06%)</title><rect x="1068.8" y="595.0" width="36.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1071.8" y="606.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (113 samples, 3.06%)</title><rect x="1068.8" y="579.0" width="36.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1071.8" y="590.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (113 samples, 3.06%)</title><rect x="1068.8" y="563.0" width="36.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1071.8" y="574.0">__s..</text>
</g>
<g>
<title>net_rx_action (109 samples, 2.95%)</title><rect x="1069.4" y="547.0" width="34.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1072.4" y="558.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.03%)</title><rect x="1070.0" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1073.0" y="542.0"></text>
</g>
<g>
<title>process_backlog (106 samples, 2.87%)</title><rect x="1070.4" y="531.0" width="33.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1073.4" y="542.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (101 samples, 2.74%)</title><rect x="1072.0" y="515.0" width="32.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1075.0" y="526.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (101 samples, 2.74%)</title><rect x="1072.0" y="499.0" width="32.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1075.0" y="510.0">__..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.11%)</title><rect x="1072.6" y="483.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1075.6" y="494.0"></text>
</g>
<g>
<title>ip_rcv (94 samples, 2.55%)</title><rect x="1073.9" y="483.0" width="30.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1076.9" y="494.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.03%)</title><rect x="1073.9" y="467.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1076.9" y="478.0"></text>
</g>
<g>
<title>ip_rcv_finish (93 samples, 2.52%)</title><rect x="1074.2" y="467.0" width="29.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1077.2" y="478.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (92 samples, 2.49%)</title><rect x="1074.5" y="451.0" width="29.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1077.5" y="462.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (90 samples, 2.44%)</title><rect x="1074.8" y="435.0" width="28.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1077.8" y="446.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (90 samples, 2.44%)</title><rect x="1074.8" y="419.0" width="28.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1077.8" y="430.0">ip..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.03%)</title><rect x="1075.2" y="403.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1078.2" y="414.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.03%)</title><rect x="1075.5" y="403.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1078.5" y="414.0"></text>
</g>
<g>
<title>tcp_v4_rcv (87 samples, 2.36%)</title><rect x="1075.8" y="403.0" width="27.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1078.8" y="414.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.14%)</title><rect x="1075.8" y="387.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1078.8" y="398.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.03%)</title><rect x="1077.4" y="387.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1080.4" y="398.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.03%)</title><rect x="1077.7" y="387.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1080.7" y="398.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (79 samples, 2.14%)</title><rect x="1078.0" y="387.0" width="25.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1081.0" y="398.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (78 samples, 2.11%)</title><rect x="1078.4" y="371.0" width="24.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1081.4" y="382.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.05%)</title><rect x="1079.0" y="355.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1082.0" y="366.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.05%)</title><rect x="1079.0" y="339.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1082.0" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="1079.3" y="323.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1082.3" y="334.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="1079.3" y="307.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1082.3" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1079.3" y="291.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1082.3" y="302.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (2 samples, 0.05%)</title><rect x="1079.6" y="355.0" width="0.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1082.6" y="366.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="1080.3" y="355.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1083.3" y="366.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.03%)</title><rect x="1080.6" y="355.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1083.6" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.03%)</title><rect x="1080.9" y="355.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1083.9" y="366.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.38%)</title><rect x="1081.2" y="355.0" width="4.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1084.2" y="366.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.03%)</title><rect x="1082.8" y="339.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1085.8" y="350.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.16%)</title><rect x="1083.2" y="339.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1086.2" y="350.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.14%)</title><rect x="1083.5" y="323.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1086.5" y="334.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.03%)</title><rect x="1083.5" y="307.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1086.5" y="318.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.03%)</title><rect x="1083.5" y="291.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1086.5" y="302.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.11%)</title><rect x="1083.8" y="307.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1086.8" y="318.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.11%)</title><rect x="1083.8" y="291.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1086.8" y="302.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.08%)</title><rect x="1084.1" y="275.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1087.1" y="286.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.08%)</title><rect x="1084.1" y="259.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1087.1" y="270.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.03%)</title><rect x="1084.8" y="243.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1087.8" y="254.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.03%)</title><rect x="1085.1" y="339.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1088.1" y="350.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.03%)</title><rect x="1085.4" y="339.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1088.4" y="350.0"></text>
</g>
<g>
<title>tcp_data_queue (51 samples, 1.38%)</title><rect x="1085.7" y="355.0" width="16.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1088.7" y="366.0"></text>
</g>
<g>
<title>sock_def_readable (48 samples, 1.30%)</title><rect x="1086.7" y="339.0" width="15.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1089.7" y="350.0"></text>
</g>
<g>
<title>__wake_up_sync_key (45 samples, 1.22%)</title><rect x="1087.6" y="323.0" width="14.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1090.6" y="334.0"></text>
</g>
<g>
<title>__wake_up_common_lock (45 samples, 1.22%)</title><rect x="1087.6" y="307.0" width="14.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1090.6" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (45 samples, 1.22%)</title><rect x="1087.6" y="291.0" width="14.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1090.6" y="302.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.05%)</title><rect x="1102.0" y="355.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1105.0" y="366.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.05%)</title><rect x="1102.0" y="339.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1105.0" y="350.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.03%)</title><rect x="1102.7" y="355.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1105.7" y="366.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.03%)</title><rect x="1103.0" y="355.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1106.0" y="366.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.03%)</title><rect x="1103.3" y="387.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1106.3" y="398.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.03%)</title><rect x="1103.6" y="435.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1106.6" y="446.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.03%)</title><rect x="1104.0" y="483.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.0" y="494.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.05%)</title><rect x="1104.3" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1107.3" y="558.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.38%)</title><rect x="1104.9" y="611.0" width="4.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1107.9" y="622.0"></text>
</g>
<g>
<title>__dev_queue_xmit (13 samples, 0.35%)</title><rect x="1104.9" y="595.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1107.9" y="606.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.14%)</title><rect x="1106.2" y="579.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1109.2" y="590.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="1106.2" y="563.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1109.2" y="574.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.05%)</title><rect x="1106.5" y="563.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1109.5" y="574.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.05%)</title><rect x="1107.2" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1110.2" y="574.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.03%)</title><rect x="1107.8" y="579.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1110.8" y="590.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.03%)</title><rect x="1108.1" y="579.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1111.1" y="590.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.03%)</title><rect x="1108.4" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1111.4" y="590.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="1108.4" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1111.4" y="574.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.03%)</title><rect x="1108.8" y="579.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.8" y="590.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.03%)</title><rect x="1109.1" y="595.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1112.1" y="606.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.05%)</title><rect x="1109.4" y="659.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1112.4" y="670.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.08%)</title><rect x="1110.0" y="675.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1113.0" y="686.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.03%)</title><rect x="1111.0" y="707.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1114.0" y="718.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.14%)</title><rect x="1111.3" y="723.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1114.3" y="734.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.05%)</title><rect x="1112.3" y="707.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1115.3" y="718.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.03%)</title><rect x="1112.9" y="723.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1115.9" y="734.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.03%)</title><rect x="1112.9" y="707.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1115.9" y="718.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.03%)</title><rect x="1112.9" y="691.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1115.9" y="702.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.03%)</title><rect x="1113.2" y="755.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1116.2" y="766.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.16%)</title><rect x="1113.6" y="771.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1116.6" y="782.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.03%)</title><rect x="1113.6" y="755.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1116.6" y="766.0"></text>
</g>
<g>
<title>tcp_current_mss (5 samples, 0.14%)</title><rect x="1113.9" y="755.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1116.9" y="766.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.08%)</title><rect x="1115.5" y="819.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1118.5" y="830.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.08%)</title><rect x="1115.5" y="803.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1118.5" y="814.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.08%)</title><rect x="1115.5" y="787.0" width="0.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1118.5" y="798.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.05%)</title><rect x="1115.8" y="771.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1118.8" y="782.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.03%)</title><rect x="1116.1" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1119.1" y="766.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.03%)</title><rect x="1116.1" y="739.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1119.1" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.11%)</title><rect x="1116.4" y="835.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1119.4" y="846.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.11%)</title><rect x="1116.4" y="819.0" width="1.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1119.4" y="830.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.11%)</title><rect x="1116.4" y="803.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1119.4" y="814.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.05%)</title><rect x="1117.1" y="787.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1120.1" y="798.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.05%)</title><rect x="1117.7" y="947.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1120.7" y="958.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1117.7" y="931.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1120.7" y="942.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.03%)</title><rect x="1118.0" y="931.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1121.0" y="942.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.03%)</title><rect x="1118.0" y="915.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1121.0" y="926.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1118.3" y="995.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1121.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.isHttp11 (1 samples, 0.03%)</title><rect x="1118.7" y="995.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1121.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.03%)</title><rect x="1118.7" y="979.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.7" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (162 samples, 4.39%)</title><rect x="1119.0" y="1011.0" width="51.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1122.0" y="1022.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (151 samples, 4.09%)</title><rect x="1121.2" y="995.0" width="48.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.2" y="1006.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (145 samples, 3.93%)</title><rect x="1121.2" y="979.0" width="46.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.2" y="990.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (144 samples, 3.90%)</title><rect x="1121.5" y="963.0" width="46.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1124.5" y="974.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (131 samples, 3.55%)</title><rect x="1121.9" y="947.0" width="41.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1124.9" y="958.0">Jav..</text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (1 samples, 0.03%)</title><rect x="1122.2" y="931.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1125.2" y="942.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.08%)</title><rect x="1122.5" y="931.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1125.5" y="942.0"></text>
</g>
<g>
<title>_init (2 samples, 0.05%)</title><rect x="1123.5" y="931.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1126.5" y="942.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.03%)</title><rect x="1124.1" y="931.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1127.1" y="942.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.03%)</title><rect x="1124.4" y="931.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1127.4" y="942.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.03%)</title><rect x="1124.7" y="931.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1127.7" y="942.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.05%)</title><rect x="1125.1" y="931.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1128.1" y="942.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.05%)</title><rect x="1125.7" y="931.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1128.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.05%)</title><rect x="1126.3" y="931.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1129.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.03%)</title><rect x="1127.0" y="931.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1130.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="1127.3" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1130.3" y="942.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (112 samples, 3.04%)</title><rect x="1127.6" y="931.0" width="35.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1130.6" y="942.0">roc..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.08%)</title><rect x="1129.9" y="915.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1132.9" y="926.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.03%)</title><rect x="1130.8" y="915.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1133.8" y="926.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="1131.1" y="915.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1134.1" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1131.5" y="915.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1134.5" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.05%)</title><rect x="1131.5" y="899.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1134.5" y="910.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.05%)</title><rect x="1131.5" y="883.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1134.5" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.05%)</title><rect x="1131.5" y="867.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1134.5" y="878.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.05%)</title><rect x="1131.5" y="851.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1134.5" y="862.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.05%)</title><rect x="1131.5" y="835.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1134.5" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.05%)</title><rect x="1131.5" y="819.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1134.5" y="830.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.11%)</title><rect x="1132.1" y="915.0" width="1.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1135.1" y="926.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.11%)</title><rect x="1133.4" y="915.0" width="1.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1136.4" y="926.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.03%)</title><rect x="1134.0" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1137.0" y="910.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.03%)</title><rect x="1134.3" y="899.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1137.3" y="910.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.03%)</title><rect x="1134.7" y="915.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1137.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (71 samples, 1.92%)</title><rect x="1135.0" y="915.0" width="22.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1138.0" y="926.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.05%)</title><rect x="1135.0" y="899.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1138.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (68 samples, 1.84%)</title><rect x="1135.6" y="899.0" width="21.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1138.6" y="910.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (68 samples, 1.84%)</title><rect x="1135.6" y="883.0" width="21.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1138.6" y="894.0">r..</text>
</g>
<g>
<title>_init (3 samples, 0.08%)</title><rect x="1135.9" y="867.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1138.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.03%)</title><rect x="1136.9" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1139.9" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (58 samples, 1.57%)</title><rect x="1137.2" y="867.0" width="18.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1140.2" y="878.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="1139.1" y="851.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1142.1" y="862.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.03%)</title><rect x="1139.5" y="851.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1142.5" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1139.8" y="851.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1142.8" y="862.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1140.1" y="851.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1143.1" y="862.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.11%)</title><rect x="1140.4" y="851.0" width="1.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1143.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.05%)</title><rect x="1141.1" y="835.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1144.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.03%)</title><rect x="1141.4" y="819.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1144.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.03%)</title><rect x="1141.7" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1144.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.03%)</title><rect x="1141.7" y="835.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1144.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.05%)</title><rect x="1142.0" y="851.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1145.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (39 samples, 1.06%)</title><rect x="1142.7" y="851.0" width="12.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1145.7" y="862.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (35 samples, 0.95%)</title><rect x="1143.3" y="835.0" width="11.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1146.3" y="846.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (6 samples, 0.16%)</title><rect x="1143.3" y="819.0" width="1.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1146.3" y="830.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1145.2" y="819.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1148.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (22 samples, 0.60%)</title><rect x="1145.5" y="819.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1148.5" y="830.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (1 samples, 0.03%)</title><rect x="1148.7" y="803.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1151.7" y="814.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.03%)</title><rect x="1149.1" y="803.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1152.1" y="814.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.05%)</title><rect x="1149.4" y="803.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1152.4" y="814.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1150.0" y="803.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1153.0" y="814.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.19%)</title><rect x="1150.3" y="803.0" width="2.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1153.3" y="814.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.05%)</title><rect x="1151.6" y="787.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1154.6" y="798.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.03%)</title><rect x="1152.3" y="787.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1155.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.03%)</title><rect x="1152.6" y="819.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1155.6" y="830.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.03%)</title><rect x="1152.9" y="819.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1155.9" y="830.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (3 samples, 0.08%)</title><rect x="1153.2" y="819.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1156.2" y="830.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.03%)</title><rect x="1154.2" y="819.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.2" y="830.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1154.5" y="835.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1157.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.03%)</title><rect x="1154.8" y="835.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1157.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.05%)</title><rect x="1155.1" y="851.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1158.1" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1155.5" y="835.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1158.5" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.03%)</title><rect x="1155.5" y="819.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1158.5" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.03%)</title><rect x="1155.5" y="803.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1158.5" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.03%)</title><rect x="1155.5" y="787.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1158.5" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.03%)</title><rect x="1155.5" y="771.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1158.5" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.03%)</title><rect x="1155.5" y="755.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1158.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.03%)</title><rect x="1155.5" y="739.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1158.5" y="750.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (2 samples, 0.05%)</title><rect x="1155.8" y="867.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1158.8" y="878.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.03%)</title><rect x="1156.4" y="867.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1159.4" y="878.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.03%)</title><rect x="1156.7" y="867.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1159.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.03%)</title><rect x="1157.1" y="867.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1160.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.03%)</title><rect x="1157.4" y="899.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1160.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.03%)</title><rect x="1157.7" y="915.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1160.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (15 samples, 0.41%)</title><rect x="1158.0" y="915.0" width="4.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.0" y="926.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.03%)</title><rect x="1158.0" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1161.0" y="910.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1158.3" y="899.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1161.3" y="910.0"></text>
</g>
<g>
<title>jni_NewByteArray (12 samples, 0.33%)</title><rect x="1158.7" y="899.0" width="3.8" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1161.7" y="910.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.05%)</title><rect x="1159.0" y="883.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1162.0" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.08%)</title><rect x="1159.6" y="883.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.6" y="894.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.03%)</title><rect x="1160.6" y="883.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.6" y="894.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.14%)</title><rect x="1160.9" y="883.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1163.9" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.08%)</title><rect x="1161.2" y="867.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.2" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.08%)</title><rect x="1161.2" y="851.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.2" y="862.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.03%)</title><rect x="1161.2" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.2" y="846.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.05%)</title><rect x="1161.5" y="835.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.5" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.03%)</title><rect x="1162.2" y="867.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.2" y="878.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.03%)</title><rect x="1162.5" y="899.0" width="0.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1165.5" y="910.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.03%)</title><rect x="1162.8" y="915.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1165.8" y="926.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.03%)</title><rect x="1163.1" y="915.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.1" y="926.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.03%)</title><rect x="1163.5" y="931.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.5" y="942.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="1163.8" y="947.0" width="0.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1166.8" y="958.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.08%)</title><rect x="1163.8" y="931.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1166.8" y="942.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.05%)</title><rect x="1163.8" y="915.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1166.8" y="926.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.03%)</title><rect x="1164.4" y="915.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1167.4" y="926.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.03%)</title><rect x="1164.7" y="947.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1167.7" y="958.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.05%)</title><rect x="1165.1" y="947.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1168.1" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.03%)</title><rect x="1165.7" y="947.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1168.7" y="958.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.05%)</title><rect x="1166.0" y="947.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1169.0" y="958.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.03%)</title><rect x="1166.6" y="947.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.6" y="958.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.05%)</title><rect x="1167.0" y="947.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1170.0" y="958.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.03%)</title><rect x="1167.6" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.6" y="990.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.03%)</title><rect x="1167.6" y="963.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1170.6" y="974.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.03%)</title><rect x="1167.6" y="947.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1170.6" y="958.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.03%)</title><rect x="1167.6" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1170.6" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (5 samples, 0.14%)</title><rect x="1167.9" y="979.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1170.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (3 samples, 0.08%)</title><rect x="1168.6" y="963.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1171.6" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.05%)</title><rect x="1168.6" y="947.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1171.6" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.05%)</title><rect x="1168.6" y="931.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1171.6" y="942.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.05%)</title><rect x="1168.6" y="915.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1171.6" y="926.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="1169.2" y="947.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1172.2" y="958.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1169.2" y="931.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1172.2" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1169.2" y="915.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1172.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (4 samples, 0.11%)</title><rect x="1169.5" y="995.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.5" y="1006.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.11%)</title><rect x="1169.5" y="979.0" width="1.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1172.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="1169.5" y="963.0" width="1.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1172.5" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.11%)</title><rect x="1169.5" y="947.0" width="1.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1172.5" y="958.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.03%)</title><rect x="1169.8" y="931.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1172.8" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (2 samples, 0.05%)</title><rect x="1170.2" y="931.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1173.2" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (3 samples, 0.08%)</title><rect x="1170.8" y="1011.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1173.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="1170.8" y="995.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1173.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.05%)</title><rect x="1170.8" y="979.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1173.8" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1170.8" y="963.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1173.8" y="974.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.05%)</title><rect x="1170.8" y="947.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1173.8" y="958.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1170.8" y="931.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1173.8" y="942.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.03%)</title><rect x="1170.8" y="915.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1173.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (1 samples, 0.03%)</title><rect x="1171.1" y="931.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1174.1" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (1 samples, 0.03%)</title><rect x="1171.4" y="995.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (1 samples, 0.03%)</title><rect x="1171.4" y="979.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.4" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.03%)</title><rect x="1171.4" y="963.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1174.4" y="974.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1171.4" y="947.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.4" y="958.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1171.4" y="931.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1174.4" y="942.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.03%)</title><rect x="1171.4" y="915.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1174.4" y="926.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1171.4" y="899.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1174.4" y="910.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.03%)</title><rect x="1171.4" y="883.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1174.4" y="894.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.03%)</title><rect x="1171.4" y="867.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1174.4" y="878.0"></text>
</g>
<g>
<title>[tid=32600] (2 samples, 0.05%)</title><rect x="1171.8" y="1107.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1174.8" y="1118.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="1171.8" y="1091.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1174.8" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="1171.8" y="1075.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1174.8" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.05%)</title><rect x="1171.8" y="1059.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.8" y="1070.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.05%)</title><rect x="1171.8" y="1043.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1174.8" y="1054.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.05%)</title><rect x="1171.8" y="1027.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1174.8" y="1038.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.05%)</title><rect x="1171.8" y="1011.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1174.8" y="1022.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.05%)</title><rect x="1171.8" y="995.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1174.8" y="1006.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.03%)</title><rect x="1171.8" y="979.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1174.8" y="990.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.03%)</title><rect x="1171.8" y="963.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1174.8" y="974.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.03%)</title><rect x="1172.1" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1175.1" y="990.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.03%)</title><rect x="1172.1" y="963.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1175.1" y="974.0"></text>
</g>
<g>
<title>[tid=32605] (43 samples, 1.17%)</title><rect x="1172.4" y="1107.0" width="13.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1175.4" y="1118.0"></text>
</g>
<g>
<title>start_thread (43 samples, 1.17%)</title><rect x="1172.4" y="1091.0" width="13.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1175.4" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (43 samples, 1.17%)</title><rect x="1172.4" y="1075.0" width="13.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1175.4" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (43 samples, 1.17%)</title><rect x="1172.4" y="1059.0" width="13.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1175.4" y="1070.0"></text>
</g>
<g>
<title>JavaThread::run() (43 samples, 1.17%)</title><rect x="1172.4" y="1043.0" width="13.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.4" y="1054.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (43 samples, 1.17%)</title><rect x="1172.4" y="1027.0" width="13.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1175.4" y="1038.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (43 samples, 1.17%)</title><rect x="1172.4" y="1011.0" width="13.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.4" y="1022.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (43 samples, 1.17%)</title><rect x="1172.4" y="995.0" width="13.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1175.4" y="1006.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (43 samples, 1.17%)</title><rect x="1172.4" y="979.0" width="13.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.4" y="990.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (43 samples, 1.17%)</title><rect x="1172.4" y="963.0" width="13.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1175.4" y="974.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (25 samples, 0.68%)</title><rect x="1172.4" y="947.0" width="8.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1175.4" y="958.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.03%)</title><rect x="1172.4" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1175.4" y="942.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.05%)</title><rect x="1172.7" y="931.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1175.7" y="942.0"></text>
</g>
<g>
<title>Matcher::find_shared(Node*) (1 samples, 0.03%)</title><rect x="1172.7" y="915.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1175.7" y="926.0"></text>
</g>
<g>
<title>IfFalseNode::Opcode() const (1 samples, 0.03%)</title><rect x="1172.7" y="899.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1175.7" y="910.0"></text>
</g>
<g>
<title>MultiNode::match(ProjNode const*, Matcher const*) (1 samples, 0.03%)</title><rect x="1173.0" y="915.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.0" y="926.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (1 samples, 0.03%)</title><rect x="1173.4" y="931.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1176.4" y="942.0"></text>
</g>
<g>
<title>PhaseBlockLayout::reorder_traces(int) (1 samples, 0.03%)</title><rect x="1173.4" y="915.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1176.4" y="926.0"></text>
</g>
<g>
<title>Trace::fixup_blocks(PhaseCFG&amp;) (1 samples, 0.03%)</title><rect x="1173.4" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.4" y="910.0"></text>
</g>
<g>
<title>Block::num_fall_throughs() (1 samples, 0.03%)</title><rect x="1173.4" y="883.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1176.4" y="894.0"></text>
</g>
<g>
<title>MachNode::Opcode() const (1 samples, 0.03%)</title><rect x="1173.4" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1176.4" y="878.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (2 samples, 0.05%)</title><rect x="1173.7" y="931.0" width="0.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.7" y="942.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (2 samples, 0.05%)</title><rect x="1173.7" y="915.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.7" y="926.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.05%)</title><rect x="1173.7" y="899.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1176.7" y="910.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.03%)</title><rect x="1173.7" y="883.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.7" y="894.0"></text>
</g>
<g>
<title>PhaseLive::add_livein(Block*, IndexSet*) (1 samples, 0.03%)</title><rect x="1174.0" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1177.0" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (19 samples, 0.52%)</title><rect x="1174.3" y="931.0" width="6.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1177.3" y="942.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.03%)</title><rect x="1174.3" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.3" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.03%)</title><rect x="1174.6" y="915.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1177.6" y="926.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.03%)</title><rect x="1174.6" y="899.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1177.6" y="910.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1174.6" y="883.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1177.6" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (1 samples, 0.03%)</title><rect x="1175.0" y="915.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.0" y="926.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.03%)</title><rect x="1175.0" y="899.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1178.0" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (3 samples, 0.08%)</title><rect x="1175.3" y="915.0" width="0.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1178.3" y="926.0"></text>
</g>
<g>
<title>Node::replace_by(Node*) (1 samples, 0.03%)</title><rect x="1175.6" y="899.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1178.6" y="910.0"></text>
</g>
<g>
<title>loadNNode::rule() const (1 samples, 0.03%)</title><rect x="1175.9" y="899.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1178.9" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (6 samples, 0.16%)</title><rect x="1176.2" y="915.0" width="2.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1179.2" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.11%)</title><rect x="1176.6" y="899.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.6" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.03%)</title><rect x="1177.8" y="899.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.8" y="910.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.03%)</title><rect x="1177.8" y="883.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.8" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (1 samples, 0.03%)</title><rect x="1178.2" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.2" y="926.0"></text>
</g>
<g>
<title>PhiNode::out_RegMask() const (1 samples, 0.03%)</title><rect x="1178.2" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.2" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.03%)</title><rect x="1178.5" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.5" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.03%)</title><rect x="1178.5" y="899.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1181.5" y="910.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.03%)</title><rect x="1178.8" y="915.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.8" y="926.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.03%)</title><rect x="1178.8" y="899.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.8" y="910.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (2 samples, 0.05%)</title><rect x="1179.1" y="915.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1182.1" y="926.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.03%)</title><rect x="1179.4" y="899.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1182.4" y="910.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.03%)</title><rect x="1179.8" y="915.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1182.8" y="926.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.03%)</title><rect x="1179.8" y="899.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1182.8" y="910.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="1179.8" y="883.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1182.8" y="894.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.03%)</title><rect x="1180.1" y="915.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.1" y="926.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.03%)</title><rect x="1180.1" y="899.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1183.1" y="910.0"></text>
</g>
<g>
<title>Compile::Optimize() (11 samples, 0.30%)</title><rect x="1180.4" y="947.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1183.4" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.05%)</title><rect x="1180.4" y="931.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1183.4" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.05%)</title><rect x="1180.4" y="915.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.4" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::complete_connection_graph(GrowableArray&lt;PointsToNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;JavaObjectNode*&gt;&amp;, GrowableArray&lt;FieldNode*&gt;&amp;) (1 samples, 0.03%)</title><rect x="1180.7" y="899.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1183.7" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (4 samples, 0.11%)</title><rect x="1181.0" y="931.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1184.0" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.03%)</title><rect x="1181.0" y="915.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.0" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_early_ctrl(Node*) (1 samples, 0.03%)</title><rect x="1181.0" y="899.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.0" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (3 samples, 0.08%)</title><rect x="1181.4" y="915.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1184.4" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.08%)</title><rect x="1181.4" y="899.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.4" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.05%)</title><rect x="1181.4" y="883.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1184.4" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.03%)</title><rect x="1181.4" y="867.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.4" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1181.4" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.4" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(unsigned int) const (1 samples, 0.03%)</title><rect x="1181.4" y="835.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.4" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.03%)</title><rect x="1181.7" y="867.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.7" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.03%)</title><rect x="1182.0" y="883.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.0" y="894.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.08%)</title><rect x="1182.3" y="931.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.3" y="942.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.05%)</title><rect x="1182.3" y="915.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.3" y="926.0"></text>
</g>
<g>
<title>MergeMemNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1182.3" y="899.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.3" y="910.0"></text>
</g>
<g>
<title>PhiNode::Ideal(PhaseGVN*, bool) (1 samples, 0.03%)</title><rect x="1182.6" y="899.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.6" y="910.0"></text>
</g>
<g>
<title>Type::singleton() const (1 samples, 0.03%)</title><rect x="1183.0" y="915.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.0" y="926.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.05%)</title><rect x="1183.3" y="931.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.3" y="942.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.05%)</title><rect x="1183.3" y="915.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.3" y="926.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.05%)</title><rect x="1183.3" y="899.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.3" y="910.0"></text>
</g>
<g>
<title>AddPNode::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1183.3" y="883.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.3" y="894.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1183.3" y="867.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.3" y="878.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1183.3" y="851.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.3" y="862.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.03%)</title><rect x="1183.6" y="883.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.6" y="894.0"></text>
</g>
<g>
<title>Compile::inline_string_calls(bool) (1 samples, 0.03%)</title><rect x="1183.9" y="947.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.9" y="958.0"></text>
</g>
<g>
<title>PhaseStringOpts::PhaseStringOpts(PhaseGVN*, Unique_Node_List*) (1 samples, 0.03%)</title><rect x="1183.9" y="931.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.9" y="942.0"></text>
</g>
<g>
<title>PhaseStringOpts::replace_string_concat(StringConcat*) (1 samples, 0.03%)</title><rect x="1183.9" y="915.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.9" y="926.0"></text>
</g>
<g>
<title>PhaseStringOpts::int_getChars(GraphKit&amp;, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.03%)</title><rect x="1183.9" y="899.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.9" y="910.0"></text>
</g>
<g>
<title>PhaseStringOpts::getChars(GraphKit&amp;, Node*, Node*, BasicType, Node*, Node*, Node*, int) (1 samples, 0.03%)</title><rect x="1183.9" y="883.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.9" y="894.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1183.9" y="867.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.9" y="878.0"></text>
</g>
<g>
<title>transform_int_divide(PhaseGVN*, Node*, int) (1 samples, 0.03%)</title><rect x="1183.9" y="851.0" width="0.3" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1186.9" y="862.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1183.9" y="835.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.9" y="846.0"></text>
</g>
<g>
<title>MulNode::Identity(PhaseGVN*) (1 samples, 0.03%)</title><rect x="1183.9" y="819.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.9" y="830.0"></text>
</g>
<g>
<title>TypeLong::xmeet(Type const*) const (1 samples, 0.03%)</title><rect x="1183.9" y="803.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.9" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.14%)</title><rect x="1184.2" y="947.0" width="1.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.2" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.14%)</title><rect x="1184.2" y="931.0" width="1.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.2" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.14%)</title><rect x="1184.2" y="915.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.2" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.14%)</title><rect x="1184.2" y="899.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.14%)</title><rect x="1184.2" y="883.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1187.2" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.14%)</title><rect x="1184.2" y="867.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.2" y="878.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.14%)</title><rect x="1184.2" y="851.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.2" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.14%)</title><rect x="1184.2" y="835.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.2" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.14%)</title><rect x="1184.2" y="819.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.14%)</title><rect x="1184.2" y="803.0" width="1.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.2" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.14%)</title><rect x="1184.2" y="787.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.2" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.14%)</title><rect x="1184.2" y="771.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.2" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.14%)</title><rect x="1184.2" y="755.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.2" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.14%)</title><rect x="1184.2" y="739.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.14%)</title><rect x="1184.2" y="723.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.14%)</title><rect x="1184.2" y="707.0" width="1.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1187.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.14%)</title><rect x="1184.2" y="691.0" width="1.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (5 samples, 0.14%)</title><rect x="1184.2" y="675.0" width="1.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1187.2" y="686.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.03%)</title><rect x="1184.2" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.2" y="670.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.03%)</title><rect x="1184.2" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.2" y="654.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.03%)</title><rect x="1184.2" y="627.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.2" y="638.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.03%)</title><rect x="1184.2" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.2" y="622.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.03%)</title><rect x="1184.2" y="595.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.2" y="606.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1184.2" y="579.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.2" y="590.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.03%)</title><rect x="1184.2" y="563.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.2" y="574.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.03%)</title><rect x="1184.2" y="547.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.2" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.08%)</title><rect x="1184.6" y="659.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.6" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.08%)</title><rect x="1184.6" y="643.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.08%)</title><rect x="1184.6" y="627.0" width="0.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.6" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.08%)</title><rect x="1184.6" y="611.0" width="0.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.6" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.08%)</title><rect x="1184.6" y="595.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.6" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.08%)</title><rect x="1184.6" y="579.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.08%)</title><rect x="1184.6" y="563.0" width="0.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1187.6" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.08%)</title><rect x="1184.6" y="547.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.08%)</title><rect x="1184.6" y="531.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.6" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.08%)</title><rect x="1184.6" y="515.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.6" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.08%)</title><rect x="1184.6" y="499.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1187.6" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1184.6" y="483.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1184.6" y="467.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.6" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1184.6" y="451.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1184.6" y="435.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.6" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1184.6" y="419.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.6" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1184.6" y="403.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.6" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1184.6" y="387.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1184.6" y="371.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.6" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1184.6" y="355.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.6" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1184.6" y="339.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1187.6" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1184.6" y="323.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.6" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1184.6" y="307.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.6" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1184.6" y="291.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.6" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1184.6" y="275.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1184.6" y="259.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1187.6" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1184.6" y="243.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.6" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1184.6" y="227.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.6" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1184.6" y="211.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.6" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1184.6" y="195.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.6" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1184.6" y="179.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.6" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1184.6" y="163.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.6" y="174.0"></text>
</g>
<g>
<title>Parse::do_exits() (1 samples, 0.03%)</title><rect x="1184.6" y="147.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.6" y="158.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1184.6" y="131.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1187.6" y="142.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.03%)</title><rect x="1184.6" y="115.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.6" y="126.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.05%)</title><rect x="1184.9" y="483.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1187.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.03%)</title><rect x="1184.9" y="467.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="478.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.03%)</title><rect x="1184.9" y="451.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1187.9" y="462.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.03%)</title><rect x="1184.9" y="435.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1187.9" y="446.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.03%)</title><rect x="1184.9" y="419.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.9" y="430.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.03%)</title><rect x="1184.9" y="403.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1187.9" y="414.0"></text>
</g>
<g>
<title>Dict::doubhash() (1 samples, 0.03%)</title><rect x="1184.9" y="387.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.9" y="398.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.03%)</title><rect x="1185.2" y="467.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.2" y="478.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="1185.2" y="451.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.2" y="462.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index_impl(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="1185.2" y="435.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.2" y="446.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.03%)</title><rect x="1185.2" y="419.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.2" y="430.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1185.2" y="403.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.2" y="414.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.03%)</title><rect x="1185.2" y="387.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.2" y="398.0"></text>
</g>
<g>
<title>SystemDictionary::find_constrained_instance_or_array_klass(Symbol*, Handle, Thread*) (1 samples, 0.03%)</title><rect x="1185.2" y="371.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.2" y="382.0"></text>
</g>
<g>
<title>TypeArrayKlass::array_klass_impl(bool, int, Thread*) (1 samples, 0.03%)</title><rect x="1185.2" y="355.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.2" y="366.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.5" y="659.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.5" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.5" y="643.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.5" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1185.5" y="627.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1185.5" y="611.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1185.5" y="595.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1185.5" y="579.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1185.5" y="563.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.5" y="547.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.5" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1185.5" y="531.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1185.5" y="515.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1185.5" y="499.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1185.5" y="483.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1185.5" y="467.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.5" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.5" y="451.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.5" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1185.5" y="435.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1185.5" y="419.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1185.5" y="403.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1185.5" y="387.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1185.5" y="371.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.5" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.5" y="355.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.5" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1185.5" y="339.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1185.5" y="323.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1185.5" y="307.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1185.5" y="291.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.5" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.03%)</title><rect x="1185.5" y="275.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.5" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.03%)</title><rect x="1185.5" y="259.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.5" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.03%)</title><rect x="1185.5" y="243.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.5" y="254.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.03%)</title><rect x="1185.5" y="227.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.03%)</title><rect x="1185.5" y="211.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.5" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.03%)</title><rect x="1185.5" y="195.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.5" y="206.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (1 samples, 0.03%)</title><rect x="1185.5" y="179.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.5" y="190.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const**) (1 samples, 0.03%)</title><rect x="1185.5" y="163.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.5" y="174.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.03%)</title><rect x="1185.5" y="147.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="158.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.03%)</title><rect x="1185.5" y="131.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.5" y="142.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.03%)</title><rect x="1185.5" y="115.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.5" y="126.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.03%)</title><rect x="1185.5" y="99.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.5" y="110.0"></text>
</g>
<g>
<title>MethodLiveness::BasicBlock::get_liveness_at(ciMethod*, int) (1 samples, 0.03%)</title><rect x="1185.5" y="83.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.5" y="94.0"></text>
</g>
<g>
<title>ResourceBitMap::ResourceBitMap(unsigned long) (1 samples, 0.03%)</title><rect x="1185.5" y="67.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="78.0"></text>
</g>
<g>
<title>resource_allocate_bytes(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.03%)</title><rect x="1185.5" y="51.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.5" y="62.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.03%)</title><rect x="1185.5" y="35.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1188.5" y="46.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.03%)</title><rect x="1185.8" y="947.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.8" y="958.0"></text>
</g>
<g>
<title>Compile::identify_useful_nodes(Unique_Node_List&amp;) (1 samples, 0.03%)</title><rect x="1185.8" y="931.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.8" y="942.0"></text>
</g>
<g>
<title>[tid=32606] (2 samples, 0.05%)</title><rect x="1186.2" y="1107.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1189.2" y="1118.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.05%)</title><rect x="1186.2" y="1091.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1189.2" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.05%)</title><rect x="1186.2" y="1075.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1189.2" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.05%)</title><rect x="1186.2" y="1059.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.2" y="1070.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.05%)</title><rect x="1186.2" y="1043.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.2" y="1054.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.05%)</title><rect x="1186.2" y="1027.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.2" y="1038.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.05%)</title><rect x="1186.2" y="1011.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.2" y="1022.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.05%)</title><rect x="1186.2" y="995.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.2" y="1006.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.05%)</title><rect x="1186.2" y="979.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.2" y="990.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.05%)</title><rect x="1186.2" y="963.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.2" y="974.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.05%)</title><rect x="1186.2" y="947.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.2" y="958.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.05%)</title><rect x="1186.2" y="931.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="942.0"></text>
</g>
<g>
<title>Compilation::build_hir() (1 samples, 0.03%)</title><rect x="1186.2" y="915.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="926.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.03%)</title><rect x="1186.2" y="899.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.2" y="910.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.03%)</title><rect x="1186.2" y="883.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.2" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.03%)</title><rect x="1186.2" y="867.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.2" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.03%)</title><rect x="1186.2" y="851.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.2" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.03%)</title><rect x="1186.2" y="835.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.2" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.03%)</title><rect x="1186.2" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="830.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.03%)</title><rect x="1186.2" y="803.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.2" y="814.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1186.2" y="787.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.2" y="798.0"></text>
</g>
<g>
<title>ciObjectFactory::get_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1186.2" y="771.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.2" y="782.0"></text>
</g>
<g>
<title>ciObjectFactory::create_new_metadata(Metadata*) (1 samples, 0.03%)</title><rect x="1186.2" y="755.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.2" y="766.0"></text>
</g>
<g>
<title>ciMethod::ciMethod(methodHandle const&amp;, ciInstanceKlass*) (1 samples, 0.03%)</title><rect x="1186.2" y="739.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.2" y="750.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (1 samples, 0.03%)</title><rect x="1186.5" y="915.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.5" y="926.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (1 samples, 0.03%)</title><rect x="1186.5" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.5" y="910.0"></text>
</g>
<g>
<title>LinearScan::allocate_registers() (1 samples, 0.03%)</title><rect x="1186.5" y="883.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.5" y="894.0"></text>
</g>
<g>
<title>IntervalWalker::walk_to(int) (1 samples, 0.03%)</title><rect x="1186.5" y="867.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="878.0"></text>
</g>
<g>
<title>[tid=32610] (4 samples, 0.11%)</title><rect x="1186.8" y="1107.0" width="1.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1189.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1186.8" y="1091.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1189.8" y="1102.0"></text>
</g>
<g>
<title>WatcherThread::~WatcherThread() (1 samples, 0.03%)</title><rect x="1186.8" y="1075.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1186.8" y="1059.0" width="0.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1189.8" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.03%)</title><rect x="1186.8" y="1043.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1189.8" y="1054.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.03%)</title><rect x="1186.8" y="1027.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1189.8" y="1038.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.05%)</title><rect x="1187.1" y="1091.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1190.1" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.03%)</title><rect x="1187.4" y="1075.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1190.4" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.03%)</title><rect x="1187.4" y="1059.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1190.4" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.03%)</title><rect x="1187.4" y="1043.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1190.4" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.03%)</title><rect x="1187.4" y="1027.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1190.4" y="1038.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.03%)</title><rect x="1187.4" y="1011.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1190.4" y="1022.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.03%)</title><rect x="1187.4" y="995.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1190.4" y="1006.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1187.8" y="1091.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1190.8" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="1187.8" y="1075.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1190.8" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="1187.8" y="1059.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.8" y="1070.0"></text>
</g>
<g>
<title>WatcherThread::run() (1 samples, 0.03%)</title><rect x="1187.8" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.8" y="1054.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.03%)</title><rect x="1187.8" y="1027.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.8" y="1038.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.03%)</title><rect x="1187.8" y="1011.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.8" y="1022.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.03%)</title><rect x="1187.8" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.8" y="1006.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.03%)</title><rect x="1187.8" y="979.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1190.8" y="990.0"></text>
</g>
<g>
<title>[tid=32699] (1 samples, 0.03%)</title><rect x="1188.1" y="1107.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1191.1" y="1118.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1188.1" y="1091.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.1" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="1188.1" y="1075.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1191.1" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="1188.1" y="1059.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.1" y="1070.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.03%)</title><rect x="1188.1" y="1043.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.1" y="1054.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1188.1" y="1027.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1191.1" y="1038.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="1188.1" y="1011.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.1" y="1022.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1188.1" y="995.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1191.1" y="1006.0"></text>
</g>
<g>
<title>[tid=32700] (1 samples, 0.03%)</title><rect x="1188.4" y="1107.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1191.4" y="1118.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1188.4" y="1091.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1191.4" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="1188.4" y="1075.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1191.4" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="1188.4" y="1059.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1191.4" y="1070.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.03%)</title><rect x="1188.4" y="1043.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.4" y="1054.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1188.4" y="1027.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.4" y="1038.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="1188.4" y="1011.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="1022.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1188.4" y="995.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1191.4" y="1006.0"></text>
</g>
<g>
<title>[tid=32703] (1 samples, 0.03%)</title><rect x="1188.7" y="1107.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1191.7" y="1118.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1188.7" y="1091.0" width="0.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1191.7" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="1188.7" y="1075.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1191.7" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="1188.7" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1191.7" y="1070.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.03%)</title><rect x="1188.7" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="1054.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1188.7" y="1027.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.7" y="1038.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="1188.7" y="1011.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1191.7" y="1022.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1188.7" y="995.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1191.7" y="1006.0"></text>
</g>
<g>
<title>[tid=32704] (1 samples, 0.03%)</title><rect x="1189.0" y="1107.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1192.0" y="1118.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1189.0" y="1091.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1192.0" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="1189.0" y="1075.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1192.0" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="1189.0" y="1059.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.0" y="1070.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.03%)</title><rect x="1189.0" y="1043.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1192.0" y="1054.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1189.0" y="1027.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.0" y="1038.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="1189.0" y="1011.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.0" y="1022.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1189.0" y="995.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.0" y="1006.0"></text>
</g>
<g>
<title>[tid=32707] (1 samples, 0.03%)</title><rect x="1189.4" y="1107.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1192.4" y="1118.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1189.4" y="1091.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.4" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="1189.4" y="1075.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1192.4" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="1189.4" y="1059.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.4" y="1070.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.03%)</title><rect x="1189.4" y="1043.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.4" y="1054.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1189.4" y="1027.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.4" y="1038.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="1189.4" y="1011.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.4" y="1022.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1189.4" y="995.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1192.4" y="1006.0"></text>
</g>
<g>
<title>[tid=32708] (1 samples, 0.03%)</title><rect x="1189.7" y="1107.0" width="0.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1192.7" y="1118.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.03%)</title><rect x="1189.7" y="1091.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1192.7" y="1102.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.03%)</title><rect x="1189.7" y="1075.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1192.7" y="1086.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.03%)</title><rect x="1189.7" y="1059.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="1070.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.03%)</title><rect x="1189.7" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.7" y="1054.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.03%)</title><rect x="1189.7" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.7" y="1038.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.03%)</title><rect x="1189.7" y="1011.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.7" y="1022.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.03%)</title><rect x="1189.7" y="995.0" width="0.3" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1192.7" y="1006.0"></text>
</g>
</g>
</svg>
