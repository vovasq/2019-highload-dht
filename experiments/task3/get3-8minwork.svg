<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1302" onload="init(evt)" viewBox="0 0 1200 1302" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1285"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1285"> </text>
<g id="frames">
<g>
<title>all (4,476 samples, 100.00%)</title><rect x="10.0" y="1251.0" width="1180.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="13.0" y="1262.0">all</text>
</g>
<g>
<title>[NIO Selector #1 tid=794] (300 samples, 6.70%)</title><rect x="10.0" y="1235.0" width="79.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="13.0" y="1246.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (300 samples, 6.70%)</title><rect x="10.0" y="1219.0" width="79.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="1230.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.02%)</title><rect x="10.0" y="1203.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="13.0" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (121 samples, 2.70%)</title><rect x="10.3" y="1203.0" width="31.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.3" y="1214.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.07%)</title><rect x="11.6" y="1187.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="14.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.07%)</title><rect x="11.6" y="1171.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="14.6" y="1182.0"></text>
</g>
<g>
<title>sun/misc/Unsafe.getInt (1 samples, 0.02%)</title><rect x="12.1" y="1155.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.1" y="1166.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.getInt (1 samples, 0.02%)</title><rect x="12.1" y="1139.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="15.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (113 samples, 2.52%)</title><rect x="12.4" y="1187.0" width="29.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.4" y="1198.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.04%)</title><rect x="14.2" y="1171.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="17.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (93 samples, 2.08%)</title><rect x="14.7" y="1171.0" width="24.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="17.7" y="1182.0">[..</text>
</g>
<g>
<title>__libc_disable_asynccancel (6 samples, 0.13%)</title><rect x="14.7" y="1155.0" width="1.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="17.7" y="1166.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.02%)</title><rect x="16.3" y="1155.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="19.3" y="1166.0"></text>
</g>
<g>
<title>epoll_wait (86 samples, 1.92%)</title><rect x="16.6" y="1155.0" width="22.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.6" y="1166.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (62 samples, 1.39%)</title><rect x="22.9" y="1139.0" width="16.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="25.9" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.02%)</title><rect x="22.9" y="1123.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="25.9" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 1.36%)</title><rect x="23.2" y="1123.0" width="16.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="26.2" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (61 samples, 1.36%)</title><rect x="23.2" y="1107.0" width="16.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="26.2" y="1118.0"></text>
</g>
<g>
<title>do_epoll_wait (59 samples, 1.32%)</title><rect x="23.7" y="1091.0" width="15.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="26.7" y="1102.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="24.0" y="1075.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="27.0" y="1086.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="24.0" y="1059.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="27.0" y="1070.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="24.0" y="1043.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="27.0" y="1054.0"></text>
</g>
<g>
<title>ep_poll (50 samples, 1.12%)</title><rect x="24.2" y="1075.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="27.2" y="1086.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (22 samples, 0.49%)</title><rect x="27.1" y="1059.0" width="5.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="30.1" y="1070.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.18%)</title><rect x="30.3" y="1043.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="33.3" y="1054.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="30.8" y="1027.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="33.8" y="1038.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="30.8" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="33.8" y="1022.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="30.8" y="995.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="33.8" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="30.8" y="979.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="33.8" y="990.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="30.8" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="33.8" y="974.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="30.8" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="33.8" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="30.8" y="931.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="33.8" y="942.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.11%)</title><rect x="31.1" y="1027.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="34.1" y="1038.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.09%)</title><rect x="31.1" y="1011.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.1" y="1022.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="31.6" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="34.6" y="1006.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="31.6" y="979.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.6" y="990.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="31.9" y="995.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="34.9" y="1006.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="32.1" y="1011.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="35.1" y="1022.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.04%)</title><rect x="32.4" y="1043.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="35.4" y="1054.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="32.9" y="1059.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="35.9" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (16 samples, 0.36%)</title><rect x="33.2" y="1059.0" width="4.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.2" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (16 samples, 0.36%)</title><rect x="33.2" y="1043.0" width="4.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="36.2" y="1054.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.36%)</title><rect x="33.2" y="1027.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="36.2" y="1038.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.36%)</title><rect x="33.2" y="1011.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="36.2" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.34%)</title><rect x="33.5" y="995.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="36.5" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="36.9" y="979.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="39.9" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="36.9" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="39.9" y="974.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="36.9" y="947.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="39.9" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="36.9" y="931.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="39.9" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="36.9" y="915.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="39.9" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="36.9" y="899.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="39.9" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="36.9" y="883.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.9" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.02%)</title><rect x="37.4" y="1075.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="40.4" y="1086.0"></text>
</g>
<g>
<title>fput (6 samples, 0.13%)</title><rect x="37.7" y="1075.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="40.7" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="39.3" y="1171.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="42.3" y="1182.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="39.5" y="1171.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="42.5" y="1182.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="39.8" y="1171.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="42.8" y="1182.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="40.1" y="1171.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="43.1" y="1182.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="40.1" y="1155.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="43.1" y="1166.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="40.1" y="1139.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="43.1" y="1150.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="40.1" y="1123.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="43.1" y="1134.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="40.1" y="1107.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="43.1" y="1118.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="40.1" y="1091.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="43.1" y="1102.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="40.1" y="1075.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="43.1" y="1086.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.11%)</title><rect x="40.3" y="1171.0" width="1.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="43.3" y="1182.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="40.8" y="1155.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="43.8" y="1166.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.04%)</title><rect x="41.6" y="1171.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="44.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (178 samples, 3.98%)</title><rect x="42.2" y="1203.0" width="46.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.2" y="1214.0">one/..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="42.4" y="1187.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="45.4" y="1198.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (175 samples, 3.91%)</title><rect x="43.0" y="1187.0" width="46.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="46.0" y="1198.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (118 samples, 2.64%)</title><rect x="43.0" y="1171.0" width="31.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.0" y="1182.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (92 samples, 2.06%)</title><rect x="44.5" y="1155.0" width="24.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.5" y="1166.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (91 samples, 2.03%)</title><rect x="44.8" y="1139.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.8" y="1150.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="44.8" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="47.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="44.8" y="1107.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="47.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="44.8" y="1091.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="47.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="44.8" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="47.8" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (90 samples, 2.01%)</title><rect x="45.1" y="1123.0" width="23.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="48.1" y="1134.0">r..</text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.13%)</title><rect x="45.3" y="1107.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="48.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.07%)</title><rect x="45.6" y="1091.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="48.6" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.02%)</title><rect x="45.9" y="1075.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="48.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="46.1" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="49.1" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="46.4" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.4" y="1102.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="46.6" y="1075.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="49.6" y="1086.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="46.6" y="1059.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="49.6" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="46.6" y="1043.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="49.6" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="46.6" y="1027.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="49.6" y="1038.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="46.6" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="49.6" y="1022.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="46.6" y="995.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="49.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="46.6" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="49.6" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="46.9" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="49.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="46.9" y="1091.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="49.9" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="46.9" y="1075.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="49.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="46.9" y="1059.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="49.9" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (81 samples, 1.81%)</title><rect x="47.4" y="1107.0" width="21.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="50.4" y="1118.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.20%)</title><rect x="47.4" y="1091.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="50.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="48.0" y="1075.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="51.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="48.0" y="1059.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.0" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="48.2" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="51.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="48.2" y="1059.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="51.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="48.2" y="1043.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.09%)</title><rect x="48.8" y="1075.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="51.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.09%)</title><rect x="48.8" y="1059.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="51.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.09%)</title><rect x="48.8" y="1043.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.09%)</title><rect x="48.8" y="1027.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="51.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (72 samples, 1.61%)</title><rect x="49.8" y="1091.0" width="19.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="52.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (72 samples, 1.61%)</title><rect x="49.8" y="1075.0" width="19.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="52.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (72 samples, 1.61%)</title><rect x="49.8" y="1059.0" width="19.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="52.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (72 samples, 1.61%)</title><rect x="49.8" y="1043.0" width="19.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="52.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (72 samples, 1.61%)</title><rect x="49.8" y="1027.0" width="19.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (72 samples, 1.61%)</title><rect x="49.8" y="1011.0" width="19.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (66 samples, 1.47%)</title><rect x="50.3" y="995.0" width="17.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="53.3" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="50.3" y="979.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="53.3" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="50.3" y="963.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="53.3" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (65 samples, 1.45%)</title><rect x="50.6" y="979.0" width="17.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="53.6" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (65 samples, 1.45%)</title><rect x="50.6" y="963.0" width="17.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.6" y="974.0"></text>
</g>
<g>
<title>Parker::unpark() (4 samples, 0.09%)</title><rect x="51.1" y="947.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="54.1" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="52.2" y="947.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="55.2" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="52.4" y="947.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="55.4" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (14 samples, 0.31%)</title><rect x="53.0" y="947.0" width="3.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="56.0" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="54.0" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="57.0" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="54.3" y="931.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="57.3" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="54.6" y="931.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.6" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="55.1" y="931.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="58.1" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="55.3" y="931.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="58.3" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="55.9" y="931.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="58.9" y="942.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="56.1" y="931.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="59.1" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="56.7" y="947.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="59.7" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="56.9" y="931.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="59.9" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="56.9" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="59.9" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="56.9" y="899.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="59.9" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="56.9" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="59.9" y="894.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="56.9" y="867.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="59.9" y="878.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="56.9" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="59.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="56.9" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.9" y="846.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (40 samples, 0.89%)</title><rect x="57.2" y="947.0" width="10.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="60.2" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 0.80%)</title><rect x="58.2" y="931.0" width="9.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.2" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.80%)</title><rect x="58.2" y="915.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="61.2" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (33 samples, 0.74%)</title><rect x="58.8" y="899.0" width="8.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="61.8" y="910.0"></text>
</g>
<g>
<title>do_futex (33 samples, 0.74%)</title><rect x="58.8" y="883.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="61.8" y="894.0"></text>
</g>
<g>
<title>futex_wake (32 samples, 0.71%)</title><rect x="58.8" y="867.0" width="8.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="61.8" y="878.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="59.3" y="851.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="62.3" y="862.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (1 samples, 0.02%)</title><rect x="59.3" y="835.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="62.3" y="846.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="59.6" y="851.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.6" y="862.0"></text>
</g>
<g>
<title>wake_up_q (28 samples, 0.63%)</title><rect x="59.8" y="851.0" width="7.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="62.8" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (28 samples, 0.63%)</title><rect x="59.8" y="835.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.8" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (28 samples, 0.63%)</title><rect x="59.8" y="819.0" width="7.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="62.8" y="830.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="67.2" y="867.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="70.2" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="67.5" y="899.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="70.5" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.02%)</title><rect x="67.7" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="70.7" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="67.7" y="979.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="70.7" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="67.7" y="963.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="70.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.07%)</title><rect x="68.0" y="995.0" width="0.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="71.0" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (10 samples, 0.22%)</title><rect x="68.8" y="1155.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="71.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.18%)</title><rect x="69.1" y="1139.0" width="2.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="72.1" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (8 samples, 0.18%)</title><rect x="69.1" y="1123.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="72.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.02%)</title><rect x="71.2" y="1139.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="71.2" y="1123.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="74.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.16%)</title><rect x="71.4" y="1155.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="74.4" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.09%)</title><rect x="72.2" y="1139.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="75.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="72.5" y="1123.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="75.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="72.7" y="1107.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="72.7" y="1091.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="75.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.04%)</title><rect x="72.7" y="1075.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="75.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="73.0" y="1059.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="76.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="73.3" y="1155.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="73.5" y="1139.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="76.5" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (57 samples, 1.27%)</title><rect x="74.1" y="1171.0" width="15.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="77.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (57 samples, 1.27%)</title><rect x="74.1" y="1155.0" width="15.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.1" y="1166.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="75.4" y="1139.0" width="0.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="78.4" y="1150.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="75.6" y="1139.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="78.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.22%)</title><rect x="75.6" y="1123.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="78.6" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.18%)</title><rect x="75.6" y="1107.0" width="2.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="78.6" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="75.6" y="1091.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="78.6" y="1102.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="76.2" y="1091.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="79.2" y="1102.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.11%)</title><rect x="76.4" y="1091.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="79.4" y="1102.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="77.2" y="1075.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="80.2" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.02%)</title><rect x="77.5" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="80.5" y="1086.0"></text>
</g>
<g>
<title>recv (2 samples, 0.04%)</title><rect x="77.8" y="1107.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="80.8" y="1118.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="78.3" y="1139.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="81.3" y="1150.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="78.3" y="1123.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="81.3" y="1134.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="78.3" y="1107.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="81.3" y="1118.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="78.3" y="1091.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="81.3" y="1102.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="78.3" y="1075.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="81.3" y="1086.0"></text>
</g>
<g>
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="78.3" y="1059.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="81.3" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="78.3" y="1043.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="81.3" y="1054.0"></text>
</g>
<g>
<title>recv (40 samples, 0.89%)</title><rect x="78.5" y="1139.0" width="10.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="81.5" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.87%)</title><rect x="78.8" y="1123.0" width="10.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="81.8" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.02%)</title><rect x="78.8" y="1107.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="81.8" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.85%)</title><rect x="79.1" y="1107.0" width="10.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="82.1" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (37 samples, 0.83%)</title><rect x="79.3" y="1091.0" width="9.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="82.3" y="1102.0"></text>
</g>
<g>
<title>__sys_recvfrom (34 samples, 0.76%)</title><rect x="79.3" y="1075.0" width="9.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="82.3" y="1086.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="79.3" y="1059.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="82.3" y="1070.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="79.6" y="1059.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="82.6" y="1070.0"></text>
</g>
<g>
<title>sock_recvmsg (28 samples, 0.63%)</title><rect x="79.9" y="1059.0" width="7.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="82.9" y="1070.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="80.4" y="1043.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="83.4" y="1054.0"></text>
</g>
<g>
<title>inet_recvmsg (19 samples, 0.42%)</title><rect x="80.7" y="1043.0" width="5.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="83.7" y="1054.0"></text>
</g>
<g>
<title>tcp_recvmsg (18 samples, 0.40%)</title><rect x="80.9" y="1027.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="83.9" y="1038.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.09%)</title><rect x="82.2" y="1011.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="85.2" y="1022.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.09%)</title><rect x="82.2" y="995.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="85.2" y="1006.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="82.2" y="979.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.2" y="990.0"></text>
</g>
<g>
<title>sock_rfree (3 samples, 0.07%)</title><rect x="82.5" y="979.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="85.5" y="990.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="83.3" y="1011.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="86.3" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="83.6" y="1011.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="86.6" y="1022.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (5 samples, 0.11%)</title><rect x="83.8" y="1011.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="86.8" y="1022.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.07%)</title><rect x="83.8" y="995.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="86.8" y="1006.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.07%)</title><rect x="83.8" y="979.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="86.8" y="990.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="83.8" y="963.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="86.8" y="974.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="83.8" y="947.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="86.8" y="958.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="84.1" y="947.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="87.1" y="958.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.04%)</title><rect x="84.6" y="995.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="87.6" y="1006.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="85.1" y="1011.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.1" y="1022.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="85.1" y="995.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.1" y="1006.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="85.1" y="979.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="88.1" y="990.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.02%)</title><rect x="85.4" y="1011.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="88.4" y="1022.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.13%)</title><rect x="85.7" y="1043.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.7" y="1054.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.11%)</title><rect x="85.9" y="1027.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="88.9" y="1038.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="85.9" y="1011.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="88.9" y="1022.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.09%)</title><rect x="86.2" y="1011.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="89.2" y="1022.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.02%)</title><rect x="86.2" y="995.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="89.2" y="1006.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.07%)</title><rect x="86.5" y="995.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="89.5" y="1006.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.04%)</title><rect x="86.7" y="979.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="89.7" y="990.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="86.7" y="963.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="89.7" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="87.0" y="963.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.0" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="87.0" y="947.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="90.0" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="87.0" y="931.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.0" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="87.0" y="915.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.0" y="926.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="87.0" y="899.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="90.0" y="910.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="87.0" y="883.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.0" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="87.0" y="867.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="90.0" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.09%)</title><rect x="87.2" y="1059.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.2" y="1070.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.07%)</title><rect x="87.5" y="1043.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="90.5" y="1054.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="87.5" y="1027.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.5" y="1038.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="87.5" y="1011.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="90.5" y="1022.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="88.3" y="1075.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="91.3" y="1086.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="88.6" y="1075.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.6" y="1086.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=795] (301 samples, 6.72%)</title><rect x="89.1" y="1235.0" width="79.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="92.1" y="1246.0">[NIO Sele..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="89.1" y="1219.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="92.1" y="1230.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (300 samples, 6.70%)</title><rect x="89.4" y="1219.0" width="79.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="92.4" y="1230.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (119 samples, 2.66%)</title><rect x="89.9" y="1203.0" width="31.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="92.9" y="1214.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.07%)</title><rect x="91.5" y="1187.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="94.5" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (1 samples, 0.02%)</title><rect x="92.0" y="1171.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="95.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (110 samples, 2.46%)</title><rect x="92.3" y="1187.0" width="29.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="95.3" y="1198.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.07%)</title><rect x="94.1" y="1171.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="97.1" y="1182.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.97%)</title><rect x="94.9" y="1171.0" width="23.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="97.9" y="1182.0">[..</text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.07%)</title><rect x="94.9" y="1155.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="97.9" y="1166.0"></text>
</g>
<g>
<title>epoll_wait (85 samples, 1.90%)</title><rect x="95.7" y="1155.0" width="22.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="98.7" y="1166.0">e..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="100.7" y="1139.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.7" y="1150.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="100.7" y="1123.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="103.7" y="1134.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="100.7" y="1107.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.7" y="1118.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="100.7" y="1091.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="103.7" y="1102.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="100.7" y="1075.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="103.7" y="1086.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="100.7" y="1059.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="103.7" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="100.7" y="1043.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="103.7" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (65 samples, 1.45%)</title><rect x="101.0" y="1139.0" width="17.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="104.0" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (65 samples, 1.45%)</title><rect x="101.0" y="1123.0" width="17.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="104.0" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (64 samples, 1.43%)</title><rect x="101.0" y="1107.0" width="16.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="104.0" y="1118.0"></text>
</g>
<g>
<title>do_epoll_wait (60 samples, 1.34%)</title><rect x="101.2" y="1091.0" width="15.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="104.2" y="1102.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="101.5" y="1075.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="104.5" y="1086.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="101.5" y="1059.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="104.5" y="1070.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="101.5" y="1043.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="104.5" y="1054.0"></text>
</g>
<g>
<title>ep_poll (52 samples, 1.16%)</title><rect x="102.0" y="1075.0" width="13.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="105.0" y="1086.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (25 samples, 0.56%)</title><rect x="103.3" y="1059.0" width="6.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.3" y="1070.0"></text>
</g>
<g>
<title>ep_send_events_proc (22 samples, 0.49%)</title><rect x="104.1" y="1043.0" width="5.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="107.1" y="1054.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="104.9" y="1027.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="107.9" y="1038.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (15 samples, 0.34%)</title><rect x="105.2" y="1027.0" width="3.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="108.2" y="1038.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.25%)</title><rect x="106.0" y="1011.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="109.0" y="1022.0"></text>
</g>
<g>
<title>tcp_poll (7 samples, 0.16%)</title><rect x="107.0" y="995.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="110.0" y="1006.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="108.3" y="979.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="111.3" y="990.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="108.9" y="1011.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="111.9" y="1022.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.07%)</title><rect x="109.1" y="1027.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="112.1" y="1038.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="109.9" y="1059.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.9" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (21 samples, 0.47%)</title><rect x="110.2" y="1059.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.2" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (21 samples, 0.47%)</title><rect x="110.2" y="1043.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="113.2" y="1054.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.47%)</title><rect x="110.2" y="1027.0" width="5.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="113.2" y="1038.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.47%)</title><rect x="110.2" y="1011.0" width="5.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="113.2" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.42%)</title><rect x="110.7" y="995.0" width="5.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.7" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="115.5" y="979.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="118.5" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="115.5" y="963.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="118.5" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="115.5" y="947.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="118.5" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="115.5" y="931.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="118.5" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="115.5" y="915.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="118.5" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="115.5" y="899.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="118.5" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="115.5" y="883.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="118.5" y="894.0"></text>
</g>
<g>
<title>fput (5 samples, 0.11%)</title><rect x="115.7" y="1075.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="118.7" y="1086.0"></text>
</g>
<g>
<title>fput (3 samples, 0.07%)</title><rect x="117.0" y="1091.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="120.0" y="1102.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.02%)</title><rect x="117.8" y="1107.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="120.8" y="1118.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="118.1" y="1171.0" width="0.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="121.1" y="1182.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="118.4" y="1171.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="121.4" y="1182.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="118.9" y="1171.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="121.9" y="1182.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="119.1" y="1155.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="122.1" y="1166.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="119.1" y="1139.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="122.1" y="1150.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="119.1" y="1123.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="122.1" y="1134.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="119.1" y="1107.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="122.1" y="1118.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="119.1" y="1091.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.1" y="1102.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="119.1" y="1075.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="122.1" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="119.1" y="1059.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="122.1" y="1070.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.13%)</title><rect x="119.4" y="1171.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="122.4" y="1182.0"></text>
</g>
<g>
<title>[vdso] (3 samples, 0.07%)</title><rect x="120.2" y="1155.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="123.2" y="1166.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.02%)</title><rect x="121.0" y="1171.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="124.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (179 samples, 4.00%)</title><rect x="121.3" y="1203.0" width="47.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.3" y="1214.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (176 samples, 3.93%)</title><rect x="121.5" y="1187.0" width="46.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="124.5" y="1198.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (97 samples, 2.17%)</title><rect x="121.5" y="1171.0" width="25.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="124.5" y="1182.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (79 samples, 1.76%)</title><rect x="122.8" y="1155.0" width="20.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="125.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (78 samples, 1.74%)</title><rect x="123.1" y="1139.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="126.1" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (76 samples, 1.70%)</title><rect x="123.6" y="1123.0" width="20.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="126.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.07%)</title><rect x="123.6" y="1107.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (3 samples, 0.07%)</title><rect x="123.6" y="1091.0" width="0.8" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="124.4" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="127.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="124.4" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="127.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="124.4" y="1075.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="127.4" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="124.4" y="1059.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="127.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (72 samples, 1.61%)</title><rect x="124.7" y="1107.0" width="19.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="127.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="124.7" y="1091.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="127.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="124.7" y="1075.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="127.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="124.7" y="1059.0" width="0.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="127.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="124.9" y="1091.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="127.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="124.9" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="124.9" y="1059.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="124.9" y="1043.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="127.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="124.9" y="1027.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="127.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="124.9" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="127.9" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.02%)</title><rect x="124.9" y="995.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="127.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (7 samples, 0.16%)</title><rect x="125.2" y="1091.0" width="1.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="128.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="125.7" y="1075.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="128.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="125.7" y="1059.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.7" y="1070.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="125.7" y="1043.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="128.7" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="126.0" y="1075.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="129.0" y="1086.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="126.3" y="1075.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="129.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="126.5" y="1075.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="126.8" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="129.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="126.8" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="129.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (63 samples, 1.41%)</title><rect x="127.1" y="1091.0" width="16.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="130.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (63 samples, 1.41%)</title><rect x="127.1" y="1075.0" width="16.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (63 samples, 1.41%)</title><rect x="127.1" y="1059.0" width="16.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="130.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (63 samples, 1.41%)</title><rect x="127.1" y="1043.0" width="16.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (63 samples, 1.41%)</title><rect x="127.1" y="1027.0" width="16.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="130.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (63 samples, 1.41%)</title><rect x="127.1" y="1011.0" width="16.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="130.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (59 samples, 1.32%)</title><rect x="127.3" y="995.0" width="15.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="130.3" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (59 samples, 1.32%)</title><rect x="127.3" y="979.0" width="15.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="130.3" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (59 samples, 1.32%)</title><rect x="127.3" y="963.0" width="15.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="130.3" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="127.3" y="947.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="130.3" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="127.6" y="947.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="130.6" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (10 samples, 0.22%)</title><rect x="128.1" y="947.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="131.1" y="958.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="128.6" y="931.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="131.6" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="128.9" y="931.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="131.9" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="129.2" y="931.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="132.2" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="129.4" y="931.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="132.4" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="130.0" y="931.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="133.0" y="942.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.04%)</title><rect x="130.2" y="931.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="133.2" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="130.7" y="947.0" width="1.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="133.7" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="131.8" y="947.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="134.8" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (41 samples, 0.92%)</title><rect x="132.1" y="947.0" width="10.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="135.1" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 0.74%)</title><rect x="134.2" y="931.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="137.2" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 0.74%)</title><rect x="134.2" y="915.0" width="8.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="137.2" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.71%)</title><rect x="134.4" y="899.0" width="8.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.4" y="910.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.69%)</title><rect x="134.7" y="883.0" width="8.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.7" y="894.0"></text>
</g>
<g>
<title>futex_wake (31 samples, 0.69%)</title><rect x="134.7" y="867.0" width="8.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="137.7" y="878.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="135.0" y="851.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="138.0" y="862.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.04%)</title><rect x="135.2" y="851.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="138.2" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="135.5" y="835.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.5" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="135.5" y="819.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="138.5" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="135.5" y="803.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="138.5" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="135.5" y="787.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="138.5" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="135.5" y="771.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="138.5" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="135.5" y="755.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="138.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="135.5" y="739.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="138.5" y="750.0"></text>
</g>
<g>
<title>wake_up_q (27 samples, 0.60%)</title><rect x="135.8" y="851.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="138.8" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (27 samples, 0.60%)</title><rect x="135.8" y="835.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="138.8" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 0.58%)</title><rect x="136.0" y="819.0" width="6.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="139.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (2 samples, 0.04%)</title><rect x="142.9" y="995.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="145.9" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="142.9" y="979.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="145.9" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="142.9" y="963.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="145.9" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.02%)</title><rect x="143.4" y="995.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="146.4" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.16%)</title><rect x="143.7" y="1155.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="146.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.02%)</title><rect x="143.9" y="1139.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="146.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="143.9" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="143.9" y="1107.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="146.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="143.9" y="1091.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="146.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="144.2" y="1139.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="147.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="144.2" y="1123.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="147.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.04%)</title><rect x="145.0" y="1139.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="148.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.02%)</title><rect x="145.2" y="1123.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="148.2" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="145.5" y="1155.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="145.5" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="148.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="145.5" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="148.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="145.8" y="1107.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="148.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="146.0" y="1155.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="149.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="146.0" y="1139.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="146.8" y="1123.0" width="0.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="149.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="146.8" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="149.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (1 samples, 0.02%)</title><rect x="146.8" y="1091.0" width="0.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="149.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (79 samples, 1.76%)</title><rect x="147.1" y="1171.0" width="20.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="150.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (79 samples, 1.76%)</title><rect x="147.1" y="1155.0" width="20.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="150.1" y="1166.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.02%)</title><rect x="148.7" y="1139.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="151.7" y="1150.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="148.7" y="1123.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="151.7" y="1134.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="148.7" y="1107.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="151.7" y="1118.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="148.7" y="1091.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="151.7" y="1102.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="148.7" y="1075.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="151.7" y="1086.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="148.7" y="1059.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="151.7" y="1070.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="148.7" y="1043.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="151.7" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="148.7" y="1027.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="151.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.27%)</title><rect x="148.9" y="1139.0" width="3.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="151.9" y="1150.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.27%)</title><rect x="148.9" y="1123.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="151.9" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.18%)</title><rect x="148.9" y="1107.0" width="2.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="151.9" y="1118.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="148.9" y="1091.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="151.9" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="149.2" y="1091.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="152.2" y="1102.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="149.5" y="1091.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="152.5" y="1102.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.09%)</title><rect x="150.0" y="1091.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="153.0" y="1102.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="150.0" y="1075.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="153.0" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.02%)</title><rect x="150.3" y="1075.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="153.3" y="1086.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="150.5" y="1075.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="153.5" y="1086.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="151.0" y="1107.0" width="0.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="154.0" y="1118.0"></text>
</g>
<g>
<title>recv (2 samples, 0.04%)</title><rect x="151.6" y="1107.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="154.6" y="1118.0"></text>
</g>
<g>
<title>recv (60 samples, 1.34%)</title><rect x="152.1" y="1139.0" width="15.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="155.1" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 1.18%)</title><rect x="153.9" y="1123.0" width="14.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="156.9" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 1.18%)</title><rect x="153.9" y="1107.0" width="14.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="156.9" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (51 samples, 1.14%)</title><rect x="154.5" y="1091.0" width="13.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="157.5" y="1102.0"></text>
</g>
<g>
<title>__sys_recvfrom (50 samples, 1.12%)</title><rect x="154.5" y="1075.0" width="13.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="157.5" y="1086.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="154.7" y="1059.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="157.7" y="1070.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="155.0" y="1059.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="158.0" y="1070.0"></text>
</g>
<g>
<title>sock_recvmsg (41 samples, 0.92%)</title><rect x="155.3" y="1059.0" width="10.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="158.3" y="1070.0"></text>
</g>
<g>
<title>inet_recvmsg (33 samples, 0.74%)</title><rect x="155.3" y="1043.0" width="8.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="158.3" y="1054.0"></text>
</g>
<g>
<title>tcp_recvmsg (33 samples, 0.74%)</title><rect x="155.3" y="1027.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="158.3" y="1038.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.16%)</title><rect x="157.1" y="1011.0" width="1.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="160.1" y="1022.0"></text>
</g>
<g>
<title>skb_release_all (6 samples, 0.13%)</title><rect x="157.1" y="995.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="160.1" y="1006.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="157.1" y="979.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="160.1" y="990.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="157.9" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="160.9" y="990.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.02%)</title><rect x="157.9" y="963.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="160.9" y="974.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="158.2" y="979.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="161.2" y="990.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="158.7" y="995.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="161.7" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="158.9" y="1011.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="161.9" y="1022.0"></text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.09%)</title><rect x="159.2" y="1011.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="162.2" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (3 samples, 0.07%)</title><rect x="159.5" y="995.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="162.5" y="1006.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.18%)</title><rect x="160.3" y="1011.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="163.3" y="1022.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.18%)</title><rect x="160.3" y="995.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="163.3" y="1006.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="160.3" y="979.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="163.3" y="990.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.16%)</title><rect x="160.5" y="979.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="163.5" y="990.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="160.5" y="963.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="163.5" y="974.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="160.5" y="947.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.5" y="958.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="160.8" y="947.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="163.8" y="958.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.09%)</title><rect x="161.3" y="963.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.3" y="974.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="161.3" y="947.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="164.3" y="958.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.02%)</title><rect x="162.1" y="947.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.1" y="958.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="162.4" y="1011.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="165.4" y="1022.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.09%)</title><rect x="162.9" y="1011.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="165.9" y="1022.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="162.9" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="165.9" y="1006.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.07%)</title><rect x="163.2" y="995.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="166.2" y="1006.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="163.2" y="979.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="166.2" y="990.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="163.2" y="963.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="166.2" y="974.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="163.4" y="979.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="166.4" y="990.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.18%)</title><rect x="164.0" y="1043.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="167.0" y="1054.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.02%)</title><rect x="164.2" y="1027.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="167.2" y="1038.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.13%)</title><rect x="164.5" y="1027.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="167.5" y="1038.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.13%)</title><rect x="164.5" y="1011.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="167.5" y="1022.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.13%)</title><rect x="164.5" y="995.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="167.5" y="1006.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.02%)</title><rect x="165.8" y="979.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="168.8" y="990.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.13%)</title><rect x="166.1" y="1059.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="169.1" y="1070.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.11%)</title><rect x="166.1" y="1043.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="169.1" y="1054.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.11%)</title><rect x="166.1" y="1027.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="169.1" y="1038.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="166.6" y="1011.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="169.6" y="1022.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="167.4" y="1043.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.4" y="1054.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="167.6" y="1075.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="170.6" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="167.9" y="1187.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="170.9" y="1198.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="167.9" y="1171.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="170.9" y="1182.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="168.2" y="1171.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="171.2" y="1182.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="168.2" y="1155.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="171.2" y="1166.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=798] (298 samples, 6.66%)</title><rect x="168.4" y="1235.0" width="78.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="171.4" y="1246.0">[NIO Sele..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (298 samples, 6.66%)</title><rect x="168.4" y="1219.0" width="78.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="171.4" y="1230.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.02%)</title><rect x="168.4" y="1203.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="171.4" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (114 samples, 2.55%)</title><rect x="168.7" y="1203.0" width="30.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="171.7" y="1214.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (113 samples, 2.52%)</title><rect x="169.0" y="1187.0" width="29.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="172.0" y="1198.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.02%)</title><rect x="171.9" y="1171.0" width="0.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="174.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 1.99%)</title><rect x="172.1" y="1171.0" width="23.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="175.1" y="1182.0">[..</text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.07%)</title><rect x="172.1" y="1155.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="175.1" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="172.9" y="1155.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="175.9" y="1166.0"></text>
</g>
<g>
<title>epoll_wait (85 samples, 1.90%)</title><rect x="173.2" y="1155.0" width="22.4" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="176.2" y="1166.0">e..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 1.36%)</title><rect x="179.5" y="1139.0" width="16.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="182.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (61 samples, 1.36%)</title><rect x="179.5" y="1123.0" width="16.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="182.5" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (60 samples, 1.34%)</title><rect x="179.8" y="1107.0" width="15.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="182.8" y="1118.0"></text>
</g>
<g>
<title>do_epoll_wait (59 samples, 1.32%)</title><rect x="180.0" y="1091.0" width="15.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="183.0" y="1102.0"></text>
</g>
<g>
<title>ep_poll (53 samples, 1.18%)</title><rect x="180.3" y="1075.0" width="14.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="183.3" y="1086.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (19 samples, 0.42%)</title><rect x="182.1" y="1059.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="185.1" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="184.3" y="1043.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="187.3" y="1054.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.20%)</title><rect x="184.5" y="1043.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="187.5" y="1054.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (6 samples, 0.13%)</title><rect x="184.8" y="1027.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="187.8" y="1038.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.11%)</title><rect x="184.8" y="1011.0" width="1.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="187.8" y="1022.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="185.6" y="995.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="188.6" y="1006.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.02%)</title><rect x="186.1" y="1011.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="189.1" y="1022.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.04%)</title><rect x="186.4" y="1027.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.4" y="1038.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.02%)</title><rect x="186.9" y="1043.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="189.9" y="1054.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="186.9" y="1027.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="189.9" y="1038.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="187.2" y="1059.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="190.2" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (26 samples, 0.58%)</title><rect x="187.4" y="1059.0" width="6.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="190.4" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (25 samples, 0.56%)</title><rect x="187.7" y="1043.0" width="6.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="190.7" y="1054.0"></text>
</g>
<g>
<title>schedule (24 samples, 0.54%)</title><rect x="187.9" y="1027.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="190.9" y="1038.0"></text>
</g>
<g>
<title>__schedule (24 samples, 0.54%)</title><rect x="187.9" y="1011.0" width="6.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="190.9" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 0.54%)</title><rect x="187.9" y="995.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="190.9" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (4 samples, 0.09%)</title><rect x="193.2" y="979.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="196.2" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (4 samples, 0.09%)</title><rect x="193.2" y="963.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="196.2" y="974.0"></text>
</g>
<g>
<title>irq_exit (4 samples, 0.09%)</title><rect x="193.2" y="947.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="196.2" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.09%)</title><rect x="193.2" y="931.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="196.2" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (4 samples, 0.09%)</title><rect x="193.2" y="915.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.2" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (4 samples, 0.09%)</title><rect x="193.2" y="899.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="196.2" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.09%)</title><rect x="193.2" y="883.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="196.2" y="894.0"></text>
</g>
<g>
<title>fput (5 samples, 0.11%)</title><rect x="194.3" y="1075.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="197.3" y="1086.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.11%)</title><rect x="195.6" y="1171.0" width="1.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="198.6" y="1182.0"></text>
</g>
<g>
<title>_init (4 samples, 0.09%)</title><rect x="196.9" y="1171.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="199.9" y="1182.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.07%)</title><rect x="198.0" y="1171.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="201.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (183 samples, 4.09%)</title><rect x="198.8" y="1203.0" width="48.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="201.8" y="1214.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (181 samples, 4.04%)</title><rect x="199.0" y="1187.0" width="47.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="202.0" y="1198.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (106 samples, 2.37%)</title><rect x="199.8" y="1171.0" width="28.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="202.8" y="1182.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (85 samples, 1.90%)</title><rect x="201.7" y="1155.0" width="22.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="204.7" y="1166.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (85 samples, 1.90%)</title><rect x="201.7" y="1139.0" width="22.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="204.7" y="1150.0">o..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.02%)</title><rect x="201.9" y="1123.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="204.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.02%)</title><rect x="201.9" y="1107.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="204.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="201.9" y="1091.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="204.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (83 samples, 1.85%)</title><rect x="202.2" y="1123.0" width="21.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="205.2" y="1134.0">r..</text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.11%)</title><rect x="202.2" y="1107.0" width="1.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="205.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (4 samples, 0.09%)</title><rect x="202.2" y="1091.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="205.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.04%)</title><rect x="202.4" y="1075.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="205.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="203.0" y="1075.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="206.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.02%)</title><rect x="203.2" y="1091.0" width="0.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="206.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="203.5" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="206.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="203.5" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="206.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="203.5" y="1075.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="206.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="203.5" y="1059.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (77 samples, 1.72%)</title><rect x="203.8" y="1107.0" width="20.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="206.8" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (9 samples, 0.20%)</title><rect x="203.8" y="1091.0" width="2.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="206.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.02%)</title><rect x="204.3" y="1075.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="204.3" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.3" y="1070.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="204.3" y="1043.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="207.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="204.6" y="1075.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="207.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="204.6" y="1059.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="207.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="204.8" y="1059.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="207.8" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.02%)</title><rect x="204.8" y="1043.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.8" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.07%)</title><rect x="205.1" y="1075.0" width="0.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="208.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="205.9" y="1075.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="208.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="205.9" y="1059.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="208.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="205.9" y="1043.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="208.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="205.9" y="1027.0" width="0.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (68 samples, 1.52%)</title><rect x="206.1" y="1091.0" width="18.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="209.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (68 samples, 1.52%)</title><rect x="206.1" y="1075.0" width="18.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (68 samples, 1.52%)</title><rect x="206.1" y="1059.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (68 samples, 1.52%)</title><rect x="206.1" y="1043.0" width="18.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.1" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (68 samples, 1.52%)</title><rect x="206.1" y="1027.0" width="18.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="209.1" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (68 samples, 1.52%)</title><rect x="206.1" y="1011.0" width="18.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="209.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (64 samples, 1.43%)</title><rect x="206.4" y="995.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.4" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (64 samples, 1.43%)</title><rect x="206.4" y="979.0" width="16.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="209.4" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (64 samples, 1.43%)</title><rect x="206.4" y="963.0" width="16.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="209.4" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (1 samples, 0.02%)</title><rect x="206.4" y="947.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="209.4" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="206.7" y="947.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="209.7" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (7 samples, 0.16%)</title><rect x="206.9" y="947.0" width="1.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="209.9" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (3 samples, 0.07%)</title><rect x="207.2" y="931.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="210.2" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="208.0" y="931.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="211.0" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="208.2" y="931.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="211.2" y="942.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.02%)</title><rect x="208.5" y="931.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="211.5" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="208.8" y="947.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="211.8" y="958.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (53 samples, 1.18%)</title><rect x="209.3" y="947.0" width="14.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="212.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.96%)</title><rect x="211.9" y="931.0" width="11.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="214.9" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.96%)</title><rect x="211.9" y="915.0" width="11.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="214.9" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (41 samples, 0.92%)</title><rect x="212.2" y="899.0" width="10.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="215.2" y="910.0"></text>
</g>
<g>
<title>do_futex (40 samples, 0.89%)</title><rect x="212.5" y="883.0" width="10.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="215.5" y="894.0"></text>
</g>
<g>
<title>futex_wake (39 samples, 0.87%)</title><rect x="212.5" y="867.0" width="10.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="215.5" y="878.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="212.5" y="851.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="215.5" y="862.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.02%)</title><rect x="212.7" y="851.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="215.7" y="862.0"></text>
</g>
<g>
<title>wake_q_add (1 samples, 0.02%)</title><rect x="212.7" y="835.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="215.7" y="846.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.83%)</title><rect x="213.0" y="851.0" width="9.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="216.0" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (37 samples, 0.83%)</title><rect x="213.0" y="835.0" width="9.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="216.0" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (37 samples, 0.83%)</title><rect x="213.0" y="819.0" width="9.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="216.0" y="830.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="222.5" y="803.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="225.5" y="814.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="222.5" y="787.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="225.5" y="798.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="222.5" y="771.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="225.5" y="782.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="222.5" y="755.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="225.5" y="766.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="222.5" y="739.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="225.5" y="750.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="222.5" y="723.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="225.5" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="222.5" y="707.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="225.5" y="718.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="222.7" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="225.7" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="223.0" y="899.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="226.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (1 samples, 0.02%)</title><rect x="223.3" y="995.0" width="0.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="226.3" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="223.5" y="995.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="226.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.16%)</title><rect x="224.1" y="1155.0" width="1.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="227.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="224.9" y="1139.0" width="0.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.9" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="224.9" y="1123.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="227.9" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.02%)</title><rect x="225.6" y="1139.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="228.6" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.09%)</title><rect x="225.9" y="1155.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="228.9" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="226.2" y="1139.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="229.2" y="1150.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="226.2" y="1123.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="229.2" y="1134.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="226.2" y="1107.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="229.2" y="1118.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="226.2" y="1091.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="229.2" y="1102.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="226.2" y="1075.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="229.2" y="1086.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="226.2" y="1059.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="229.2" y="1070.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="226.2" y="1043.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="229.2" y="1054.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="226.2" y="1027.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="229.2" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="226.4" y="1139.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="229.4" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="226.4" y="1123.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="229.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="226.4" y="1107.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="229.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="226.7" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="229.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="226.7" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="229.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="227.0" y="1155.0" width="0.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.0" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.07%)</title><rect x="227.0" y="1139.0" width="0.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="230.0" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (72 samples, 1.61%)</title><rect x="227.8" y="1171.0" width="18.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="230.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (72 samples, 1.61%)</title><rect x="227.8" y="1155.0" width="18.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="230.8" y="1166.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.34%)</title><rect x="229.6" y="1139.0" width="4.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="232.6" y="1150.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.34%)</title><rect x="229.6" y="1123.0" width="4.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="232.6" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.27%)</title><rect x="229.6" y="1107.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="232.6" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="230.1" y="1091.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="233.1" y="1102.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.07%)</title><rect x="230.7" y="1091.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="233.7" y="1102.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="231.4" y="1091.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="234.4" y="1102.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.09%)</title><rect x="231.7" y="1091.0" width="1.1" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="234.7" y="1102.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="232.0" y="1075.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="235.0" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="232.2" y="1075.0" width="0.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="235.2" y="1086.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="232.8" y="1107.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="235.8" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="233.0" y="1107.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="236.0" y="1118.0"></text>
</g>
<g>
<title>recv (1 samples, 0.02%)</title><rect x="233.3" y="1107.0" width="0.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="236.3" y="1118.0"></text>
</g>
<g>
<title>recv (50 samples, 1.12%)</title><rect x="233.6" y="1139.0" width="13.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="236.6" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 0.92%)</title><rect x="235.9" y="1123.0" width="10.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="238.9" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (41 samples, 0.92%)</title><rect x="235.9" y="1107.0" width="10.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="238.9" y="1118.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.02%)</title><rect x="235.9" y="1091.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="238.9" y="1102.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (40 samples, 0.89%)</title><rect x="236.2" y="1091.0" width="10.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="239.2" y="1102.0"></text>
</g>
<g>
<title>__sys_recvfrom (39 samples, 0.87%)</title><rect x="236.2" y="1075.0" width="10.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="239.2" y="1086.0"></text>
</g>
<g>
<title>inet_recvmsg (2 samples, 0.04%)</title><rect x="236.5" y="1059.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="239.5" y="1070.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.02%)</title><rect x="237.0" y="1059.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="240.0" y="1070.0"></text>
</g>
<g>
<title>sock_recvmsg (26 samples, 0.58%)</title><rect x="237.2" y="1059.0" width="6.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="240.2" y="1070.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.02%)</title><rect x="237.2" y="1043.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="240.2" y="1054.0"></text>
</g>
<g>
<title>inet_recvmsg (20 samples, 0.45%)</title><rect x="237.5" y="1043.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="240.5" y="1054.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.45%)</title><rect x="237.5" y="1027.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="240.5" y="1038.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="238.0" y="1011.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="241.0" y="1022.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.02%)</title><rect x="238.0" y="995.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="241.0" y="1006.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="238.3" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="241.3" y="1006.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="238.3" y="979.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="241.3" y="990.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="238.6" y="1011.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="241.6" y="1022.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="238.8" y="1011.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="241.8" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="238.8" y="995.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="241.8" y="1006.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.13%)</title><rect x="239.1" y="1011.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="242.1" y="1022.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.13%)</title><rect x="239.1" y="995.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="242.1" y="1006.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.13%)</title><rect x="239.1" y="979.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="242.1" y="990.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="239.4" y="963.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="242.4" y="974.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="239.4" y="947.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="242.4" y="958.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="239.6" y="947.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="242.6" y="958.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.07%)</title><rect x="239.9" y="963.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="242.9" y="974.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="239.9" y="947.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="242.9" y="958.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 0.16%)</title><rect x="240.7" y="1011.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="243.7" y="1022.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.02%)</title><rect x="242.5" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="245.5" y="1022.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="242.5" y="995.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="245.5" y="1006.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="242.5" y="979.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="245.5" y="990.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.11%)</title><rect x="242.8" y="1043.0" width="1.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="245.8" y="1054.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.11%)</title><rect x="242.8" y="1027.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="245.8" y="1038.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.11%)</title><rect x="242.8" y="1011.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="245.8" y="1022.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.11%)</title><rect x="242.8" y="995.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="245.8" y="1006.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.02%)</title><rect x="243.8" y="979.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="246.8" y="990.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.20%)</title><rect x="244.1" y="1059.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="247.1" y="1070.0"></text>
</g>
<g>
<title>__fdget (9 samples, 0.20%)</title><rect x="244.1" y="1043.0" width="2.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="247.1" y="1054.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.20%)</title><rect x="244.1" y="1027.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="247.1" y="1038.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="245.2" y="1011.0" width="1.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="248.2" y="1022.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="246.5" y="1075.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.5" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="246.7" y="1187.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="249.7" y="1198.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="246.7" y="1171.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="249.7" y="1182.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="246.7" y="1155.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="249.7" y="1166.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=799] (301 samples, 6.72%)</title><rect x="247.0" y="1235.0" width="79.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="250.0" y="1246.0">[NIO Sele..</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="247.0" y="1219.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="250.0" y="1230.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (300 samples, 6.70%)</title><rect x="247.3" y="1219.0" width="79.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="250.3" y="1230.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.13%)</title><rect x="247.3" y="1203.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="250.3" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (6 samples, 0.13%)</title><rect x="247.3" y="1187.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="250.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (115 samples, 2.57%)</title><rect x="248.8" y="1203.0" width="30.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="251.8" y="1214.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (110 samples, 2.46%)</title><rect x="250.2" y="1187.0" width="29.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="253.2" y="1198.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.07%)</title><rect x="251.2" y="1171.0" width="0.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="254.2" y="1182.0"></text>
</g>
<g>
<title>[unknown] (91 samples, 2.03%)</title><rect x="252.0" y="1171.0" width="24.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="255.0" y="1182.0">[..</text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.09%)</title><rect x="252.0" y="1155.0" width="1.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="255.0" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.02%)</title><rect x="253.1" y="1155.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="256.1" y="1166.0"></text>
</g>
<g>
<title>epoll_wait (86 samples, 1.92%)</title><rect x="253.3" y="1155.0" width="22.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="256.3" y="1166.0">e..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="259.1" y="1139.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="262.1" y="1150.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="259.1" y="1123.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="262.1" y="1134.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="259.1" y="1107.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="262.1" y="1118.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="259.1" y="1091.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="262.1" y="1102.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="259.1" y="1075.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="262.1" y="1086.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="259.1" y="1059.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="262.1" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="259.1" y="1043.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="262.1" y="1054.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (63 samples, 1.41%)</title><rect x="259.4" y="1139.0" width="16.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="262.4" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (63 samples, 1.41%)</title><rect x="259.4" y="1123.0" width="16.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="262.4" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (59 samples, 1.32%)</title><rect x="260.4" y="1107.0" width="15.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="263.4" y="1118.0"></text>
</g>
<g>
<title>do_epoll_wait (58 samples, 1.30%)</title><rect x="260.4" y="1091.0" width="15.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="263.4" y="1102.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.02%)</title><rect x="260.7" y="1075.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="263.7" y="1086.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="260.7" y="1059.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="263.7" y="1070.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="260.7" y="1043.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="263.7" y="1054.0"></text>
</g>
<g>
<title>ep_poll (52 samples, 1.16%)</title><rect x="261.0" y="1075.0" width="13.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="264.0" y="1086.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (24 samples, 0.54%)</title><rect x="262.0" y="1059.0" width="6.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="265.0" y="1070.0"></text>
</g>
<g>
<title>ep_send_events_proc (15 samples, 0.34%)</title><rect x="263.6" y="1043.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="266.6" y="1054.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (12 samples, 0.27%)</title><rect x="264.4" y="1027.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="267.4" y="1038.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.22%)</title><rect x="264.9" y="1011.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="267.9" y="1022.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.07%)</title><rect x="266.5" y="995.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="269.5" y="1006.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="267.3" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="270.3" y="1006.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.07%)</title><rect x="267.6" y="1043.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="270.6" y="1054.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="267.8" y="1027.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="270.8" y="1038.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="267.8" y="1011.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="270.8" y="1022.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="267.8" y="995.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="270.8" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="267.8" y="979.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="270.8" y="990.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="267.8" y="963.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="270.8" y="974.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="267.8" y="947.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="270.8" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="267.8" y="931.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="270.8" y="942.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.02%)</title><rect x="268.1" y="1027.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="271.1" y="1038.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="268.4" y="1059.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="271.4" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (23 samples, 0.51%)</title><rect x="268.6" y="1059.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="271.6" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (23 samples, 0.51%)</title><rect x="268.6" y="1043.0" width="6.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="271.6" y="1054.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.42%)</title><rect x="269.7" y="1027.0" width="5.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="272.7" y="1038.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.42%)</title><rect x="269.7" y="1011.0" width="5.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="272.7" y="1022.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.40%)</title><rect x="269.9" y="995.0" width="4.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="272.9" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="274.2" y="979.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="277.2" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="274.2" y="963.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="277.2" y="974.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="274.2" y="947.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="277.2" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="274.2" y="931.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="277.2" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="274.2" y="915.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="277.2" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="274.2" y="899.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="277.2" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="274.2" y="883.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="277.2" y="894.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.02%)</title><rect x="274.7" y="1075.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="277.7" y="1086.0"></text>
</g>
<g>
<title>fput (2 samples, 0.04%)</title><rect x="274.9" y="1075.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="277.9" y="1086.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="275.5" y="1075.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="278.5" y="1086.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="275.7" y="1091.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="278.7" y="1102.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="276.0" y="1171.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="279.0" y="1182.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.11%)</title><rect x="276.5" y="1171.0" width="1.3" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="279.5" y="1182.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="277.8" y="1171.0" width="0.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="280.8" y="1182.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.09%)</title><rect x="278.1" y="1171.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="281.1" y="1182.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="278.9" y="1155.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="281.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (179 samples, 4.00%)</title><rect x="279.2" y="1203.0" width="47.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="282.2" y="1214.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (174 samples, 3.89%)</title><rect x="280.0" y="1187.0" width="45.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="283.0" y="1198.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (105 samples, 2.35%)</title><rect x="280.2" y="1171.0" width="27.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="283.2" y="1182.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (84 samples, 1.88%)</title><rect x="282.3" y="1155.0" width="22.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.3" y="1166.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (83 samples, 1.85%)</title><rect x="282.6" y="1139.0" width="21.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="285.6" y="1150.0">o..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="282.9" y="1123.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="285.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="282.9" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="285.9" y="1118.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.02%)</title><rect x="282.9" y="1091.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="285.9" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (1 samples, 0.02%)</title><rect x="283.1" y="1091.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="286.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.02%)</title><rect x="283.4" y="1123.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.02%)</title><rect x="283.4" y="1107.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.02%)</title><rect x="283.4" y="1091.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="286.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="283.4" y="1075.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="286.4" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (79 samples, 1.76%)</title><rect x="283.6" y="1123.0" width="20.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="286.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.09%)</title><rect x="283.6" y="1107.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.04%)</title><rect x="283.6" y="1091.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="283.9" y="1075.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.9" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.04%)</title><rect x="284.2" y="1091.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="284.7" y="1107.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="287.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="284.7" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="287.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="284.7" y="1075.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="284.7" y="1059.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.7" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (73 samples, 1.63%)</title><rect x="285.2" y="1107.0" width="19.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.02%)</title><rect x="285.2" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="288.2" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (1 samples, 0.02%)</title><rect x="285.2" y="1075.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.2" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (1 samples, 0.02%)</title><rect x="285.2" y="1059.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.2" y="1070.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.02%)</title><rect x="285.2" y="1043.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="288.2" y="1054.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="285.2" y="1027.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="288.2" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="285.5" y="1091.0" width="0.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="288.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="285.5" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.5" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="285.5" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="288.5" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="285.5" y="1043.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="288.5" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="285.5" y="1027.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.09%)</title><rect x="285.8" y="1091.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="288.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="285.8" y="1075.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="288.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="285.8" y="1059.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="288.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.02%)</title><rect x="286.0" y="1043.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="289.0" y="1054.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="286.3" y="1075.0" width="0.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="289.3" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.02%)</title><rect x="286.5" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="289.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="286.5" y="1059.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="289.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="286.5" y="1043.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="289.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="286.5" y="1027.0" width="0.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="289.5" y="1038.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (67 samples, 1.50%)</title><rect x="286.8" y="1091.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.8" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (67 samples, 1.50%)</title><rect x="286.8" y="1075.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (67 samples, 1.50%)</title><rect x="286.8" y="1059.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="289.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (67 samples, 1.50%)</title><rect x="286.8" y="1043.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="289.8" y="1054.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (67 samples, 1.50%)</title><rect x="286.8" y="1027.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="289.8" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (67 samples, 1.50%)</title><rect x="286.8" y="1011.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="289.8" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.isCancelled (1 samples, 0.02%)</title><rect x="287.6" y="995.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.6" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (58 samples, 1.30%)</title><rect x="287.9" y="995.0" width="15.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (57 samples, 1.27%)</title><rect x="288.1" y="979.0" width="15.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="291.1" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (57 samples, 1.27%)</title><rect x="288.1" y="963.0" width="15.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="291.1" y="974.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="288.7" y="947.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="291.7" y="958.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="288.9" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="291.9" y="958.0"></text>
</g>
<g>
<title>Unsafe_Unpark (8 samples, 0.18%)</title><rect x="289.2" y="947.0" width="2.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="292.2" y="958.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="289.2" y="931.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="292.2" y="942.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="289.4" y="931.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="292.4" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.02%)</title><rect x="289.7" y="931.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="292.7" y="942.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (1 samples, 0.02%)</title><rect x="290.0" y="931.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="293.0" y="942.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.02%)</title><rect x="290.2" y="931.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="293.2" y="942.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (1 samples, 0.02%)</title><rect x="290.5" y="931.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="293.5" y="942.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="290.8" y="931.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="293.8" y="942.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (45 samples, 1.01%)</title><rect x="291.3" y="947.0" width="11.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="294.3" y="958.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.94%)</title><rect x="292.1" y="931.0" width="11.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="295.1" y="942.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.94%)</title><rect x="292.1" y="915.0" width="11.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="295.1" y="926.0"></text>
</g>
<g>
<title>__x64_sys_futex (40 samples, 0.89%)</title><rect x="292.6" y="899.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="295.6" y="910.0"></text>
</g>
<g>
<title>do_futex (39 samples, 0.87%)</title><rect x="292.6" y="883.0" width="10.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="295.6" y="894.0"></text>
</g>
<g>
<title>futex_wake (37 samples, 0.83%)</title><rect x="292.9" y="867.0" width="9.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="295.9" y="878.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="293.9" y="851.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="296.9" y="862.0"></text>
</g>
<g>
<title>mark_wake_futex (3 samples, 0.07%)</title><rect x="294.2" y="851.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="297.2" y="862.0"></text>
</g>
<g>
<title>wake_q_add (3 samples, 0.07%)</title><rect x="294.2" y="835.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.2" y="846.0"></text>
</g>
<g>
<title>wake_up_q (29 samples, 0.65%)</title><rect x="295.0" y="851.0" width="7.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="298.0" y="862.0"></text>
</g>
<g>
<title>try_to_wake_up (29 samples, 0.65%)</title><rect x="295.0" y="835.0" width="7.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="298.0" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (29 samples, 0.65%)</title><rect x="295.0" y="819.0" width="7.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="298.0" y="830.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="302.6" y="867.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="305.6" y="878.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="302.9" y="883.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="305.9" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.02%)</title><rect x="303.2" y="995.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="306.2" y="1006.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="303.2" y="979.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="306.2" y="990.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="303.2" y="963.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="306.2" y="974.0"></text>
</g>
<g>
<title>java/util/Objects.requireNonNull (1 samples, 0.02%)</title><rect x="303.2" y="947.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.04%)</title><rect x="303.4" y="995.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="306.4" y="1006.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="303.9" y="995.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="306.9" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.20%)</title><rect x="304.5" y="1155.0" width="2.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="307.5" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.02%)</title><rect x="305.0" y="1139.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="308.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="305.0" y="1123.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="308.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.02%)</title><rect x="305.0" y="1107.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="308.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.02%)</title><rect x="305.0" y="1091.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="308.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="305.3" y="1139.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="308.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.09%)</title><rect x="305.3" y="1123.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.3" y="1134.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.04%)</title><rect x="306.3" y="1139.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.02%)</title><rect x="306.8" y="1155.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="309.8" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="307.1" y="1155.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="310.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="307.1" y="1139.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="310.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="307.1" y="1123.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="307.1" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.02%)</title><rect x="307.1" y="1091.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="310.1" y="1102.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.02%)</title><rect x="307.1" y="1075.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="307.4" y="1155.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="310.4" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="307.4" y="1139.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="310.4" y="1150.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (68 samples, 1.52%)</title><rect x="307.9" y="1171.0" width="17.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (68 samples, 1.52%)</title><rect x="307.9" y="1155.0" width="17.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="310.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.34%)</title><rect x="310.0" y="1139.0" width="4.0" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="313.0" y="1150.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.34%)</title><rect x="310.0" y="1123.0" width="4.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="313.0" y="1134.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (15 samples, 0.34%)</title><rect x="310.0" y="1107.0" width="4.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="313.0" y="1118.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.09%)</title><rect x="310.3" y="1091.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="313.3" y="1102.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="311.3" y="1091.0" width="0.3" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="314.3" y="1102.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="311.6" y="1091.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="314.6" y="1102.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="311.6" y="1075.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="314.6" y="1086.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="311.6" y="1059.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="314.6" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="311.6" y="1043.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="314.6" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="311.6" y="1027.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="314.6" y="1038.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="311.6" y="1011.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="314.6" y="1022.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="311.6" y="995.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="314.6" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="311.6" y="979.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="314.6" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.16%)</title><rect x="311.9" y="1091.0" width="1.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="314.9" y="1102.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (4 samples, 0.09%)</title><rect x="311.9" y="1075.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="314.9" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.02%)</title><rect x="312.9" y="1075.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="315.9" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="313.2" y="1075.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="316.2" y="1086.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="313.4" y="1075.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="316.4" y="1086.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="313.4" y="1059.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="316.4" y="1070.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="313.4" y="1043.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="316.4" y="1054.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="313.4" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="316.4" y="1038.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="313.4" y="1011.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="316.4" y="1022.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="313.4" y="995.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="316.4" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="313.4" y="979.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="316.4" y="990.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.02%)</title><rect x="313.7" y="1091.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="316.7" y="1102.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="314.0" y="1139.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="317.0" y="1150.0"></text>
</g>
<g>
<title>recv (43 samples, 0.96%)</title><rect x="314.5" y="1139.0" width="11.3" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="317.5" y="1150.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.87%)</title><rect x="315.5" y="1123.0" width="10.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="318.5" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.04%)</title><rect x="315.5" y="1107.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="318.5" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.83%)</title><rect x="316.1" y="1107.0" width="9.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="319.1" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (34 samples, 0.76%)</title><rect x="316.9" y="1091.0" width="8.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="319.9" y="1102.0"></text>
</g>
<g>
<title>__sys_recvfrom (33 samples, 0.74%)</title><rect x="316.9" y="1075.0" width="8.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="319.9" y="1086.0"></text>
</g>
<g>
<title>sock_recvmsg (30 samples, 0.67%)</title><rect x="316.9" y="1059.0" width="7.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="319.9" y="1070.0"></text>
</g>
<g>
<title>inet_recvmsg (21 samples, 0.47%)</title><rect x="317.1" y="1043.0" width="5.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="320.1" y="1054.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.02%)</title><rect x="317.1" y="1027.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="320.1" y="1038.0"></text>
</g>
<g>
<title>tcp_recvmsg (20 samples, 0.45%)</title><rect x="317.4" y="1027.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="320.4" y="1038.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.07%)</title><rect x="318.7" y="1011.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="321.7" y="1022.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="318.7" y="995.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="321.7" y="1006.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="318.7" y="979.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="321.7" y="990.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.02%)</title><rect x="319.2" y="995.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="322.2" y="1006.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.04%)</title><rect x="319.5" y="1011.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="322.5" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="320.0" y="1011.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="323.0" y="1022.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="320.3" y="1011.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="323.3" y="1022.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="320.3" y="995.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="323.3" y="1006.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="320.6" y="1011.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="323.6" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="320.6" y="995.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="323.6" y="1006.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="320.6" y="979.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="323.6" y="990.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.07%)</title><rect x="320.8" y="1011.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="323.8" y="1022.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.02%)</title><rect x="321.1" y="995.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="324.1" y="1006.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="321.1" y="979.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="324.1" y="990.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.02%)</title><rect x="321.1" y="963.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.1" y="974.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="321.1" y="947.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="324.1" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="321.1" y="931.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="324.1" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="321.1" y="915.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="324.1" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="321.1" y="899.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.1" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="321.1" y="883.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="324.1" y="894.0"></text>
</g>
<g>
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="321.1" y="867.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="324.1" y="878.0"></text>
</g>
<g>
<title>note_gp_changes (1 samples, 0.02%)</title><rect x="321.1" y="851.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="324.1" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="321.1" y="835.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="324.1" y="846.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.02%)</title><rect x="321.3" y="995.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="324.3" y="1006.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.02%)</title><rect x="321.6" y="1011.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="324.6" y="1022.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.07%)</title><rect x="321.9" y="1011.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="324.9" y="1022.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="322.1" y="995.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="325.1" y="1006.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.04%)</title><rect x="322.1" y="979.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="325.1" y="990.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.18%)</title><rect x="322.7" y="1043.0" width="2.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="325.7" y="1054.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (8 samples, 0.18%)</title><rect x="322.7" y="1027.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="325.7" y="1038.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.02%)</title><rect x="322.7" y="1011.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="325.7" y="1022.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.16%)</title><rect x="322.9" y="1011.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.9" y="1022.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.13%)</title><rect x="323.2" y="995.0" width="1.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="326.2" y="1006.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.09%)</title><rect x="323.7" y="979.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="326.7" y="990.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.04%)</title><rect x="324.2" y="963.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="327.2" y="974.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.07%)</title><rect x="324.8" y="1059.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="327.8" y="1070.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.07%)</title><rect x="324.8" y="1043.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="327.8" y="1054.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="324.8" y="1027.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="327.8" y="1038.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="325.0" y="1011.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="328.0" y="1022.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="325.6" y="1075.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.6" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="325.8" y="1187.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="328.8" y="1198.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="325.8" y="1171.0" width="0.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="328.8" y="1182.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="325.8" y="1155.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="328.8" y="1166.0"></text>
</g>
<g>
<title>[NIO Worker #5 tid=873] (814 samples, 18.19%)</title><rect x="326.4" y="1235.0" width="214.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="329.4" y="1246.0">[NIO Worker #5 tid=873]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.02%)</title><rect x="326.4" y="1219.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="329.4" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.02%)</title><rect x="326.4" y="1203.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="329.4" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.02%)</title><rect x="326.4" y="1187.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="329.4" y="1198.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="326.6" y="1219.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="329.6" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (811 samples, 18.12%)</title><rect x="326.9" y="1219.0" width="213.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.9" y="1230.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (811 samples, 18.12%)</title><rect x="326.9" y="1203.0" width="213.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.9" y="1214.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (811 samples, 18.12%)</title><rect x="326.9" y="1187.0" width="213.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="329.9" y="1198.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.02%)</title><rect x="326.9" y="1171.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="329.9" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="326.9" y="1155.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="329.9" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.02%)</title><rect x="326.9" y="1139.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="329.9" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="326.9" y="1123.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="329.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="326.9" y="1107.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="329.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="326.9" y="1091.0" width="0.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="329.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (428 samples, 9.56%)</title><rect x="327.1" y="1171.0" width="112.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="330.1" y="1182.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (426 samples, 9.52%)</title><rect x="327.7" y="1155.0" width="112.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="330.7" y="1166.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (426 samples, 9.52%)</title><rect x="327.7" y="1139.0" width="112.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="330.7" y="1150.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (95 samples, 2.12%)</title><rect x="327.9" y="1123.0" width="25.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="330.9" y="1134.0">j..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (1 samples, 0.02%)</title><rect x="327.9" y="1107.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="330.9" y="1118.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (94 samples, 2.10%)</title><rect x="328.2" y="1107.0" width="24.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="331.2" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (94 samples, 2.10%)</title><rect x="328.2" y="1091.0" width="24.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="331.2" y="1102.0">j..</text>
</g>
<g>
<title>Unsafe_Park (57 samples, 1.27%)</title><rect x="328.2" y="1075.0" width="15.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="331.2" y="1086.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (3 samples, 0.07%)</title><rect x="329.3" y="1059.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="332.3" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (17 samples, 0.38%)</title><rect x="330.0" y="1059.0" width="4.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="333.0" y="1070.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="332.4" y="1043.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="335.4" y="1054.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="332.9" y="1027.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="335.9" y="1038.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="333.2" y="1043.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="336.2" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.09%)</title><rect x="333.5" y="1043.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="336.5" y="1054.0"></text>
</g>
<g>
<title>__lll_unlock_wake (24 samples, 0.54%)</title><rect x="334.5" y="1059.0" width="6.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="337.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.40%)</title><rect x="336.1" y="1043.0" width="4.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="339.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.40%)</title><rect x="336.1" y="1027.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="339.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.40%)</title><rect x="336.1" y="1011.0" width="4.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="339.1" y="1022.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.38%)</title><rect x="336.1" y="995.0" width="4.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="339.1" y="1006.0"></text>
</g>
<g>
<title>futex_wake (10 samples, 0.22%)</title><rect x="336.9" y="979.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="339.9" y="990.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.11%)</title><rect x="338.0" y="963.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="341.0" y="974.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (2 samples, 0.04%)</title><rect x="338.7" y="947.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="341.7" y="958.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="339.3" y="963.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="342.3" y="974.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.07%)</title><rect x="339.5" y="979.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="342.5" y="990.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="340.1" y="963.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="343.1" y="974.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="340.1" y="947.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="343.1" y="958.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="340.1" y="931.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="343.1" y="942.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="340.1" y="915.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="343.1" y="926.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="340.1" y="899.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="343.1" y="910.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="340.1" y="883.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="343.1" y="894.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="340.1" y="867.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="343.1" y="878.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="340.3" y="979.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="343.3" y="990.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="340.6" y="995.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="343.6" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="340.9" y="1059.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="343.9" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="341.1" y="1059.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="344.1" y="1070.0"></text>
</g>
<g>
<title>_init (3 samples, 0.07%)</title><rect x="341.6" y="1059.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="344.6" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="342.4" y="1059.0" width="0.8" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="345.4" y="1070.0"></text>
</g>
<g>
<title>[unknown] (33 samples, 0.74%)</title><rect x="343.2" y="1075.0" width="8.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="346.2" y="1086.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.02%)</title><rect x="343.2" y="1059.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="346.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_wait (32 samples, 0.71%)</title><rect x="343.5" y="1059.0" width="8.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="346.5" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (22 samples, 0.49%)</title><rect x="346.1" y="1043.0" width="5.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="349.1" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.49%)</title><rect x="346.1" y="1027.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="349.1" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.49%)</title><rect x="346.1" y="1011.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.1" y="1022.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.49%)</title><rect x="346.1" y="995.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="349.1" y="1006.0"></text>
</g>
<g>
<title>futex_wait (22 samples, 0.49%)</title><rect x="346.1" y="979.0" width="5.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="349.1" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 0.40%)</title><rect x="346.7" y="963.0" width="4.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="349.7" y="974.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.02%)</title><rect x="347.2" y="947.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="350.2" y="958.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.34%)</title><rect x="347.4" y="947.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="350.4" y="958.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.34%)</title><rect x="347.4" y="931.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="350.4" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.34%)</title><rect x="347.4" y="915.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="350.4" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="351.1" y="899.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="354.1" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="351.1" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="354.1" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="351.1" y="867.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="354.1" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="351.1" y="851.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="354.1" y="862.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="351.1" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="354.1" y="846.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="351.1" y="819.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="354.1" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="351.1" y="803.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="354.1" y="814.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="351.4" y="963.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="354.4" y="974.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="351.4" y="947.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="354.4" y="958.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.04%)</title><rect x="351.9" y="1075.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="354.9" y="1086.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="352.5" y="1075.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="355.5" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (6 samples, 0.13%)</title><rect x="353.0" y="1123.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="356.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (5 samples, 0.11%)</title><rect x="353.2" y="1107.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="356.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (5 samples, 0.11%)</title><rect x="353.2" y="1091.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="356.2" y="1102.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.02%)</title><rect x="354.3" y="1075.0" width="0.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="357.3" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (324 samples, 7.24%)</title><rect x="354.6" y="1123.0" width="85.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="357.6" y="1134.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (313 samples, 6.99%)</title><rect x="357.5" y="1107.0" width="82.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="360.5" y="1118.0">java/util..</text>
</g>
<g>
<title>apic_timer_interrupt (8 samples, 0.18%)</title><rect x="437.9" y="1091.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.9" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (8 samples, 0.18%)</title><rect x="437.9" y="1075.0" width="2.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="440.9" y="1086.0"></text>
</g>
<g>
<title>irq_exit (8 samples, 0.18%)</title><rect x="437.9" y="1059.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="440.9" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (8 samples, 0.18%)</title><rect x="437.9" y="1043.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="440.9" y="1054.0"></text>
</g>
<g>
<title>run_rebalance_domains (8 samples, 0.18%)</title><rect x="437.9" y="1027.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="440.9" y="1038.0"></text>
</g>
<g>
<title>update_blocked_averages (8 samples, 0.18%)</title><rect x="437.9" y="1011.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="440.9" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.18%)</title><rect x="437.9" y="995.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="440.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.run (382 samples, 8.53%)</title><rect x="440.0" y="1171.0" width="100.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="443.0" y="1182.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (382 samples, 8.53%)</title><rect x="440.0" y="1155.0" width="100.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="443.0" y="1166.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (234 samples, 5.23%)</title><rect x="440.0" y="1139.0" width="61.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="443.0" y="1150.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="441.0" y="1123.0" width="0.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="444.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="441.0" y="1107.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="444.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="441.3" y="1107.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="444.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="441.3" y="1091.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="444.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (228 samples, 5.09%)</title><rect x="441.6" y="1123.0" width="60.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="444.6" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.22%)</title><rect x="441.6" y="1107.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="444.6" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="441.8" y="1091.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="444.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.18%)</title><rect x="442.1" y="1091.0" width="2.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="445.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.07%)</title><rect x="442.4" y="1075.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="445.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.09%)</title><rect x="443.1" y="1075.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="446.1" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.09%)</title><rect x="443.1" y="1059.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="446.1" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="443.9" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="446.9" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="443.9" y="1027.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="446.9" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (218 samples, 4.87%)</title><rect x="444.2" y="1107.0" width="57.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="447.2" y="1118.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (218 samples, 4.87%)</title><rect x="444.2" y="1091.0" width="57.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="447.2" y="1102.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="444.2" y="1075.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="447.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (214 samples, 4.78%)</title><rect x="444.7" y="1075.0" width="56.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="447.7" y="1086.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (214 samples, 4.78%)</title><rect x="444.7" y="1059.0" width="56.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="447.7" y="1070.0">one/ni..</text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="445.8" y="1043.0" width="1.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="448.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="445.8" y="1027.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="448.8" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="445.8" y="1011.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="448.8" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="445.8" y="995.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="448.8" y="1006.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="446.0" y="979.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="449.0" y="990.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="446.3" y="1011.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="449.3" y="1022.0"></text>
</g>
<g>
<title>__send (2 samples, 0.04%)</title><rect x="446.8" y="1011.0" width="0.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="449.8" y="1022.0"></text>
</g>
<g>
<title>__send (204 samples, 4.56%)</title><rect x="447.4" y="1043.0" width="53.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="450.4" y="1054.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (201 samples, 4.49%)</title><rect x="448.2" y="1027.0" width="52.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="451.2" y="1038.0">entry..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="448.2" y="1011.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="451.2" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (200 samples, 4.47%)</title><rect x="448.4" y="1011.0" width="52.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="451.4" y="1022.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (198 samples, 4.42%)</title><rect x="448.9" y="995.0" width="52.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="451.9" y="1006.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (197 samples, 4.40%)</title><rect x="448.9" y="979.0" width="52.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="451.9" y="990.0">__sys..</text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="449.5" y="963.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="452.5" y="974.0"></text>
</g>
<g>
<title>sock_sendmsg (186 samples, 4.16%)</title><rect x="449.7" y="963.0" width="49.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="452.7" y="974.0">sock_..</text>
</g>
<g>
<title>inet_sendmsg (177 samples, 3.95%)</title><rect x="450.0" y="947.0" width="46.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="453.0" y="958.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (175 samples, 3.91%)</title><rect x="450.3" y="931.0" width="46.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="453.3" y="942.0">tcp_..</text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="450.5" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="453.5" y="926.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="450.8" y="915.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="453.8" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.04%)</title><rect x="450.8" y="899.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="453.8" y="910.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.04%)</title><rect x="450.8" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="453.8" y="894.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="451.3" y="915.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="454.3" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (166 samples, 3.71%)</title><rect x="451.6" y="915.0" width="43.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="454.6" y="926.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.07%)</title><rect x="452.1" y="899.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.1" y="910.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="452.4" y="883.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="455.4" y="894.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (9 samples, 0.20%)</title><rect x="452.9" y="899.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="455.9" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.20%)</title><rect x="452.9" y="883.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="455.9" y="894.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.04%)</title><rect x="452.9" y="867.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.9" y="878.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.04%)</title><rect x="452.9" y="851.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="455.9" y="862.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.13%)</title><rect x="453.4" y="867.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="456.4" y="878.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="455.0" y="867.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.0" y="878.0"></text>
</g>
<g>
<title>tcp_push (150 samples, 3.35%)</title><rect x="455.3" y="899.0" width="39.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="458.3" y="910.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (148 samples, 3.31%)</title><rect x="455.8" y="883.0" width="39.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="458.8" y="894.0">__t..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.02%)</title><rect x="455.8" y="867.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="458.8" y="878.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.02%)</title><rect x="456.1" y="867.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="459.1" y="878.0"></text>
</g>
<g>
<title>tcp_write_xmit (146 samples, 3.26%)</title><rect x="456.3" y="867.0" width="38.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="459.3" y="878.0">tcp..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="457.4" y="851.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="460.4" y="862.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (132 samples, 2.95%)</title><rect x="457.6" y="851.0" width="34.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="460.6" y="862.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (127 samples, 2.84%)</title><rect x="458.2" y="835.0" width="33.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.2" y="846.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (126 samples, 2.82%)</title><rect x="458.2" y="819.0" width="33.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="461.2" y="830.0">__..</text>
</g>
<g>
<title>ip_local_out (125 samples, 2.79%)</title><rect x="458.2" y="803.0" width="32.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="461.2" y="814.0">ip..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.04%)</title><rect x="458.2" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="461.2" y="798.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.04%)</title><rect x="458.2" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="461.2" y="782.0"></text>
</g>
<g>
<title>ip_output (122 samples, 2.73%)</title><rect x="458.7" y="787.0" width="32.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="461.7" y="798.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="459.0" y="771.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="462.0" y="782.0"></text>
</g>
<g>
<title>ip_finish_output (120 samples, 2.68%)</title><rect x="459.2" y="771.0" width="31.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="462.2" y="782.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (120 samples, 2.68%)</title><rect x="459.2" y="755.0" width="31.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="462.2" y="766.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (103 samples, 2.30%)</title><rect x="460.5" y="739.0" width="27.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="463.5" y="750.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (103 samples, 2.30%)</title><rect x="460.5" y="723.0" width="27.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="463.5" y="734.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (102 samples, 2.28%)</title><rect x="460.8" y="707.0" width="26.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="463.8" y="718.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (101 samples, 2.26%)</title><rect x="460.8" y="691.0" width="26.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="463.8" y="702.0">_..</text>
</g>
<g>
<title>net_rx_action (98 samples, 2.19%)</title><rect x="461.1" y="675.0" width="25.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="464.1" y="686.0">n..</text>
</g>
<g>
<title>process_backlog (95 samples, 2.12%)</title><rect x="461.9" y="659.0" width="25.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="464.9" y="670.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (93 samples, 2.08%)</title><rect x="462.4" y="643.0" width="24.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.4" y="654.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (90 samples, 2.01%)</title><rect x="462.6" y="627.0" width="23.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="465.6" y="638.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="462.6" y="611.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="465.6" y="622.0"></text>
</g>
<g>
<title>ip_rcv (89 samples, 1.99%)</title><rect x="462.9" y="611.0" width="23.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="465.9" y="622.0">i..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.04%)</title><rect x="462.9" y="595.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="465.9" y="606.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.02%)</title><rect x="463.4" y="595.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="466.4" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (85 samples, 1.90%)</title><rect x="463.7" y="595.0" width="22.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="466.7" y="606.0">i..</text>
</g>
<g>
<title>ip_local_deliver (85 samples, 1.90%)</title><rect x="463.7" y="579.0" width="22.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="466.7" y="590.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (85 samples, 1.90%)</title><rect x="463.7" y="563.0" width="22.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="466.7" y="574.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (84 samples, 1.88%)</title><rect x="463.7" y="547.0" width="22.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="466.7" y="558.0">i..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="463.7" y="531.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="466.7" y="542.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="464.0" y="531.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="467.0" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (82 samples, 1.83%)</title><rect x="464.2" y="531.0" width="21.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="467.2" y="542.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="464.5" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="467.5" y="526.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.02%)</title><rect x="465.0" y="515.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="468.0" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="465.3" y="515.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.3" y="526.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.02%)</title><rect x="465.3" y="499.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="468.3" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (77 samples, 1.72%)</title><rect x="465.5" y="515.0" width="20.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.5" y="526.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="465.5" y="499.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="468.5" y="510.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="465.8" y="499.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="468.8" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (74 samples, 1.65%)</title><rect x="466.1" y="499.0" width="19.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="469.1" y="510.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.11%)</title><rect x="466.3" y="483.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="469.3" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="466.3" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="469.3" y="478.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.09%)</title><rect x="466.6" y="467.0" width="1.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="469.6" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.09%)</title><rect x="466.6" y="451.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="469.6" y="462.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.09%)</title><rect x="466.6" y="435.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="469.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.07%)</title><rect x="466.9" y="419.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="469.9" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.04%)</title><rect x="467.7" y="483.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="470.7" y="494.0"></text>
</g>
<g>
<title>tcp_ack (16 samples, 0.36%)</title><rect x="468.2" y="483.0" width="4.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="471.2" y="494.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.16%)</title><rect x="470.0" y="467.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="473.0" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="470.3" y="451.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.3" y="462.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="470.3" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.3" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="470.3" y="419.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="473.3" y="430.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="470.3" y="403.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="473.3" y="414.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.07%)</title><rect x="470.8" y="435.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="473.8" y="446.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="470.8" y="419.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="473.8" y="430.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.02%)</title><rect x="471.3" y="403.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="474.3" y="414.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="471.3" y="387.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="474.3" y="398.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="471.6" y="451.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="474.6" y="462.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="471.9" y="467.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="474.9" y="478.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="472.1" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="475.1" y="478.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="472.4" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="475.4" y="494.0"></text>
</g>
<g>
<title>tcp_data_queue (47 samples, 1.05%)</title><rect x="472.7" y="483.0" width="12.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="475.7" y="494.0"></text>
</g>
<g>
<title>sock_def_readable (45 samples, 1.01%)</title><rect x="472.9" y="467.0" width="11.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="475.9" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (44 samples, 0.98%)</title><rect x="473.2" y="451.0" width="11.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="476.2" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (44 samples, 0.98%)</title><rect x="473.2" y="435.0" width="11.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="476.2" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (44 samples, 0.98%)</title><rect x="473.2" y="419.0" width="11.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="476.2" y="430.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="484.8" y="467.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="487.8" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="485.1" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="488.1" y="494.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="485.6" y="499.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="488.6" y="510.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="485.8" y="547.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="488.8" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.02%)</title><rect x="486.1" y="595.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="489.1" y="606.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="486.4" y="627.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="489.4" y="638.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.02%)</title><rect x="486.6" y="627.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="489.6" y="638.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.04%)</title><rect x="486.9" y="675.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="489.9" y="686.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="487.4" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="490.4" y="702.0"></text>
</g>
<g>
<title>dev_queue_xmit (12 samples, 0.27%)</title><rect x="487.7" y="739.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="490.7" y="750.0"></text>
</g>
<g>
<title>__dev_queue_xmit (11 samples, 0.25%)</title><rect x="487.7" y="723.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="490.7" y="734.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (6 samples, 0.13%)</title><rect x="488.2" y="707.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="491.2" y="718.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.02%)</title><rect x="488.7" y="691.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="491.7" y="702.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="488.7" y="675.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="491.7" y="686.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (2 samples, 0.04%)</title><rect x="489.0" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="492.0" y="702.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="489.5" y="691.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.5" y="702.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="489.8" y="707.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.8" y="718.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="490.1" y="707.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="493.1" y="718.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.02%)</title><rect x="490.3" y="691.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="493.3" y="702.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.02%)</title><rect x="490.6" y="723.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="493.6" y="734.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.02%)</title><rect x="490.9" y="787.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="493.9" y="798.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="491.1" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.1" y="814.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="491.4" y="819.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="494.4" y="830.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="491.6" y="835.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="494.6" y="846.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="491.6" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="494.6" y="830.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.04%)</title><rect x="491.9" y="835.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.9" y="846.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.04%)</title><rect x="491.9" y="819.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="494.9" y="830.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="492.4" y="851.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="495.4" y="862.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="493.0" y="851.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="496.0" y="862.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.04%)</title><rect x="493.2" y="851.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="496.2" y="862.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="493.5" y="835.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="496.5" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="493.5" y="819.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="496.5" y="830.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="493.5" y="803.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="496.5" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="493.5" y="787.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.5" y="798.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.02%)</title><rect x="493.8" y="851.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="496.8" y="862.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="494.0" y="851.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="497.0" y="862.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="494.0" y="835.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="497.0" y="846.0"></text>
</g>
<g>
<title>tcp_v4_send_check (2 samples, 0.04%)</title><rect x="494.3" y="851.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="497.3" y="862.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.04%)</title><rect x="494.8" y="899.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="497.8" y="910.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="494.8" y="883.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="497.8" y="894.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.07%)</title><rect x="495.3" y="915.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="498.3" y="926.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="496.1" y="915.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="499.1" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.02%)</title><rect x="496.4" y="931.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="499.4" y="942.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.18%)</title><rect x="496.7" y="947.0" width="2.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="499.7" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.18%)</title><rect x="496.7" y="931.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="499.7" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.18%)</title><rect x="496.7" y="915.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="499.7" y="926.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.16%)</title><rect x="496.9" y="899.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="499.9" y="910.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.09%)</title><rect x="497.7" y="883.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="500.7" y="894.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.07%)</title><rect x="498.0" y="867.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="501.0" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.18%)</title><rect x="498.8" y="963.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="501.8" y="974.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.13%)</title><rect x="499.0" y="947.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="502.0" y="958.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.13%)</title><rect x="499.0" y="931.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="502.0" y="942.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.11%)</title><rect x="499.3" y="915.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="502.3" y="926.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="500.6" y="947.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="503.6" y="958.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="500.9" y="979.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="503.9" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="501.1" y="1075.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="504.1" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="501.1" y="1059.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="504.1" y="1070.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="501.1" y="1043.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="504.1" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="501.1" y="1027.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="504.1" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="501.1" y="1011.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="504.1" y="1022.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="501.1" y="995.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="504.1" y="1006.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.02%)</title><rect x="501.1" y="979.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="504.1" y="990.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="501.1" y="963.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="504.1" y="974.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="501.4" y="1059.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="504.4" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="501.4" y="1043.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="504.4" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (143 samples, 3.19%)</title><rect x="501.7" y="1139.0" width="37.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.7" y="1150.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (142 samples, 3.17%)</title><rect x="501.9" y="1123.0" width="37.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.9" y="1134.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="501.9" y="1107.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="504.9" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="501.9" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="504.9" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="501.9" y="1075.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="504.9" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="501.9" y="1059.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="504.9" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="501.9" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="504.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="501.9" y="1027.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.9" y="1038.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (133 samples, 2.97%)</title><rect x="502.2" y="1107.0" width="35.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="505.2" y="1118.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (133 samples, 2.97%)</title><rect x="502.2" y="1091.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="505.2" y="1102.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (128 samples, 2.86%)</title><rect x="502.5" y="1075.0" width="33.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="505.5" y="1086.0">Ja..</text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (1 samples, 0.02%)</title><rect x="502.5" y="1059.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="505.5" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="502.7" y="1059.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="505.7" y="1070.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.07%)</title><rect x="503.0" y="1059.0" width="0.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="506.0" y="1070.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="503.8" y="1059.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="506.8" y="1070.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="504.3" y="1059.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="507.3" y="1070.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="504.6" y="1059.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="507.6" y="1070.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.02%)</title><rect x="504.8" y="1059.0" width="0.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="507.8" y="1070.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.02%)</title><rect x="505.1" y="1059.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="508.1" y="1070.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (3 samples, 0.07%)</title><rect x="505.4" y="1059.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="508.4" y="1070.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="505.9" y="1043.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="508.9" y="1054.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="505.9" y="1027.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="508.9" y="1038.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="505.9" y="1011.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="508.9" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="505.9" y="995.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="508.9" y="1006.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="505.9" y="979.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="508.9" y="990.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="505.9" y="963.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="508.9" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="505.9" y="947.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="508.9" y="958.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="506.1" y="1059.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="509.1" y="1070.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (112 samples, 2.50%)</title><rect x="506.4" y="1059.0" width="29.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="509.4" y="1070.0">ro..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="506.7" y="1043.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="509.7" y="1054.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="506.9" y="1043.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="509.9" y="1054.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="507.2" y="1043.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="510.2" y="1054.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.07%)</title><rect x="507.7" y="1043.0" width="0.8" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="510.7" y="1054.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="508.3" y="1027.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="511.3" y="1038.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.07%)</title><rect x="508.5" y="1043.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="511.5" y="1054.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="508.8" y="1027.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="511.8" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="509.0" y="1027.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="512.0" y="1038.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="509.3" y="1043.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="512.3" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="509.6" y="1043.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="512.6" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="510.1" y="1043.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="513.1" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (83 samples, 1.85%)</title><rect x="510.4" y="1043.0" width="21.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="513.4" y="1054.0">r..</text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="510.6" y="1027.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="513.6" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (79 samples, 1.76%)</title><rect x="511.2" y="1027.0" width="20.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="514.2" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (76 samples, 1.70%)</title><rect x="511.7" y="1011.0" width="20.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="514.7" y="1022.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="511.9" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="514.9" y="1006.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="512.2" y="995.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="515.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.02%)</title><rect x="512.7" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="515.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.02%)</title><rect x="513.0" y="995.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="516.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.04%)</title><rect x="513.3" y="995.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="516.3" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (63 samples, 1.41%)</title><rect x="513.8" y="995.0" width="16.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="516.8" y="1006.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.04%)</title><rect x="515.4" y="979.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="518.4" y="990.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="515.9" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="518.9" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="516.2" y="979.0" width="0.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="519.2" y="990.0"></text>
</g>
<g>
<title>_init (3 samples, 0.07%)</title><rect x="516.4" y="979.0" width="0.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="519.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (7 samples, 0.16%)</title><rect x="517.2" y="979.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="520.2" y="990.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="517.5" y="963.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="520.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="518.0" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="521.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="518.3" y="963.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="521.3" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="518.5" y="963.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="521.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="518.5" y="947.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="521.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="518.8" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="521.8" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="518.8" y="947.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="521.8" y="958.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="519.1" y="979.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="522.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.04%)</title><rect x="519.3" y="979.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="522.3" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="519.3" y="963.0" width="0.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="522.3" y="974.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="519.6" y="963.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="522.6" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.02%)</title><rect x="519.6" y="947.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="522.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="519.6" y="931.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="522.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.04%)</title><rect x="519.9" y="979.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="522.9" y="990.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (34 samples, 0.76%)</title><rect x="520.4" y="979.0" width="8.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="523.4" y="990.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (29 samples, 0.65%)</title><rect x="521.4" y="963.0" width="7.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="524.4" y="974.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (1 samples, 0.02%)</title><rect x="521.4" y="947.0" width="0.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="524.4" y="958.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (24 samples, 0.54%)</title><rect x="521.7" y="947.0" width="6.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="524.7" y="958.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (1 samples, 0.02%)</title><rect x="525.7" y="931.0" width="0.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="528.7" y="942.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="525.9" y="931.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="528.9" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="526.2" y="931.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.2" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="526.2" y="915.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="529.2" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="526.2" y="899.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.2" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="526.2" y="883.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="529.2" y="894.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="526.2" y="867.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.2" y="878.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="526.2" y="851.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="529.2" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="526.2" y="835.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="529.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.13%)</title><rect x="526.4" y="931.0" width="1.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="529.4" y="942.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (5 samples, 0.11%)</title><rect x="526.7" y="915.0" width="1.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="529.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (2 samples, 0.04%)</title><rect x="528.0" y="947.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="531.0" y="958.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="528.6" y="947.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="531.6" y="958.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (1 samples, 0.02%)</title><rect x="528.8" y="947.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="531.8" y="958.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="529.1" y="963.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="532.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="529.3" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="532.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="529.6" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="532.6" y="990.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.04%)</title><rect x="529.9" y="979.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="532.9" y="990.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (2 samples, 0.04%)</title><rect x="530.4" y="995.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="533.4" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.02%)</title><rect x="530.9" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="533.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.02%)</title><rect x="531.2" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="534.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="531.5" y="995.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="534.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.02%)</title><rect x="531.7" y="1011.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="534.7" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.02%)</title><rect x="532.0" y="1027.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="535.0" y="1038.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (14 samples, 0.31%)</title><rect x="532.2" y="1043.0" width="3.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="535.2" y="1054.0"></text>
</g>
<g>
<title>jni_NewByteArray (11 samples, 0.25%)</title><rect x="532.2" y="1027.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="535.2" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="532.2" y="1011.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="535.2" y="1022.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="532.5" y="1011.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="535.5" y="1022.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="532.5" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="535.5" y="1006.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="532.5" y="979.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="535.5" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="532.5" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="535.5" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="532.5" y="947.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="535.5" y="958.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="532.5" y="931.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="535.5" y="942.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="532.5" y="915.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="535.5" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="532.5" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="535.5" y="910.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.20%)</title><rect x="532.8" y="1011.0" width="2.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="535.8" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.16%)</title><rect x="533.3" y="995.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="536.3" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.09%)</title><rect x="533.3" y="979.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="536.3" y="990.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="533.6" y="963.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="536.6" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="533.8" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="536.8" y="974.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="534.1" y="963.0" width="0.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="537.1" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="534.4" y="979.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="537.4" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="534.9" y="979.0" width="0.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="537.9" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.07%)</title><rect x="535.1" y="1027.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="538.1" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="535.1" y="1011.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="538.1" y="1022.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="535.7" y="1011.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="538.7" y="1022.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.02%)</title><rect x="535.9" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="538.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="536.2" y="1075.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="539.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="536.2" y="1059.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="539.2" y="1070.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="536.2" y="1043.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="539.2" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="536.5" y="1075.0" width="0.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="539.5" y="1086.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="536.7" y="1075.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="539.7" y="1086.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.02%)</title><rect x="537.0" y="1075.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="540.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (8 samples, 0.18%)</title><rect x="537.3" y="1107.0" width="2.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="540.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (4 samples, 0.09%)</title><rect x="538.3" y="1091.0" width="1.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="541.3" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.07%)</title><rect x="538.3" y="1075.0" width="0.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="541.3" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.07%)</title><rect x="538.3" y="1059.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="541.3" y="1070.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="538.3" y="1043.0" width="0.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="541.3" y="1054.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="538.6" y="1043.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="541.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="539.1" y="1075.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="542.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="539.1" y="1059.0" width="0.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="542.1" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="539.1" y="1043.0" width="0.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="542.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (5 samples, 0.11%)</title><rect x="539.4" y="1139.0" width="1.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="542.4" y="1150.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (5 samples, 0.11%)</title><rect x="539.4" y="1123.0" width="1.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="542.4" y="1134.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.02%)</title><rect x="540.2" y="1107.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="543.2" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (1 samples, 0.02%)</title><rect x="540.4" y="1107.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="543.4" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.02%)</title><rect x="540.4" y="1091.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.4" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="540.4" y="1075.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="543.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="540.4" y="1059.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="543.4" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (1 samples, 0.02%)</title><rect x="540.4" y="1043.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.02%)</title><rect x="540.7" y="1219.0" width="0.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="543.7" y="1230.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.makeConcatWithConstants (1 samples, 0.02%)</title><rect x="540.7" y="1203.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.7" y="1214.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.doStringConcat (1 samples, 0.02%)</title><rect x="540.7" y="1187.0" width="0.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="543.7" y="1198.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory.generate (1 samples, 0.02%)</title><rect x="540.7" y="1171.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="543.7" y="1182.0"></text>
</g>
<g>
<title>java/lang/invoke/StringConcatFactory$MethodHandleInlineCopyStrategy.generate (1 samples, 0.02%)</title><rect x="540.7" y="1155.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/invoke/MethodHandles.foldArguments (1 samples, 0.02%)</title><rect x="540.7" y="1139.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.rebind (1 samples, 0.02%)</title><rect x="540.7" y="1123.0" width="0.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="543.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.tooComplex (1 samples, 0.02%)</title><rect x="540.7" y="1107.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="543.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/BoundMethodHandle.fieldCount (1 samples, 0.02%)</title><rect x="540.7" y="1091.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.7" y="1102.0"></text>
</g>
<g>
<title>java/lang/invoke/ClassSpecializer$SpeciesData.fieldCount (1 samples, 0.02%)</title><rect x="540.7" y="1075.0" width="0.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="543.7" y="1086.0"></text>
</g>
<g>
<title>java/util/ImmutableCollections$ListN.size (1 samples, 0.02%)</title><rect x="540.7" y="1059.0" width="0.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="543.7" y="1070.0"></text>
</g>
<g>
<title>[NIO Worker #6 tid=876] (788 samples, 17.61%)</title><rect x="540.9" y="1235.0" width="207.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="543.9" y="1246.0">[NIO Worker #6 tid=876]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.02%)</title><rect x="540.9" y="1219.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="543.9" y="1230.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="540.9" y="1203.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="543.9" y="1214.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="540.9" y="1187.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="543.9" y="1198.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.02%)</title><rect x="540.9" y="1171.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="543.9" y="1182.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="540.9" y="1155.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="543.9" y="1166.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="540.9" y="1139.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="543.9" y="1150.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.02%)</title><rect x="540.9" y="1123.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="543.9" y="1134.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.02%)</title><rect x="540.9" y="1107.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="543.9" y="1118.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.02%)</title><rect x="540.9" y="1091.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="543.9" y="1102.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="540.9" y="1075.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="543.9" y="1086.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.02%)</title><rect x="540.9" y="1059.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="543.9" y="1070.0"></text>
</g>
<g>
<title>java/lang/Thread.run (787 samples, 17.58%)</title><rect x="541.2" y="1219.0" width="207.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="544.2" y="1230.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (787 samples, 17.58%)</title><rect x="541.2" y="1203.0" width="207.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="544.2" y="1214.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (787 samples, 17.58%)</title><rect x="541.2" y="1187.0" width="207.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="544.2" y="1198.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.02%)</title><rect x="541.2" y="1171.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="544.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="541.2" y="1155.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="544.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.02%)</title><rect x="541.2" y="1139.0" width="0.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="541.2" y="1123.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="541.2" y="1107.0" width="0.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="544.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="541.2" y="1091.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="544.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (1 samples, 0.02%)</title><rect x="541.5" y="1171.0" width="0.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="544.5" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.02%)</title><rect x="541.5" y="1155.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="544.5" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryRelease (1 samples, 0.02%)</title><rect x="541.5" y="1139.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="544.5" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.setState (1 samples, 0.02%)</title><rect x="541.5" y="1123.0" width="0.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="544.5" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (418 samples, 9.34%)</title><rect x="541.7" y="1171.0" width="110.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="544.7" y="1182.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.02%)</title><rect x="542.0" y="1155.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="545.0" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (416 samples, 9.29%)</title><rect x="542.3" y="1155.0" width="109.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="545.3" y="1166.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (416 samples, 9.29%)</title><rect x="542.3" y="1139.0" width="109.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="545.3" y="1150.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.02%)</title><rect x="543.1" y="1123.0" width="0.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="546.1" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (82 samples, 1.83%)</title><rect x="543.3" y="1123.0" width="21.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="546.3" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (81 samples, 1.81%)</title><rect x="543.6" y="1107.0" width="21.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="546.6" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (81 samples, 1.81%)</title><rect x="543.6" y="1091.0" width="21.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="546.6" y="1102.0">j..</text>
</g>
<g>
<title>Unsafe_Park (49 samples, 1.09%)</title><rect x="544.1" y="1075.0" width="12.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="547.1" y="1086.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="544.9" y="1059.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="547.9" y="1070.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="545.4" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="548.4" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.22%)</title><rect x="545.7" y="1059.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="548.7" y="1070.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="546.7" y="1043.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="549.7" y="1054.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="547.3" y="1027.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="550.3" y="1038.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="547.5" y="1043.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="550.5" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="548.3" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="551.3" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (25 samples, 0.56%)</title><rect x="548.6" y="1059.0" width="6.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="551.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.38%)</title><rect x="550.7" y="1043.0" width="4.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="553.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.38%)</title><rect x="550.7" y="1027.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="553.7" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (14 samples, 0.31%)</title><rect x="551.2" y="1011.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="554.2" y="1022.0"></text>
</g>
<g>
<title>do_futex (10 samples, 0.22%)</title><rect x="552.3" y="995.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.3" y="1006.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.16%)</title><rect x="552.3" y="979.0" width="1.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="555.3" y="990.0"></text>
</g>
<g>
<title>get_futex_key (4 samples, 0.09%)</title><rect x="553.1" y="963.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="556.1" y="974.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (3 samples, 0.07%)</title><rect x="553.3" y="947.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="556.3" y="958.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="554.1" y="979.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="557.1" y="990.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.02%)</title><rect x="554.7" y="979.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="557.7" y="990.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.02%)</title><rect x="554.9" y="1011.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="557.9" y="1022.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="555.2" y="1059.0" width="0.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="558.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="555.4" y="1059.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="558.4" y="1070.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="555.7" y="1059.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="558.7" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="556.0" y="1059.0" width="0.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="559.0" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.07%)</title><rect x="556.2" y="1059.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="559.2" y="1070.0"></text>
</g>
<g>
<title>[unknown] (29 samples, 0.65%)</title><rect x="557.0" y="1075.0" width="7.7" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="560.0" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (29 samples, 0.65%)</title><rect x="557.0" y="1059.0" width="7.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="560.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 0.40%)</title><rect x="559.9" y="1043.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="562.9" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (18 samples, 0.40%)</title><rect x="559.9" y="1027.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="562.9" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.34%)</title><rect x="560.7" y="1011.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="563.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (15 samples, 0.34%)</title><rect x="560.7" y="995.0" width="4.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="563.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (15 samples, 0.34%)</title><rect x="560.7" y="979.0" width="4.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="563.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (13 samples, 0.29%)</title><rect x="561.2" y="963.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="564.2" y="974.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.27%)</title><rect x="561.5" y="947.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="564.5" y="958.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.25%)</title><rect x="561.8" y="931.0" width="2.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="564.8" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.25%)</title><rect x="561.8" y="915.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="564.8" y="926.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="564.7" y="1075.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="567.7" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (4 samples, 0.09%)</title><rect x="564.9" y="1123.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="567.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.09%)</title><rect x="564.9" y="1107.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="567.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.09%)</title><rect x="564.9" y="1091.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="567.9" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (326 samples, 7.28%)</title><rect x="566.0" y="1123.0" width="85.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.0" y="1134.0">java/util/..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="568.1" y="1107.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="571.1" y="1118.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="568.1" y="1091.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="571.1" y="1102.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="568.1" y="1075.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.1" y="1086.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="568.1" y="1059.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="571.1" y="1070.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="568.1" y="1043.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="571.1" y="1054.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="568.1" y="1027.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="571.1" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="568.1" y="1011.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="571.1" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (317 samples, 7.08%)</title><rect x="568.4" y="1107.0" width="83.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="571.4" y="1118.0">java/util..</text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="651.4" y="1091.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="654.4" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="651.4" y="1075.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="654.4" y="1086.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="651.4" y="1059.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="654.4" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="651.4" y="1043.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="654.4" y="1054.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="651.4" y="1027.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="654.4" y="1038.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="651.4" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="654.4" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="651.4" y="995.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="654.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.run (366 samples, 8.18%)</title><rect x="651.9" y="1171.0" width="96.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="654.9" y="1182.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (366 samples, 8.18%)</title><rect x="651.9" y="1155.0" width="96.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="654.9" y="1166.0">ru/mail/pol..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (225 samples, 5.03%)</title><rect x="652.2" y="1139.0" width="59.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.2" y="1150.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="653.3" y="1123.0" width="0.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="656.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="653.3" y="1107.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="656.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="653.3" y="1091.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="656.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (217 samples, 4.85%)</title><rect x="653.5" y="1123.0" width="57.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.5" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.20%)</title><rect x="653.5" y="1107.0" width="2.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="656.5" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="654.0" y="1091.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="657.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.11%)</title><rect x="654.6" y="1091.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="657.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.07%)</title><rect x="654.6" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="657.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="655.4" y="1075.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="658.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="655.4" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="658.4" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="655.6" y="1043.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="658.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="655.6" y="1027.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (208 samples, 4.65%)</title><rect x="655.9" y="1107.0" width="54.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="658.9" y="1118.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (206 samples, 4.60%)</title><rect x="656.4" y="1091.0" width="54.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="659.4" y="1102.0">one/n..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="656.4" y="1075.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="659.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (204 samples, 4.56%)</title><rect x="656.7" y="1075.0" width="53.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="659.7" y="1086.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (203 samples, 4.54%)</title><rect x="656.9" y="1059.0" width="53.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="659.9" y="1070.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="657.5" y="1043.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="660.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="657.7" y="1043.0" width="0.8" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="660.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.07%)</title><rect x="657.7" y="1027.0" width="0.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="660.7" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.07%)</title><rect x="657.7" y="1011.0" width="0.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="660.7" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="657.7" y="995.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="660.7" y="1006.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="658.0" y="995.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="661.0" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="658.0" y="979.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="661.0" y="990.0"></text>
</g>
<g>
<title>__send (196 samples, 4.38%)</title><rect x="658.5" y="1043.0" width="51.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="661.5" y="1054.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (195 samples, 4.36%)</title><rect x="658.8" y="1027.0" width="51.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="661.8" y="1038.0">entry..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.02%)</title><rect x="658.8" y="1011.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="661.8" y="1022.0"></text>
</g>
<g>
<title>do_syscall_64 (194 samples, 4.33%)</title><rect x="659.1" y="1011.0" width="51.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="662.1" y="1022.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (193 samples, 4.31%)</title><rect x="659.3" y="995.0" width="50.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="662.3" y="1006.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (192 samples, 4.29%)</title><rect x="659.3" y="979.0" width="50.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="662.3" y="990.0">__sys..</text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="659.8" y="963.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="662.8" y="974.0"></text>
</g>
<g>
<title>sock_sendmsg (185 samples, 4.13%)</title><rect x="660.1" y="963.0" width="48.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="663.1" y="974.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (178 samples, 3.98%)</title><rect x="660.9" y="947.0" width="46.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="663.9" y="958.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (177 samples, 3.95%)</title><rect x="661.2" y="931.0" width="46.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="664.2" y="942.0">tcp_..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.02%)</title><rect x="661.2" y="915.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="664.2" y="926.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="661.2" y="899.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="664.2" y="910.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.02%)</title><rect x="661.4" y="915.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="664.4" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (175 samples, 3.91%)</title><rect x="661.7" y="915.0" width="46.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="664.7" y="926.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.02%)</title><rect x="662.5" y="899.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="665.5" y="910.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.02%)</title><rect x="662.5" y="883.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="665.5" y="894.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="662.7" y="899.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="665.7" y="910.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.02%)</title><rect x="663.0" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="666.0" y="910.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.02%)</title><rect x="663.0" y="883.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="666.0" y="894.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.02%)</title><rect x="663.3" y="899.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="666.3" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="663.3" y="883.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="666.3" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="663.3" y="867.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="666.3" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="663.3" y="851.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="666.3" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="663.3" y="835.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="666.3" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="663.3" y="819.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="666.3" y="830.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="663.3" y="803.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="666.3" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="663.3" y="787.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="666.3" y="798.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.16%)</title><rect x="663.5" y="899.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="666.5" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.16%)</title><rect x="663.5" y="883.0" width="1.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="666.5" y="894.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (5 samples, 0.11%)</title><rect x="663.5" y="867.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="666.5" y="878.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="664.9" y="867.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="667.9" y="878.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="665.4" y="899.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="668.4" y="910.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="665.6" y="883.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="668.6" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="665.6" y="867.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="668.6" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="665.6" y="851.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="668.6" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="665.6" y="835.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="668.6" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="665.6" y="819.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="668.6" y="830.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="665.6" y="803.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="668.6" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="665.6" y="787.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="668.6" y="798.0"></text>
</g>
<g>
<title>tcp_push (156 samples, 3.49%)</title><rect x="665.9" y="899.0" width="41.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="668.9" y="910.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (156 samples, 3.49%)</title><rect x="665.9" y="883.0" width="41.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="668.9" y="894.0">__t..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (2 samples, 0.04%)</title><rect x="665.9" y="867.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="668.9" y="878.0"></text>
</g>
<g>
<title>tcp_write_xmit (154 samples, 3.44%)</title><rect x="666.4" y="867.0" width="40.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="669.4" y="878.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (134 samples, 2.99%)</title><rect x="667.2" y="851.0" width="35.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="670.2" y="862.0">__t..</text>
</g>
<g>
<title>__tcp_v4_send_check (3 samples, 0.07%)</title><rect x="668.8" y="835.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="671.8" y="846.0"></text>
</g>
<g>
<title>ip_queue_xmit (123 samples, 2.75%)</title><rect x="669.6" y="835.0" width="32.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="672.6" y="846.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (123 samples, 2.75%)</title><rect x="669.6" y="819.0" width="32.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="672.6" y="830.0">__..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="669.6" y="803.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="672.6" y="814.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="669.9" y="803.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="672.9" y="814.0"></text>
</g>
<g>
<title>ip_local_out (121 samples, 2.70%)</title><rect x="670.1" y="803.0" width="31.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="673.1" y="814.0">ip..</text>
</g>
<g>
<title>ip_output (121 samples, 2.70%)</title><rect x="670.1" y="787.0" width="31.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="673.1" y="798.0">ip..</text>
</g>
<g>
<title>ip_finish_output (121 samples, 2.70%)</title><rect x="670.1" y="771.0" width="31.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="673.1" y="782.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (121 samples, 2.70%)</title><rect x="670.1" y="755.0" width="31.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="673.1" y="766.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (108 samples, 2.41%)</title><rect x="671.2" y="739.0" width="28.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="674.2" y="750.0">__..</text>
</g>
<g>
<title>do_softirq.part.21 (107 samples, 2.39%)</title><rect x="671.4" y="723.0" width="28.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="674.4" y="734.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (106 samples, 2.37%)</title><rect x="671.7" y="707.0" width="28.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="674.7" y="718.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (106 samples, 2.37%)</title><rect x="671.7" y="691.0" width="28.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="674.7" y="702.0">_..</text>
</g>
<g>
<title>net_rx_action (103 samples, 2.30%)</title><rect x="672.5" y="675.0" width="27.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="675.5" y="686.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="673.0" y="659.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="676.0" y="670.0"></text>
</g>
<g>
<title>process_backlog (100 samples, 2.23%)</title><rect x="673.3" y="659.0" width="26.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="676.3" y="670.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (95 samples, 2.12%)</title><rect x="674.6" y="643.0" width="25.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="677.6" y="654.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="674.6" y="627.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="677.6" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (94 samples, 2.10%)</title><rect x="674.9" y="627.0" width="24.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="677.9" y="638.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="674.9" y="611.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="677.9" y="622.0"></text>
</g>
<g>
<title>ip_rcv (89 samples, 1.99%)</title><rect x="675.7" y="611.0" width="23.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="678.7" y="622.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (88 samples, 1.97%)</title><rect x="675.7" y="595.0" width="23.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="678.7" y="606.0">i..</text>
</g>
<g>
<title>ip_local_deliver (88 samples, 1.97%)</title><rect x="675.7" y="579.0" width="23.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="678.7" y="590.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (88 samples, 1.97%)</title><rect x="675.7" y="563.0" width="23.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="678.7" y="574.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (87 samples, 1.94%)</title><rect x="675.7" y="547.0" width="22.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="678.7" y="558.0">i..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.04%)</title><rect x="675.7" y="531.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="678.7" y="542.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="676.2" y="531.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="679.2" y="542.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (2 samples, 0.04%)</title><rect x="676.5" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="679.5" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (82 samples, 1.83%)</title><rect x="677.0" y="531.0" width="21.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="680.0" y="542.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="677.5" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="680.5" y="526.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="678.0" y="515.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="681.0" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="678.3" y="515.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="681.3" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (76 samples, 1.70%)</title><rect x="678.6" y="515.0" width="20.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="681.6" y="526.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="678.6" y="499.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="681.6" y="510.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.02%)</title><rect x="678.8" y="499.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="681.8" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (74 samples, 1.65%)</title><rect x="679.1" y="499.0" width="19.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="682.1" y="510.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.09%)</title><rect x="679.6" y="483.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="682.6" y="494.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.07%)</title><rect x="679.9" y="467.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="682.9" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="680.1" y="451.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="683.1" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="680.1" y="435.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="683.1" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="680.1" y="419.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="683.1" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.04%)</title><rect x="680.7" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="683.7" y="494.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.20%)</title><rect x="681.2" y="483.0" width="2.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="684.2" y="494.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="681.7" y="467.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="684.7" y="478.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (4 samples, 0.09%)</title><rect x="682.0" y="467.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="685.0" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="682.3" y="451.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="685.3" y="462.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.02%)</title><rect x="682.3" y="435.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="685.3" y="446.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="682.3" y="419.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="685.3" y="430.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="682.5" y="451.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="685.5" y="462.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.02%)</title><rect x="682.8" y="451.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="685.8" y="462.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.02%)</title><rect x="683.0" y="467.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="686.0" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="683.3" y="467.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="686.3" y="478.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="683.6" y="483.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="686.6" y="494.0"></text>
</g>
<g>
<title>tcp_data_queue (53 samples, 1.18%)</title><rect x="683.8" y="483.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="686.8" y="494.0"></text>
</g>
<g>
<title>sock_def_readable (51 samples, 1.14%)</title><rect x="684.1" y="467.0" width="13.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="687.1" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (50 samples, 1.12%)</title><rect x="684.4" y="451.0" width="13.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="687.4" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (50 samples, 1.12%)</title><rect x="684.4" y="435.0" width="13.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="687.4" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (50 samples, 1.12%)</title><rect x="684.4" y="419.0" width="13.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="687.4" y="430.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="697.5" y="467.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="700.5" y="478.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.04%)</title><rect x="697.8" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="700.8" y="494.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="697.8" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="700.8" y="478.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="698.1" y="451.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="701.1" y="462.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="698.3" y="483.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="701.3" y="494.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="698.6" y="547.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="701.6" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.02%)</title><rect x="698.9" y="595.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="701.9" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.04%)</title><rect x="699.1" y="611.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="702.1" y="622.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.20%)</title><rect x="699.7" y="739.0" width="2.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="702.7" y="750.0"></text>
</g>
<g>
<title>__dev_queue_xmit (9 samples, 0.20%)</title><rect x="699.7" y="723.0" width="2.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="702.7" y="734.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.11%)</title><rect x="699.9" y="707.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="702.9" y="718.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="699.9" y="691.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="702.9" y="702.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.09%)</title><rect x="700.2" y="691.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.2" y="702.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="700.2" y="675.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="703.2" y="686.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.07%)</title><rect x="700.2" y="659.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="703.2" y="670.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.07%)</title><rect x="700.2" y="643.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="703.2" y="654.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="701.0" y="675.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="704.0" y="686.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="701.2" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="704.2" y="718.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.04%)</title><rect x="701.5" y="691.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="704.5" y="702.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="702.0" y="835.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="705.0" y="846.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="702.0" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="705.0" y="830.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="702.3" y="819.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="705.3" y="830.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="702.6" y="851.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="705.6" y="862.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="703.1" y="851.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="706.1" y="862.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="703.3" y="851.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="706.3" y="862.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="703.6" y="851.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="706.6" y="862.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (5 samples, 0.11%)</title><rect x="703.9" y="851.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="706.9" y="862.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.07%)</title><rect x="704.4" y="835.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="707.4" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="704.4" y="819.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="707.4" y="830.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="704.7" y="803.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="707.7" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="704.7" y="787.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="707.7" y="798.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (2 samples, 0.04%)</title><rect x="705.2" y="851.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="708.2" y="862.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="705.7" y="851.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="708.7" y="862.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="706.2" y="851.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="709.2" y="862.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.04%)</title><rect x="706.5" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="709.5" y="862.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.04%)</title><rect x="707.0" y="899.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="710.0" y="910.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="707.0" y="883.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="710.0" y="894.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.02%)</title><rect x="707.6" y="899.0" width="0.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="710.6" y="910.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.09%)</title><rect x="707.8" y="947.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="710.8" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.09%)</title><rect x="707.8" y="931.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="710.8" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.09%)</title><rect x="707.8" y="915.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="710.8" y="926.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.07%)</title><rect x="708.1" y="899.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.1" y="910.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.04%)</title><rect x="708.4" y="883.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="711.4" y="894.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.02%)</title><rect x="708.4" y="867.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="711.4" y="878.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.02%)</title><rect x="708.6" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="711.6" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.09%)</title><rect x="708.9" y="963.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="711.9" y="974.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.07%)</title><rect x="708.9" y="947.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="711.9" y="958.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="708.9" y="931.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.9" y="942.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="708.9" y="915.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="711.9" y="926.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="709.7" y="947.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="712.7" y="958.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.02%)</title><rect x="709.9" y="979.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="712.9" y="990.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="710.2" y="1043.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.2" y="1054.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="710.2" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="713.2" y="1038.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="710.2" y="1011.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.2" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="710.2" y="995.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="713.2" y="1006.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="710.2" y="979.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.2" y="990.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="710.2" y="963.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="713.2" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="710.2" y="947.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.2" y="958.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="710.5" y="1075.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="713.5" y="1086.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="710.5" y="1059.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="713.5" y="1070.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="710.5" y="1043.0" width="0.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="713.5" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.07%)</title><rect x="710.7" y="1123.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="713.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="711.0" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="714.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="711.0" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.0" y="1102.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="711.3" y="1075.0" width="0.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="714.3" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.02%)</title><rect x="711.3" y="1059.0" width="0.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="714.3" y="1070.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.02%)</title><rect x="711.3" y="1043.0" width="0.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="714.3" y="1054.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.02%)</title><rect x="711.3" y="1027.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.3" y="1038.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (136 samples, 3.04%)</title><rect x="711.5" y="1139.0" width="35.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="714.5" y="1150.0">ru/..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.04%)</title><rect x="711.5" y="1123.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="714.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringBuilder.toString (1 samples, 0.02%)</title><rect x="711.8" y="1107.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="714.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.isLatin1 (1 samples, 0.02%)</title><rect x="711.8" y="1091.0" width="0.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="714.8" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (134 samples, 2.99%)</title><rect x="712.0" y="1123.0" width="35.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="715.0" y="1134.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (130 samples, 2.90%)</title><rect x="712.0" y="1107.0" width="34.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="715.0" y="1118.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (130 samples, 2.90%)</title><rect x="712.0" y="1091.0" width="34.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="715.0" y="1102.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (120 samples, 2.68%)</title><rect x="712.6" y="1075.0" width="31.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="715.6" y="1086.0">Ja..</text>
</g>
<g>
<title>__malloc (2 samples, 0.04%)</title><rect x="712.8" y="1059.0" width="0.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="715.8" y="1070.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="713.4" y="1059.0" width="0.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="716.4" y="1070.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="713.4" y="1043.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="716.4" y="1054.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="713.4" y="1027.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="716.4" y="1038.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="713.4" y="1011.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="716.4" y="1022.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="713.4" y="995.0" width="0.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="716.4" y="1006.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="713.4" y="979.0" width="0.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="716.4" y="990.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="713.4" y="963.0" width="0.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.4" y="974.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="713.4" y="947.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="716.4" y="958.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.02%)</title><rect x="713.6" y="1059.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="716.6" y="1070.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="713.9" y="1059.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="716.9" y="1070.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="714.4" y="1059.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="717.4" y="1070.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="714.7" y="1059.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="717.7" y="1070.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (110 samples, 2.46%)</title><rect x="714.9" y="1059.0" width="29.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="717.9" y="1070.0">ro..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="715.2" y="1043.0" width="0.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="718.2" y="1054.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="716.0" y="1043.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="719.0" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (4 samples, 0.09%)</title><rect x="716.3" y="1043.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="719.3" y="1054.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="717.3" y="1043.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="720.3" y="1054.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.07%)</title><rect x="717.6" y="1043.0" width="0.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="720.6" y="1054.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.04%)</title><rect x="717.8" y="1027.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="720.8" y="1038.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="718.4" y="1043.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="721.4" y="1054.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="718.6" y="1027.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="721.6" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.02%)</title><rect x="718.9" y="1027.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="721.9" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="719.2" y="1027.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="722.2" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="719.4" y="1043.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="722.4" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (79 samples, 1.76%)</title><rect x="719.7" y="1043.0" width="20.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="722.7" y="1054.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.02%)</title><rect x="719.7" y="1027.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="722.7" y="1038.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.02%)</title><rect x="720.0" y="1027.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="723.0" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (77 samples, 1.72%)</title><rect x="720.2" y="1027.0" width="20.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="723.2" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (77 samples, 1.72%)</title><rect x="720.2" y="1011.0" width="20.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="723.2" y="1022.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="720.2" y="995.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="723.2" y="1006.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="720.5" y="995.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="723.5" y="1006.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="721.0" y="995.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="724.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.02%)</title><rect x="721.3" y="995.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="724.3" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (66 samples, 1.47%)</title><rect x="721.5" y="995.0" width="17.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="724.5" y="1006.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="722.1" y="979.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="725.1" y="990.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.02%)</title><rect x="722.6" y="979.0" width="0.3" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="725.6" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="722.9" y="979.0" width="0.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="725.9" y="990.0"></text>
</g>
<g>
<title>_init (5 samples, 0.11%)</title><rect x="723.1" y="979.0" width="1.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="726.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (5 samples, 0.11%)</title><rect x="724.4" y="979.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="727.4" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="725.0" y="963.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="728.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.04%)</title><rect x="725.2" y="963.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="728.2" y="974.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.04%)</title><rect x="725.8" y="979.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="728.8" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (5 samples, 0.11%)</title><rect x="726.3" y="979.0" width="1.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="729.3" y="990.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="726.3" y="963.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="729.3" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (3 samples, 0.07%)</title><rect x="726.8" y="963.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="729.8" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="727.3" y="947.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="730.3" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="727.3" y="931.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.3" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="727.3" y="915.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="730.3" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="727.3" y="899.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="730.3" y="910.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="727.3" y="883.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="730.3" y="894.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="727.3" y="867.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="730.3" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="727.3" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="730.3" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (40 samples, 0.89%)</title><rect x="727.6" y="979.0" width="10.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="730.6" y="990.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (36 samples, 0.80%)</title><rect x="727.6" y="963.0" width="9.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="730.6" y="974.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.04%)</title><rect x="728.1" y="947.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="731.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (30 samples, 0.67%)</title><rect x="728.7" y="947.0" width="7.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="731.7" y="958.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (5 samples, 0.11%)</title><rect x="731.6" y="931.0" width="1.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="734.6" y="942.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="732.9" y="931.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="735.9" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="733.1" y="931.0" width="0.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="736.1" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="733.4" y="931.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="736.4" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="733.4" y="915.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="736.4" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="733.4" y="899.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="736.4" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="733.4" y="883.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="736.4" y="894.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="733.4" y="867.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="736.4" y="878.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="733.4" y="851.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="736.4" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="733.4" y="835.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="736.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 0.25%)</title><rect x="733.7" y="931.0" width="2.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="736.7" y="942.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (5 samples, 0.11%)</title><rect x="733.9" y="915.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="736.9" y="926.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="735.2" y="915.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="738.2" y="926.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (4 samples, 0.09%)</title><rect x="735.5" y="915.0" width="1.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="738.5" y="926.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="736.6" y="947.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="739.6" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="737.1" y="963.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="740.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (2 samples, 0.04%)</title><rect x="737.4" y="963.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="740.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="737.9" y="963.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="740.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.04%)</title><rect x="738.1" y="979.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="741.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="738.7" y="979.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="741.7" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="738.9" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="741.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.02%)</title><rect x="739.2" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="742.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.04%)</title><rect x="739.5" y="995.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="742.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.04%)</title><rect x="740.0" y="995.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="743.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (13 samples, 0.29%)</title><rect x="740.5" y="1043.0" width="3.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="743.5" y="1054.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="740.5" y="1027.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="743.5" y="1038.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="740.8" y="1027.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="743.8" y="1038.0"></text>
</g>
<g>
<title>jni_NewByteArray (10 samples, 0.22%)</title><rect x="741.0" y="1027.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="744.0" y="1038.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.07%)</title><rect x="741.3" y="1011.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="744.3" y="1022.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="742.1" y="1011.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="745.1" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 0.11%)</title><rect x="742.4" y="1011.0" width="1.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="745.4" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.07%)</title><rect x="742.9" y="995.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="745.9" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="742.9" y="979.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="745.9" y="990.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="742.9" y="963.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="745.9" y="974.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.04%)</title><rect x="743.2" y="963.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="746.2" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="743.7" y="1027.0" width="0.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="746.7" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.02%)</title><rect x="743.7" y="1011.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="746.7" y="1022.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.02%)</title><rect x="743.9" y="1059.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="746.9" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="744.2" y="1075.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="747.2" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="744.2" y="1059.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="747.2" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="744.2" y="1043.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="747.2" y="1054.0"></text>
</g>
<g>
<title>__malloc (4 samples, 0.09%)</title><rect x="744.5" y="1075.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="747.5" y="1086.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.02%)</title><rect x="745.5" y="1075.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="748.5" y="1086.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.02%)</title><rect x="745.8" y="1075.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="748.8" y="1086.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.02%)</title><rect x="746.1" y="1075.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="749.1" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (4 samples, 0.09%)</title><rect x="746.3" y="1107.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="749.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (4 samples, 0.09%)</title><rect x="747.4" y="1139.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="750.4" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="747.6" y="1123.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="750.6" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="747.6" y="1107.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.6" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="747.6" y="1091.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="750.6" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="747.6" y="1075.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="747.6" y="1059.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="747.9" y="1043.0" width="0.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="750.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="747.9" y="1027.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="750.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="747.9" y="1011.0" width="0.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="750.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (1 samples, 0.02%)</title><rect x="748.2" y="1123.0" width="0.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="751.2" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (1 samples, 0.02%)</title><rect x="748.4" y="1171.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="751.4" y="1182.0"></text>
</g>
<g>
<title>[NIO Worker #7 tid=875] (805 samples, 17.98%)</title><rect x="748.7" y="1235.0" width="212.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="751.7" y="1246.0">[NIO Worker #7 tid=875]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (5 samples, 0.11%)</title><rect x="748.7" y="1219.0" width="1.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="751.7" y="1230.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (4 samples, 0.09%)</title><rect x="748.7" y="1203.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="751.7" y="1214.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.02%)</title><rect x="748.7" y="1187.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="751.7" y="1198.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (1 samples, 0.02%)</title><rect x="748.7" y="1171.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="751.7" y="1182.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.04%)</title><rect x="748.9" y="1187.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="751.9" y="1198.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="749.5" y="1187.0" width="0.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="752.5" y="1198.0"></text>
</g>
<g>
<title>ObjectSynchronizer::inflate(Thread*, oopDesc*, ObjectSynchronizer::InflateCause) (1 samples, 0.02%)</title><rect x="749.7" y="1203.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="752.7" y="1214.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.02%)</title><rect x="750.0" y="1219.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="753.0" y="1230.0"></text>
</g>
<g>
<title>ObjectSynchronizer::quick_enter(oopDesc*, Thread*, BasicLock*) (1 samples, 0.02%)</title><rect x="750.0" y="1203.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="753.0" y="1214.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.02%)</title><rect x="750.3" y="1219.0" width="0.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="753.3" y="1230.0"></text>
</g>
<g>
<title>java/lang/Thread.run (798 samples, 17.83%)</title><rect x="750.5" y="1219.0" width="210.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="753.5" y="1230.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (798 samples, 17.83%)</title><rect x="750.5" y="1203.0" width="210.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.5" y="1214.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (798 samples, 17.83%)</title><rect x="750.5" y="1187.0" width="210.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="753.5" y="1198.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (421 samples, 9.41%)</title><rect x="750.5" y="1171.0" width="111.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="753.5" y="1182.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (417 samples, 9.32%)</title><rect x="751.6" y="1155.0" width="109.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="754.6" y="1166.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (416 samples, 9.29%)</title><rect x="751.8" y="1139.0" width="109.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="754.8" y="1150.0">java/util/con..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.isCancelled (1 samples, 0.02%)</title><rect x="751.8" y="1123.0" width="0.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="754.8" y="1134.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.02%)</title><rect x="752.1" y="1123.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="755.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="752.1" y="1107.0" width="0.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="755.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="752.1" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="755.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (88 samples, 1.97%)</title><rect x="752.4" y="1123.0" width="23.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="755.4" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (88 samples, 1.97%)</title><rect x="752.4" y="1107.0" width="23.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="755.4" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (88 samples, 1.97%)</title><rect x="752.4" y="1091.0" width="23.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="755.4" y="1102.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="752.6" y="1075.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="755.6" y="1086.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="752.9" y="1075.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="755.9" y="1086.0"></text>
</g>
<g>
<title>Unsafe_Park (47 samples, 1.05%)</title><rect x="753.2" y="1075.0" width="12.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="756.2" y="1086.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="754.0" y="1059.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="757.0" y="1070.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="754.5" y="1059.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="757.5" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (7 samples, 0.16%)</title><rect x="754.7" y="1059.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="757.7" y="1070.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="755.5" y="1043.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="758.5" y="1054.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="755.8" y="1043.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="758.8" y="1054.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.02%)</title><rect x="756.3" y="1027.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="759.3" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.07%)</title><rect x="756.6" y="1059.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="759.6" y="1070.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (1 samples, 0.02%)</title><rect x="757.4" y="1059.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="760.4" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (24 samples, 0.54%)</title><rect x="757.6" y="1059.0" width="6.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="760.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.36%)</title><rect x="759.8" y="1043.0" width="4.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="762.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (16 samples, 0.36%)</title><rect x="759.8" y="1027.0" width="4.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="762.8" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 0.22%)</title><rect x="761.3" y="1011.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="764.3" y="1022.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.13%)</title><rect x="762.1" y="995.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="765.1" y="1006.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.11%)</title><rect x="762.1" y="979.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="765.1" y="990.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="762.7" y="963.0" width="0.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="765.7" y="974.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (2 samples, 0.04%)</title><rect x="762.9" y="963.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="765.9" y="974.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.02%)</title><rect x="763.4" y="979.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="766.4" y="990.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="763.7" y="995.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="766.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.02%)</title><rect x="764.0" y="1059.0" width="0.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="767.0" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="764.2" y="1059.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="767.2" y="1070.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="764.5" y="1059.0" width="0.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="767.5" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="764.8" y="1059.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="767.8" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="765.0" y="1059.0" width="0.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="768.0" y="1070.0"></text>
</g>
<g>
<title>[unknown] (36 samples, 0.80%)</title><rect x="765.6" y="1075.0" width="9.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="768.6" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (34 samples, 0.76%)</title><rect x="765.6" y="1059.0" width="8.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="768.6" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.54%)</title><rect x="768.2" y="1043.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="771.2" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="768.2" y="1027.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="771.2" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.51%)</title><rect x="768.5" y="1027.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.5" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (22 samples, 0.49%)</title><rect x="768.7" y="1011.0" width="5.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="771.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.42%)</title><rect x="769.2" y="995.0" width="5.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="772.2" y="1006.0"></text>
</g>
<g>
<title>futex_wait (18 samples, 0.40%)</title><rect x="769.5" y="979.0" width="4.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="772.5" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (16 samples, 0.36%)</title><rect x="770.0" y="963.0" width="4.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="773.0" y="974.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.34%)</title><rect x="770.3" y="947.0" width="4.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="773.3" y="958.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.31%)</title><rect x="770.6" y="931.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="773.6" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.29%)</title><rect x="770.8" y="915.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="773.8" y="926.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="774.0" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="777.0" y="910.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="774.0" y="883.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="777.0" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="774.0" y="867.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="777.0" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="774.0" y="851.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="777.0" y="862.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="774.0" y="835.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="777.0" y="846.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="774.0" y="819.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="777.0" y="830.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="774.0" y="803.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="777.0" y="814.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="774.3" y="995.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="777.3" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (1 samples, 0.02%)</title><rect x="774.5" y="1059.0" width="0.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="777.5" y="1070.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="774.8" y="1059.0" width="0.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="777.8" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="775.0" y="1075.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="778.0" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (5 samples, 0.11%)</title><rect x="775.6" y="1123.0" width="1.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="778.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.07%)</title><rect x="776.1" y="1107.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="779.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.07%)</title><rect x="776.1" y="1091.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="779.1" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (321 samples, 7.17%)</title><rect x="776.9" y="1123.0" width="84.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="779.9" y="1134.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (310 samples, 6.93%)</title><rect x="779.8" y="1107.0" width="81.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="782.8" y="1118.0">java/util..</text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="861.0" y="1091.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="864.0" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="861.0" y="1075.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.0" y="1086.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="861.0" y="1059.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="864.0" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="861.0" y="1043.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="864.0" y="1054.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="861.0" y="1027.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="864.0" y="1038.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="861.0" y="1011.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="864.0" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="861.0" y="995.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="864.0" y="1006.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="861.3" y="1027.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="864.3" y="1038.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.02%)</title><rect x="861.3" y="1011.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="864.3" y="1022.0"></text>
</g>
<g>
<title>poll_spurious_irqs (1 samples, 0.02%)</title><rect x="861.3" y="995.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="864.3" y="1006.0"></text>
</g>
<g>
<title>irq_to_desc (1 samples, 0.02%)</title><rect x="861.3" y="979.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="864.3" y="990.0"></text>
</g>
<g>
<title>radix_tree_lookup (1 samples, 0.02%)</title><rect x="861.3" y="963.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="864.3" y="974.0"></text>
</g>
<g>
<title>__radix_tree_lookup (1 samples, 0.02%)</title><rect x="861.3" y="947.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="864.3" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.run (377 samples, 8.42%)</title><rect x="861.5" y="1171.0" width="99.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="864.5" y="1182.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (377 samples, 8.42%)</title><rect x="861.5" y="1155.0" width="99.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="864.5" y="1166.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (232 samples, 5.18%)</title><rect x="861.5" y="1139.0" width="61.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="864.5" y="1150.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.07%)</title><rect x="862.3" y="1123.0" width="0.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="865.3" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.07%)</title><rect x="862.3" y="1107.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="865.3" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.07%)</title><rect x="862.3" y="1091.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="865.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="862.8" y="1075.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="865.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (225 samples, 5.03%)</title><rect x="863.1" y="1123.0" width="59.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="866.1" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.18%)</title><rect x="863.1" y="1107.0" width="2.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="866.1" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="863.9" y="1091.0" width="0.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="866.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.09%)</title><rect x="864.2" y="1091.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="867.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.02%)</title><rect x="864.2" y="1075.0" width="0.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="867.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.02%)</title><rect x="864.4" y="1075.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="867.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="864.7" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="867.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.04%)</title><rect x="864.7" y="1059.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="867.7" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (217 samples, 4.85%)</title><rect x="865.2" y="1107.0" width="57.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="868.2" y="1118.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (217 samples, 4.85%)</title><rect x="865.2" y="1091.0" width="57.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.2" y="1102.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (1 samples, 0.02%)</title><rect x="865.2" y="1075.0" width="0.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="868.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (212 samples, 4.74%)</title><rect x="865.5" y="1075.0" width="55.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="868.5" y="1086.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (212 samples, 4.74%)</title><rect x="865.5" y="1059.0" width="55.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="868.5" y="1070.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.02%)</title><rect x="866.5" y="1043.0" width="0.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="869.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="866.8" y="1043.0" width="1.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="869.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.11%)</title><rect x="866.8" y="1027.0" width="1.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="869.8" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="866.8" y="1011.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="869.8" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="866.8" y="995.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="869.8" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.02%)</title><rect x="867.1" y="979.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="870.1" y="990.0"></text>
</g>
<g>
<title>__send (2 samples, 0.04%)</title><rect x="867.3" y="1011.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="870.3" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="867.8" y="1011.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="870.8" y="1022.0"></text>
</g>
<g>
<title>__send (202 samples, 4.51%)</title><rect x="868.1" y="1043.0" width="53.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="871.1" y="1054.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (198 samples, 4.42%)</title><rect x="869.2" y="1027.0" width="52.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="872.2" y="1038.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (198 samples, 4.42%)</title><rect x="869.2" y="1011.0" width="52.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="872.2" y="1022.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (196 samples, 4.38%)</title><rect x="869.7" y="995.0" width="51.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="872.7" y="1006.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (193 samples, 4.31%)</title><rect x="870.0" y="979.0" width="50.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="873.0" y="990.0">__sys..</text>
</g>
<g>
<title>sock_sendmsg (187 samples, 4.18%)</title><rect x="870.2" y="963.0" width="49.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="873.2" y="974.0">sock_..</text>
</g>
<g>
<title>inet_sendmsg (181 samples, 4.04%)</title><rect x="870.7" y="947.0" width="47.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="873.7" y="958.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (180 samples, 4.02%)</title><rect x="871.0" y="931.0" width="47.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="874.0" y="942.0">tcp_..</text>
</g>
<g>
<title>lock_sock_nested (4 samples, 0.09%)</title><rect x="871.5" y="915.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="874.5" y="926.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.07%)</title><rect x="871.5" y="899.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="874.5" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.02%)</title><rect x="872.3" y="899.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="875.3" y="910.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.02%)</title><rect x="872.6" y="915.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="875.6" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.02%)</title><rect x="872.6" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="875.6" y="910.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.02%)</title><rect x="872.6" y="883.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="875.6" y="894.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.04%)</title><rect x="872.9" y="915.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="875.9" y="926.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="873.4" y="915.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="876.4" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (169 samples, 3.78%)</title><rect x="873.9" y="915.0" width="44.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="876.9" y="926.0">tcp_..</text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="873.9" y="899.0" width="0.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="876.9" y="910.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.07%)</title><rect x="874.2" y="899.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="877.2" y="910.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.07%)</title><rect x="874.2" y="883.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="877.2" y="894.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.25%)</title><rect x="875.0" y="899.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="878.0" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.22%)</title><rect x="875.2" y="883.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="878.2" y="894.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.09%)</title><rect x="875.8" y="867.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="878.8" y="878.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.09%)</title><rect x="875.8" y="851.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="878.8" y="862.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="876.5" y="835.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="879.5" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.07%)</title><rect x="876.8" y="867.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="879.8" y="878.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.02%)</title><rect x="877.6" y="867.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="880.6" y="878.0"></text>
</g>
<g>
<title>tcp_push (150 samples, 3.35%)</title><rect x="877.9" y="899.0" width="39.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="880.9" y="910.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (147 samples, 3.28%)</title><rect x="878.7" y="883.0" width="38.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="881.7" y="894.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (147 samples, 3.28%)</title><rect x="878.7" y="867.0" width="38.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="881.7" y="878.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (139 samples, 3.11%)</title><rect x="878.9" y="851.0" width="36.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="881.9" y="862.0">__t..</text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.04%)</title><rect x="879.7" y="835.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="882.7" y="846.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="880.2" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="883.2" y="846.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="880.5" y="835.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="883.5" y="846.0"></text>
</g>
<g>
<title>ip_queue_xmit (131 samples, 2.93%)</title><rect x="880.8" y="835.0" width="34.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="883.8" y="846.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (130 samples, 2.90%)</title><rect x="880.8" y="819.0" width="34.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="883.8" y="830.0">__..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.02%)</title><rect x="881.0" y="803.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="884.0" y="814.0"></text>
</g>
<g>
<title>__sk_dst_check (2 samples, 0.04%)</title><rect x="881.3" y="803.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="884.3" y="814.0"></text>
</g>
<g>
<title>ip_local_out (124 samples, 2.77%)</title><rect x="881.8" y="803.0" width="32.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="884.8" y="814.0">ip..</text>
</g>
<g>
<title>ip_output (124 samples, 2.77%)</title><rect x="881.8" y="787.0" width="32.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="884.8" y="798.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.02%)</title><rect x="882.1" y="771.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="885.1" y="782.0"></text>
</g>
<g>
<title>ip_finish_output (122 samples, 2.73%)</title><rect x="882.3" y="771.0" width="32.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="885.3" y="782.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (121 samples, 2.70%)</title><rect x="882.6" y="755.0" width="31.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="885.6" y="766.0">ip..</text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.02%)</title><rect x="883.4" y="739.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="886.4" y="750.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (102 samples, 2.28%)</title><rect x="883.7" y="739.0" width="26.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="886.7" y="750.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (102 samples, 2.28%)</title><rect x="883.7" y="723.0" width="26.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="886.7" y="734.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (101 samples, 2.26%)</title><rect x="883.9" y="707.0" width="26.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="886.9" y="718.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (101 samples, 2.26%)</title><rect x="883.9" y="691.0" width="26.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="886.9" y="702.0">_..</text>
</g>
<g>
<title>net_rx_action (101 samples, 2.26%)</title><rect x="883.9" y="675.0" width="26.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="886.9" y="686.0">n..</text>
</g>
<g>
<title>process_backlog (99 samples, 2.21%)</title><rect x="884.5" y="659.0" width="26.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="887.5" y="670.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (96 samples, 2.14%)</title><rect x="885.0" y="643.0" width="25.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="888.0" y="654.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="885.0" y="627.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="888.0" y="638.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (94 samples, 2.10%)</title><rect x="885.5" y="627.0" width="24.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="888.5" y="638.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.07%)</title><rect x="885.5" y="611.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="888.5" y="622.0"></text>
</g>
<g>
<title>ip_rcv (90 samples, 2.01%)</title><rect x="886.3" y="611.0" width="23.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="889.3" y="622.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (90 samples, 2.01%)</title><rect x="886.3" y="595.0" width="23.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="889.3" y="606.0">i..</text>
</g>
<g>
<title>ip_local_deliver (89 samples, 1.99%)</title><rect x="886.3" y="579.0" width="23.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="889.3" y="590.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (89 samples, 1.99%)</title><rect x="886.3" y="563.0" width="23.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="889.3" y="574.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (87 samples, 1.94%)</title><rect x="886.3" y="547.0" width="22.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.3" y="558.0">i..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.02%)</title><rect x="886.3" y="531.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="889.3" y="542.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.02%)</title><rect x="886.6" y="531.0" width="0.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="889.6" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (85 samples, 1.90%)</title><rect x="886.8" y="531.0" width="22.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="889.8" y="542.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.09%)</title><rect x="887.9" y="515.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.9" y="526.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.02%)</title><rect x="888.9" y="515.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="891.9" y="526.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="889.2" y="515.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.2" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (75 samples, 1.68%)</title><rect x="889.5" y="515.0" width="19.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="892.5" y="526.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.02%)</title><rect x="889.5" y="499.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="892.5" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (74 samples, 1.65%)</title><rect x="889.7" y="499.0" width="19.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="892.7" y="510.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.07%)</title><rect x="890.0" y="483.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="893.0" y="494.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.07%)</title><rect x="890.0" y="467.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="893.0" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="890.0" y="451.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="893.0" y="462.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="890.0" y="435.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="893.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="890.3" y="419.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="893.3" y="430.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.07%)</title><rect x="890.8" y="483.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="893.8" y="494.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.40%)</title><rect x="891.6" y="483.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="894.6" y="494.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="893.4" y="467.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="896.4" y="478.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.02%)</title><rect x="893.7" y="467.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="896.7" y="478.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.13%)</title><rect x="893.9" y="467.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="896.9" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.11%)</title><rect x="894.2" y="451.0" width="1.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="897.2" y="462.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="894.2" y="435.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.2" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="894.2" y="419.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="897.2" y="430.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="894.5" y="403.0" width="0.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="897.5" y="414.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.07%)</title><rect x="894.7" y="435.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="897.7" y="446.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="894.7" y="419.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="897.7" y="430.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.07%)</title><rect x="894.7" y="403.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="897.7" y="414.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.07%)</title><rect x="894.7" y="387.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="897.7" y="398.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="895.0" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="898.0" y="382.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="895.5" y="467.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="898.5" y="478.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.02%)</title><rect x="895.8" y="467.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="898.8" y="478.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="896.1" y="467.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.1" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (46 samples, 1.03%)</title><rect x="896.3" y="483.0" width="12.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="899.3" y="494.0"></text>
</g>
<g>
<title>sock_def_readable (43 samples, 0.96%)</title><rect x="897.1" y="467.0" width="11.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="900.1" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (42 samples, 0.94%)</title><rect x="897.4" y="451.0" width="11.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="900.4" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (41 samples, 0.92%)</title><rect x="897.4" y="435.0" width="10.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="900.4" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (41 samples, 0.92%)</title><rect x="897.4" y="419.0" width="10.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="900.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="908.2" y="435.0" width="0.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="911.2" y="446.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.02%)</title><rect x="908.4" y="483.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="911.4" y="494.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="908.7" y="483.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="911.7" y="494.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.02%)</title><rect x="909.0" y="483.0" width="0.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="912.0" y="494.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.04%)</title><rect x="909.2" y="547.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="912.2" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.02%)</title><rect x="909.8" y="579.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="912.8" y="590.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.02%)</title><rect x="910.0" y="611.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="913.0" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.02%)</title><rect x="910.3" y="643.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="913.3" y="654.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.34%)</title><rect x="910.6" y="739.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="913.6" y="750.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.34%)</title><rect x="910.6" y="723.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="913.6" y="734.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (7 samples, 0.16%)</title><rect x="911.6" y="707.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="914.6" y="718.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.11%)</title><rect x="911.9" y="691.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="914.9" y="702.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="911.9" y="675.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="914.9" y="686.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="912.1" y="675.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="915.1" y="686.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="912.1" y="659.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="915.1" y="670.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="912.1" y="643.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="915.1" y="654.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="912.7" y="675.0" width="0.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="915.7" y="686.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="912.9" y="675.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="915.9" y="686.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="913.2" y="691.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="916.2" y="702.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.07%)</title><rect x="913.5" y="707.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.5" y="718.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.02%)</title><rect x="914.0" y="691.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="917.0" y="702.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.02%)</title><rect x="914.2" y="707.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="917.2" y="718.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.02%)</title><rect x="914.5" y="803.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="917.5" y="814.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.02%)</title><rect x="914.8" y="803.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="917.8" y="814.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.02%)</title><rect x="915.0" y="819.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="918.0" y="830.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="915.3" y="835.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="918.3" y="846.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="915.3" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="918.3" y="830.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.02%)</title><rect x="915.6" y="851.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="918.6" y="862.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.02%)</title><rect x="915.8" y="851.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="918.8" y="862.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.02%)</title><rect x="916.1" y="851.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="919.1" y="862.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.04%)</title><rect x="916.4" y="851.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="919.4" y="862.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.02%)</title><rect x="916.4" y="835.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.4" y="846.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="916.6" y="835.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="919.6" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="916.6" y="819.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="919.6" y="830.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.02%)</title><rect x="916.6" y="803.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="919.6" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="916.6" y="787.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="919.6" y="798.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="916.9" y="851.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.9" y="862.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.02%)</title><rect x="917.1" y="851.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="920.1" y="862.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="917.4" y="899.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="920.4" y="910.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.07%)</title><rect x="917.7" y="899.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="920.7" y="910.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="917.7" y="883.0" width="0.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="920.7" y="894.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="917.9" y="883.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="920.9" y="894.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.02%)</title><rect x="918.2" y="867.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.2" y="878.0"></text>
</g>
<g>
<title>security_socket_sendmsg (4 samples, 0.09%)</title><rect x="918.5" y="947.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="921.5" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.09%)</title><rect x="918.5" y="931.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="921.5" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.09%)</title><rect x="918.5" y="915.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="921.5" y="926.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.07%)</title><rect x="918.7" y="899.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="921.7" y="910.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.07%)</title><rect x="918.7" y="883.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="921.7" y="894.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.02%)</title><rect x="918.7" y="867.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="921.7" y="878.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.04%)</title><rect x="919.0" y="867.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="922.0" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.11%)</title><rect x="919.5" y="963.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="922.5" y="974.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.09%)</title><rect x="919.5" y="947.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="922.5" y="958.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.02%)</title><rect x="919.5" y="931.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="922.5" y="942.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.07%)</title><rect x="919.8" y="931.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="922.8" y="942.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.07%)</title><rect x="919.8" y="915.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="922.8" y="926.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.02%)</title><rect x="920.6" y="947.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="923.6" y="958.0"></text>
</g>
<g>
<title>fput (1 samples, 0.02%)</title><rect x="920.8" y="979.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="923.8" y="990.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.02%)</title><rect x="921.1" y="979.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="924.1" y="990.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (4 samples, 0.09%)</title><rect x="921.4" y="1075.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="924.4" y="1086.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.02%)</title><rect x="921.4" y="1059.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="924.4" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.07%)</title><rect x="921.6" y="1059.0" width="0.8" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="924.6" y="1070.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="921.9" y="1043.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="924.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="922.4" y="1123.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="925.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="922.4" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="925.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="922.4" y="1091.0" width="0.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.4" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (138 samples, 3.08%)</title><rect x="922.7" y="1139.0" width="36.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.7" y="1150.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (138 samples, 3.08%)</title><rect x="922.7" y="1123.0" width="36.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="925.7" y="1134.0">ru/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="922.7" y="1107.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="925.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.02%)</title><rect x="922.7" y="1091.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="925.7" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="922.7" y="1075.0" width="0.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="925.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="922.7" y="1059.0" width="0.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="925.7" y="1070.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (134 samples, 2.99%)</title><rect x="922.9" y="1107.0" width="35.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="925.9" y="1118.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (133 samples, 2.97%)</title><rect x="923.2" y="1091.0" width="35.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="926.2" y="1102.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (117 samples, 2.61%)</title><rect x="923.5" y="1075.0" width="30.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="926.5" y="1086.0">Ja..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="924.3" y="1059.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="927.3" y="1070.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.02%)</title><rect x="924.5" y="1059.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="927.5" y="1070.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="924.8" y="1059.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="927.8" y="1070.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.09%)</title><rect x="925.1" y="1059.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="928.1" y="1070.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.02%)</title><rect x="926.1" y="1059.0" width="0.3" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="929.1" y="1070.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.02%)</title><rect x="926.4" y="1059.0" width="0.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="929.4" y="1070.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="926.6" y="1059.0" width="0.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="929.6" y="1070.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="927.2" y="1059.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="930.2" y="1070.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (100 samples, 2.23%)</title><rect x="927.4" y="1059.0" width="26.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="930.4" y="1070.0">r..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.07%)</title><rect x="927.4" y="1043.0" width="0.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="930.4" y="1054.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.02%)</title><rect x="928.2" y="1043.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="931.2" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="928.5" y="1043.0" width="0.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="931.5" y="1054.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="928.7" y="1043.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="931.7" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="929.3" y="1043.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="932.3" y="1054.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="929.3" y="1027.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="932.3" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.07%)</title><rect x="929.5" y="1027.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="932.5" y="1038.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.02%)</title><rect x="930.3" y="1043.0" width="0.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="933.3" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="930.6" y="1043.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="933.6" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (73 samples, 1.63%)</title><rect x="931.1" y="1043.0" width="19.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="934.1" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="931.1" y="1027.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="934.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (71 samples, 1.59%)</title><rect x="931.4" y="1027.0" width="18.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="934.4" y="1038.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="931.9" y="1011.0" width="0.3" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="934.9" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (66 samples, 1.47%)</title><rect x="932.2" y="1011.0" width="17.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="935.2" y="1022.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="932.2" y="995.0" width="0.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="935.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (4 samples, 0.09%)</title><rect x="932.4" y="995.0" width="1.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="935.4" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (56 samples, 1.25%)</title><rect x="933.5" y="995.0" width="14.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="936.5" y="1006.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.04%)</title><rect x="934.0" y="979.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="937.0" y="990.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.02%)</title><rect x="934.5" y="979.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="937.5" y="990.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="934.8" y="979.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="937.8" y="990.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.09%)</title><rect x="935.3" y="979.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="938.3" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="935.6" y="963.0" width="0.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="938.6" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="935.9" y="963.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="938.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.02%)</title><rect x="936.1" y="963.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="939.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="936.1" y="947.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="939.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.07%)</title><rect x="936.4" y="979.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="939.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="936.4" y="963.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="939.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.04%)</title><rect x="936.7" y="963.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="939.7" y="974.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.02%)</title><rect x="937.2" y="979.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="940.2" y="990.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="937.4" y="979.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="940.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (34 samples, 0.76%)</title><rect x="937.7" y="979.0" width="9.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="940.7" y="990.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (30 samples, 0.67%)</title><rect x="938.5" y="963.0" width="7.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="941.5" y="974.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.04%)</title><rect x="938.8" y="947.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="941.8" y="958.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (22 samples, 0.49%)</title><rect x="939.3" y="947.0" width="5.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="942.3" y="958.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (1 samples, 0.02%)</title><rect x="941.7" y="931.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="944.7" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="941.9" y="931.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="944.9" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 0.25%)</title><rect x="942.2" y="931.0" width="2.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="945.2" y="942.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.04%)</title><rect x="942.7" y="915.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="945.7" y="926.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (6 samples, 0.13%)</title><rect x="943.2" y="915.0" width="1.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="946.2" y="926.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.02%)</title><rect x="944.6" y="899.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.6" y="910.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.02%)</title><rect x="944.6" y="883.0" width="0.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="947.6" y="894.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="944.6" y="867.0" width="0.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="947.6" y="878.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="944.6" y="851.0" width="0.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.6" y="862.0"></text>
</g>
<g>
<title>tasklet_hi_action (1 samples, 0.02%)</title><rect x="944.6" y="835.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="947.6" y="846.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.23 (1 samples, 0.02%)</title><rect x="944.6" y="819.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="947.6" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="944.8" y="915.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="947.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.02%)</title><rect x="945.1" y="947.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="948.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (2 samples, 0.04%)</title><rect x="945.4" y="947.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="948.4" y="958.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="945.9" y="947.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="948.9" y="958.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.02%)</title><rect x="946.4" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="949.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (3 samples, 0.07%)</title><rect x="946.7" y="979.0" width="0.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="949.7" y="990.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="947.5" y="979.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="950.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.04%)</title><rect x="947.7" y="979.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="950.7" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="948.3" y="995.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="951.3" y="1006.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="948.5" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="951.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.02%)</title><rect x="948.8" y="995.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="951.8" y="1006.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.02%)</title><rect x="949.0" y="995.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="952.0" y="1006.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="949.3" y="995.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="952.3" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (2 samples, 0.04%)</title><rect x="949.6" y="1011.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="952.6" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.02%)</title><rect x="950.1" y="1027.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="953.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (13 samples, 0.29%)</title><rect x="950.4" y="1043.0" width="3.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="953.4" y="1054.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="950.4" y="1027.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="953.4" y="1038.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="950.6" y="1027.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="953.6" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="950.6" y="1011.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="953.6" y="1022.0"></text>
</g>
<g>
<title>jni_NewByteArray (9 samples, 0.20%)</title><rect x="950.9" y="1027.0" width="2.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="953.9" y="1038.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.04%)</title><rect x="950.9" y="1011.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="953.9" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.02%)</title><rect x="951.4" y="1011.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="954.4" y="1022.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 0.13%)</title><rect x="951.7" y="1011.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="954.7" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 0.11%)</title><rect x="951.9" y="995.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="954.9" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.07%)</title><rect x="951.9" y="979.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="954.9" y="990.0"></text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (1 samples, 0.02%)</title><rect x="951.9" y="963.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="954.9" y="974.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="952.2" y="963.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="955.2" y="974.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="952.7" y="979.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="955.7" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="953.0" y="979.0" width="0.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="956.0" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="953.3" y="1027.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="956.3" y="1038.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="953.3" y="1011.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="956.3" y="1022.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="953.5" y="1011.0" width="0.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="956.5" y="1022.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.02%)</title><rect x="953.8" y="1059.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="956.8" y="1070.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.02%)</title><rect x="954.1" y="1059.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="957.1" y="1070.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="954.3" y="1075.0" width="0.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="957.3" y="1086.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="954.3" y="1059.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="957.3" y="1070.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="954.3" y="1043.0" width="0.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="957.3" y="1054.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="954.6" y="1075.0" width="0.2" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="957.6" y="1086.0"></text>
</g>
<g>
<title>__malloc (4 samples, 0.09%)</title><rect x="954.8" y="1075.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="957.8" y="1086.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="955.9" y="1075.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="958.9" y="1086.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.04%)</title><rect x="956.4" y="1075.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="959.4" y="1086.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.07%)</title><rect x="957.0" y="1075.0" width="0.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="960.0" y="1086.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="957.7" y="1075.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="960.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (3 samples, 0.07%)</title><rect x="958.3" y="1107.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="961.3" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (2 samples, 0.04%)</title><rect x="958.5" y="1091.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="961.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="958.5" y="1075.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.5" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="958.5" y="1059.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="961.5" y="1070.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="958.5" y="1043.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="961.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (7 samples, 0.16%)</title><rect x="959.1" y="1139.0" width="1.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.1" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="959.1" y="1123.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="962.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="959.1" y="1107.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="962.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="959.1" y="1091.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="959.1" y="1075.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="962.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="959.6" y="1059.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="959.6" y="1043.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="962.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.02%)</title><rect x="959.6" y="1027.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="962.6" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.02%)</title><rect x="959.6" y="1011.0" width="0.3" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="962.6" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (4 samples, 0.09%)</title><rect x="959.9" y="1123.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="962.9" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="959.9" y="1107.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="962.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (3 samples, 0.07%)</title><rect x="960.1" y="1107.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="963.1" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.07%)</title><rect x="960.1" y="1091.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.1" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="960.1" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="963.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="960.1" y="1059.0" width="0.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.1" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="960.1" y="1043.0" width="0.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="963.1" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="960.4" y="1027.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="963.4" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="960.4" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="963.4" y="1022.0"></text>
</g>
<g>
<title>[NIO Worker #8 tid=874] (819 samples, 18.30%)</title><rect x="960.9" y="1235.0" width="215.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="963.9" y="1246.0">[NIO Worker #8 tid=874]</text>
</g>
<g>
<title>java/lang/Thread.run (819 samples, 18.30%)</title><rect x="960.9" y="1219.0" width="215.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="963.9" y="1230.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (819 samples, 18.30%)</title><rect x="960.9" y="1203.0" width="215.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="963.9" y="1214.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (819 samples, 18.30%)</title><rect x="960.9" y="1187.0" width="215.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="963.9" y="1198.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (1 samples, 0.02%)</title><rect x="961.2" y="1171.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.2" y="1182.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (1 samples, 0.02%)</title><rect x="961.2" y="1155.0" width="0.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="964.2" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (1 samples, 0.02%)</title><rect x="961.2" y="1139.0" width="0.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="964.2" y="1150.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.compareAndSetState (1 samples, 0.02%)</title><rect x="961.2" y="1123.0" width="0.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="964.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LII_Z (1 samples, 0.02%)</title><rect x="961.2" y="1107.0" width="0.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="964.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleInts$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="961.2" y="1091.0" width="0.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="964.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (430 samples, 9.61%)</title><rect x="961.4" y="1171.0" width="113.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.4" y="1182.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (1 samples, 0.02%)</title><rect x="961.4" y="1155.0" width="0.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="964.4" y="1166.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (429 samples, 9.58%)</title><rect x="961.7" y="1155.0" width="113.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="964.7" y="1166.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (429 samples, 9.58%)</title><rect x="961.7" y="1139.0" width="113.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="964.7" y="1150.0">java/util/conc..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (1 samples, 0.02%)</title><rect x="962.2" y="1123.0" width="0.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="965.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="962.2" y="1107.0" width="0.3" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="965.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="962.2" y="1091.0" width="0.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="965.2" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (91 samples, 2.03%)</title><rect x="962.5" y="1123.0" width="24.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="965.5" y="1134.0">j..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (91 samples, 2.03%)</title><rect x="962.5" y="1107.0" width="24.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="965.5" y="1118.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (91 samples, 2.03%)</title><rect x="962.5" y="1091.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="965.5" y="1102.0">j..</text>
</g>
<g>
<title>Unsafe_Park (55 samples, 1.23%)</title><rect x="962.5" y="1075.0" width="14.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="965.5" y="1086.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (1 samples, 0.02%)</title><rect x="963.8" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="966.8" y="1070.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="964.1" y="1059.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="967.1" y="1070.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.22%)</title><rect x="964.3" y="1059.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="967.3" y="1070.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.07%)</title><rect x="965.1" y="1043.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="968.1" y="1054.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.07%)</title><rect x="965.9" y="1043.0" width="0.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="968.9" y="1054.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.02%)</title><rect x="966.7" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="969.7" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (1 samples, 0.02%)</title><rect x="967.0" y="1059.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="970.0" y="1070.0"></text>
</g>
<g>
<title>__lll_unlock_wake (30 samples, 0.67%)</title><rect x="967.2" y="1059.0" width="7.9" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="970.2" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.47%)</title><rect x="969.6" y="1043.0" width="5.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="972.6" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.47%)</title><rect x="969.6" y="1027.0" width="5.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="972.6" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.42%)</title><rect x="970.1" y="1011.0" width="5.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="973.1" y="1022.0"></text>
</g>
<g>
<title>do_futex (16 samples, 0.36%)</title><rect x="970.7" y="995.0" width="4.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="973.7" y="1006.0"></text>
</g>
<g>
<title>futex_wake (11 samples, 0.25%)</title><rect x="970.9" y="979.0" width="2.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="973.9" y="990.0"></text>
</g>
<g>
<title>get_futex_key (6 samples, 0.13%)</title><rect x="972.2" y="963.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="975.2" y="974.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (2 samples, 0.04%)</title><rect x="973.3" y="947.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.3" y="958.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="973.8" y="979.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="976.8" y="990.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="974.4" y="979.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="977.4" y="990.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.02%)</title><rect x="974.9" y="995.0" width="0.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.9" y="1006.0"></text>
</g>
<g>
<title>__pthread_mutex_trylock (1 samples, 0.02%)</title><rect x="975.1" y="1059.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="978.1" y="1070.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="975.4" y="1059.0" width="0.3" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="978.4" y="1070.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="975.7" y="1059.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="978.7" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="976.2" y="1059.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="979.2" y="1070.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="976.7" y="1059.0" width="0.3" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="979.7" y="1070.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 0.78%)</title><rect x="977.0" y="1075.0" width="9.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="980.0" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_wait (34 samples, 0.76%)</title><rect x="977.0" y="1059.0" width="9.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="980.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 0.58%)</title><rect x="979.1" y="1043.0" width="6.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="982.1" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.02%)</title><rect x="979.1" y="1027.0" width="0.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="982.1" y="1038.0"></text>
</g>
<g>
<title>do_syscall_64 (25 samples, 0.56%)</title><rect x="979.4" y="1027.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="982.4" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (24 samples, 0.54%)</title><rect x="979.6" y="1011.0" width="6.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="982.6" y="1022.0"></text>
</g>
<g>
<title>do_futex (22 samples, 0.49%)</title><rect x="979.9" y="995.0" width="5.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="982.9" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="979.9" y="979.0" width="0.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="982.9" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="979.9" y="963.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="982.9" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="979.9" y="947.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="982.9" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="979.9" y="931.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="982.9" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="979.9" y="915.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="982.9" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="979.9" y="899.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="982.9" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="979.9" y="883.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="982.9" y="894.0"></text>
</g>
<g>
<title>futex_wait (20 samples, 0.45%)</title><rect x="980.2" y="979.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.2" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.38%)</title><rect x="980.7" y="963.0" width="4.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="983.7" y="974.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.31%)</title><rect x="981.5" y="947.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="984.5" y="958.0"></text>
</g>
<g>
<title>__schedule (12 samples, 0.27%)</title><rect x="982.0" y="931.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="985.0" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (12 samples, 0.27%)</title><rect x="982.0" y="915.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="985.0" y="926.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.02%)</title><rect x="985.2" y="963.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="988.2" y="974.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="985.4" y="979.0" width="0.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="988.4" y="990.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.02%)</title><rect x="985.7" y="995.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="988.7" y="1006.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.02%)</title><rect x="986.0" y="1059.0" width="0.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="989.0" y="1070.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.02%)</title><rect x="986.2" y="1075.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="989.2" y="1086.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (1 samples, 0.02%)</title><rect x="986.5" y="1123.0" width="0.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="989.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (1 samples, 0.02%)</title><rect x="986.5" y="1107.0" width="0.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="989.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (1 samples, 0.02%)</title><rect x="986.5" y="1091.0" width="0.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="989.5" y="1102.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (334 samples, 7.46%)</title><rect x="986.7" y="1123.0" width="88.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="989.7" y="1134.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (317 samples, 7.08%)</title><rect x="991.2" y="1107.0" width="83.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="994.2" y="1118.0">java/util..</text>
</g>
<g>
<title>apic_timer_interrupt (5 samples, 0.11%)</title><rect x="1073.5" y="1091.0" width="1.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1076.5" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (5 samples, 0.11%)</title><rect x="1073.5" y="1075.0" width="1.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1076.5" y="1086.0"></text>
</g>
<g>
<title>irq_exit (5 samples, 0.11%)</title><rect x="1073.5" y="1059.0" width="1.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1076.5" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.11%)</title><rect x="1073.5" y="1043.0" width="1.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1076.5" y="1054.0"></text>
</g>
<g>
<title>run_rebalance_domains (5 samples, 0.11%)</title><rect x="1073.5" y="1027.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.5" y="1038.0"></text>
</g>
<g>
<title>update_blocked_averages (5 samples, 0.11%)</title><rect x="1073.5" y="1011.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1076.5" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (5 samples, 0.11%)</title><rect x="1073.5" y="995.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1076.5" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.run (385 samples, 8.60%)</title><rect x="1074.8" y="1171.0" width="101.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1077.8" y="1182.0">ru/mail/poli..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (385 samples, 8.60%)</title><rect x="1074.8" y="1155.0" width="101.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1077.8" y="1166.0">ru/mail/poli..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (232 samples, 5.18%)</title><rect x="1074.8" y="1139.0" width="61.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1077.8" y="1150.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.02%)</title><rect x="1075.8" y="1123.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1078.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.02%)</title><rect x="1075.8" y="1107.0" width="0.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1078.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.02%)</title><rect x="1075.8" y="1091.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1078.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.02%)</title><rect x="1075.8" y="1075.0" width="0.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1078.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (226 samples, 5.05%)</title><rect x="1076.1" y="1123.0" width="59.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1079.1" y="1134.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.16%)</title><rect x="1076.1" y="1107.0" width="1.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1079.1" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.02%)</title><rect x="1076.4" y="1091.0" width="0.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1079.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1076.6" y="1091.0" width="0.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1079.6" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.09%)</title><rect x="1076.9" y="1091.0" width="1.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1079.9" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.02%)</title><rect x="1076.9" y="1075.0" width="0.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1079.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.07%)</title><rect x="1077.2" y="1075.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1080.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.07%)</title><rect x="1077.2" y="1059.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1080.2" y="1070.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.02%)</title><rect x="1077.4" y="1043.0" width="0.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1080.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.02%)</title><rect x="1077.4" y="1027.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1080.4" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.02%)</title><rect x="1077.7" y="1043.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1080.7" y="1054.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.02%)</title><rect x="1077.7" y="1027.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1080.7" y="1038.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.02%)</title><rect x="1077.7" y="1011.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1080.7" y="1022.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.02%)</title><rect x="1077.7" y="995.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1080.7" y="1006.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (219 samples, 4.89%)</title><rect x="1078.0" y="1107.0" width="57.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1081.0" y="1118.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (217 samples, 4.85%)</title><rect x="1078.5" y="1091.0" width="57.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1081.5" y="1102.0">one/ni..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1078.5" y="1075.0" width="0.2" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1081.5" y="1086.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.02%)</title><rect x="1078.5" y="1059.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1081.5" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (5 samples, 0.11%)</title><rect x="1078.7" y="1075.0" width="1.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1081.7" y="1086.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (211 samples, 4.71%)</title><rect x="1080.1" y="1075.0" width="55.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1083.1" y="1086.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (211 samples, 4.71%)</title><rect x="1080.1" y="1059.0" width="55.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1083.1" y="1070.0">one/n..</text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="1080.6" y="1043.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1083.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.13%)</title><rect x="1080.6" y="1027.0" width="1.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1083.6" y="1038.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.11%)</title><rect x="1080.6" y="1011.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1083.6" y="1022.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1081.6" y="995.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1084.6" y="1006.0"></text>
</g>
<g>
<title>__send (1 samples, 0.02%)</title><rect x="1081.9" y="1011.0" width="0.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1084.9" y="1022.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.02%)</title><rect x="1082.2" y="1043.0" width="0.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1085.2" y="1054.0"></text>
</g>
<g>
<title>__send (202 samples, 4.51%)</title><rect x="1082.4" y="1043.0" width="53.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1085.4" y="1054.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (197 samples, 4.40%)</title><rect x="1083.8" y="1027.0" width="51.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1086.8" y="1038.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (197 samples, 4.40%)</title><rect x="1083.8" y="1011.0" width="51.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1086.8" y="1022.0">do_sy..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.02%)</title><rect x="1083.8" y="995.0" width="0.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1086.8" y="1006.0"></text>
</g>
<g>
<title>__x64_sys_sendto (196 samples, 4.38%)</title><rect x="1084.0" y="995.0" width="51.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1087.0" y="1006.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (196 samples, 4.38%)</title><rect x="1084.0" y="979.0" width="51.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1087.0" y="990.0">__sys..</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="1084.5" y="963.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1087.5" y="974.0"></text>
</g>
<g>
<title>sock_sendmsg (184 samples, 4.11%)</title><rect x="1084.8" y="963.0" width="48.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1087.8" y="974.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (175 samples, 3.91%)</title><rect x="1085.1" y="947.0" width="46.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1088.1" y="958.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (174 samples, 3.89%)</title><rect x="1085.3" y="931.0" width="45.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1088.3" y="942.0">tcp_..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.02%)</title><rect x="1085.3" y="915.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1088.3" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (172 samples, 3.84%)</title><rect x="1085.6" y="915.0" width="45.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1088.6" y="926.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="1085.9" y="899.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1088.9" y="910.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.02%)</title><rect x="1086.1" y="883.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1089.1" y="894.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.04%)</title><rect x="1086.4" y="899.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1089.4" y="910.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="1086.4" y="883.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1089.4" y="894.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.02%)</title><rect x="1086.9" y="899.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1089.9" y="910.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.18%)</title><rect x="1087.2" y="899.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1090.2" y="910.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.18%)</title><rect x="1087.2" y="883.0" width="2.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1090.2" y="894.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.07%)</title><rect x="1087.7" y="867.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1090.7" y="878.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.07%)</title><rect x="1087.7" y="851.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1090.7" y="862.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.02%)</title><rect x="1088.2" y="835.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1091.2" y="846.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.02%)</title><rect x="1088.5" y="867.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1091.5" y="878.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="1088.8" y="867.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1091.8" y="878.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.04%)</title><rect x="1089.3" y="899.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1092.3" y="910.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.02%)</title><rect x="1089.8" y="899.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1092.8" y="910.0"></text>
</g>
<g>
<title>tcp_push (155 samples, 3.46%)</title><rect x="1090.1" y="899.0" width="40.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1093.1" y="910.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (154 samples, 3.44%)</title><rect x="1090.1" y="883.0" width="40.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1093.1" y="894.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (154 samples, 3.44%)</title><rect x="1090.1" y="867.0" width="40.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1093.1" y="878.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (142 samples, 3.17%)</title><rect x="1091.1" y="851.0" width="37.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1094.1" y="862.0">__t..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.02%)</title><rect x="1092.5" y="835.0" width="0.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1095.5" y="846.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.02%)</title><rect x="1092.7" y="835.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1095.7" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1093.0" y="835.0" width="0.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1096.0" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1093.0" y="819.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1096.0" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1093.0" y="803.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1096.0" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1093.0" y="787.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1096.0" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1093.0" y="771.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1096.0" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1093.0" y="755.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1096.0" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1093.0" y="739.0" width="0.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1096.0" y="750.0"></text>
</g>
<g>
<title>ip_queue_xmit (132 samples, 2.95%)</title><rect x="1093.2" y="835.0" width="34.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1096.2" y="846.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (131 samples, 2.93%)</title><rect x="1093.2" y="819.0" width="34.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1096.2" y="830.0">__..</text>
</g>
<g>
<title>ip_local_out (128 samples, 2.86%)</title><rect x="1093.5" y="803.0" width="33.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1096.5" y="814.0">ip..</text>
</g>
<g>
<title>ip_output (127 samples, 2.84%)</title><rect x="1093.8" y="787.0" width="33.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1096.8" y="798.0">ip..</text>
</g>
<g>
<title>ip_finish_output (127 samples, 2.84%)</title><rect x="1093.8" y="771.0" width="33.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1096.8" y="782.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (127 samples, 2.84%)</title><rect x="1093.8" y="755.0" width="33.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1096.8" y="766.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (111 samples, 2.48%)</title><rect x="1094.3" y="739.0" width="29.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1097.3" y="750.0">__..</text>
</g>
<g>
<title>do_softirq.part.21 (110 samples, 2.46%)</title><rect x="1094.6" y="723.0" width="29.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1097.6" y="734.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (108 samples, 2.41%)</title><rect x="1095.1" y="707.0" width="28.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1098.1" y="718.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (107 samples, 2.39%)</title><rect x="1095.1" y="691.0" width="28.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1098.1" y="702.0">__..</text>
</g>
<g>
<title>net_rx_action (107 samples, 2.39%)</title><rect x="1095.1" y="675.0" width="28.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1098.1" y="686.0">ne..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.02%)</title><rect x="1095.1" y="659.0" width="0.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1098.1" y="670.0"></text>
</g>
<g>
<title>process_backlog (106 samples, 2.37%)</title><rect x="1095.4" y="659.0" width="27.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1098.4" y="670.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (104 samples, 2.32%)</title><rect x="1095.9" y="643.0" width="27.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1098.9" y="654.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (104 samples, 2.32%)</title><rect x="1095.9" y="627.0" width="27.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1098.9" y="638.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1095.9" y="611.0" width="0.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1098.9" y="622.0"></text>
</g>
<g>
<title>ip_rcv (103 samples, 2.30%)</title><rect x="1096.1" y="611.0" width="27.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1099.1" y="622.0">i..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1096.1" y="595.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1099.1" y="606.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.04%)</title><rect x="1096.4" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1099.4" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (99 samples, 2.21%)</title><rect x="1096.9" y="595.0" width="26.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1099.9" y="606.0">i..</text>
</g>
<g>
<title>ip_local_deliver (99 samples, 2.21%)</title><rect x="1096.9" y="579.0" width="26.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1099.9" y="590.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (99 samples, 2.21%)</title><rect x="1096.9" y="563.0" width="26.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1099.9" y="574.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (98 samples, 2.19%)</title><rect x="1096.9" y="547.0" width="25.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1099.9" y="558.0">i..</text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="1097.2" y="531.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1100.2" y="542.0"></text>
</g>
<g>
<title>tcp_v4_rcv (96 samples, 2.14%)</title><rect x="1097.5" y="531.0" width="25.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1100.5" y="542.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="1098.0" y="515.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1101.0" y="526.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1098.5" y="515.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1101.5" y="526.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.02%)</title><rect x="1098.8" y="515.0" width="0.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1101.8" y="526.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.02%)</title><rect x="1099.0" y="515.0" width="0.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1102.0" y="526.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (89 samples, 1.99%)</title><rect x="1099.3" y="515.0" width="23.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1102.3" y="526.0">t..</text>
</g>
<g>
<title>tcp_rcv_established (89 samples, 1.99%)</title><rect x="1099.3" y="499.0" width="23.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1102.3" y="510.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.07%)</title><rect x="1099.6" y="483.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.6" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.02%)</title><rect x="1099.6" y="467.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1102.6" y="478.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="1099.8" y="467.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1102.8" y="478.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="1099.8" y="451.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1102.8" y="462.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="1099.8" y="435.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1102.8" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="1099.8" y="419.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1102.8" y="430.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.02%)</title><rect x="1100.4" y="483.0" width="0.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1103.4" y="494.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.02%)</title><rect x="1100.6" y="483.0" width="0.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1103.6" y="494.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.02%)</title><rect x="1100.9" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1103.9" y="494.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.47%)</title><rect x="1101.2" y="483.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1104.2" y="494.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.02%)</title><rect x="1102.2" y="467.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1105.2" y="478.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (14 samples, 0.31%)</title><rect x="1102.5" y="467.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1105.5" y="478.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.13%)</title><rect x="1103.5" y="451.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1106.5" y="462.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="1103.5" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1106.5" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="1103.5" y="419.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1106.5" y="430.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="1103.8" y="403.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1106.8" y="414.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.07%)</title><rect x="1104.1" y="435.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1107.1" y="446.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.07%)</title><rect x="1104.1" y="419.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1107.1" y="430.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="1104.3" y="403.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.3" y="414.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="1104.3" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1107.3" y="398.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.02%)</title><rect x="1104.6" y="371.0" width="0.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1107.6" y="382.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.02%)</title><rect x="1104.8" y="435.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1107.8" y="446.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.02%)</title><rect x="1105.1" y="451.0" width="0.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1108.1" y="462.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.02%)</title><rect x="1105.4" y="451.0" width="0.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1108.4" y="462.0"></text>
</g>
<g>
<title>tcp_rack_advance (2 samples, 0.04%)</title><rect x="1105.6" y="451.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1108.6" y="462.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.02%)</title><rect x="1106.2" y="467.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1109.2" y="478.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.02%)</title><rect x="1106.4" y="467.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1109.4" y="478.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.09%)</title><rect x="1106.7" y="483.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1109.7" y="494.0"></text>
</g>
<g>
<title>tcp_data_queue (55 samples, 1.23%)</title><rect x="1107.7" y="483.0" width="14.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1110.7" y="494.0"></text>
</g>
<g>
<title>sock_def_readable (53 samples, 1.18%)</title><rect x="1108.0" y="467.0" width="14.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1111.0" y="478.0"></text>
</g>
<g>
<title>__wake_up_sync_key (53 samples, 1.18%)</title><rect x="1108.0" y="451.0" width="14.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1111.0" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (53 samples, 1.18%)</title><rect x="1108.0" y="435.0" width="14.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1111.0" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (53 samples, 1.18%)</title><rect x="1108.0" y="419.0" width="14.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1111.0" y="430.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.02%)</title><rect x="1122.0" y="467.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1125.0" y="478.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.02%)</title><rect x="1122.2" y="483.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1125.2" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.02%)</title><rect x="1122.5" y="483.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1125.5" y="494.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.02%)</title><rect x="1122.8" y="547.0" width="0.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1125.8" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.02%)</title><rect x="1123.0" y="595.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1126.0" y="606.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1123.3" y="691.0" width="0.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1126.3" y="702.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.31%)</title><rect x="1123.6" y="739.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1126.6" y="750.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.31%)</title><rect x="1123.6" y="723.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1126.6" y="734.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.18%)</title><rect x="1124.6" y="707.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1127.6" y="718.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="1124.6" y="691.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1127.6" y="702.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.11%)</title><rect x="1124.9" y="691.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1127.9" y="702.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.02%)</title><rect x="1124.9" y="675.0" width="0.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1127.9" y="686.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.07%)</title><rect x="1125.1" y="675.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1128.1" y="686.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.02%)</title><rect x="1125.1" y="659.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1128.1" y="670.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="1125.4" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.4" y="670.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="1125.4" y="643.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.4" y="654.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="1125.9" y="675.0" width="0.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1128.9" y="686.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.02%)</title><rect x="1125.9" y="659.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1128.9" y="670.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.02%)</title><rect x="1126.2" y="691.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1129.2" y="702.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.02%)</title><rect x="1126.5" y="691.0" width="0.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1129.5" y="702.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.02%)</title><rect x="1126.7" y="707.0" width="0.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1129.7" y="718.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.02%)</title><rect x="1127.0" y="707.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1130.0" y="718.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.04%)</title><rect x="1127.3" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1130.3" y="814.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.02%)</title><rect x="1127.8" y="819.0" width="0.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1130.8" y="830.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.02%)</title><rect x="1128.0" y="835.0" width="0.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1131.0" y="846.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.02%)</title><rect x="1128.0" y="819.0" width="0.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1131.0" y="830.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.02%)</title><rect x="1128.0" y="803.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1131.0" y="814.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.02%)</title><rect x="1128.3" y="835.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1131.3" y="846.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.04%)</title><rect x="1128.6" y="851.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1131.6" y="862.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1129.1" y="851.0" width="0.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1132.1" y="862.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.02%)</title><rect x="1129.4" y="851.0" width="0.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.4" y="862.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.02%)</title><rect x="1129.6" y="851.0" width="0.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1132.6" y="862.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.07%)</title><rect x="1129.9" y="851.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1132.9" y="862.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.07%)</title><rect x="1129.9" y="835.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1132.9" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.07%)</title><rect x="1129.9" y="819.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1132.9" y="830.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.07%)</title><rect x="1129.9" y="803.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1132.9" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1130.4" y="787.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1133.4" y="798.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="1130.7" y="883.0" width="0.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1133.7" y="894.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.02%)</title><rect x="1130.9" y="915.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1133.9" y="926.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.18%)</title><rect x="1131.2" y="947.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1134.2" y="958.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.18%)</title><rect x="1131.2" y="931.0" width="2.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1134.2" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.18%)</title><rect x="1131.2" y="915.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1134.2" y="926.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.13%)</title><rect x="1131.7" y="899.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1134.7" y="910.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.11%)</title><rect x="1132.0" y="883.0" width="1.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1135.0" y="894.0"></text>
</g>
<g>
<title>aa_profile_af_perm (3 samples, 0.07%)</title><rect x="1132.5" y="867.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1135.5" y="878.0"></text>
</g>
<g>
<title>sockfd_lookup_light (9 samples, 0.20%)</title><rect x="1133.3" y="963.0" width="2.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1136.3" y="974.0"></text>
</g>
<g>
<title>__fdget (7 samples, 0.16%)</title><rect x="1133.3" y="947.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1136.3" y="958.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.16%)</title><rect x="1133.3" y="931.0" width="1.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1136.3" y="942.0"></text>
</g>
<g>
<title>__fget (6 samples, 0.13%)</title><rect x="1133.6" y="915.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1136.6" y="926.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="1135.2" y="947.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1138.2" y="958.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.02%)</title><rect x="1135.7" y="1123.0" width="0.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1138.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.02%)</title><rect x="1135.7" y="1107.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1138.7" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.get (148 samples, 3.31%)</title><rect x="1136.0" y="1139.0" width="39.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1139.0" y="1150.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (148 samples, 3.31%)</title><rect x="1136.0" y="1123.0" width="39.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1139.0" y="1134.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (142 samples, 3.17%)</title><rect x="1136.0" y="1107.0" width="37.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1139.0" y="1118.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (142 samples, 3.17%)</title><rect x="1136.0" y="1091.0" width="37.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.0" y="1102.0">org..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.02%)</title><rect x="1136.0" y="1075.0" width="0.2" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1139.0" y="1086.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (133 samples, 2.97%)</title><rect x="1136.2" y="1075.0" width="35.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1139.2" y="1086.0">Jav..</text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.04%)</title><rect x="1136.7" y="1059.0" width="0.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1139.7" y="1070.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (4 samples, 0.09%)</title><rect x="1137.3" y="1059.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1140.3" y="1070.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.04%)</title><rect x="1138.3" y="1059.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1141.3" y="1070.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.02%)</title><rect x="1138.9" y="1059.0" width="0.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1141.9" y="1070.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.07%)</title><rect x="1139.1" y="1059.0" width="0.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1142.1" y="1070.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.02%)</title><rect x="1139.9" y="1059.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1142.9" y="1070.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.02%)</title><rect x="1140.2" y="1059.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1143.2" y="1070.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (116 samples, 2.59%)</title><rect x="1140.4" y="1059.0" width="30.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1143.4" y="1070.0">ro..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.02%)</title><rect x="1141.2" y="1043.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1144.2" y="1054.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.02%)</title><rect x="1141.5" y="1043.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1144.5" y="1054.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1141.8" y="1043.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1144.8" y="1054.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.09%)</title><rect x="1142.0" y="1043.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1145.0" y="1054.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.02%)</title><rect x="1142.0" y="1027.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1145.0" y="1038.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="1142.3" y="1027.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1145.3" y="1038.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.02%)</title><rect x="1142.8" y="1027.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1145.8" y="1038.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.04%)</title><rect x="1143.1" y="1043.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1146.1" y="1054.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="1143.6" y="1043.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1146.6" y="1054.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1143.6" y="1027.0" width="0.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.6" y="1038.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1143.6" y="1011.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1146.6" y="1022.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1143.6" y="995.0" width="0.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1146.6" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1143.6" y="979.0" width="0.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1146.6" y="990.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1143.6" y="963.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.6" y="974.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1143.6" y="947.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1146.6" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1143.6" y="931.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.02%)</title><rect x="1143.9" y="1043.0" width="0.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1146.9" y="1054.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (86 samples, 1.92%)</title><rect x="1144.1" y="1043.0" width="22.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1147.1" y="1054.0">r..</text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.02%)</title><rect x="1144.1" y="1027.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1147.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (83 samples, 1.85%)</title><rect x="1144.4" y="1027.0" width="21.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1147.4" y="1038.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (82 samples, 1.83%)</title><rect x="1144.7" y="1011.0" width="21.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.7" y="1022.0">r..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.07%)</title><rect x="1144.7" y="995.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1147.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.02%)</title><rect x="1145.4" y="995.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1148.4" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.02%)</title><rect x="1145.7" y="995.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1148.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (68 samples, 1.52%)</title><rect x="1146.0" y="995.0" width="17.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1149.0" y="1006.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.02%)</title><rect x="1147.6" y="979.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1150.6" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1147.8" y="979.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1150.8" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1148.3" y="979.0" width="0.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1151.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (11 samples, 0.25%)</title><rect x="1148.6" y="979.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1151.6" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1149.1" y="963.0" width="0.3" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1152.1" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="1149.4" y="963.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1152.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="1149.7" y="963.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1152.7" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (4 samples, 0.09%)</title><rect x="1149.9" y="963.0" width="1.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1152.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.07%)</title><rect x="1150.2" y="947.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1153.2" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.04%)</title><rect x="1151.0" y="963.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1154.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.04%)</title><rect x="1151.0" y="947.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1154.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (4 samples, 0.09%)</title><rect x="1151.5" y="979.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1154.5" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (4 samples, 0.09%)</title><rect x="1152.6" y="979.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1155.6" y="990.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.07%)</title><rect x="1152.6" y="963.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1155.6" y="974.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.02%)</title><rect x="1152.6" y="947.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1155.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.02%)</title><rect x="1152.8" y="947.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1155.8" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.02%)</title><rect x="1153.1" y="947.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1156.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.02%)</title><rect x="1153.4" y="963.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.04%)</title><rect x="1153.6" y="979.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1156.6" y="990.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (34 samples, 0.76%)</title><rect x="1154.1" y="979.0" width="9.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.1" y="990.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (31 samples, 0.69%)</title><rect x="1154.7" y="963.0" width="8.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1157.7" y="974.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (3 samples, 0.07%)</title><rect x="1154.9" y="947.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1157.9" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1155.7" y="947.0" width="0.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1158.7" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1155.7" y="931.0" width="0.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1158.7" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1155.7" y="915.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1158.7" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1155.7" y="899.0" width="0.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1158.7" y="910.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1155.7" y="883.0" width="0.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1158.7" y="894.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1155.7" y="867.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1158.7" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1155.7" y="851.0" width="0.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1158.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (25 samples, 0.56%)</title><rect x="1156.0" y="947.0" width="6.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1159.0" y="958.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (1 samples, 0.02%)</title><rect x="1158.9" y="931.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1161.9" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1159.2" y="931.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1162.2" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 0.25%)</title><rect x="1159.7" y="931.0" width="2.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.7" y="942.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (1 samples, 0.02%)</title><rect x="1160.7" y="915.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1163.7" y="926.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (6 samples, 0.13%)</title><rect x="1161.0" y="915.0" width="1.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1164.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.02%)</title><rect x="1162.6" y="947.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="1162.8" y="963.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1165.8" y="974.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.02%)</title><rect x="1163.1" y="979.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1166.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.02%)</title><rect x="1163.4" y="979.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1166.4" y="990.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (1 samples, 0.02%)</title><rect x="1163.6" y="979.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.6" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.02%)</title><rect x="1163.9" y="995.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1166.9" y="1006.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.02%)</title><rect x="1164.2" y="995.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1167.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.02%)</title><rect x="1164.4" y="995.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1167.4" y="1006.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (2 samples, 0.04%)</title><rect x="1164.7" y="995.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1167.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.02%)</title><rect x="1165.2" y="995.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1168.2" y="1006.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (3 samples, 0.07%)</title><rect x="1165.5" y="995.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1168.5" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (2 samples, 0.04%)</title><rect x="1166.3" y="1027.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1169.3" y="1038.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (16 samples, 0.36%)</title><rect x="1166.8" y="1043.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1169.8" y="1054.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.02%)</title><rect x="1166.8" y="1027.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.8" y="1038.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.02%)</title><rect x="1167.1" y="1027.0" width="0.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1170.1" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.02%)</title><rect x="1167.3" y="1027.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1170.3" y="1038.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.02%)</title><rect x="1167.6" y="1027.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1170.6" y="1038.0"></text>
</g>
<g>
<title>jni_NewByteArray (11 samples, 0.25%)</title><rect x="1167.9" y="1027.0" width="2.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1170.9" y="1038.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (8 samples, 0.18%)</title><rect x="1168.6" y="1011.0" width="2.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1171.6" y="1022.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.16%)</title><rect x="1168.9" y="995.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1171.9" y="1006.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.09%)</title><rect x="1168.9" y="979.0" width="1.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1171.9" y="990.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.04%)</title><rect x="1168.9" y="963.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1171.9" y="974.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.04%)</title><rect x="1169.4" y="963.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1172.4" y="974.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.02%)</title><rect x="1170.0" y="979.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1173.0" y="990.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.02%)</title><rect x="1170.2" y="979.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1173.2" y="990.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.02%)</title><rect x="1170.5" y="979.0" width="0.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1173.5" y="990.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.02%)</title><rect x="1170.8" y="1027.0" width="0.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1173.8" y="1038.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.02%)</title><rect x="1171.0" y="1059.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1174.0" y="1070.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.02%)</title><rect x="1171.3" y="1075.0" width="0.2" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1174.3" y="1086.0"></text>
</g>
<g>
<title>__malloc (3 samples, 0.07%)</title><rect x="1171.5" y="1075.0" width="0.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1174.5" y="1086.0"></text>
</g>
<g>
<title>_init (1 samples, 0.02%)</title><rect x="1172.3" y="1075.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1175.3" y="1086.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (3 samples, 0.07%)</title><rect x="1172.6" y="1075.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.6" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (6 samples, 0.13%)</title><rect x="1173.4" y="1107.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1176.4" y="1118.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1174.4" y="1091.0" width="0.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1177.4" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1174.4" y="1075.0" width="0.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1177.4" y="1086.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.02%)</title><rect x="1174.4" y="1059.0" width="0.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1177.4" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1174.4" y="1043.0" width="0.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1177.4" y="1054.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.02%)</title><rect x="1174.4" y="1027.0" width="0.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.4" y="1038.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.02%)</title><rect x="1174.4" y="1011.0" width="0.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1177.4" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.02%)</title><rect x="1174.4" y="995.0" width="0.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.4" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (1 samples, 0.02%)</title><rect x="1174.7" y="1091.0" width="0.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1177.7" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.02%)</title><rect x="1174.7" y="1075.0" width="0.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1177.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.02%)</title><rect x="1174.7" y="1059.0" width="0.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1177.7" y="1070.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.02%)</title><rect x="1174.7" y="1043.0" width="0.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1177.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (5 samples, 0.11%)</title><rect x="1175.0" y="1139.0" width="1.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.0" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="1175.0" y="1123.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.07%)</title><rect x="1175.0" y="1107.0" width="0.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1178.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1175.0" y="1091.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1178.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.07%)</title><rect x="1175.0" y="1075.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1178.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.02%)</title><rect x="1175.5" y="1059.0" width="0.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1178.5" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (2 samples, 0.04%)</title><rect x="1175.8" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1178.8" y="1134.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (2 samples, 0.04%)</title><rect x="1175.8" y="1107.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.8" y="1118.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1175.8" y="1091.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1178.8" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1175.8" y="1075.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.8" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1175.8" y="1059.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1178.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1175.8" y="1043.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1178.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="1175.8" y="1027.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1178.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.04%)</title><rect x="1175.8" y="1011.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1178.8" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (2 samples, 0.04%)</title><rect x="1176.3" y="1171.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1179.3" y="1182.0"></text>
</g>
<g>
<title>[tid=759] (2 samples, 0.04%)</title><rect x="1176.8" y="1235.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1179.8" y="1246.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.04%)</title><rect x="1176.8" y="1219.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1179.8" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.04%)</title><rect x="1176.8" y="1203.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1179.8" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.04%)</title><rect x="1176.8" y="1187.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.8" y="1198.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.04%)</title><rect x="1176.8" y="1171.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1179.8" y="1182.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.04%)</title><rect x="1176.8" y="1155.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1179.8" y="1166.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.04%)</title><rect x="1176.8" y="1139.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.8" y="1150.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (2 samples, 0.04%)</title><rect x="1176.8" y="1123.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.8" y="1134.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.02%)</title><rect x="1176.8" y="1107.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1179.8" y="1118.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.02%)</title><rect x="1176.8" y="1091.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.8" y="1102.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.02%)</title><rect x="1177.1" y="1107.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1180.1" y="1118.0"></text>
</g>
<g>
<title>[tid=764] (37 samples, 0.83%)</title><rect x="1177.3" y="1235.0" width="9.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1180.3" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.02%)</title><rect x="1177.3" y="1219.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1180.3" y="1230.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.02%)</title><rect x="1177.3" y="1203.0" width="0.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1180.3" y="1214.0"></text>
</g>
<g>
<title>start_thread (36 samples, 0.80%)</title><rect x="1177.6" y="1219.0" width="9.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1180.6" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (36 samples, 0.80%)</title><rect x="1177.6" y="1203.0" width="9.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1180.6" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (36 samples, 0.80%)</title><rect x="1177.6" y="1187.0" width="9.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1180.6" y="1198.0"></text>
</g>
<g>
<title>JavaThread::run() (36 samples, 0.80%)</title><rect x="1177.6" y="1171.0" width="9.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1180.6" y="1182.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (36 samples, 0.80%)</title><rect x="1177.6" y="1155.0" width="9.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.6" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (36 samples, 0.80%)</title><rect x="1177.6" y="1139.0" width="9.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1180.6" y="1150.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (36 samples, 0.80%)</title><rect x="1177.6" y="1123.0" width="9.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1180.6" y="1134.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (36 samples, 0.80%)</title><rect x="1177.6" y="1107.0" width="9.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.6" y="1118.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (36 samples, 0.80%)</title><rect x="1177.6" y="1091.0" width="9.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.6" y="1102.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (15 samples, 0.34%)</title><rect x="1177.6" y="1075.0" width="4.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1180.6" y="1086.0"></text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.02%)</title><rect x="1177.6" y="1059.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1180.6" y="1070.0"></text>
</g>
<g>
<title>Compile::BuildOopMaps() (1 samples, 0.02%)</title><rect x="1177.6" y="1043.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.6" y="1054.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.04%)</title><rect x="1177.9" y="1059.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1180.9" y="1070.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.04%)</title><rect x="1177.9" y="1043.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.9" y="1054.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.04%)</title><rect x="1177.9" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1180.9" y="1038.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.04%)</title><rect x="1177.9" y="1011.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1180.9" y="1022.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.04%)</title><rect x="1177.9" y="995.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1180.9" y="1006.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.02%)</title><rect x="1177.9" y="979.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.9" y="990.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.02%)</title><rect x="1177.9" y="963.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1180.9" y="974.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.02%)</title><rect x="1178.1" y="979.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1181.1" y="990.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.02%)</title><rect x="1178.1" y="963.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.1" y="974.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.02%)</title><rect x="1178.4" y="1059.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1181.4" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.02%)</title><rect x="1178.4" y="1043.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.4" y="1054.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.02%)</title><rect x="1178.4" y="1027.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.4" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 0.22%)</title><rect x="1178.7" y="1059.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1181.7" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.02%)</title><rect x="1178.7" y="1043.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1181.7" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.02%)</title><rect x="1178.7" y="1027.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1181.7" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (1 samples, 0.02%)</title><rect x="1178.9" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1181.9" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::split_USE(MachSpillCopyNode::SpillType, Node*, Block*, Node*, unsigned int, unsigned int, bool, bool, GrowableArray&lt;unsigned int&gt;, int) (1 samples, 0.02%)</title><rect x="1178.9" y="1027.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.9" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::get_spillcopy_wide(MachSpillCopyNode::SpillType, Node*, Node*, unsigned int) (1 samples, 0.02%)</title><rect x="1178.9" y="1011.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1181.9" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (4 samples, 0.09%)</title><rect x="1179.2" y="1043.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1182.2" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.04%)</title><rect x="1179.2" y="1027.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1182.2" y="1038.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.02%)</title><rect x="1179.5" y="1011.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.5" y="1022.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.02%)</title><rect x="1179.7" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1182.7" y="1038.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (1 samples, 0.02%)</title><rect x="1179.7" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1182.7" y="1022.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.02%)</title><rect x="1180.0" y="1027.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1183.0" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.02%)</title><rect x="1180.2" y="1043.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1183.2" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::SquareUp() (1 samples, 0.02%)</title><rect x="1180.5" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.5" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.02%)</title><rect x="1180.8" y="1043.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.8" y="1054.0"></text>
</g>
<g>
<title>loadNNode::oper_input_base() const (1 samples, 0.02%)</title><rect x="1181.0" y="1043.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.0" y="1054.0"></text>
</g>
<g>
<title>loadLNode::peephole(Block*, int, PhaseRegAlloc*, int&amp;) (1 samples, 0.02%)</title><rect x="1181.3" y="1059.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.3" y="1070.0"></text>
</g>
<g>
<title>Compile::Optimize() (13 samples, 0.29%)</title><rect x="1181.6" y="1075.0" width="3.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.6" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (2 samples, 0.04%)</title><rect x="1181.6" y="1059.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.6" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (2 samples, 0.04%)</title><rect x="1181.6" y="1043.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.6" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (2 samples, 0.04%)</title><rect x="1181.6" y="1027.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.6" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="1011.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1184.6" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="995.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.6" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="979.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.6" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="963.0" width="0.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.6" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="947.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1184.6" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="931.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.6" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="915.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1184.6" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="899.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.6" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="883.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.6" y="894.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.02%)</title><rect x="1181.6" y="867.0" width="0.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1184.6" y="878.0"></text>
</g>
<g>
<title>Compile::find_alias_type(TypePtr const*, bool, ciField*) [clone .part.321] (1 samples, 0.02%)</title><rect x="1181.6" y="851.0" width="0.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1184.6" y="862.0"></text>
</g>
<g>
<title>MergeMemNode::memory_at(unsigned int) const (1 samples, 0.02%)</title><rect x="1181.8" y="1011.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1184.8" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (7 samples, 0.16%)</title><rect x="1182.1" y="1059.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.1" y="1070.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1182.1" y="1043.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1185.1" y="1054.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1182.1" y="1027.0" width="0.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.1" y="1038.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1182.1" y="1011.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.1" y="1022.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.02%)</title><rect x="1182.1" y="995.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.1" y="1006.0"></text>
</g>
<g>
<title>CountedLoopEndNode::stride_con() const (1 samples, 0.02%)</title><rect x="1182.1" y="979.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.1" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.02%)</title><rect x="1182.4" y="1043.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.4" y="1054.0"></text>
</g>
<g>
<title>NTarjan::DFS(NTarjan*, VectorSet&amp;, PhaseIdealLoop*, unsigned int*) (1 samples, 0.02%)</title><rect x="1182.4" y="1027.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.4" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.04%)</title><rect x="1182.6" y="1043.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.6" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.04%)</title><rect x="1183.1" y="1043.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.1" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.02%)</title><rect x="1183.7" y="1043.0" width="0.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.7" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (1 samples, 0.02%)</title><rect x="1183.7" y="1027.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.7" y="1038.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1183.7" y="1011.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.7" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.07%)</title><rect x="1183.9" y="1059.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.9" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.07%)</title><rect x="1183.9" y="1043.0" width="0.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.9" y="1054.0"></text>
</g>
<g>
<title>CallNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1183.9" y="1027.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.9" y="1038.0"></text>
</g>
<g>
<title>Node::remove_dead_region(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1183.9" y="1011.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.9" y="1022.0"></text>
</g>
<g>
<title>ProjNode::Value(PhaseGVN*) const (1 samples, 0.02%)</title><rect x="1184.2" y="1027.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1187.2" y="1038.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1184.5" y="1027.0" width="0.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.5" y="1038.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.02%)</title><rect x="1184.5" y="1011.0" width="0.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.5" y="1022.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.02%)</title><rect x="1184.5" y="995.0" width="0.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1187.5" y="1006.0"></text>
</g>
<g>
<title>Node::replace_edge(Node*, Node*) (1 samples, 0.02%)</title><rect x="1184.5" y="979.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.5" y="990.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.02%)</title><rect x="1184.7" y="1059.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1187.7" y="1070.0"></text>
</g>
<g>
<title>OuterStripMinedLoopNode::adjust_strip_mined_loop(PhaseIterGVN*) (1 samples, 0.02%)</title><rect x="1184.7" y="1043.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.7" y="1054.0"></text>
</g>
<g>
<title>Node::clone() const (1 samples, 0.02%)</title><rect x="1184.7" y="1027.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.7" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (8 samples, 0.18%)</title><rect x="1185.0" y="1075.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.0" y="1086.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (8 samples, 0.18%)</title><rect x="1185.0" y="1059.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="1070.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.18%)</title><rect x="1185.0" y="1043.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.0" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.18%)</title><rect x="1185.0" y="1027.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.0" y="1038.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.18%)</title><rect x="1185.0" y="1011.0" width="2.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="1022.0"></text>
</g>
<g>
<title>Parse::do_call() (8 samples, 0.18%)</title><rect x="1185.0" y="995.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="1006.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (7 samples, 0.16%)</title><rect x="1185.0" y="979.0" width="1.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.0" y="990.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (7 samples, 0.16%)</title><rect x="1185.0" y="963.0" width="1.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.0" y="974.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (7 samples, 0.16%)</title><rect x="1185.0" y="947.0" width="1.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.0" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_block() (7 samples, 0.16%)</title><rect x="1185.0" y="931.0" width="1.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (7 samples, 0.16%)</title><rect x="1185.0" y="915.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1188.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 0.13%)</title><rect x="1185.0" y="899.0" width="1.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.0" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (5 samples, 0.11%)</title><rect x="1185.0" y="883.0" width="1.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.0" y="894.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (5 samples, 0.11%)</title><rect x="1185.0" y="867.0" width="1.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.0" y="878.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (5 samples, 0.11%)</title><rect x="1185.0" y="851.0" width="1.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.0" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_block() (5 samples, 0.11%)</title><rect x="1185.0" y="835.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.0" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (5 samples, 0.11%)</title><rect x="1185.0" y="819.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.0" y="830.0"></text>
</g>
<g>
<title>Parse::do_anewarray() (1 samples, 0.02%)</title><rect x="1185.0" y="803.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.0" y="814.0"></text>
</g>
<g>
<title>GraphKit::new_array(Node*, Node*, int, Node**, bool) (1 samples, 0.02%)</title><rect x="1185.0" y="787.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.0" y="798.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.02%)</title><rect x="1185.0" y="771.0" width="0.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1188.0" y="782.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.09%)</title><rect x="1185.3" y="803.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.3" y="814.0"></text>
</g>
<g>
<title>DirectCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1185.3" y="787.0" width="0.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.3" y="798.0"></text>
</g>
<g>
<title>GraphKit::null_check_common(Node*, BasicType, bool, Node**, bool) [clone .part.285] (1 samples, 0.02%)</title><rect x="1185.3" y="771.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.3" y="782.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1185.3" y="755.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.3" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1185.5" y="787.0" width="0.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.5" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1185.5" y="771.0" width="0.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1188.5" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1185.5" y="755.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.5" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1185.5" y="739.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1185.5" y="723.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.07%)</title><rect x="1185.5" y="707.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.5" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.07%)</title><rect x="1185.5" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.07%)</title><rect x="1185.5" y="675.0" width="0.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.5" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.07%)</title><rect x="1185.5" y="659.0" width="0.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.5" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.07%)</title><rect x="1185.5" y="643.0" width="0.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.07%)</title><rect x="1185.5" y="627.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1185.5" y="611.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.5" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1185.5" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.5" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1185.5" y="579.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.5" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1185.5" y="563.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1188.5" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1185.5" y="547.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1185.5" y="531.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1188.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1185.5" y="515.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.5" y="526.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.02%)</title><rect x="1185.5" y="499.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.5" y="510.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.02%)</title><rect x="1185.5" y="483.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="494.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.02%)</title><rect x="1185.5" y="467.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1188.5" y="478.0"></text>
</g>
<g>
<title>LinkResolver::resolve_special_call_or_null(LinkInfo const&amp;) (1 samples, 0.02%)</title><rect x="1185.5" y="451.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.5" y="462.0"></text>
</g>
<g>
<title>LinkResolver::linktime_resolve_special_method(LinkInfo const&amp;, Thread*) (1 samples, 0.02%)</title><rect x="1185.5" y="435.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.5" y="446.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.02%)</title><rect x="1185.5" y="419.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1188.5" y="430.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.02%)</title><rect x="1185.5" y="403.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.5" y="414.0"></text>
</g>
<g>
<title>SignatureStream::SignatureStream(Symbol*, bool) (1 samples, 0.02%)</title><rect x="1185.5" y="387.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1185.8" y="515.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1185.8" y="499.0" width="0.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1188.8" y="510.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.02%)</title><rect x="1185.8" y="483.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1188.8" y="494.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1185.8" y="467.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.8" y="478.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1185.8" y="451.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1188.8" y="462.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.02%)</title><rect x="1185.8" y="435.0" width="0.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1188.8" y="446.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.02%)</title><rect x="1185.8" y="419.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.8" y="430.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1185.8" y="403.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.8" y="414.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1185.8" y="387.0" width="0.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.8" y="398.0"></text>
</g>
<g>
<title>MemNode::Ideal_common(PhaseGVN*, bool) (1 samples, 0.02%)</title><rect x="1185.8" y="371.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1188.8" y="382.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1185.8" y="355.0" width="0.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1188.8" y="366.0"></text>
</g>
<g>
<title>TypeOopPtr::klass() const (1 samples, 0.02%)</title><rect x="1185.8" y="339.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1188.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.0" y="611.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.0" y="595.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.0" y="606.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.02%)</title><rect x="1186.0" y="579.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.0" y="590.0"></text>
</g>
<g>
<title>NodeHash::hash_find_insert(Node*) (1 samples, 0.02%)</title><rect x="1186.0" y="563.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.0" y="574.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.3" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.3" y="867.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.3" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.3" y="851.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.3" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.3" y="835.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.3" y="819.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.3" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.3" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.3" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.3" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.3" y="798.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.02%)</title><rect x="1186.3" y="771.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.3" y="782.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.02%)</title><rect x="1186.3" y="755.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.3" y="766.0"></text>
</g>
<g>
<title>TypeTuple::make_domain(ciInstanceKlass*, ciSignature*) (1 samples, 0.02%)</title><rect x="1186.3" y="739.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>TypePtr::xmeet(Type const*) const (1 samples, 0.02%)</title><rect x="1186.3" y="723.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.3" y="734.0"></text>
</g>
<g>
<title>TypeInstPtr::xmeet_helper(Type const*) const (1 samples, 0.02%)</title><rect x="1186.3" y="707.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.3" y="718.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1186.3" y="691.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.3" y="702.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.02%)</title><rect x="1186.3" y="675.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.02%)</title><rect x="1186.6" y="899.0" width="0.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.6" y="910.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.02%)</title><rect x="1186.6" y="883.0" width="0.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.6" y="894.0"></text>
</g>
<g>
<title>TypeOopPtr::make_from_klass_common(ciKlass*, bool, bool) (1 samples, 0.02%)</title><rect x="1186.6" y="867.0" width="0.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.6" y="878.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.02%)</title><rect x="1186.6" y="851.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.6" y="862.0"></text>
</g>
<g>
<title>TypeInstPtr::xdual() const (1 samples, 0.02%)</title><rect x="1186.6" y="835.0" width="0.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.6" y="846.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="979.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="990.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="963.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.8" y="974.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="947.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="931.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="915.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="899.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.8" y="910.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="883.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.8" y="894.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="867.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="878.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="851.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="835.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="819.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="803.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.8" y="814.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="787.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="771.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="755.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="739.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="723.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="707.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="718.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="691.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.8" y="702.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="675.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.8" y="686.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="659.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="643.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="627.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="611.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.8" y="622.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="595.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="606.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="579.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="590.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="563.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="547.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="531.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1189.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="515.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.8" y="526.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="499.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.8" y="510.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="483.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.8" y="494.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="467.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1189.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="451.0" width="0.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1189.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="435.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="419.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.8" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="403.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.8" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="387.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1189.8" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="371.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="355.0" width="0.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="339.0" width="0.3" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="323.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.8" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="307.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.8" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="291.0" width="0.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.8" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="275.0" width="0.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="259.0" width="0.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1189.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="243.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.8" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="227.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.8" y="238.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.02%)</title><rect x="1186.8" y="211.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.8" y="222.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.02%)</title><rect x="1186.8" y="195.0" width="0.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.8" y="206.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.02%)</title><rect x="1186.8" y="179.0" width="0.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.8" y="190.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.02%)</title><rect x="1186.8" y="163.0" width="0.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.8" y="174.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.02%)</title><rect x="1186.8" y="147.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.02%)</title><rect x="1186.8" y="131.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.8" y="142.0"></text>
</g>
<g>
<title>Parse::do_if(BoolTest::mask, Node*) (1 samples, 0.02%)</title><rect x="1186.8" y="115.0" width="0.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1189.8" y="126.0"></text>
</g>
<g>
<title>PreserveJVMState::PreserveJVMState(GraphKit*, bool) (1 samples, 0.02%)</title><rect x="1186.8" y="99.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.8" y="110.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.02%)</title><rect x="1186.8" y="83.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.8" y="94.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.02%)</title><rect x="1186.8" y="67.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1189.8" y="78.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.02%)</title><rect x="1186.8" y="51.0" width="0.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.8" y="62.0"></text>
</g>
<g>
<title>MergeMemNode::iteration_setup(MergeMemNode const*) (1 samples, 0.02%)</title><rect x="1186.8" y="35.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.8" y="46.0"></text>
</g>
<g>
<title>[tid=765] (2 samples, 0.04%)</title><rect x="1187.1" y="1235.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1190.1" y="1246.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.04%)</title><rect x="1187.1" y="1219.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1190.1" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.04%)</title><rect x="1187.1" y="1203.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1190.1" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.04%)</title><rect x="1187.1" y="1187.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="1198.0"></text>
</g>
<g>
<title>JavaThread::run() (2 samples, 0.04%)</title><rect x="1187.1" y="1171.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="1182.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (2 samples, 0.04%)</title><rect x="1187.1" y="1155.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="1166.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (2 samples, 0.04%)</title><rect x="1187.1" y="1139.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1190.1" y="1150.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (2 samples, 0.04%)</title><rect x="1187.1" y="1123.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="1134.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (2 samples, 0.04%)</title><rect x="1187.1" y="1107.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.1" y="1118.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (2 samples, 0.04%)</title><rect x="1187.1" y="1091.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.1" y="1102.0"></text>
</g>
<g>
<title>Compilation::compile_method() (2 samples, 0.04%)</title><rect x="1187.1" y="1075.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1190.1" y="1086.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (2 samples, 0.04%)</title><rect x="1187.1" y="1059.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.1" y="1070.0"></text>
</g>
<g>
<title>Compilation::build_hir() (2 samples, 0.04%)</title><rect x="1187.1" y="1043.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1190.1" y="1054.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (1 samples, 0.02%)</title><rect x="1187.1" y="1027.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="1038.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (1 samples, 0.02%)</title><rect x="1187.1" y="1011.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1190.1" y="1022.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (1 samples, 0.02%)</title><rect x="1187.1" y="995.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.1" y="1006.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1187.1" y="979.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="990.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1187.1" y="963.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="974.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1187.1" y="947.0" width="0.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.1" y="958.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1187.1" y="931.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.1" y="942.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1187.1" y="915.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="926.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (1 samples, 0.02%)</title><rect x="1187.1" y="899.0" width="0.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.1" y="910.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (1 samples, 0.02%)</title><rect x="1187.1" y="883.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1190.1" y="894.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (1 samples, 0.02%)</title><rect x="1187.1" y="867.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.1" y="878.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1187.1" y="851.0" width="0.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1190.1" y="862.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (1 samples, 0.02%)</title><rect x="1187.1" y="835.0" width="0.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.1" y="846.0"></text>
</g>
<g>
<title>GraphBuilder::push_scope(ciMethod*, BlockBegin*) (1 samples, 0.02%)</title><rect x="1187.1" y="819.0" width="0.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1190.1" y="830.0"></text>
</g>
<g>
<title>BlockListBuilder::BlockListBuilder(Compilation*, IRScope*, int) (1 samples, 0.02%)</title><rect x="1187.1" y="803.0" width="0.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1190.1" y="814.0"></text>
</g>
<g>
<title>BlockListBuilder::set_entries(int) (1 samples, 0.02%)</title><rect x="1187.1" y="787.0" width="0.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.1" y="798.0"></text>
</g>
<g>
<title>IR::eliminate_null_checks() (1 samples, 0.02%)</title><rect x="1187.4" y="1027.0" width="0.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.4" y="1038.0"></text>
</g>
<g>
<title>Optimizer::eliminate_null_checks() (1 samples, 0.02%)</title><rect x="1187.4" y="1011.0" width="0.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="1022.0"></text>
</g>
<g>
<title>LoadField::visit(InstructionVisitor*) (1 samples, 0.02%)</title><rect x="1187.4" y="995.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1190.4" y="1006.0"></text>
</g>
<g>
<title>[tid=768] (4 samples, 0.09%)</title><rect x="1187.6" y="1235.0" width="1.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1190.6" y="1246.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.04%)</title><rect x="1187.6" y="1219.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1190.6" y="1230.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.04%)</title><rect x="1188.2" y="1219.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1191.2" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.04%)</title><rect x="1188.2" y="1203.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.2" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.04%)</title><rect x="1188.2" y="1187.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.2" y="1198.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.04%)</title><rect x="1188.2" y="1171.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1191.2" y="1182.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (1 samples, 0.02%)</title><rect x="1188.2" y="1155.0" width="0.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.2" y="1166.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (1 samples, 0.02%)</title><rect x="1188.4" y="1155.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.4" y="1166.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.02%)</title><rect x="1188.4" y="1139.0" width="0.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.4" y="1150.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.02%)</title><rect x="1188.4" y="1123.0" width="0.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1191.4" y="1134.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.02%)</title><rect x="1188.4" y="1107.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.4" y="1118.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.02%)</title><rect x="1188.4" y="1091.0" width="0.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1191.4" y="1102.0"></text>
</g>
<g>
<title>[tid=878] (1 samples, 0.02%)</title><rect x="1188.7" y="1235.0" width="0.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1191.7" y="1246.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1188.7" y="1219.0" width="0.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1191.7" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1188.7" y="1203.0" width="0.2" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1191.7" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1188.7" y="1187.0" width="0.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.7" y="1198.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="1188.7" y="1171.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1191.7" y="1182.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1188.7" y="1155.0" width="0.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.7" y="1166.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1188.7" y="1139.0" width="0.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.7" y="1150.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1188.7" y="1123.0" width="0.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1191.7" y="1134.0"></text>
</g>
<g>
<title>[tid=879] (1 samples, 0.02%)</title><rect x="1188.9" y="1235.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1191.9" y="1246.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1188.9" y="1219.0" width="0.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1191.9" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1188.9" y="1203.0" width="0.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1191.9" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1188.9" y="1187.0" width="0.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.9" y="1198.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="1188.9" y="1171.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1191.9" y="1182.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1188.9" y="1155.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.9" y="1166.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1188.9" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1191.9" y="1150.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1188.9" y="1123.0" width="0.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1191.9" y="1134.0"></text>
</g>
<g>
<title>[tid=882] (1 samples, 0.02%)</title><rect x="1189.2" y="1235.0" width="0.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1192.2" y="1246.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1189.2" y="1219.0" width="0.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1192.2" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1189.2" y="1203.0" width="0.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1192.2" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1189.2" y="1187.0" width="0.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1192.2" y="1198.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="1189.2" y="1171.0" width="0.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1192.2" y="1182.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1189.2" y="1155.0" width="0.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.2" y="1166.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1189.2" y="1139.0" width="0.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1192.2" y="1150.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1189.2" y="1123.0" width="0.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1192.2" y="1134.0"></text>
</g>
<g>
<title>[tid=883] (1 samples, 0.02%)</title><rect x="1189.5" y="1235.0" width="0.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1192.5" y="1246.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1189.5" y="1219.0" width="0.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1192.5" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1189.5" y="1203.0" width="0.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1192.5" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1189.5" y="1187.0" width="0.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.5" y="1198.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="1189.5" y="1171.0" width="0.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.5" y="1182.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1189.5" y="1155.0" width="0.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.5" y="1166.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1189.5" y="1139.0" width="0.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1192.5" y="1150.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1189.5" y="1123.0" width="0.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1192.5" y="1134.0"></text>
</g>
<g>
<title>[tid=884] (1 samples, 0.02%)</title><rect x="1189.7" y="1235.0" width="0.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1192.7" y="1246.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.02%)</title><rect x="1189.7" y="1219.0" width="0.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1192.7" y="1230.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.02%)</title><rect x="1189.7" y="1203.0" width="0.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1192.7" y="1214.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.02%)</title><rect x="1189.7" y="1187.0" width="0.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.7" y="1198.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.02%)</title><rect x="1189.7" y="1171.0" width="0.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.7" y="1182.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.02%)</title><rect x="1189.7" y="1155.0" width="0.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.7" y="1166.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.02%)</title><rect x="1189.7" y="1139.0" width="0.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1192.7" y="1150.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.02%)</title><rect x="1189.7" y="1123.0" width="0.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.7" y="1134.0"></text>
</g>
</g>
</svg>
