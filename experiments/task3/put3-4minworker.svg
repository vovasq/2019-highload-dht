<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (4,863 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=32633] (337 samples, 6.93%)</title><rect x="10.2" y="883.0" width="81.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.2" y="894.0">[NIO Sele..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="10.5" y="867.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.5" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (334 samples, 6.87%)</title><rect x="11.0" y="867.0" width="81.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="14.0" y="878.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (4 samples, 0.08%)</title><rect x="13.2" y="851.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="16.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.06%)</title><rect x="13.4" y="835.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="16.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (114 samples, 2.34%)</title><rect x="14.1" y="851.0" width="27.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.1" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.04%)</title><rect x="15.1" y="835.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.1" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.04%)</title><rect x="15.1" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="18.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (108 samples, 2.22%)</title><rect x="15.6" y="835.0" width="26.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.6" y="846.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.06%)</title><rect x="17.0" y="819.0" width="0.8" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="20.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.95%)</title><rect x="17.8" y="819.0" width="23.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="20.8" y="830.0">[..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.06%)</title><rect x="17.8" y="803.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="20.8" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.08%)</title><rect x="18.5" y="803.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="21.5" y="814.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (2 samples, 0.04%)</title><rect x="19.5" y="803.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="22.5" y="814.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="20.2" y="803.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="23.2" y="814.0"></text>
</g>
<g>
<title>epoll_wait (83 samples, 1.71%)</title><rect x="20.7" y="803.0" width="20.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="23.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (75 samples, 1.54%)</title><rect x="22.6" y="787.0" width="18.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="25.6" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 1.52%)</title><rect x="22.9" y="771.0" width="17.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="25.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (73 samples, 1.50%)</title><rect x="23.1" y="755.0" width="17.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.1" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (73 samples, 1.50%)</title><rect x="23.1" y="739.0" width="17.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="26.1" y="750.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="23.6" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="26.6" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="23.6" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.6" y="718.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="23.6" y="691.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="26.6" y="702.0"></text>
</g>
<g>
<title>ep_poll (63 samples, 1.30%)</title><rect x="24.1" y="723.0" width="15.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="27.1" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (28 samples, 0.58%)</title><rect x="26.3" y="707.0" width="6.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="29.3" y="718.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="29.2" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="32.2" y="702.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.27%)</title><rect x="29.9" y="691.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="32.9" y="702.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (8 samples, 0.16%)</title><rect x="30.9" y="675.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="33.9" y="686.0"></text>
</g>
<g>
<title>sock_poll (5 samples, 0.10%)</title><rect x="31.6" y="659.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="34.6" y="670.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.06%)</title><rect x="32.1" y="643.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.1" y="654.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (25 samples, 0.51%)</title><rect x="33.3" y="707.0" width="6.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="36.3" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (25 samples, 0.51%)</title><rect x="33.3" y="691.0" width="6.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="36.3" y="702.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.43%)</title><rect x="34.3" y="675.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="37.3" y="686.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.43%)</title><rect x="34.3" y="659.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="37.3" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (20 samples, 0.41%)</title><rect x="34.5" y="643.0" width="4.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="37.5" y="654.0"></text>
</g>
<g>
<title>fput (6 samples, 0.12%)</title><rect x="39.4" y="723.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="42.4" y="734.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="40.8" y="819.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="43.8" y="830.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="41.3" y="819.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="44.3" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (207 samples, 4.26%)</title><rect x="41.8" y="851.0" width="50.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="44.8" y="862.0">one/n..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="42.5" y="835.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="45.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (201 samples, 4.13%)</title><rect x="43.0" y="835.0" width="48.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="46.0" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (145 samples, 2.98%)</title><rect x="43.0" y="819.0" width="35.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="46.0" y="830.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (112 samples, 2.30%)</title><rect x="43.5" y="803.0" width="27.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="46.5" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (111 samples, 2.28%)</title><rect x="43.7" y="787.0" width="27.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="46.7" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (14 samples, 0.29%)</title><rect x="43.7" y="771.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.7" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (14 samples, 0.29%)</title><rect x="43.7" y="755.0" width="3.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="46.7" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.04%)</title><rect x="44.0" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="44.0" y="723.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.0" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (7 samples, 0.14%)</title><rect x="44.5" y="739.0" width="1.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="47.5" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (6 samples, 0.12%)</title><rect x="44.7" y="723.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.7" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.08%)</title><rect x="44.9" y="707.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="47.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.04%)</title><rect x="46.2" y="739.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="49.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (3 samples, 0.06%)</title><rect x="47.1" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="50.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="47.1" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="50.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="47.1" y="739.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="50.1" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="47.1" y="723.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="50.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (94 samples, 1.93%)</title><rect x="47.9" y="771.0" width="22.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="50.9" y="782.0">r..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (93 samples, 1.91%)</title><rect x="48.1" y="755.0" width="22.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="51.1" y="766.0">r..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="48.1" y="739.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="51.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="48.1" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.1" y="734.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="48.1" y="707.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="51.1" y="718.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="48.1" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.1" y="702.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="48.1" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="51.1" y="686.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (90 samples, 1.85%)</title><rect x="48.8" y="739.0" width="21.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="51.8" y="750.0">o..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (90 samples, 1.85%)</title><rect x="48.8" y="723.0" width="21.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="51.8" y="734.0">j..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (89 samples, 1.83%)</title><rect x="49.1" y="707.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="52.1" y="718.0">o..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (89 samples, 1.83%)</title><rect x="49.1" y="691.0" width="21.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="52.1" y="702.0">o..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (89 samples, 1.83%)</title><rect x="49.1" y="675.0" width="21.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.1" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (89 samples, 1.83%)</title><rect x="49.1" y="659.0" width="21.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.1" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (86 samples, 1.77%)</title><rect x="49.3" y="643.0" width="20.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="52.3" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (84 samples, 1.73%)</title><rect x="49.8" y="627.0" width="20.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="52.8" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (84 samples, 1.73%)</title><rect x="49.8" y="611.0" width="20.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="52.8" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="49.8" y="595.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="52.8" y="606.0"></text>
</g>
<g>
<title>Unsafe_Unpark (18 samples, 0.37%)</title><rect x="50.3" y="595.0" width="4.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="53.3" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.06%)</title><rect x="51.3" y="579.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="54.3" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="52.5" y="579.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="55.5" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.08%)</title><rect x="52.9" y="579.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="55.9" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.04%)</title><rect x="53.9" y="579.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="56.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.10%)</title><rect x="54.6" y="595.0" width="1.3" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="57.6" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (59 samples, 1.21%)</title><rect x="55.9" y="595.0" width="14.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="58.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 1.11%)</title><rect x="57.1" y="579.0" width="13.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="60.1" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 1.09%)</title><rect x="57.3" y="563.0" width="12.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="60.3" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (52 samples, 1.07%)</title><rect x="57.6" y="547.0" width="12.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="60.6" y="558.0"></text>
</g>
<g>
<title>do_futex (50 samples, 1.03%)</title><rect x="57.6" y="531.0" width="12.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="60.6" y="542.0"></text>
</g>
<g>
<title>futex_wake (47 samples, 0.97%)</title><rect x="57.8" y="515.0" width="11.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="60.8" y="526.0"></text>
</g>
<g>
<title>wake_up_q (43 samples, 0.88%)</title><rect x="58.8" y="499.0" width="10.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="61.8" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (43 samples, 0.88%)</title><rect x="58.8" y="483.0" width="10.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="61.8" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (43 samples, 0.88%)</title><rect x="58.8" y="467.0" width="10.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="61.8" y="478.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="69.2" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="72.2" y="526.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="69.7" y="531.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="72.7" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (23 samples, 0.47%)</title><rect x="70.7" y="803.0" width="5.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="73.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (12 samples, 0.25%)</title><rect x="71.4" y="787.0" width="2.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="74.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="73.8" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="76.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (5 samples, 0.10%)</title><rect x="74.5" y="787.0" width="1.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="77.5" y="798.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="75.3" y="771.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="78.3" y="782.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="75.3" y="755.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="78.3" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="75.3" y="739.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="78.3" y="750.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="75.8" y="787.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="78.8" y="798.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="75.8" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="78.8" y="782.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="75.8" y="755.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="78.8" y="766.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="75.8" y="739.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="78.8" y="750.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.04%)</title><rect x="75.8" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.8" y="734.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.04%)</title><rect x="75.8" y="707.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="78.8" y="718.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (2 samples, 0.04%)</title><rect x="75.8" y="691.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="78.8" y="702.0"></text>
</g>
<g>
<title>get_page_from_freelist (2 samples, 0.04%)</title><rect x="75.8" y="675.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="78.8" y="686.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.10%)</title><rect x="76.5" y="803.0" width="1.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="79.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="77.0" y="787.0" width="0.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="80.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="77.2" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="80.2" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="77.7" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.04%)</title><rect x="77.7" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.7" y="798.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="77.7" y="771.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="80.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (56 samples, 1.15%)</title><rect x="78.2" y="819.0" width="13.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="81.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (55 samples, 1.13%)</title><rect x="78.2" y="803.0" width="13.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="81.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.23%)</title><rect x="79.2" y="787.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="82.2" y="798.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.23%)</title><rect x="79.2" y="771.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="82.2" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (7 samples, 0.14%)</title><rect x="79.2" y="755.0" width="1.7" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="82.2" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.10%)</title><rect x="79.6" y="739.0" width="1.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="82.6" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.06%)</title><rect x="79.6" y="723.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="82.6" y="734.0"></text>
</g>
<g>
<title>recv (3 samples, 0.06%)</title><rect x="81.1" y="755.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="84.1" y="766.0"></text>
</g>
<g>
<title>recv (40 samples, 0.82%)</title><rect x="81.8" y="787.0" width="9.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="84.8" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (37 samples, 0.76%)</title><rect x="82.6" y="771.0" width="8.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="85.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (37 samples, 0.76%)</title><rect x="82.6" y="755.0" width="8.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="85.6" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (36 samples, 0.74%)</title><rect x="82.8" y="739.0" width="8.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="85.8" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (36 samples, 0.74%)</title><rect x="82.8" y="723.0" width="8.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="85.8" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (3 samples, 0.06%)</title><rect x="82.8" y="707.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="85.8" y="718.0"></text>
</g>
<g>
<title>sock_recvmsg (26 samples, 0.53%)</title><rect x="83.8" y="707.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="86.8" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.04%)</title><rect x="84.3" y="691.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="87.3" y="702.0"></text>
</g>
<g>
<title>inet_recvmsg (17 samples, 0.35%)</title><rect x="84.7" y="691.0" width="4.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="87.7" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (16 samples, 0.33%)</title><rect x="85.0" y="675.0" width="3.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="88.0" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.04%)</title><rect x="85.9" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="88.9" y="670.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.04%)</title><rect x="85.9" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="88.9" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.16%)</title><rect x="86.7" y="659.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="89.7" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.16%)</title><rect x="86.7" y="643.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="89.7" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.16%)</title><rect x="86.7" y="627.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="89.7" y="638.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="86.7" y="611.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.7" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.06%)</title><rect x="87.6" y="611.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="90.6" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="87.6" y="595.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="90.6" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.08%)</title><rect x="88.9" y="691.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="91.9" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.08%)</title><rect x="88.9" y="675.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="91.9" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.08%)</title><rect x="88.9" y="659.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="91.9" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.06%)</title><rect x="89.1" y="643.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="92.1" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.12%)</title><rect x="90.1" y="707.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="93.1" y="718.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.12%)</title><rect x="90.1" y="691.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="93.1" y="702.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.12%)</title><rect x="90.1" y="675.0" width="1.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.1" y="686.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.08%)</title><rect x="90.6" y="659.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="93.6" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=32636] (339 samples, 6.97%)</title><rect x="92.0" y="883.0" width="82.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="95.0" y="894.0">[NIO Sele..</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.06%)</title><rect x="92.3" y="867.0" width="0.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="95.3" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (335 samples, 6.89%)</title><rect x="93.0" y="867.0" width="81.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="96.0" y="878.0">one/nio/s..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.04%)</title><rect x="94.2" y="851.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="97.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.06%)</title><rect x="94.9" y="851.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="97.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.06%)</title><rect x="94.9" y="835.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="97.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (122 samples, 2.51%)</title><rect x="95.7" y="851.0" width="29.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="98.7" y="862.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (118 samples, 2.43%)</title><rect x="96.4" y="835.0" width="28.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="99.4" y="846.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.10%)</title><rect x="98.1" y="819.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="101.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 2.04%)</title><rect x="99.3" y="819.0" width="24.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="102.3" y="830.0">[..</text>
</g>
<g>
<title>[unknown] (5 samples, 0.10%)</title><rect x="99.3" y="803.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="102.3" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="99.3" y="787.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="102.3" y="798.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="99.8" y="787.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="102.8" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.08%)</title><rect x="100.8" y="803.0" width="0.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="103.8" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.08%)</title><rect x="102.0" y="803.0" width="0.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="105.0" y="814.0"></text>
</g>
<g>
<title>epoll_wait (84 samples, 1.73%)</title><rect x="102.9" y="803.0" width="20.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="105.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 1.21%)</title><rect x="109.0" y="787.0" width="14.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="112.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (59 samples, 1.21%)</title><rect x="109.0" y="771.0" width="14.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="112.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (52 samples, 1.07%)</title><rect x="110.2" y="755.0" width="12.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="113.2" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (52 samples, 1.07%)</title><rect x="110.2" y="739.0" width="12.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="113.2" y="750.0"></text>
</g>
<g>
<title>ep_poll (46 samples, 0.95%)</title><rect x="110.2" y="723.0" width="11.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="113.2" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (21 samples, 0.43%)</title><rect x="112.2" y="707.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="115.2" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (12 samples, 0.25%)</title><rect x="114.1" y="691.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="117.1" y="702.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (10 samples, 0.21%)</title><rect x="114.6" y="675.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="117.6" y="686.0"></text>
</g>
<g>
<title>sock_poll (9 samples, 0.19%)</title><rect x="114.8" y="659.0" width="2.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.8" y="670.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.04%)</title><rect x="116.0" y="643.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="119.0" y="654.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.04%)</title><rect x="116.5" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="119.5" y="654.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (16 samples, 0.33%)</title><rect x="117.3" y="707.0" width="3.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="120.3" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (16 samples, 0.33%)</title><rect x="117.3" y="691.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="120.3" y="702.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.29%)</title><rect x="117.7" y="675.0" width="3.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.7" y="686.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.27%)</title><rect x="118.0" y="659.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.0" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.27%)</title><rect x="118.0" y="643.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.0" y="654.0"></text>
</g>
<g>
<title>fput (6 samples, 0.12%)</title><rect x="121.4" y="723.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="124.4" y="734.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.04%)</title><rect x="122.8" y="755.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="125.8" y="766.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="123.3" y="819.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="126.3" y="830.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.10%)</title><rect x="123.8" y="819.0" width="1.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="126.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (202 samples, 4.15%)</title><rect x="125.3" y="851.0" width="49.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="128.3" y="862.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (198 samples, 4.07%)</title><rect x="125.7" y="835.0" width="48.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="128.7" y="846.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (121 samples, 2.49%)</title><rect x="125.7" y="819.0" width="29.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="128.7" y="830.0">on..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="126.7" y="803.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="129.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (85 samples, 1.75%)</title><rect x="127.2" y="803.0" width="20.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="130.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (85 samples, 1.75%)</title><rect x="127.2" y="787.0" width="20.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.2" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (7 samples, 0.14%)</title><rect x="127.2" y="771.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.2" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (7 samples, 0.14%)</title><rect x="127.2" y="755.0" width="1.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="130.2" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (5 samples, 0.10%)</title><rect x="127.2" y="739.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="130.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (5 samples, 0.10%)</title><rect x="127.2" y="723.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="130.2" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (4 samples, 0.08%)</title><rect x="127.4" y="707.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="130.4" y="718.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="127.9" y="691.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="130.9" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="128.4" y="739.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="131.4" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (77 samples, 1.58%)</title><rect x="129.1" y="771.0" width="18.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="132.1" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (76 samples, 1.56%)</title><rect x="129.4" y="755.0" width="18.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="132.4" y="766.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (73 samples, 1.50%)</title><rect x="130.1" y="739.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.1" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (73 samples, 1.50%)</title><rect x="130.1" y="723.0" width="17.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.1" y="734.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (73 samples, 1.50%)</title><rect x="130.1" y="707.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="133.1" y="718.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (73 samples, 1.50%)</title><rect x="130.1" y="691.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.1" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (73 samples, 1.50%)</title><rect x="130.1" y="675.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (73 samples, 1.50%)</title><rect x="130.1" y="659.0" width="17.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="133.1" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (66 samples, 1.36%)</title><rect x="130.1" y="643.0" width="16.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="133.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (65 samples, 1.34%)</title><rect x="130.4" y="627.0" width="15.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="133.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (65 samples, 1.34%)</title><rect x="130.4" y="611.0" width="15.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="133.4" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (11 samples, 0.23%)</title><rect x="130.6" y="595.0" width="2.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="133.6" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (3 samples, 0.06%)</title><rect x="131.1" y="579.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="134.1" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.04%)</title><rect x="131.8" y="579.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="134.8" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="132.3" y="579.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="135.3" y="590.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (53 samples, 1.09%)</title><rect x="133.3" y="595.0" width="12.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="136.3" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.99%)</title><rect x="134.5" y="579.0" width="11.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="137.5" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.99%)</title><rect x="134.5" y="563.0" width="11.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="137.5" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (47 samples, 0.97%)</title><rect x="134.7" y="547.0" width="11.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="137.7" y="558.0"></text>
</g>
<g>
<title>do_futex (47 samples, 0.97%)</title><rect x="134.7" y="531.0" width="11.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="137.7" y="542.0"></text>
</g>
<g>
<title>futex_wake (44 samples, 0.90%)</title><rect x="135.2" y="515.0" width="10.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.2" y="526.0"></text>
</g>
<g>
<title>mark_wake_futex (4 samples, 0.08%)</title><rect x="135.9" y="499.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="138.9" y="510.0"></text>
</g>
<g>
<title>wake_q_add (2 samples, 0.04%)</title><rect x="136.4" y="483.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="139.4" y="494.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.76%)</title><rect x="136.9" y="499.0" width="9.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="139.9" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (37 samples, 0.76%)</title><rect x="136.9" y="483.0" width="9.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="139.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (37 samples, 0.76%)</title><rect x="136.9" y="467.0" width="9.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="139.9" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (6 samples, 0.12%)</title><rect x="146.1" y="643.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="149.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (4 samples, 0.08%)</title><rect x="146.6" y="627.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="149.6" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (20 samples, 0.41%)</title><rect x="147.8" y="803.0" width="4.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (7 samples, 0.14%)</title><rect x="148.3" y="787.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="151.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="150.0" y="787.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="153.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.08%)</title><rect x="150.0" y="771.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="153.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="150.3" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="153.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="150.3" y="739.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="153.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (6 samples, 0.12%)</title><rect x="151.0" y="787.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="154.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.06%)</title><rect x="152.7" y="803.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="155.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="152.9" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.9" y="798.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.04%)</title><rect x="152.9" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="155.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.04%)</title><rect x="152.9" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="155.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.04%)</title><rect x="152.9" y="739.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="155.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.10%)</title><rect x="153.4" y="803.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="156.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="153.4" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="156.4" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="153.4" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="156.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (3 samples, 0.06%)</title><rect x="153.9" y="787.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="156.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="153.9" y="771.0" width="0.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="156.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="153.9" y="755.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="156.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (77 samples, 1.58%)</title><rect x="155.1" y="819.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (77 samples, 1.58%)</title><rect x="155.1" y="803.0" width="18.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.41%)</title><rect x="156.6" y="787.0" width="4.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="159.6" y="798.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.41%)</title><rect x="156.6" y="771.0" width="4.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="159.6" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (15 samples, 0.31%)</title><rect x="156.6" y="755.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="159.6" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="156.8" y="739.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="159.8" y="750.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="157.3" y="739.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="160.3" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.16%)</title><rect x="158.3" y="739.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="161.3" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="158.7" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="161.7" y="734.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.04%)</title><rect x="159.2" y="723.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="162.2" y="734.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.04%)</title><rect x="159.7" y="723.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="162.7" y="734.0"></text>
</g>
<g>
<title>recv (4 samples, 0.08%)</title><rect x="160.4" y="755.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="163.4" y="766.0"></text>
</g>
<g>
<title>recv (51 samples, 1.05%)</title><rect x="161.4" y="787.0" width="12.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="164.4" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (50 samples, 1.03%)</title><rect x="161.7" y="771.0" width="12.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="164.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (50 samples, 1.03%)</title><rect x="161.7" y="755.0" width="12.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="164.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (49 samples, 1.01%)</title><rect x="161.9" y="739.0" width="11.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="164.9" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (48 samples, 0.99%)</title><rect x="161.9" y="723.0" width="11.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="164.9" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (38 samples, 0.78%)</title><rect x="162.4" y="707.0" width="9.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="165.4" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (28 samples, 0.58%)</title><rect x="162.4" y="691.0" width="6.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="165.4" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (27 samples, 0.56%)</title><rect x="162.6" y="675.0" width="6.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.6" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.08%)</title><rect x="164.1" y="659.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="167.1" y="670.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="164.3" y="643.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="167.3" y="654.0"></text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="165.3" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="168.3" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.19%)</title><rect x="166.8" y="659.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="169.8" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.19%)</title><rect x="166.8" y="643.0" width="2.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="169.8" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.16%)</title><rect x="167.0" y="627.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="170.0" y="638.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="167.0" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="170.0" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.06%)</title><rect x="167.7" y="611.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="170.7" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.06%)</title><rect x="167.7" y="595.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="170.7" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (10 samples, 0.21%)</title><rect x="169.2" y="691.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="172.2" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.21%)</title><rect x="169.2" y="675.0" width="2.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="172.2" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.21%)</title><rect x="169.2" y="659.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.2" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (10 samples, 0.21%)</title><rect x="169.2" y="643.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="172.2" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.08%)</title><rect x="170.6" y="627.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="173.6" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.16%)</title><rect x="171.6" y="707.0" width="1.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="174.6" y="718.0"></text>
</g>
<g>
<title>__fdget (6 samples, 0.12%)</title><rect x="171.6" y="691.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="174.6" y="702.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.12%)</title><rect x="171.6" y="675.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="174.6" y="686.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.10%)</title><rect x="171.8" y="659.0" width="1.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="174.8" y="670.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="173.1" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="176.1" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="173.8" y="835.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="176.8" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=32639] (334 samples, 6.87%)</title><rect x="174.3" y="883.0" width="81.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="177.3" y="894.0">[NIO Sele..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="174.3" y="867.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="177.3" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (332 samples, 6.83%)</title><rect x="174.8" y="867.0" width="80.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.8" y="878.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (107 samples, 2.20%)</title><rect x="176.5" y="851.0" width="25.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="179.5" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (4 samples, 0.08%)</title><rect x="177.4" y="835.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="180.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.04%)</title><rect x="177.9" y="819.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="180.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (99 samples, 2.04%)</title><rect x="178.4" y="835.0" width="24.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="181.4" y="846.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.06%)</title><rect x="180.8" y="819.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="183.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (78 samples, 1.60%)</title><rect x="181.6" y="819.0" width="18.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="184.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="181.6" y="803.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="184.6" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.08%)</title><rect x="182.0" y="803.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="185.0" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="183.0" y="803.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="186.0" y="814.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.06%)</title><rect x="183.5" y="803.0" width="0.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="186.5" y="814.0"></text>
</g>
<g>
<title>epoll_wait (67 samples, 1.38%)</title><rect x="184.2" y="803.0" width="16.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="187.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (51 samples, 1.05%)</title><rect x="188.1" y="787.0" width="12.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="191.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (51 samples, 1.05%)</title><rect x="188.1" y="771.0" width="12.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="191.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (51 samples, 1.05%)</title><rect x="188.1" y="755.0" width="12.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="191.1" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (51 samples, 1.05%)</title><rect x="188.1" y="739.0" width="12.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="191.1" y="750.0"></text>
</g>
<g>
<title>ep_poll (44 samples, 0.90%)</title><rect x="188.6" y="723.0" width="10.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="191.6" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (17 samples, 0.35%)</title><rect x="189.6" y="707.0" width="4.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="192.6" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.19%)</title><rect x="191.5" y="691.0" width="2.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="194.5" y="702.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (4 samples, 0.08%)</title><rect x="192.5" y="675.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="195.5" y="686.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.08%)</title><rect x="192.5" y="659.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="195.5" y="670.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (22 samples, 0.45%)</title><rect x="193.9" y="707.0" width="5.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.9" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (22 samples, 0.45%)</title><rect x="193.9" y="691.0" width="5.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="196.9" y="702.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.43%)</title><rect x="194.2" y="675.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.2" y="686.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.43%)</title><rect x="194.2" y="659.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="197.2" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (20 samples, 0.41%)</title><rect x="194.4" y="643.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="197.4" y="654.0"></text>
</g>
<g>
<title>fput (5 samples, 0.10%)</title><rect x="199.3" y="723.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="202.3" y="734.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.08%)</title><rect x="200.5" y="819.0" width="0.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="203.5" y="830.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 0.08%)</title><rect x="201.4" y="819.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="204.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (218 samples, 4.48%)</title><rect x="202.4" y="851.0" width="52.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="205.4" y="862.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (215 samples, 4.42%)</title><rect x="203.1" y="835.0" width="52.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="206.1" y="846.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (137 samples, 2.82%)</title><rect x="203.1" y="819.0" width="33.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="206.1" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (104 samples, 2.14%)</title><rect x="204.1" y="803.0" width="25.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="207.1" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (104 samples, 2.14%)</title><rect x="204.1" y="787.0" width="25.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.1" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.04%)</title><rect x="204.1" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="207.1" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.04%)</title><rect x="204.1" y="755.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="207.1" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="204.6" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="204.6" y="755.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="207.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="204.6" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="207.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="204.6" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="207.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (100 samples, 2.06%)</title><rect x="205.1" y="771.0" width="24.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.1" y="782.0">r..</text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="205.1" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="208.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="205.1" y="739.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="208.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (98 samples, 2.02%)</title><rect x="205.6" y="755.0" width="23.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="208.6" y="766.0">r..</text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.04%)</title><rect x="205.6" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="208.6" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.04%)</title><rect x="205.6" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="208.6" y="734.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.04%)</title><rect x="205.6" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.12%)</title><rect x="206.3" y="739.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="209.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.08%)</title><rect x="206.8" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="209.8" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="207.3" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.04%)</title><rect x="207.3" y="691.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="210.3" y="702.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.04%)</title><rect x="207.3" y="675.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="210.3" y="686.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (89 samples, 1.83%)</title><rect x="207.8" y="739.0" width="21.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="210.8" y="750.0">o..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (89 samples, 1.83%)</title><rect x="207.8" y="723.0" width="21.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.8" y="734.0">j..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (88 samples, 1.81%)</title><rect x="208.0" y="707.0" width="21.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.0" y="718.0">o..</text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (88 samples, 1.81%)</title><rect x="208.0" y="691.0" width="21.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.0" y="702.0">o..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (88 samples, 1.81%)</title><rect x="208.0" y="675.0" width="21.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="211.0" y="686.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (88 samples, 1.81%)</title><rect x="208.0" y="659.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.0" y="670.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (80 samples, 1.65%)</title><rect x="208.5" y="643.0" width="19.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="211.5" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (80 samples, 1.65%)</title><rect x="208.5" y="627.0" width="19.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="211.5" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (80 samples, 1.65%)</title><rect x="208.5" y="611.0" width="19.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="211.5" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.27%)</title><rect x="208.5" y="595.0" width="3.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="211.5" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.04%)</title><rect x="208.7" y="579.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="211.7" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="209.5" y="579.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="212.5" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.06%)</title><rect x="209.9" y="579.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="212.9" y="590.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.06%)</title><rect x="210.9" y="579.0" width="0.7" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="213.9" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.08%)</title><rect x="211.6" y="595.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="214.6" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (63 samples, 1.30%)</title><rect x="212.6" y="595.0" width="15.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="215.6" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 1.13%)</title><rect x="214.6" y="579.0" width="13.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="217.6" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (55 samples, 1.13%)</title><rect x="214.6" y="563.0" width="13.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="217.6" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (54 samples, 1.11%)</title><rect x="214.8" y="547.0" width="13.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="217.8" y="558.0"></text>
</g>
<g>
<title>do_futex (53 samples, 1.09%)</title><rect x="214.8" y="531.0" width="12.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="217.8" y="542.0"></text>
</g>
<g>
<title>futex_wake (51 samples, 1.05%)</title><rect x="215.0" y="515.0" width="12.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="218.0" y="526.0"></text>
</g>
<g>
<title>wake_up_q (46 samples, 0.95%)</title><rect x="216.3" y="499.0" width="11.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="219.3" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (46 samples, 0.95%)</title><rect x="216.3" y="483.0" width="11.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="219.3" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (46 samples, 0.95%)</title><rect x="216.3" y="467.0" width="11.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="219.3" y="478.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (3 samples, 0.06%)</title><rect x="228.1" y="643.0" width="0.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="231.1" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (2 samples, 0.04%)</title><rect x="228.4" y="627.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="231.4" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.04%)</title><rect x="228.9" y="643.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="231.9" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (20 samples, 0.41%)</title><rect x="229.4" y="803.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="232.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.08%)</title><rect x="229.6" y="787.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="232.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.12%)</title><rect x="230.6" y="787.0" width="1.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="233.6" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.12%)</title><rect x="230.6" y="771.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="233.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="231.3" y="755.0" width="0.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="234.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="231.3" y="739.0" width="0.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="234.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.19%)</title><rect x="232.0" y="787.0" width="2.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="235.0" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.04%)</title><rect x="234.4" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="237.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.10%)</title><rect x="234.9" y="803.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="237.9" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="234.9" y="787.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="237.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="234.9" y="771.0" width="0.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="237.9" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.06%)</title><rect x="234.9" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="237.9" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (2 samples, 0.04%)</title><rect x="235.2" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.2" y="750.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (2 samples, 0.04%)</title><rect x="235.2" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="238.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="235.7" y="787.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="238.7" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.04%)</title><rect x="235.7" y="771.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="238.7" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (78 samples, 1.60%)</title><rect x="236.4" y="819.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="239.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (78 samples, 1.60%)</title><rect x="236.4" y="803.0" width="18.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="239.4" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.04%)</title><rect x="237.4" y="787.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="240.4" y="798.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.37%)</title><rect x="237.8" y="787.0" width="4.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="240.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.37%)</title><rect x="237.8" y="771.0" width="4.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="240.8" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.33%)</title><rect x="237.8" y="755.0" width="3.9" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="240.8" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (5 samples, 0.10%)</title><rect x="238.1" y="739.0" width="1.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="241.1" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="239.3" y="739.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="242.3" y="750.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.06%)</title><rect x="239.8" y="739.0" width="0.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="242.8" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.04%)</title><rect x="240.5" y="739.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="243.5" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.04%)</title><rect x="240.5" y="723.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="243.5" y="734.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.06%)</title><rect x="241.0" y="739.0" width="0.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="244.0" y="750.0"></text>
</g>
<g>
<title>recv (54 samples, 1.11%)</title><rect x="242.2" y="787.0" width="13.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="245.2" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (49 samples, 1.01%)</title><rect x="243.4" y="771.0" width="11.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="246.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.99%)</title><rect x="243.7" y="755.0" width="11.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="246.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (45 samples, 0.93%)</title><rect x="244.4" y="739.0" width="10.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="247.4" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (43 samples, 0.88%)</title><rect x="244.4" y="723.0" width="10.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="247.4" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (33 samples, 0.68%)</title><rect x="245.4" y="707.0" width="8.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="248.4" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (25 samples, 0.51%)</title><rect x="245.4" y="691.0" width="6.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="248.4" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (25 samples, 0.51%)</title><rect x="245.4" y="675.0" width="6.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="248.4" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.04%)</title><rect x="246.3" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="249.3" y="670.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="246.3" y="643.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="249.3" y="654.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.04%)</title><rect x="246.3" y="627.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="249.3" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (12 samples, 0.25%)</title><rect x="247.8" y="659.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.8" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (12 samples, 0.25%)</title><rect x="247.8" y="643.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="250.8" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (11 samples, 0.23%)</title><rect x="248.0" y="627.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="251.0" y="638.0"></text>
</g>
<g>
<title>__check_object_size (8 samples, 0.16%)</title><rect x="248.0" y="611.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="251.0" y="622.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.04%)</title><rect x="248.5" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="251.5" y="606.0"></text>
</g>
<g>
<title>__virt_addr_valid (4 samples, 0.08%)</title><rect x="249.0" y="595.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="252.0" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.04%)</title><rect x="250.0" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="253.0" y="622.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.04%)</title><rect x="250.7" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.7" y="670.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.16%)</title><rect x="251.4" y="691.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="254.4" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.14%)</title><rect x="251.7" y="675.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="254.7" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.14%)</title><rect x="251.7" y="659.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="254.7" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.14%)</title><rect x="251.7" y="643.0" width="1.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="254.7" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.08%)</title><rect x="252.4" y="627.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.4" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.12%)</title><rect x="253.4" y="707.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="256.4" y="718.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.10%)</title><rect x="253.4" y="691.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="256.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.08%)</title><rect x="253.6" y="675.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="256.6" y="686.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="254.1" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.1" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=32640] (336 samples, 6.91%)</title><rect x="255.3" y="883.0" width="81.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="258.3" y="894.0">[NIO Sele..</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.06%)</title><rect x="255.6" y="867.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="258.6" y="878.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="255.8" y="851.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="258.8" y="862.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (332 samples, 6.83%)</title><rect x="256.3" y="867.0" width="80.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="259.3" y="878.0">one/nio/s..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (118 samples, 2.43%)</title><rect x="258.0" y="851.0" width="28.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.0" y="862.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.06%)</title><rect x="259.4" y="835.0" width="0.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="262.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (109 samples, 2.24%)</title><rect x="260.2" y="835.0" width="26.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="263.2" y="846.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.06%)</title><rect x="262.1" y="819.0" width="0.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="265.1" y="830.0"></text>
</g>
<g>
<title>[unknown] (94 samples, 1.93%)</title><rect x="262.8" y="819.0" width="22.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="265.8" y="830.0">[..</text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.06%)</title><rect x="263.1" y="803.0" width="0.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="266.1" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="263.8" y="803.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="266.8" y="814.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.10%)</title><rect x="264.3" y="803.0" width="1.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="267.3" y="814.0"></text>
</g>
<g>
<title>epoll_wait (83 samples, 1.71%)</title><rect x="265.5" y="803.0" width="20.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="268.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (56 samples, 1.15%)</title><rect x="272.1" y="787.0" width="13.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="275.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (56 samples, 1.15%)</title><rect x="272.1" y="771.0" width="13.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="275.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (53 samples, 1.09%)</title><rect x="272.3" y="755.0" width="12.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="275.3" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (53 samples, 1.09%)</title><rect x="272.3" y="739.0" width="12.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="275.3" y="750.0"></text>
</g>
<g>
<title>ep_poll (44 samples, 0.90%)</title><rect x="273.0" y="723.0" width="10.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="276.0" y="734.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (20 samples, 0.41%)</title><rect x="274.5" y="707.0" width="4.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="277.5" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (13 samples, 0.27%)</title><rect x="275.9" y="691.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="278.9" y="702.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (11 samples, 0.23%)</title><rect x="276.4" y="675.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="279.4" y="686.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.14%)</title><rect x="277.2" y="659.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="280.2" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.08%)</title><rect x="277.9" y="643.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="280.9" y="654.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.04%)</title><rect x="279.3" y="707.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="282.3" y="718.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.04%)</title><rect x="279.8" y="707.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="282.8" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (14 samples, 0.29%)</title><rect x="280.3" y="707.0" width="3.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="283.3" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (14 samples, 0.29%)</title><rect x="280.3" y="691.0" width="3.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="283.3" y="702.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.29%)</title><rect x="280.3" y="675.0" width="3.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="283.3" y="686.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.27%)</title><rect x="280.6" y="659.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="283.6" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.27%)</title><rect x="280.6" y="643.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="283.6" y="654.0"></text>
</g>
<g>
<title>fput (5 samples, 0.10%)</title><rect x="283.7" y="723.0" width="1.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="286.7" y="734.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.04%)</title><rect x="285.2" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="288.2" y="766.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="286.1" y="819.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="289.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (207 samples, 4.26%)</title><rect x="286.6" y="851.0" width="50.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="289.6" y="862.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (202 samples, 4.15%)</title><rect x="287.3" y="835.0" width="49.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="290.3" y="846.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (132 samples, 2.71%)</title><rect x="288.1" y="819.0" width="32.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="291.1" y="830.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (96 samples, 1.97%)</title><rect x="289.3" y="803.0" width="23.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.3" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (95 samples, 1.95%)</title><rect x="289.5" y="787.0" width="23.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="292.5" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (10 samples, 0.21%)</title><rect x="289.5" y="771.0" width="2.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="292.5" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.get (10 samples, 0.21%)</title><rect x="289.5" y="755.0" width="2.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.5" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (3 samples, 0.06%)</title><rect x="290.3" y="739.0" width="0.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="293.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.04%)</title><rect x="290.5" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="293.5" y="734.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (3 samples, 0.06%)</title><rect x="291.0" y="739.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (3 samples, 0.06%)</title><rect x="291.0" y="723.0" width="0.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="294.0" y="734.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.06%)</title><rect x="291.0" y="707.0" width="0.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="294.0" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (8 samples, 0.16%)</title><rect x="292.0" y="771.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="295.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (8 samples, 0.16%)</title><rect x="292.0" y="755.0" width="1.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (8 samples, 0.16%)</title><rect x="292.0" y="739.0" width="1.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.0" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.10%)</title><rect x="292.0" y="723.0" width="1.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.0" y="734.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (3 samples, 0.06%)</title><rect x="293.2" y="723.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="296.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (77 samples, 1.58%)</title><rect x="293.9" y="771.0" width="18.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="296.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.04%)</title><rect x="294.1" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="297.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.04%)</title><rect x="294.1" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="297.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (74 samples, 1.52%)</title><rect x="294.6" y="755.0" width="18.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="297.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.04%)</title><rect x="294.9" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="297.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.04%)</title><rect x="294.9" y="723.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.9" y="734.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (70 samples, 1.44%)</title><rect x="295.4" y="739.0" width="16.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="298.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (70 samples, 1.44%)</title><rect x="295.4" y="723.0" width="16.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.4" y="734.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (69 samples, 1.42%)</title><rect x="295.6" y="707.0" width="16.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="298.6" y="718.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (69 samples, 1.42%)</title><rect x="295.6" y="691.0" width="16.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="298.6" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (69 samples, 1.42%)</title><rect x="295.6" y="675.0" width="16.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="298.6" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (69 samples, 1.42%)</title><rect x="295.6" y="659.0" width="16.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="298.6" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (67 samples, 1.38%)</title><rect x="295.6" y="643.0" width="16.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="298.6" y="654.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (67 samples, 1.38%)</title><rect x="295.6" y="627.0" width="16.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.6" y="638.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (67 samples, 1.38%)</title><rect x="295.6" y="611.0" width="16.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="298.6" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (12 samples, 0.25%)</title><rect x="295.8" y="595.0" width="3.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="298.8" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.04%)</title><rect x="296.3" y="579.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="299.3" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.04%)</title><rect x="296.8" y="579.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="299.8" y="590.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.04%)</title><rect x="297.3" y="579.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="300.3" y="590.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.06%)</title><rect x="297.8" y="579.0" width="0.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="300.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="298.8" y="595.0" width="0.4" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="301.8" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (52 samples, 1.07%)</title><rect x="299.2" y="595.0" width="12.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="302.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.90%)</title><rect x="301.2" y="579.0" width="10.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="304.2" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (43 samples, 0.88%)</title><rect x="301.4" y="563.0" width="10.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="304.4" y="574.0"></text>
</g>
<g>
<title>__x64_sys_futex (42 samples, 0.86%)</title><rect x="301.7" y="547.0" width="10.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="304.7" y="558.0"></text>
</g>
<g>
<title>do_futex (42 samples, 0.86%)</title><rect x="301.7" y="531.0" width="10.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="304.7" y="542.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.84%)</title><rect x="301.7" y="515.0" width="9.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="304.7" y="526.0"></text>
</g>
<g>
<title>wake_up_q (37 samples, 0.76%)</title><rect x="302.6" y="499.0" width="9.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="305.6" y="510.0"></text>
</g>
<g>
<title>try_to_wake_up (36 samples, 0.74%)</title><rect x="302.9" y="483.0" width="8.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="305.9" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (36 samples, 0.74%)</title><rect x="302.9" y="467.0" width="8.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="305.9" y="478.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (22 samples, 0.45%)</title><rect x="312.6" y="803.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="315.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.12%)</title><rect x="312.8" y="787.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="315.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.10%)</title><rect x="314.3" y="787.0" width="1.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="317.3" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.10%)</title><rect x="314.3" y="771.0" width="1.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="317.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="314.8" y="755.0" width="0.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="317.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.06%)</title><rect x="314.8" y="739.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="317.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (9 samples, 0.19%)</title><rect x="315.5" y="787.0" width="2.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="318.5" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.14%)</title><rect x="318.2" y="803.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="321.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="318.2" y="787.0" width="0.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="321.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="318.4" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="321.4" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.08%)</title><rect x="318.9" y="787.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.9" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.06%)</title><rect x="319.1" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="322.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.04%)</title><rect x="319.1" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="322.1" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (67 samples, 1.38%)</title><rect x="320.1" y="819.0" width="16.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="323.1" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (67 samples, 1.38%)</title><rect x="320.1" y="803.0" width="16.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="323.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.27%)</title><rect x="321.8" y="787.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="324.8" y="798.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.27%)</title><rect x="321.8" y="771.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="324.8" y="782.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (10 samples, 0.21%)</title><rect x="321.8" y="755.0" width="2.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="324.8" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.14%)</title><rect x="322.5" y="739.0" width="1.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="325.5" y="750.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.06%)</title><rect x="323.0" y="723.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="326.0" y="734.0"></text>
</g>
<g>
<title>recv (2 samples, 0.04%)</title><rect x="324.5" y="755.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="327.5" y="766.0"></text>
</g>
<g>
<title>recv (47 samples, 0.97%)</title><rect x="325.0" y="787.0" width="11.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="328.0" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 0.90%)</title><rect x="325.7" y="771.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.7" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.90%)</title><rect x="325.7" y="755.0" width="10.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="328.7" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (41 samples, 0.84%)</title><rect x="326.4" y="739.0" width="10.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="329.4" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (39 samples, 0.80%)</title><rect x="326.4" y="723.0" width="9.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="329.4" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (30 samples, 0.62%)</title><rect x="326.9" y="707.0" width="7.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="329.9" y="718.0"></text>
</g>
<g>
<title>inet_recvmsg (17 samples, 0.35%)</title><rect x="327.1" y="691.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="330.1" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (17 samples, 0.35%)</title><rect x="327.1" y="675.0" width="4.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="330.1" y="686.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.06%)</title><rect x="327.9" y="659.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="330.9" y="670.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="327.9" y="643.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.9" y="654.0"></text>
</g>
<g>
<title>skb_release_head_state (2 samples, 0.04%)</title><rect x="327.9" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.9" y="638.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.16%)</title><rect x="329.1" y="659.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="332.1" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.16%)</title><rect x="329.1" y="643.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="332.1" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.14%)</title><rect x="329.3" y="627.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="332.3" y="638.0"></text>
</g>
<g>
<title>__check_object_size (5 samples, 0.10%)</title><rect x="329.3" y="611.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="332.3" y="622.0"></text>
</g>
<g>
<title>__check_heap_object (3 samples, 0.06%)</title><rect x="329.6" y="595.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="332.6" y="606.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.04%)</title><rect x="330.5" y="611.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="333.5" y="622.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="330.5" y="595.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="333.5" y="606.0"></text>
</g>
<g>
<title>security_socket_recvmsg (11 samples, 0.23%)</title><rect x="331.3" y="691.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="334.3" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (11 samples, 0.23%)</title><rect x="331.3" y="675.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="334.3" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (11 samples, 0.23%)</title><rect x="331.3" y="659.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="334.3" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (11 samples, 0.23%)</title><rect x="331.3" y="643.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="334.3" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (7 samples, 0.14%)</title><rect x="332.2" y="627.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="335.2" y="638.0"></text>
</g>
<g>
<title>aa_profile_af_perm (5 samples, 0.10%)</title><rect x="332.7" y="611.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="335.7" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (7 samples, 0.14%)</title><rect x="334.2" y="707.0" width="1.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="337.2" y="718.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.10%)</title><rect x="334.4" y="691.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="337.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.10%)</title><rect x="334.4" y="675.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="337.4" y="686.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.08%)</title><rect x="334.7" y="659.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="337.7" y="670.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.04%)</title><rect x="336.4" y="835.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="339.4" y="846.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="336.4" y="819.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="339.4" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="336.4" y="803.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="339.4" y="814.0"></text>
</g>
<g>
<title>[NIO Worker #3 tid=32689] (841 samples, 17.29%)</title><rect x="336.8" y="883.0" width="204.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="339.8" y="894.0">[NIO Worker #3 tid=32689]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.04%)</title><rect x="337.3" y="867.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="340.3" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.04%)</title><rect x="337.3" y="851.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="340.3" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.04%)</title><rect x="337.3" y="835.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="340.3" y="846.0"></text>
</g>
<g>
<title>[not_walkable_Java] (14 samples, 0.29%)</title><rect x="337.8" y="867.0" width="3.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="340.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.27%)</title><rect x="338.1" y="851.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="341.1" y="862.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="338.3" y="835.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="341.3" y="846.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.21%)</title><rect x="338.8" y="835.0" width="2.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="341.8" y="846.0"></text>
</g>
<g>
<title>[vdso] (9 samples, 0.19%)</title><rect x="339.0" y="819.0" width="2.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="342.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (822 samples, 16.90%)</title><rect x="341.5" y="867.0" width="199.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.5" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (822 samples, 16.90%)</title><rect x="341.5" y="851.0" width="199.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="344.5" y="862.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (822 samples, 16.90%)</title><rect x="341.5" y="835.0" width="199.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.5" y="846.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.12%)</title><rect x="346.1" y="819.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="349.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.10%)</title><rect x="346.3" y="803.0" width="1.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="349.3" y="814.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.04%)</title><rect x="346.3" y="787.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="349.3" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.04%)</title><rect x="346.3" y="771.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="349.3" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.04%)</title><rect x="347.5" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="350.5" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (179 samples, 3.68%)</title><rect x="348.5" y="819.0" width="43.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.5" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (179 samples, 3.68%)</title><rect x="348.5" y="803.0" width="43.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="351.5" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (179 samples, 3.68%)</title><rect x="348.5" y="787.0" width="43.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="351.5" y="798.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (138 samples, 2.84%)</title><rect x="349.5" y="771.0" width="33.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="352.5" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (138 samples, 2.84%)</title><rect x="349.5" y="755.0" width="33.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="352.5" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (138 samples, 2.84%)</title><rect x="349.5" y="739.0" width="33.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="352.5" y="750.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (69 samples, 1.42%)</title><rect x="350.2" y="723.0" width="16.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="353.2" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.29%)</title><rect x="351.9" y="707.0" width="3.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="354.9" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.06%)</title><rect x="353.6" y="691.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="356.6" y="702.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (2 samples, 0.04%)</title><rect x="353.8" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="356.8" y="686.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="354.6" y="691.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="357.6" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.04%)</title><rect x="355.3" y="707.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="358.3" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.04%)</title><rect x="355.8" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="358.8" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (32 samples, 0.66%)</title><rect x="356.3" y="707.0" width="7.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="359.3" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.51%)</title><rect x="358.0" y="691.0" width="6.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="361.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (24 samples, 0.49%)</title><rect x="358.2" y="675.0" width="5.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="361.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (19 samples, 0.39%)</title><rect x="358.9" y="659.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="361.9" y="670.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.35%)</title><rect x="358.9" y="643.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="361.9" y="654.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.33%)</title><rect x="359.2" y="627.0" width="3.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="362.2" y="638.0"></text>
</g>
<g>
<title>get_futex_key (7 samples, 0.14%)</title><rect x="361.4" y="611.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="364.4" y="622.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (3 samples, 0.06%)</title><rect x="362.3" y="595.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="365.3" y="606.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="363.1" y="643.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="366.1" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="363.5" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="366.5" y="670.0"></text>
</g>
<g>
<title>_init (3 samples, 0.06%)</title><rect x="364.5" y="707.0" width="0.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="367.5" y="718.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.08%)</title><rect x="365.2" y="707.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="368.2" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="366.5" y="707.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="369.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (57 samples, 1.17%)</title><rect x="367.2" y="723.0" width="13.8" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="370.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.99%)</title><rect x="369.4" y="707.0" width="11.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="372.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (48 samples, 0.99%)</title><rect x="369.4" y="691.0" width="11.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="372.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 0.93%)</title><rect x="369.6" y="675.0" width="10.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="372.6" y="686.0"></text>
</g>
<g>
<title>do_futex (39 samples, 0.80%)</title><rect x="370.1" y="659.0" width="9.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.1" y="670.0"></text>
</g>
<g>
<title>futex_wait (36 samples, 0.74%)</title><rect x="370.3" y="643.0" width="8.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="373.3" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (25 samples, 0.51%)</title><rect x="370.8" y="627.0" width="6.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="373.8" y="638.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (4 samples, 0.08%)</title><rect x="371.3" y="611.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="374.3" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="371.3" y="595.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="374.3" y="606.0"></text>
</g>
<g>
<title>schedule (18 samples, 0.37%)</title><rect x="372.5" y="611.0" width="4.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="375.5" y="622.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.33%)</title><rect x="373.0" y="595.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="376.0" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.31%)</title><rect x="373.2" y="579.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="376.2" y="590.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.04%)</title><rect x="376.4" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.4" y="574.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.04%)</title><rect x="376.4" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="379.4" y="558.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.04%)</title><rect x="376.4" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.4" y="542.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.04%)</title><rect x="376.4" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="379.4" y="526.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.04%)</title><rect x="376.4" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="379.4" y="510.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.04%)</title><rect x="376.4" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="379.4" y="494.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="376.4" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="379.4" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.04%)</title><rect x="376.9" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="379.9" y="638.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.04%)</title><rect x="377.4" y="627.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="380.4" y="638.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.06%)</title><rect x="377.9" y="627.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="380.9" y="638.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.06%)</title><rect x="377.9" y="611.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="380.9" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="377.9" y="595.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="380.9" y="606.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.04%)</title><rect x="379.6" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="382.6" y="670.0"></text>
</g>
<g>
<title>get_timespec64 (2 samples, 0.04%)</title><rect x="380.0" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="383.0" y="670.0"></text>
</g>
<g>
<title>_copy_from_user (2 samples, 0.04%)</title><rect x="380.0" y="643.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="383.0" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (3 samples, 0.06%)</title><rect x="381.5" y="723.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="384.5" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.06%)</title><rect x="382.2" y="723.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="385.2" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (32 samples, 0.66%)</title><rect x="383.2" y="771.0" width="7.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="386.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (26 samples, 0.53%)</title><rect x="384.6" y="755.0" width="6.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="387.6" y="766.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.04%)</title><rect x="391.0" y="771.0" width="0.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="394.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1167666647.run (614 samples, 12.63%)</title><rect x="391.9" y="819.0" width="149.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="394.9" y="830.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (614 samples, 12.63%)</title><rect x="391.9" y="803.0" width="149.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="394.9" y="814.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (225 samples, 4.63%)</title><rect x="392.2" y="787.0" width="54.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="395.2" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (218 samples, 4.48%)</title><rect x="393.4" y="771.0" width="52.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="396.4" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.14%)</title><rect x="393.4" y="755.0" width="1.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="396.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.12%)</title><rect x="393.6" y="739.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="396.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.08%)</title><rect x="393.9" y="723.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="396.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (211 samples, 4.34%)</title><rect x="395.1" y="755.0" width="51.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="398.1" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (208 samples, 4.28%)</title><rect x="395.3" y="739.0" width="50.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="398.3" y="750.0">one/n..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="395.3" y="723.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="398.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (206 samples, 4.24%)</title><rect x="395.8" y="723.0" width="50.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="398.8" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (206 samples, 4.24%)</title><rect x="395.8" y="707.0" width="50.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="398.8" y="718.0">one/n..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.21%)</title><rect x="396.5" y="691.0" width="2.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="399.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.21%)</title><rect x="396.5" y="675.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="399.5" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (7 samples, 0.14%)</title><rect x="396.5" y="659.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="399.5" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="397.5" y="643.0" width="0.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="400.5" y="654.0"></text>
</g>
<g>
<title>__send (193 samples, 3.97%)</title><rect x="399.0" y="691.0" width="46.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="402.0" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (192 samples, 3.95%)</title><rect x="399.2" y="675.0" width="46.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="402.2" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (192 samples, 3.95%)</title><rect x="399.2" y="659.0" width="46.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="402.2" y="670.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (191 samples, 3.93%)</title><rect x="399.5" y="643.0" width="46.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="402.5" y="654.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (190 samples, 3.91%)</title><rect x="399.5" y="627.0" width="46.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="402.5" y="638.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (186 samples, 3.82%)</title><rect x="399.9" y="611.0" width="45.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.9" y="622.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (175 samples, 3.60%)</title><rect x="400.9" y="595.0" width="42.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="403.9" y="606.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (173 samples, 3.56%)</title><rect x="401.4" y="579.0" width="42.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="404.4" y="590.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.04%)</title><rect x="401.9" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="404.9" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (168 samples, 3.45%)</title><rect x="402.4" y="563.0" width="40.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="405.4" y="574.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.16%)</title><rect x="403.3" y="547.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="406.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.16%)</title><rect x="403.3" y="531.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="406.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.06%)</title><rect x="403.8" y="515.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="406.8" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.06%)</title><rect x="403.8" y="499.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="406.8" y="510.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="404.8" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="407.8" y="526.0"></text>
</g>
<g>
<title>tcp_push (152 samples, 3.13%)</title><rect x="405.3" y="547.0" width="36.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="408.3" y="558.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (152 samples, 3.13%)</title><rect x="405.3" y="531.0" width="36.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="408.3" y="542.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (151 samples, 3.11%)</title><rect x="405.5" y="515.0" width="36.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="408.5" y="526.0">tcp..</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.04%)</title><rect x="406.7" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="409.7" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (136 samples, 2.80%)</title><rect x="407.2" y="499.0" width="33.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="410.2" y="510.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (131 samples, 2.69%)</title><rect x="407.9" y="483.0" width="31.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="410.9" y="494.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (130 samples, 2.67%)</title><rect x="408.2" y="467.0" width="31.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="411.2" y="478.0">__..</text>
</g>
<g>
<title>ip_local_out (129 samples, 2.65%)</title><rect x="408.2" y="451.0" width="31.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="411.2" y="462.0">ip..</text>
</g>
<g>
<title>ip_output (128 samples, 2.63%)</title><rect x="408.4" y="435.0" width="31.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="411.4" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output (128 samples, 2.63%)</title><rect x="408.4" y="419.0" width="31.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="411.4" y="430.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (128 samples, 2.63%)</title><rect x="408.4" y="403.0" width="31.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="411.4" y="414.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (112 samples, 2.30%)</title><rect x="409.4" y="387.0" width="27.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="412.4" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (111 samples, 2.28%)</title><rect x="409.6" y="371.0" width="27.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="412.6" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (109 samples, 2.24%)</title><rect x="410.1" y="355.0" width="26.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.1" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (108 samples, 2.22%)</title><rect x="410.1" y="339.0" width="26.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="413.1" y="350.0">_..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.04%)</title><rect x="410.9" y="323.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="413.9" y="334.0"></text>
</g>
<g>
<title>net_rx_action (101 samples, 2.08%)</title><rect x="411.6" y="323.0" width="24.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="414.6" y="334.0">n..</text>
</g>
<g>
<title>process_backlog (100 samples, 2.06%)</title><rect x="411.8" y="307.0" width="24.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="414.8" y="318.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (99 samples, 2.04%)</title><rect x="412.1" y="291.0" width="24.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="415.1" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (99 samples, 2.04%)</title><rect x="412.1" y="275.0" width="24.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="415.1" y="286.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.06%)</title><rect x="412.1" y="259.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="415.1" y="270.0"></text>
</g>
<g>
<title>ip_rcv (96 samples, 1.97%)</title><rect x="412.8" y="259.0" width="23.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="415.8" y="270.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (95 samples, 1.95%)</title><rect x="413.0" y="243.0" width="23.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="416.0" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver (94 samples, 1.93%)</title><rect x="413.3" y="227.0" width="22.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.3" y="238.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (93 samples, 1.91%)</title><rect x="413.3" y="211.0" width="22.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="416.3" y="222.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (93 samples, 1.91%)</title><rect x="413.3" y="195.0" width="22.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="416.3" y="206.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (92 samples, 1.89%)</title><rect x="413.5" y="179.0" width="22.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="416.5" y="190.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="415.0" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="418.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (82 samples, 1.69%)</title><rect x="415.7" y="163.0" width="19.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="418.7" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (81 samples, 1.67%)</title><rect x="416.0" y="147.0" width="19.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="419.0" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.08%)</title><rect x="416.7" y="131.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="419.7" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.08%)</title><rect x="416.7" y="115.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="419.7" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.08%)</title><rect x="416.7" y="99.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="419.7" y="110.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.08%)</title><rect x="416.7" y="83.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="419.7" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="416.9" y="67.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="419.9" y="78.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.41%)</title><rect x="418.1" y="131.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="421.1" y="142.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.04%)</title><rect x="419.1" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="422.1" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 0.23%)</title><rect x="419.6" y="115.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="422.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.16%)</title><rect x="420.1" y="99.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="423.1" y="110.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.14%)</title><rect x="420.1" y="83.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.1" y="94.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.14%)</title><rect x="420.1" y="67.0" width="1.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="423.1" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="421.3" y="51.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="424.3" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="421.3" y="35.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="424.3" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (47 samples, 0.97%)</title><rect x="423.2" y="131.0" width="11.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="426.2" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (41 samples, 0.84%)</title><rect x="424.2" y="115.0" width="9.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="427.2" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (40 samples, 0.82%)</title><rect x="424.4" y="99.0" width="9.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="427.4" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (40 samples, 0.82%)</title><rect x="424.4" y="83.0" width="9.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="427.4" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (39 samples, 0.80%)</title><rect x="424.7" y="67.0" width="9.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="427.7" y="78.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.04%)</title><rect x="435.1" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.1" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (12 samples, 0.25%)</title><rect x="436.6" y="387.0" width="2.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="439.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.25%)</title><rect x="436.6" y="371.0" width="2.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="439.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.08%)</title><rect x="437.5" y="355.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="440.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="437.8" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.8" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.04%)</title><rect x="437.8" y="323.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.8" y="334.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.04%)</title><rect x="439.7" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="442.7" y="494.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.12%)</title><rect x="440.2" y="499.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="443.2" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.04%)</title><rect x="441.2" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="444.2" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="441.2" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="444.2" y="478.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="441.2" y="451.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="444.2" y="462.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.04%)</title><rect x="441.7" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="444.7" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.08%)</title><rect x="442.2" y="547.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="445.2" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.08%)</title><rect x="442.2" y="531.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="445.2" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.14%)</title><rect x="443.4" y="595.0" width="1.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="446.4" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.14%)</title><rect x="443.4" y="579.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="446.4" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.14%)</title><rect x="443.4" y="563.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="446.4" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.10%)</title><rect x="443.9" y="547.0" width="1.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="446.9" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.08%)</title><rect x="444.1" y="531.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="447.1" y="542.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.04%)</title><rect x="444.6" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.6" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.04%)</title><rect x="445.1" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="448.1" y="622.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.04%)</title><rect x="445.1" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.1" y="606.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.04%)</title><rect x="445.1" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="448.1" y="590.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="445.1" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.1" y="574.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="445.8" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="448.8" y="750.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="445.8" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="448.8" y="734.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="445.8" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="448.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="446.3" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="449.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="446.3" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="449.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="446.3" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="449.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (388 samples, 7.98%)</title><rect x="446.8" y="787.0" width="94.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="449.8" y="798.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="446.8" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="449.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="446.8" y="755.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="449.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="446.8" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="449.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="446.8" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="449.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="446.8" y="707.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="449.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.08%)</title><rect x="447.3" y="771.0" width="0.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="450.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (381 samples, 7.83%)</title><rect x="448.5" y="771.0" width="92.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="451.5" y="782.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (377 samples, 7.75%)</title><rect x="449.0" y="755.0" width="91.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="452.0" y="766.0">org/rocksdb..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (377 samples, 7.75%)</title><rect x="449.0" y="739.0" width="91.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="452.0" y="750.0">org/rocksdb..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (269 samples, 5.53%)</title><rect x="449.7" y="723.0" width="65.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="452.7" y="734.0">Java_or..</text>
</g>
<g>
<title>__malloc (2 samples, 0.04%)</title><rect x="449.7" y="707.0" width="0.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="452.7" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="450.4" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="453.4" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (4 samples, 0.08%)</title><rect x="451.1" y="707.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="454.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="452.1" y="707.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="455.1" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (255 samples, 5.24%)</title><rect x="453.1" y="707.0" width="61.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="456.1" y="718.0">rocksd..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.06%)</title><rect x="453.6" y="691.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="456.6" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="454.8" y="691.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="457.8" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (6 samples, 0.12%)</title><rect x="455.3" y="691.0" width="1.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="458.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (235 samples, 4.83%)</title><rect x="456.7" y="691.0" width="57.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="459.7" y="702.0">rocksd..</text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="456.7" y="675.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="459.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (233 samples, 4.79%)</title><rect x="457.2" y="675.0" width="56.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="460.2" y="686.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (229 samples, 4.71%)</title><rect x="457.2" y="659.0" width="55.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="460.2" y="670.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (198 samples, 4.07%)</title><rect x="457.9" y="643.0" width="48.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="460.9" y="654.0">rock..</text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="458.2" y="627.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="461.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (192 samples, 3.95%)</title><rect x="458.9" y="627.0" width="46.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="461.9" y="638.0">rock..</text>
</g>
<g>
<title>__GI___sched_yield (5 samples, 0.10%)</title><rect x="463.3" y="611.0" width="1.2" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="466.3" y="622.0"></text>
</g>
<g>
<title>_init (5 samples, 0.10%)</title><rect x="464.7" y="611.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="467.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.04%)</title><rect x="466.4" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="469.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (41 samples, 0.84%)</title><rect x="466.9" y="611.0" width="10.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="469.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (37 samples, 0.76%)</title><rect x="467.1" y="595.0" width="9.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="470.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (36 samples, 0.74%)</title><rect x="467.4" y="579.0" width="8.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="470.4" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (7 samples, 0.14%)</title><rect x="468.4" y="563.0" width="1.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="471.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.04%)</title><rect x="470.5" y="563.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="473.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (2 samples, 0.04%)</title><rect x="471.0" y="563.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="474.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (19 samples, 0.39%)</title><rect x="471.5" y="563.0" width="4.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="474.5" y="574.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.04%)</title><rect x="472.0" y="547.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="475.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.04%)</title><rect x="472.7" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="475.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="473.5" y="547.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="476.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (9 samples, 0.19%)</title><rect x="473.9" y="547.0" width="2.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="476.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.04%)</title><rect x="474.7" y="531.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="477.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.08%)</title><rect x="475.2" y="531.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="478.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="476.1" y="595.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="479.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.04%)</title><rect x="477.1" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="480.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (78 samples, 1.60%)</title><rect x="477.8" y="611.0" width="19.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="480.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (74 samples, 1.52%)</title><rect x="478.8" y="595.0" width="18.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="481.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (68 samples, 1.40%)</title><rect x="479.5" y="579.0" width="16.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="482.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.04%)</title><rect x="480.0" y="563.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="483.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (64 samples, 1.32%)</title><rect x="480.5" y="563.0" width="15.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="483.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (4 samples, 0.08%)</title><rect x="481.0" y="547.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="484.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (52 samples, 1.07%)</title><rect x="482.9" y="547.0" width="12.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="485.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (7 samples, 0.14%)</title><rect x="485.1" y="531.0" width="1.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="488.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="485.6" y="515.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="488.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.06%)</title><rect x="486.1" y="515.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="489.1" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (28 samples, 0.58%)</title><rect x="486.8" y="531.0" width="6.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="489.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (23 samples, 0.47%)</title><rect x="487.8" y="515.0" width="5.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="490.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (10 samples, 0.21%)</title><rect x="490.2" y="499.0" width="2.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="493.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.16%)</title><rect x="490.7" y="483.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="493.7" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.04%)</title><rect x="492.1" y="467.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="495.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.06%)</title><rect x="492.6" y="499.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="495.6" y="510.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.06%)</title><rect x="492.6" y="483.0" width="0.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="495.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.06%)</title><rect x="493.8" y="531.0" width="0.8" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="496.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.06%)</title><rect x="494.6" y="531.0" width="0.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="497.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (3 samples, 0.06%)</title><rect x="494.6" y="515.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="497.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.04%)</title><rect x="496.3" y="579.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="499.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (9 samples, 0.19%)</title><rect x="496.8" y="611.0" width="2.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="499.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 0.19%)</title><rect x="496.8" y="595.0" width="2.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="499.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.19%)</title><rect x="496.8" y="579.0" width="2.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="499.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 0.19%)</title><rect x="496.8" y="563.0" width="2.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="499.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 0.10%)</title><rect x="497.5" y="547.0" width="1.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="500.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.08%)</title><rect x="497.7" y="531.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="500.7" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.08%)</title><rect x="497.7" y="515.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="500.7" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (4 samples, 0.08%)</title><rect x="497.7" y="499.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="500.7" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.04%)</title><rect x="498.2" y="483.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="501.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="498.2" y="467.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="501.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (17 samples, 0.35%)</title><rect x="499.2" y="611.0" width="4.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="502.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.06%)</title><rect x="503.3" y="611.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="506.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.06%)</title><rect x="503.3" y="595.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="506.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="504.0" y="611.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="507.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (8 samples, 0.16%)</title><rect x="506.0" y="643.0" width="1.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="509.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 0.29%)</title><rect x="507.9" y="643.0" width="3.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="510.9" y="654.0"></text>
</g>
<g>
<title>_init (3 samples, 0.06%)</title><rect x="508.2" y="627.0" width="0.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="511.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="509.4" y="627.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="512.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (3 samples, 0.06%)</title><rect x="510.1" y="627.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="513.1" y="638.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="510.8" y="627.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="513.8" y="638.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (4 samples, 0.08%)</title><rect x="511.6" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="514.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="512.8" y="659.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="515.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="513.3" y="659.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="516.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.04%)</title><rect x="513.7" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="516.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="514.2" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="517.2" y="702.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.95%)</title><rect x="515.0" y="723.0" width="23.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="518.0" y="734.0">[..</text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.10%)</title><rect x="515.4" y="707.0" width="1.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="518.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="515.7" y="691.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="518.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="515.7" y="675.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="518.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="515.7" y="659.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="518.7" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="515.7" y="643.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="518.7" y="654.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.06%)</title><rect x="515.9" y="627.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.9" y="638.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="515.9" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="518.9" y="622.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="515.9" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="518.9" y="606.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="515.9" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="518.9" y="590.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.04%)</title><rect x="516.7" y="707.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="519.7" y="718.0"></text>
</g>
<g>
<title>__write (83 samples, 1.71%)</title><rect x="517.4" y="707.0" width="20.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="520.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 1.56%)</title><rect x="519.1" y="691.0" width="18.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="522.1" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (76 samples, 1.56%)</title><rect x="519.1" y="675.0" width="18.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="522.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_write (74 samples, 1.52%)</title><rect x="519.6" y="659.0" width="17.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="522.6" y="670.0"></text>
</g>
<g>
<title>ksys_write (74 samples, 1.52%)</title><rect x="519.6" y="643.0" width="17.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="522.6" y="654.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.06%)</title><rect x="519.6" y="627.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="522.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.06%)</title><rect x="519.6" y="611.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="522.6" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.04%)</title><rect x="519.8" y="595.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="522.8" y="606.0"></text>
</g>
<g>
<title>vfs_write (69 samples, 1.42%)</title><rect x="520.8" y="627.0" width="16.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="523.8" y="638.0"></text>
</g>
<g>
<title>__sb_start_write (5 samples, 0.10%)</title><rect x="520.8" y="611.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="523.8" y="622.0"></text>
</g>
<g>
<title>__vfs_write (59 samples, 1.21%)</title><rect x="522.0" y="611.0" width="14.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.0" y="622.0"></text>
</g>
<g>
<title>new_sync_write (59 samples, 1.21%)</title><rect x="522.0" y="595.0" width="14.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="525.0" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (59 samples, 1.21%)</title><rect x="522.0" y="579.0" width="14.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="525.0" y="590.0"></text>
</g>
<g>
<title>__generic_file_write_iter (59 samples, 1.21%)</title><rect x="522.0" y="563.0" width="14.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.0" y="574.0"></text>
</g>
<g>
<title>file_update_time (2 samples, 0.04%)</title><rect x="522.5" y="547.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="525.5" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (55 samples, 1.13%)</title><rect x="523.0" y="547.0" width="13.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="526.0" y="558.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (3 samples, 0.06%)</title><rect x="523.0" y="531.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.0" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (24 samples, 0.49%)</title><rect x="523.7" y="531.0" width="5.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="526.7" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (11 samples, 0.23%)</title><rect x="523.9" y="515.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.9" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (10 samples, 0.21%)</title><rect x="524.2" y="499.0" width="2.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="527.2" y="510.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.04%)</title><rect x="524.2" y="483.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="527.2" y="494.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.10%)</title><rect x="525.4" y="483.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="528.4" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (3 samples, 0.06%)</title><rect x="525.9" y="467.0" width="0.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="528.9" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (2 samples, 0.04%)</title><rect x="526.6" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="529.6" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (8 samples, 0.16%)</title><rect x="527.3" y="515.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="530.3" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.14%)</title><rect x="527.6" y="499.0" width="1.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="530.6" y="510.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.08%)</title><rect x="528.1" y="483.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="531.1" y="494.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="528.5" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="531.5" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (26 samples, 0.53%)</title><rect x="529.5" y="531.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="532.5" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.08%)</title><rect x="529.5" y="515.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="532.5" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.06%)</title><rect x="529.8" y="499.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="532.8" y="510.0"></text>
</g>
<g>
<title>generic_write_end (22 samples, 0.45%)</title><rect x="530.5" y="515.0" width="5.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="533.5" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (19 samples, 0.39%)</title><rect x="530.7" y="499.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="533.7" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (19 samples, 0.39%)</title><rect x="530.7" y="483.0" width="4.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="533.7" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (18 samples, 0.37%)</title><rect x="530.7" y="467.0" width="4.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="533.7" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (17 samples, 0.35%)</title><rect x="531.0" y="451.0" width="4.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="534.0" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (9 samples, 0.19%)</title><rect x="531.5" y="435.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="534.5" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (8 samples, 0.16%)</title><rect x="531.5" y="419.0" width="1.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="534.5" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (7 samples, 0.14%)</title><rect x="531.7" y="403.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="534.7" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (6 samples, 0.12%)</title><rect x="531.9" y="387.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="534.9" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.04%)</title><rect x="532.2" y="371.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="535.2" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (3 samples, 0.06%)</title><rect x="532.7" y="371.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="535.7" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.06%)</title><rect x="532.7" y="355.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="535.7" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (6 samples, 0.12%)</title><rect x="533.6" y="435.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="536.6" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.04%)</title><rect x="534.4" y="419.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="537.4" y="430.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.04%)</title><rect x="534.4" y="403.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="537.4" y="414.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.04%)</title><rect x="534.4" y="387.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="537.4" y="398.0"></text>
</g>
<g>
<title>mark_page_accessed (2 samples, 0.04%)</title><rect x="534.4" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="537.4" y="382.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.04%)</title><rect x="535.3" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="538.3" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.04%)</title><rect x="535.3" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="538.3" y="494.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.10%)</title><rect x="536.3" y="611.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="539.3" y="622.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.08%)</title><rect x="536.5" y="595.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="539.5" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (4 samples, 0.08%)</title><rect x="536.5" y="579.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="539.5" y="590.0"></text>
</g>
<g>
<title>common_file_perm (4 samples, 0.08%)</title><rect x="536.5" y="563.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="539.5" y="574.0"></text>
</g>
<g>
<title>aa_label_is_subset (2 samples, 0.04%)</title><rect x="537.0" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="540.0" y="558.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="537.5" y="707.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="540.5" y="718.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.04%)</title><rect x="538.0" y="723.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="541.0" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="539.0" y="723.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="542.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="539.0" y="707.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="542.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="539.0" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="542.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="539.0" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="542.0" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="539.0" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="542.0" y="670.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="539.0" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="542.0" y="654.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.06%)</title><rect x="539.5" y="723.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="542.5" y="734.0"></text>
</g>
<g>
<title>[NIO Worker #5 tid=32697] (831 samples, 17.09%)</title><rect x="540.9" y="883.0" width="201.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="543.9" y="894.0">[NIO Worker #5 tid=32697]</text>
</g>
<g>
<title>[not_walkable_Java] (13 samples, 0.27%)</title><rect x="541.4" y="867.0" width="3.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="544.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (13 samples, 0.27%)</title><rect x="541.4" y="851.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="544.4" y="862.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.04%)</title><rect x="541.6" y="835.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="544.6" y="846.0"></text>
</g>
<g>
<title>clock_gettime (10 samples, 0.21%)</title><rect x="542.1" y="835.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="545.1" y="846.0"></text>
</g>
<g>
<title>[vdso] (10 samples, 0.21%)</title><rect x="542.1" y="819.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="545.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (815 samples, 16.76%)</title><rect x="544.8" y="867.0" width="197.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.8" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (815 samples, 16.76%)</title><rect x="544.8" y="851.0" width="197.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="547.8" y="862.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (815 samples, 16.76%)</title><rect x="544.8" y="835.0" width="197.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="547.8" y="846.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>I2C/C2I adapters (4 samples, 0.08%)</title><rect x="549.7" y="819.0" width="0.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="552.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.10%)</title><rect x="550.6" y="819.0" width="1.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="553.6" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.10%)</title><rect x="550.6" y="803.0" width="1.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="553.6" y="814.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.08%)</title><rect x="550.6" y="787.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="553.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.beforeExecute (2 samples, 0.04%)</title><rect x="552.3" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="555.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (169 samples, 3.48%)</title><rect x="552.8" y="819.0" width="41.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="555.8" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (168 samples, 3.45%)</title><rect x="553.0" y="803.0" width="40.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="556.0" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (168 samples, 3.45%)</title><rect x="553.0" y="787.0" width="40.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="556.0" y="798.0">jav..</text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="553.5" y="771.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="556.5" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (134 samples, 2.76%)</title><rect x="554.0" y="771.0" width="32.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="557.0" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (133 samples, 2.73%)</title><rect x="554.3" y="755.0" width="32.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="557.3" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (133 samples, 2.73%)</title><rect x="554.3" y="739.0" width="32.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="557.3" y="750.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (67 samples, 1.38%)</title><rect x="555.2" y="723.0" width="16.3" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="558.2" y="734.0"></text>
</g>
<g>
<title>JavaFrameAnchor::make_walkable(JavaThread*) (2 samples, 0.04%)</title><rect x="555.7" y="707.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="558.7" y="718.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (18 samples, 0.37%)</title><rect x="556.2" y="707.0" width="4.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="559.2" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.10%)</title><rect x="557.7" y="691.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="560.7" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.08%)</title><rect x="558.9" y="691.0" width="0.9" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="561.9" y="702.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="559.8" y="691.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="562.8" y="702.0"></text>
</g>
<g>
<title>__lll_unlock_wake (38 samples, 0.78%)</title><rect x="560.8" y="707.0" width="9.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="563.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.47%)</title><rect x="564.5" y="691.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="567.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="564.5" y="675.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="567.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (21 samples, 0.43%)</title><rect x="564.9" y="675.0" width="5.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="567.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (12 samples, 0.25%)</title><rect x="566.6" y="659.0" width="2.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="569.6" y="670.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.16%)</title><rect x="567.1" y="643.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="570.1" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.08%)</title><rect x="567.4" y="627.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="570.4" y="638.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.06%)</title><rect x="567.6" y="611.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="570.6" y="622.0"></text>
</g>
<g>
<title>hash_futex (3 samples, 0.06%)</title><rect x="568.3" y="627.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="571.3" y="638.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.04%)</title><rect x="569.1" y="643.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="572.1" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="569.5" y="659.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="572.5" y="670.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="570.0" y="707.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="573.0" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.08%)</title><rect x="570.5" y="707.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="573.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (54 samples, 1.11%)</title><rect x="571.7" y="723.0" width="13.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="574.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (48 samples, 0.99%)</title><rect x="573.2" y="707.0" width="11.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="576.2" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="573.2" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="576.2" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.95%)</title><rect x="573.7" y="691.0" width="11.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="576.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (43 samples, 0.88%)</title><rect x="573.9" y="675.0" width="10.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="576.9" y="686.0"></text>
</g>
<g>
<title>do_futex (40 samples, 0.82%)</title><rect x="574.6" y="659.0" width="9.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="577.6" y="670.0"></text>
</g>
<g>
<title>futex_wait (37 samples, 0.76%)</title><rect x="575.4" y="643.0" width="8.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="578.4" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (26 samples, 0.53%)</title><rect x="576.3" y="627.0" width="6.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.3" y="638.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (5 samples, 0.10%)</title><rect x="576.3" y="611.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.3" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="576.3" y="595.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="579.3" y="606.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.41%)</title><rect x="577.8" y="611.0" width="4.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="580.8" y="622.0"></text>
</g>
<g>
<title>__schedule (20 samples, 0.41%)</title><rect x="577.8" y="595.0" width="4.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="580.8" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (20 samples, 0.41%)</title><rect x="577.8" y="579.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="580.8" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.06%)</title><rect x="582.7" y="627.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="585.7" y="638.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.04%)</title><rect x="583.4" y="627.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="586.4" y="638.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.04%)</title><rect x="583.4" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.4" y="622.0"></text>
</g>
<g>
<title>hrtimer_init (2 samples, 0.04%)</title><rect x="583.9" y="627.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="586.9" y="638.0"></text>
</g>
<g>
<title>__hrtimer_init (2 samples, 0.04%)</title><rect x="583.9" y="611.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="586.9" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (3 samples, 0.06%)</title><rect x="584.8" y="723.0" width="0.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="587.8" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="586.0" y="723.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="589.0" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (2 samples, 0.04%)</title><rect x="586.5" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="589.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (2 samples, 0.04%)</title><rect x="586.5" y="755.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="589.5" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (2 samples, 0.04%)</title><rect x="586.5" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="589.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (26 samples, 0.53%)</title><rect x="587.0" y="771.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="590.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (20 samples, 0.41%)</title><rect x="588.5" y="755.0" width="4.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="591.5" y="766.0"></text>
</g>
<g>
<title>os::javaTimeNanos() (2 samples, 0.04%)</title><rect x="593.3" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="596.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1167666647.run (611 samples, 12.56%)</title><rect x="594.3" y="819.0" width="148.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.3" y="830.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (609 samples, 12.52%)</title><rect x="594.8" y="803.0" width="147.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="597.8" y="814.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (238 samples, 4.89%)</title><rect x="594.8" y="787.0" width="57.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="597.8" y="798.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (232 samples, 4.77%)</title><rect x="595.8" y="771.0" width="56.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="598.8" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.21%)</title><rect x="595.8" y="755.0" width="2.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="598.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.14%)</title><rect x="596.5" y="739.0" width="1.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="599.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.06%)</title><rect x="596.5" y="723.0" width="0.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="599.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.08%)</title><rect x="597.2" y="723.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="600.2" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.08%)</title><rect x="597.2" y="707.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="600.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (222 samples, 4.57%)</title><rect x="598.2" y="755.0" width="53.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.2" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (221 samples, 4.54%)</title><rect x="598.2" y="739.0" width="53.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="601.2" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (219 samples, 4.50%)</title><rect x="598.7" y="723.0" width="53.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="601.7" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (219 samples, 4.50%)</title><rect x="598.7" y="707.0" width="53.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="601.7" y="718.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.04%)</title><rect x="599.9" y="691.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="602.9" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="600.4" y="691.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="603.4" y="702.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="600.4" y="675.0" width="1.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="603.4" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.06%)</title><rect x="600.4" y="659.0" width="0.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="603.4" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="601.8" y="691.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="604.8" y="702.0"></text>
</g>
<g>
<title>__send (204 samples, 4.19%)</title><rect x="602.3" y="691.0" width="49.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="605.3" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (197 samples, 4.05%)</title><rect x="604.0" y="675.0" width="47.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="607.0" y="686.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (197 samples, 4.05%)</title><rect x="604.0" y="659.0" width="47.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="607.0" y="670.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (197 samples, 4.05%)</title><rect x="604.0" y="643.0" width="47.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="607.0" y="654.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (196 samples, 4.03%)</title><rect x="604.0" y="627.0" width="47.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="607.0" y="638.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (190 samples, 3.91%)</title><rect x="604.2" y="611.0" width="46.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="607.2" y="622.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (184 samples, 3.78%)</title><rect x="604.5" y="595.0" width="44.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="607.5" y="606.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (184 samples, 3.78%)</title><rect x="604.5" y="579.0" width="44.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="607.5" y="590.0">tcp_..</text>
</g>
<g>
<title>tcp_sendmsg_locked (179 samples, 3.68%)</title><rect x="605.7" y="563.0" width="43.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="608.7" y="574.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.04%)</title><rect x="606.2" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="609.2" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="606.2" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="609.2" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.04%)</title><rect x="606.7" y="547.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="609.7" y="558.0"></text>
</g>
<g>
<title>iov_iter_advance (2 samples, 0.04%)</title><rect x="606.7" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="609.7" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.14%)</title><rect x="607.2" y="547.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="610.2" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (5 samples, 0.10%)</title><rect x="607.4" y="531.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="610.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.06%)</title><rect x="607.4" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="610.4" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.06%)</title><rect x="607.4" y="499.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="610.4" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.04%)</title><rect x="608.1" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="611.1" y="526.0"></text>
</g>
<g>
<title>tcp_push (166 samples, 3.41%)</title><rect x="608.9" y="547.0" width="40.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="611.9" y="558.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (165 samples, 3.39%)</title><rect x="609.1" y="531.0" width="40.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="612.1" y="542.0">__t..</text>
</g>
<g>
<title>ktime_get (2 samples, 0.04%)</title><rect x="609.1" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="612.1" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (161 samples, 3.31%)</title><rect x="610.1" y="515.0" width="39.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="613.1" y="526.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (145 samples, 2.98%)</title><rect x="611.5" y="499.0" width="35.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.5" y="510.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (134 samples, 2.76%)</title><rect x="614.0" y="483.0" width="32.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="617.0" y="494.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (133 samples, 2.73%)</title><rect x="614.0" y="467.0" width="32.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="617.0" y="478.0">__..</text>
</g>
<g>
<title>ip_local_out (130 samples, 2.67%)</title><rect x="614.4" y="451.0" width="31.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="617.4" y="462.0">ip..</text>
</g>
<g>
<title>ip_output (129 samples, 2.65%)</title><rect x="614.7" y="435.0" width="31.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="617.7" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.04%)</title><rect x="614.9" y="419.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="617.9" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (126 samples, 2.59%)</title><rect x="615.4" y="419.0" width="30.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="618.4" y="430.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (125 samples, 2.57%)</title><rect x="615.7" y="403.0" width="30.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="618.7" y="414.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (107 samples, 2.20%)</title><rect x="616.4" y="387.0" width="25.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="619.4" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (107 samples, 2.20%)</title><rect x="616.4" y="371.0" width="25.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="619.4" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (106 samples, 2.18%)</title><rect x="616.6" y="355.0" width="25.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="619.6" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (105 samples, 2.16%)</title><rect x="616.6" y="339.0" width="25.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="619.6" y="350.0">_..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.04%)</title><rect x="617.6" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="620.6" y="334.0"></text>
</g>
<g>
<title>net_rx_action (99 samples, 2.04%)</title><rect x="618.1" y="323.0" width="24.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="621.1" y="334.0">n..</text>
</g>
<g>
<title>process_backlog (96 samples, 1.97%)</title><rect x="618.8" y="307.0" width="23.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="621.8" y="318.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (93 samples, 1.91%)</title><rect x="619.5" y="291.0" width="22.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="622.5" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (92 samples, 1.89%)</title><rect x="619.5" y="275.0" width="22.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="622.5" y="286.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.04%)</title><rect x="619.5" y="259.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv (89 samples, 1.83%)</title><rect x="620.0" y="259.0" width="21.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.0" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.04%)</title><rect x="620.0" y="243.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="623.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (86 samples, 1.77%)</title><rect x="620.7" y="243.0" width="20.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="623.7" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (85 samples, 1.75%)</title><rect x="620.7" y="227.0" width="20.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="623.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (84 samples, 1.73%)</title><rect x="621.0" y="211.0" width="20.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="624.0" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (84 samples, 1.73%)</title><rect x="621.0" y="195.0" width="20.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="624.0" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (80 samples, 1.65%)</title><rect x="622.0" y="179.0" width="19.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="625.0" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.08%)</title><rect x="622.7" y="163.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="625.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (69 samples, 1.42%)</title><rect x="624.4" y="163.0" width="16.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.4" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (67 samples, 1.38%)</title><rect x="624.9" y="147.0" width="16.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="627.9" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.04%)</title><rect x="624.9" y="131.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.9" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.04%)</title><rect x="624.9" y="115.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="627.9" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="624.9" y="99.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="627.9" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="624.9" y="83.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.9" y="94.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.31%)</title><rect x="625.6" y="131.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="628.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.16%)</title><rect x="626.6" y="115.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="629.6" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.10%)</title><rect x="627.1" y="99.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="630.1" y="110.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.06%)</title><rect x="627.3" y="83.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="630.3" y="94.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="627.3" y="67.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="630.3" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="627.5" y="51.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="630.5" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="627.5" y="35.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="630.5" y="46.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.04%)</title><rect x="628.8" y="115.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="631.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (45 samples, 0.93%)</title><rect x="629.5" y="131.0" width="10.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="632.5" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (41 samples, 0.84%)</title><rect x="630.0" y="115.0" width="9.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="633.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (39 samples, 0.80%)</title><rect x="630.5" y="99.0" width="9.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="633.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (39 samples, 0.80%)</title><rect x="630.5" y="83.0" width="9.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="633.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (39 samples, 0.80%)</title><rect x="630.5" y="67.0" width="9.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="633.5" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.04%)</title><rect x="639.9" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="642.9" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.31%)</title><rect x="642.3" y="387.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="645.3" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.31%)</title><rect x="642.3" y="371.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="645.3" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.19%)</title><rect x="643.1" y="355.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="646.1" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.14%)</title><rect x="643.6" y="339.0" width="1.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="646.6" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (3 samples, 0.06%)</title><rect x="643.6" y="323.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="646.6" y="334.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.06%)</title><rect x="644.3" y="323.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="647.3" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.06%)</title><rect x="644.3" y="307.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="647.3" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.06%)</title><rect x="644.3" y="291.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="647.3" y="302.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.04%)</title><rect x="645.5" y="355.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="648.5" y="366.0"></text>
</g>
<g>
<title>skb_push (2 samples, 0.04%)</title><rect x="647.4" y="499.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="650.4" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.06%)</title><rect x="647.9" y="499.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="650.9" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.10%)</title><rect x="649.1" y="595.0" width="1.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="652.1" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (5 samples, 0.10%)</title><rect x="649.1" y="579.0" width="1.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="652.1" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.10%)</title><rect x="649.1" y="563.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="652.1" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.10%)</title><rect x="649.1" y="547.0" width="1.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="652.1" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.06%)</title><rect x="649.6" y="531.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="652.6" y="542.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.04%)</title><rect x="649.9" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="652.9" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.10%)</title><rect x="650.3" y="611.0" width="1.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="653.3" y="622.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.10%)</title><rect x="650.3" y="595.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="653.3" y="606.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.10%)</title><rect x="650.3" y="579.0" width="1.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="653.3" y="590.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.10%)</title><rect x="650.3" y="563.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="653.3" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.04%)</title><rect x="652.0" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="655.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="652.0" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="652.0" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (371 samples, 7.63%)</title><rect x="652.5" y="787.0" width="90.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="655.5" y="798.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="652.5" y="771.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.5" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="652.5" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="655.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="652.5" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="655.5" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="652.5" y="723.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.5" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="652.5" y="707.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="655.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (367 samples, 7.55%)</title><rect x="653.5" y="771.0" width="89.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="656.5" y="782.0">ru/mail/po..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (362 samples, 7.44%)</title><rect x="653.7" y="755.0" width="87.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="656.7" y="766.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (362 samples, 7.44%)</title><rect x="653.7" y="739.0" width="87.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="656.7" y="750.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (243 samples, 5.00%)</title><rect x="654.5" y="723.0" width="58.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="657.5" y="734.0">Java_o..</text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="655.9" y="707.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="658.9" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.06%)</title><rect x="656.4" y="707.0" width="0.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="659.4" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (232 samples, 4.77%)</title><rect x="657.1" y="707.0" width="56.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="660.1" y="718.0">rocksd..</text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.08%)</title><rect x="658.1" y="691.0" width="1.0" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="661.1" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.10%)</title><rect x="659.1" y="691.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="662.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (216 samples, 4.44%)</title><rect x="660.3" y="691.0" width="52.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="663.3" y="702.0">rocks..</text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="660.5" y="675.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="663.5" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (213 samples, 4.38%)</title><rect x="661.0" y="675.0" width="51.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="664.0" y="686.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (207 samples, 4.26%)</title><rect x="661.0" y="659.0" width="50.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="664.0" y="670.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.04%)</title><rect x="662.0" y="643.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="665.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (181 samples, 3.72%)</title><rect x="662.5" y="643.0" width="43.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="665.5" y="654.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (172 samples, 3.54%)</title><rect x="663.5" y="627.0" width="41.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="666.5" y="638.0">roc..</text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.06%)</title><rect x="668.1" y="611.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="671.1" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.04%)</title><rect x="668.3" y="595.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="671.3" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.04%)</title><rect x="668.3" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="671.3" y="590.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.04%)</title><rect x="668.3" y="563.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="671.3" y="574.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.04%)</title><rect x="668.3" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="671.3" y="558.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="668.3" y="531.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="671.3" y="542.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="668.3" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="671.3" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="668.8" y="611.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="671.8" y="622.0"></text>
</g>
<g>
<title>_init (4 samples, 0.08%)</title><rect x="669.3" y="611.0" width="0.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="672.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.04%)</title><rect x="670.5" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="673.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (31 samples, 0.64%)</title><rect x="671.2" y="611.0" width="7.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="674.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.04%)</title><rect x="671.5" y="595.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="674.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (27 samples, 0.56%)</title><rect x="671.9" y="595.0" width="6.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="674.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (27 samples, 0.56%)</title><rect x="671.9" y="579.0" width="6.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="674.9" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (7 samples, 0.14%)</title><rect x="672.2" y="563.0" width="1.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="675.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (18 samples, 0.37%)</title><rect x="674.1" y="563.0" width="4.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="677.1" y="574.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.04%)</title><rect x="674.4" y="547.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="677.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.04%)</title><rect x="674.9" y="547.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="677.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="675.3" y="547.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="678.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="676.1" y="547.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="679.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (7 samples, 0.14%)</title><rect x="676.8" y="547.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="679.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.04%)</title><rect x="677.5" y="531.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="680.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="678.0" y="531.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="681.0" y="542.0"></text>
</g>
<g>
<title>__write (2 samples, 0.04%)</title><rect x="678.0" y="515.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="681.0" y="526.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.12%)</title><rect x="678.7" y="611.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="681.7" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (6 samples, 0.12%)</title><rect x="678.7" y="595.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="681.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (55 samples, 1.13%)</title><rect x="680.2" y="611.0" width="13.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="683.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (53 samples, 1.09%)</title><rect x="680.7" y="595.0" width="12.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="683.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (51 samples, 1.05%)</title><rect x="680.7" y="579.0" width="12.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="683.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.04%)</title><rect x="680.9" y="563.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="683.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (48 samples, 0.99%)</title><rect x="681.4" y="563.0" width="11.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="684.4" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.04%)</title><rect x="681.9" y="547.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="684.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (39 samples, 0.80%)</title><rect x="682.4" y="547.0" width="9.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="685.4" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (4 samples, 0.08%)</title><rect x="683.3" y="531.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="686.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (4 samples, 0.08%)</title><rect x="683.3" y="515.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="686.3" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (28 samples, 0.58%)</title><rect x="684.3" y="531.0" width="6.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="687.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (20 samples, 0.41%)</title><rect x="685.3" y="515.0" width="4.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="688.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (11 samples, 0.23%)</title><rect x="686.5" y="499.0" width="2.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="689.5" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="686.7" y="483.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="689.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.16%)</title><rect x="687.2" y="483.0" width="2.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="690.2" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.06%)</title><rect x="688.2" y="467.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="691.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.08%)</title><rect x="689.2" y="499.0" width="0.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="692.2" y="510.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="689.7" y="483.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="692.7" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.06%)</title><rect x="690.4" y="515.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="693.4" y="526.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="690.6" y="499.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="693.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.04%)</title><rect x="691.1" y="531.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="694.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.06%)</title><rect x="691.8" y="547.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="694.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.04%)</title><rect x="692.6" y="547.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="695.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (9 samples, 0.19%)</title><rect x="693.5" y="611.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="696.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.14%)</title><rect x="694.0" y="595.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="697.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.12%)</title><rect x="694.3" y="579.0" width="1.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="697.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.10%)</title><rect x="694.5" y="563.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="697.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.06%)</title><rect x="695.0" y="547.0" width="0.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="698.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.06%)</title><rect x="695.0" y="531.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="698.0" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.06%)</title><rect x="695.0" y="515.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="698.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (3 samples, 0.06%)</title><rect x="695.0" y="499.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="698.0" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (3 samples, 0.06%)</title><rect x="695.0" y="483.0" width="0.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="698.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.06%)</title><rect x="695.0" y="467.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="698.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (31 samples, 0.64%)</title><rect x="696.0" y="611.0" width="7.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="699.0" y="622.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.04%)</title><rect x="702.8" y="595.0" width="0.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="705.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="703.5" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="706.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.06%)</title><rect x="706.6" y="643.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="709.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 0.19%)</title><rect x="707.4" y="643.0" width="2.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="710.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.06%)</title><rect x="707.6" y="627.0" width="0.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="710.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.04%)</title><rect x="708.3" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="711.3" y="638.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="709.1" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="712.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (3 samples, 0.06%)</title><rect x="709.6" y="643.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="712.6" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="710.3" y="643.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="713.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="711.5" y="659.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="714.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="712.0" y="659.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="715.0" y="670.0"></text>
</g>
<g>
<title>[unknown] (105 samples, 2.16%)</title><rect x="713.4" y="723.0" width="25.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="716.4" y="734.0">[..</text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.10%)</title><rect x="713.7" y="707.0" width="1.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="716.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.08%)</title><rect x="713.9" y="691.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="716.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.08%)</title><rect x="713.9" y="675.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="716.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.08%)</title><rect x="713.9" y="659.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="716.9" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.08%)</title><rect x="713.9" y="643.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="716.9" y="654.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.06%)</title><rect x="713.9" y="627.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="716.9" y="638.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.04%)</title><rect x="713.9" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="716.9" y="622.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.04%)</title><rect x="713.9" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="716.9" y="606.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.04%)</title><rect x="713.9" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="716.9" y="590.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.04%)</title><rect x="713.9" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.9" y="574.0"></text>
</g>
<g>
<title>__write (94 samples, 1.93%)</title><rect x="715.1" y="707.0" width="22.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="718.1" y="718.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (92 samples, 1.89%)</title><rect x="715.6" y="691.0" width="22.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="718.6" y="702.0">e..</text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.04%)</title><rect x="715.6" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="718.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (90 samples, 1.85%)</title><rect x="716.1" y="675.0" width="21.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="719.1" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_write (90 samples, 1.85%)</title><rect x="716.1" y="659.0" width="21.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="719.1" y="670.0">_..</text>
</g>
<g>
<title>ksys_write (88 samples, 1.81%)</title><rect x="716.6" y="643.0" width="21.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="719.6" y="654.0">k..</text>
</g>
<g>
<title>__fdget_pos (9 samples, 0.19%)</title><rect x="716.8" y="627.0" width="2.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="719.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (9 samples, 0.19%)</title><rect x="716.8" y="611.0" width="2.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="719.8" y="622.0"></text>
</g>
<g>
<title>__fget (8 samples, 0.16%)</title><rect x="717.1" y="595.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="720.1" y="606.0"></text>
</g>
<g>
<title>__fsnotify_parent (2 samples, 0.04%)</title><rect x="719.3" y="627.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="722.3" y="638.0"></text>
</g>
<g>
<title>__sb_end_write (2 samples, 0.04%)</title><rect x="719.7" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="722.7" y="638.0"></text>
</g>
<g>
<title>vfs_write (72 samples, 1.48%)</title><rect x="720.5" y="627.0" width="17.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="723.5" y="638.0"></text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.06%)</title><rect x="720.7" y="611.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="723.7" y="622.0"></text>
</g>
<g>
<title>__vfs_write (65 samples, 1.34%)</title><rect x="721.4" y="611.0" width="15.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="724.4" y="622.0"></text>
</g>
<g>
<title>new_sync_write (65 samples, 1.34%)</title><rect x="721.4" y="595.0" width="15.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="724.4" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (65 samples, 1.34%)</title><rect x="721.4" y="579.0" width="15.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="724.4" y="590.0"></text>
</g>
<g>
<title>__generic_file_write_iter (60 samples, 1.23%)</title><rect x="721.7" y="563.0" width="14.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="724.7" y="574.0"></text>
</g>
<g>
<title>file_update_time (6 samples, 0.12%)</title><rect x="722.2" y="547.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="725.2" y="558.0"></text>
</g>
<g>
<title>generic_update_time (4 samples, 0.08%)</title><rect x="722.7" y="531.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="725.7" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.08%)</title><rect x="722.7" y="515.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="725.7" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.06%)</title><rect x="722.9" y="499.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="725.9" y="510.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (2 samples, 0.04%)</title><rect x="722.9" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="725.9" y="494.0"></text>
</g>
<g>
<title>generic_perform_write (52 samples, 1.07%)</title><rect x="723.6" y="547.0" width="12.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="726.6" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (16 samples, 0.33%)</title><rect x="723.6" y="531.0" width="3.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="726.6" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.10%)</title><rect x="724.1" y="515.0" width="1.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="727.1" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.08%)</title><rect x="724.4" y="499.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="727.4" y="510.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.04%)</title><rect x="724.8" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="727.8" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.04%)</title><rect x="724.8" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="727.8" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (4 samples, 0.08%)</title><rect x="725.3" y="515.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="728.3" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.08%)</title><rect x="726.3" y="515.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="729.3" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.08%)</title><rect x="726.3" y="499.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="729.3" y="510.0"></text>
</g>
<g>
<title>find_get_entry (3 samples, 0.06%)</title><rect x="726.5" y="483.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="729.5" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (32 samples, 0.66%)</title><rect x="727.5" y="531.0" width="7.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="730.5" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.06%)</title><rect x="727.5" y="515.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="730.5" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.06%)</title><rect x="727.5" y="499.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="730.5" y="510.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.04%)</title><rect x="727.5" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="730.5" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="727.5" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="730.5" y="478.0"></text>
</g>
<g>
<title>generic_write_end (28 samples, 0.58%)</title><rect x="728.5" y="515.0" width="6.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="731.5" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (28 samples, 0.58%)</title><rect x="728.5" y="499.0" width="6.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="731.5" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (27 samples, 0.56%)</title><rect x="728.5" y="483.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="731.5" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (26 samples, 0.53%)</title><rect x="728.7" y="467.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="731.7" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (24 samples, 0.49%)</title><rect x="729.0" y="451.0" width="5.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="732.0" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (15 samples, 0.31%)</title><rect x="729.0" y="435.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="732.0" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (15 samples, 0.31%)</title><rect x="729.0" y="419.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="732.0" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 0.12%)</title><rect x="730.7" y="403.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="733.7" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (6 samples, 0.12%)</title><rect x="730.7" y="387.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="733.7" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (5 samples, 0.10%)</title><rect x="730.9" y="371.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="733.9" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.08%)</title><rect x="731.2" y="355.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.2" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (9 samples, 0.19%)</title><rect x="732.6" y="435.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="735.6" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (7 samples, 0.14%)</title><rect x="732.9" y="419.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.9" y="430.0"></text>
</g>
<g>
<title>__getblk_gfp (5 samples, 0.10%)</title><rect x="733.1" y="403.0" width="1.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="736.1" y="414.0"></text>
</g>
<g>
<title>__find_get_block (5 samples, 0.10%)</title><rect x="733.1" y="387.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="736.1" y="398.0"></text>
</g>
<g>
<title>mark_page_accessed (5 samples, 0.10%)</title><rect x="733.1" y="371.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="736.1" y="382.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (3 samples, 0.06%)</title><rect x="735.5" y="531.0" width="0.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="738.5" y="542.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.04%)</title><rect x="735.5" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="738.5" y="526.0"></text>
</g>
<g>
<title>fsnotify (2 samples, 0.04%)</title><rect x="737.2" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="740.2" y="622.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (4 samples, 0.08%)</title><rect x="737.9" y="707.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="740.9" y="718.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.04%)</title><rect x="738.9" y="723.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="741.9" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="739.6" y="723.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="742.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="739.9" y="707.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="742.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="739.9" y="691.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="742.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="739.9" y="675.0" width="0.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="742.9" y="686.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="739.9" y="659.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="742.9" y="670.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="739.9" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="742.9" y="654.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.04%)</title><rect x="741.1" y="723.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="744.1" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (3 samples, 0.06%)</title><rect x="741.6" y="755.0" width="0.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="744.6" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (2 samples, 0.04%)</title><rect x="741.8" y="739.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="744.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="741.8" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="744.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="741.8" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="744.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="741.8" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="744.8" y="702.0"></text>
</g>
<g>
<title>[NIO Worker #7 tid=32690] (866 samples, 17.81%)</title><rect x="742.6" y="883.0" width="210.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="745.6" y="894.0">[NIO Worker #7 tid=32690]</text>
</g>
<g>
<title>[not_walkable_Java] (6 samples, 0.12%)</title><rect x="742.8" y="867.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="745.8" y="878.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.12%)</title><rect x="742.8" y="851.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="745.8" y="862.0"></text>
</g>
<g>
<title>clock_gettime (5 samples, 0.10%)</title><rect x="743.0" y="835.0" width="1.3" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="746.0" y="846.0"></text>
</g>
<g>
<title>[vdso] (5 samples, 0.10%)</title><rect x="743.0" y="819.0" width="1.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="746.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.run (858 samples, 17.64%)</title><rect x="744.5" y="867.0" width="208.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="747.5" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (858 samples, 17.64%)</title><rect x="744.5" y="851.0" width="208.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="747.5" y="862.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (858 samples, 17.64%)</title><rect x="744.5" y="835.0" width="208.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="747.5" y="846.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (12 samples, 0.25%)</title><rect x="750.1" y="819.0" width="2.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="753.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (11 samples, 0.23%)</title><rect x="750.3" y="803.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="753.3" y="814.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.08%)</title><rect x="750.6" y="787.0" width="0.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="753.6" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="751.8" y="787.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="754.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (5 samples, 0.10%)</title><rect x="753.0" y="819.0" width="1.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="756.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.04%)</title><rect x="753.7" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="756.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (2 samples, 0.04%)</title><rect x="753.7" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="756.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (166 samples, 3.41%)</title><rect x="754.4" y="819.0" width="40.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="757.4" y="830.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (2 samples, 0.04%)</title><rect x="755.2" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="758.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (161 samples, 3.31%)</title><rect x="755.7" y="803.0" width="39.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="758.7" y="814.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (161 samples, 3.31%)</title><rect x="755.7" y="787.0" width="39.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="758.7" y="798.0">jav..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (121 samples, 2.49%)</title><rect x="756.6" y="771.0" width="29.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="759.6" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (121 samples, 2.49%)</title><rect x="756.6" y="755.0" width="29.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="759.6" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (121 samples, 2.49%)</title><rect x="756.6" y="739.0" width="29.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="759.6" y="750.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (58 samples, 1.19%)</title><rect x="756.9" y="723.0" width="14.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="759.9" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (15 samples, 0.31%)</title><rect x="757.6" y="707.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="760.6" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (3 samples, 0.06%)</title><rect x="759.1" y="691.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="762.1" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.10%)</title><rect x="760.0" y="691.0" width="1.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="763.0" y="702.0"></text>
</g>
<g>
<title>__lll_unlock_wake (30 samples, 0.62%)</title><rect x="761.5" y="707.0" width="7.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="764.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.43%)</title><rect x="763.7" y="691.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="766.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="763.7" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="766.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (19 samples, 0.39%)</title><rect x="764.2" y="675.0" width="4.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="767.2" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.16%)</title><rect x="766.1" y="659.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="769.1" y="670.0"></text>
</g>
<g>
<title>do_futex (7 samples, 0.14%)</title><rect x="766.1" y="643.0" width="1.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="769.1" y="654.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="766.3" y="627.0" width="0.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="769.3" y="638.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="767.1" y="627.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="770.1" y="638.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.04%)</title><rect x="768.3" y="659.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="771.3" y="670.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (5 samples, 0.10%)</title><rect x="769.5" y="707.0" width="1.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="772.5" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (55 samples, 1.13%)</title><rect x="770.9" y="723.0" width="13.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="773.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (45 samples, 0.93%)</title><rect x="773.4" y="707.0" width="10.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="776.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (44 samples, 0.90%)</title><rect x="773.6" y="691.0" width="10.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="776.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (42 samples, 0.86%)</title><rect x="774.1" y="675.0" width="10.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="777.1" y="686.0"></text>
</g>
<g>
<title>do_futex (40 samples, 0.82%)</title><rect x="774.3" y="659.0" width="9.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="777.3" y="670.0"></text>
</g>
<g>
<title>futex_wait (38 samples, 0.78%)</title><rect x="774.8" y="643.0" width="9.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="777.8" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (29 samples, 0.60%)</title><rect x="775.1" y="627.0" width="7.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="778.1" y="638.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (9 samples, 0.19%)</title><rect x="775.1" y="611.0" width="2.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="778.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (8 samples, 0.16%)</title><rect x="775.3" y="595.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="778.3" y="606.0"></text>
</g>
<g>
<title>schedule (20 samples, 0.41%)</title><rect x="777.3" y="611.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="780.3" y="622.0"></text>
</g>
<g>
<title>__schedule (20 samples, 0.41%)</title><rect x="777.3" y="595.0" width="4.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="780.3" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.39%)</title><rect x="777.5" y="579.0" width="4.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="780.5" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (5 samples, 0.10%)</title><rect x="782.1" y="627.0" width="1.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="785.1" y="638.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="782.6" y="611.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="785.6" y="622.0"></text>
</g>
<g>
<title>hrtimer_cancel (2 samples, 0.04%)</title><rect x="783.6" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="786.6" y="638.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (2 samples, 0.04%)</title><rect x="783.6" y="611.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="786.6" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="783.6" y="595.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="786.6" y="606.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="785.0" y="723.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="788.0" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.04%)</title><rect x="785.5" y="723.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="788.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (36 samples, 0.74%)</title><rect x="786.0" y="771.0" width="8.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="789.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (28 samples, 0.58%)</title><rect x="787.9" y="755.0" width="6.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="790.9" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1167666647.run (650 samples, 13.37%)</title><rect x="795.0" y="819.0" width="157.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="798.0" y="830.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (649 samples, 13.35%)</title><rect x="795.2" y="803.0" width="157.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="798.2" y="814.0">ru/mail/polis/servic..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (260 samples, 5.35%)</title><rect x="795.2" y="787.0" width="63.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="798.2" y="798.0">one/nio..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (7 samples, 0.14%)</title><rect x="796.9" y="771.0" width="1.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="799.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (7 samples, 0.14%)</title><rect x="796.9" y="755.0" width="1.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="799.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (7 samples, 0.14%)</title><rect x="796.9" y="739.0" width="1.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="799.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.04%)</title><rect x="798.1" y="723.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="801.1" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (242 samples, 4.98%)</title><rect x="798.6" y="771.0" width="58.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="801.6" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (9 samples, 0.19%)</title><rect x="798.6" y="755.0" width="2.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="801.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.12%)</title><rect x="799.3" y="739.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="802.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.04%)</title><rect x="799.3" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.3" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.08%)</title><rect x="799.8" y="723.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="802.8" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (4 samples, 0.08%)</title><rect x="799.8" y="707.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="802.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.04%)</title><rect x="800.3" y="691.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="803.3" y="702.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.04%)</title><rect x="800.3" y="675.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="803.3" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (233 samples, 4.79%)</title><rect x="800.8" y="755.0" width="56.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="803.8" y="766.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/Session.write (231 samples, 4.75%)</title><rect x="801.3" y="739.0" width="56.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="804.3" y="750.0">one/ni..</text>
</g>
<g>
<title>gettimeofday (3 samples, 0.06%)</title><rect x="801.5" y="723.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="804.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (224 samples, 4.61%)</title><rect x="802.2" y="723.0" width="54.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="805.2" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (224 samples, 4.61%)</title><rect x="802.2" y="707.0" width="54.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="805.2" y="718.0">one/n..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="802.5" y="691.0" width="1.9" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="805.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.16%)</title><rect x="802.5" y="675.0" width="1.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="805.5" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.10%)</title><rect x="802.5" y="659.0" width="1.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="805.5" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.08%)</title><rect x="802.7" y="643.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="805.7" y="654.0"></text>
</g>
<g>
<title>__send (2 samples, 0.04%)</title><rect x="803.7" y="659.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="806.7" y="670.0"></text>
</g>
<g>
<title>__send (215 samples, 4.42%)</title><rect x="804.4" y="691.0" width="52.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="807.4" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (208 samples, 4.28%)</title><rect x="806.1" y="675.0" width="50.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="809.1" y="686.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (208 samples, 4.28%)</title><rect x="806.1" y="659.0" width="50.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="809.1" y="670.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (207 samples, 4.26%)</title><rect x="806.4" y="643.0" width="50.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="809.4" y="654.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (206 samples, 4.24%)</title><rect x="806.4" y="627.0" width="50.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="809.4" y="638.0">__sys..</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.04%)</title><rect x="807.1" y="611.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="810.1" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (196 samples, 4.03%)</title><rect x="807.6" y="611.0" width="47.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="810.6" y="622.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (187 samples, 3.85%)</title><rect x="807.8" y="595.0" width="45.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="810.8" y="606.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (187 samples, 3.85%)</title><rect x="807.8" y="579.0" width="45.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="810.8" y="590.0">tcp_..</text>
</g>
<g>
<title>release_sock (2 samples, 0.04%)</title><rect x="808.3" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="811.3" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="809.0" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="812.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (179 samples, 3.68%)</title><rect x="809.5" y="563.0" width="43.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="812.5" y="574.0">tcp_..</text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.16%)</title><rect x="810.5" y="547.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="813.5" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.12%)</title><rect x="811.0" y="531.0" width="1.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="814.0" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.06%)</title><rect x="811.5" y="515.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="814.5" y="526.0"></text>
</g>
<g>
<title>tcp_push (159 samples, 3.27%)</title><rect x="812.9" y="547.0" width="38.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="815.9" y="558.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (159 samples, 3.27%)</title><rect x="812.9" y="531.0" width="38.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="815.9" y="542.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (155 samples, 3.19%)</title><rect x="813.9" y="515.0" width="37.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="816.9" y="526.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (144 samples, 2.96%)</title><rect x="814.9" y="499.0" width="34.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="817.9" y="510.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (143 samples, 2.94%)</title><rect x="814.9" y="483.0" width="34.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="817.9" y="494.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (143 samples, 2.94%)</title><rect x="814.9" y="467.0" width="34.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="817.9" y="478.0">__..</text>
</g>
<g>
<title>ip_local_out (138 samples, 2.84%)</title><rect x="815.4" y="451.0" width="33.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="818.4" y="462.0">ip..</text>
</g>
<g>
<title>ip_output (138 samples, 2.84%)</title><rect x="815.4" y="435.0" width="33.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="818.4" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output (135 samples, 2.78%)</title><rect x="815.8" y="419.0" width="32.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="818.8" y="430.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (134 samples, 2.76%)</title><rect x="816.1" y="403.0" width="32.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="819.1" y="414.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (117 samples, 2.41%)</title><rect x="816.6" y="387.0" width="28.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="819.6" y="398.0">__..</text>
</g>
<g>
<title>do_softirq.part.21 (117 samples, 2.41%)</title><rect x="816.6" y="371.0" width="28.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="819.6" y="382.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (114 samples, 2.34%)</title><rect x="817.3" y="355.0" width="27.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="820.3" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (114 samples, 2.34%)</title><rect x="817.3" y="339.0" width="27.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="820.3" y="350.0">_..</text>
</g>
<g>
<title>net_rx_action (111 samples, 2.28%)</title><rect x="818.0" y="323.0" width="27.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="821.0" y="334.0">n..</text>
</g>
<g>
<title>process_backlog (111 samples, 2.28%)</title><rect x="818.0" y="307.0" width="27.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="821.0" y="318.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (110 samples, 2.26%)</title><rect x="818.3" y="291.0" width="26.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="821.3" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (108 samples, 2.22%)</title><rect x="818.5" y="275.0" width="26.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="821.5" y="286.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.08%)</title><rect x="818.7" y="259.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="821.7" y="270.0"></text>
</g>
<g>
<title>ip_rcv (103 samples, 2.12%)</title><rect x="819.7" y="259.0" width="25.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="822.7" y="270.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (101 samples, 2.08%)</title><rect x="820.0" y="243.0" width="24.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.0" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver (99 samples, 2.04%)</title><rect x="820.0" y="227.0" width="24.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="823.0" y="238.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (96 samples, 1.97%)</title><rect x="820.4" y="211.0" width="23.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="823.4" y="222.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (95 samples, 1.95%)</title><rect x="820.4" y="195.0" width="23.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="823.4" y="206.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (91 samples, 1.87%)</title><rect x="821.4" y="179.0" width="22.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="824.4" y="190.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.08%)</title><rect x="822.1" y="163.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="825.1" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (81 samples, 1.67%)</title><rect x="823.8" y="163.0" width="19.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="826.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (80 samples, 1.65%)</title><rect x="824.1" y="147.0" width="19.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="827.1" y="158.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.12%)</title><rect x="824.6" y="131.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="827.6" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (6 samples, 0.12%)</title><rect x="824.6" y="115.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="827.6" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (6 samples, 0.12%)</title><rect x="824.6" y="99.0" width="1.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="827.6" y="110.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.10%)</title><rect x="824.8" y="83.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="827.8" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.08%)</title><rect x="825.1" y="67.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="828.1" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.04%)</title><rect x="826.8" y="131.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="829.8" y="142.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.29%)</title><rect x="827.2" y="131.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="830.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.14%)</title><rect x="828.7" y="115.0" width="1.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="831.7" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (5 samples, 0.10%)</title><rect x="828.7" y="99.0" width="1.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="831.7" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.06%)</title><rect x="828.7" y="83.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="831.7" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="828.9" y="67.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="831.9" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="828.9" y="51.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="831.9" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.04%)</title><rect x="829.4" y="83.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="832.4" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.04%)</title><rect x="829.4" y="67.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="832.4" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.04%)</title><rect x="829.9" y="99.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="832.9" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (51 samples, 1.05%)</title><rect x="830.6" y="131.0" width="12.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="833.6" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (44 samples, 0.90%)</title><rect x="831.1" y="115.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="834.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (43 samples, 0.88%)</title><rect x="831.4" y="99.0" width="10.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.4" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (43 samples, 0.88%)</title><rect x="831.4" y="83.0" width="10.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="834.4" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (43 samples, 0.88%)</title><rect x="831.4" y="67.0" width="10.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="834.4" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.06%)</title><rect x="841.8" y="115.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="844.8" y="126.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.04%)</title><rect x="842.5" y="115.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="845.5" y="126.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.04%)</title><rect x="844.0" y="227.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="847.0" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.31%)</title><rect x="845.0" y="387.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (15 samples, 0.31%)</title><rect x="845.0" y="371.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="848.0" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.19%)</title><rect x="845.0" y="355.0" width="2.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="848.0" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.12%)</title><rect x="845.4" y="339.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="848.4" y="350.0"></text>
</g>
<g>
<title>sk_free (2 samples, 0.04%)</title><rect x="846.4" y="323.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="849.4" y="334.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.10%)</title><rect x="847.4" y="355.0" width="1.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="850.4" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (3 samples, 0.06%)</title><rect x="848.8" y="451.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="851.8" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.12%)</title><rect x="851.5" y="547.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="854.5" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.08%)</title><rect x="852.0" y="531.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="855.0" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (8 samples, 0.16%)</title><rect x="853.2" y="595.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="856.2" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (8 samples, 0.16%)</title><rect x="853.2" y="579.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="856.2" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (8 samples, 0.16%)</title><rect x="853.2" y="563.0" width="1.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="856.2" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.12%)</title><rect x="853.7" y="547.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="856.7" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.08%)</title><rect x="854.2" y="531.0" width="0.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="857.2" y="542.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.04%)</title><rect x="854.7" y="515.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="857.7" y="526.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.10%)</title><rect x="855.1" y="611.0" width="1.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="858.1" y="622.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.10%)</title><rect x="855.1" y="595.0" width="1.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="858.1" y="606.0"></text>
</g>
<g>
<title>__fget_light (5 samples, 0.10%)</title><rect x="855.1" y="579.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="858.1" y="590.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.10%)</title><rect x="855.1" y="563.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="858.1" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.06%)</title><rect x="856.6" y="723.0" width="0.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="859.6" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.04%)</title><rect x="856.8" y="707.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="859.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.08%)</title><rect x="857.3" y="771.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="860.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.06%)</title><rect x="857.6" y="755.0" width="0.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="860.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.06%)</title><rect x="857.6" y="739.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="860.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="857.8" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="860.8" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="857.8" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="860.8" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.04%)</title><rect x="857.8" y="691.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="860.8" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (389 samples, 8.00%)</title><rect x="858.3" y="787.0" width="94.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.3" y="798.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="858.3" y="771.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="861.3" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="858.3" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="861.3" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="858.3" y="739.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="861.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="858.3" y="723.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="861.3" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="858.3" y="707.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="861.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (3 samples, 0.06%)</title><rect x="859.0" y="771.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="862.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (382 samples, 7.86%)</title><rect x="860.0" y="771.0" width="92.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="863.0" y="782.0">ru/mail/pol..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (375 samples, 7.71%)</title><rect x="860.2" y="755.0" width="91.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="863.2" y="766.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (375 samples, 7.71%)</title><rect x="860.2" y="739.0" width="91.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="863.2" y="750.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (262 samples, 5.39%)</title><rect x="861.2" y="723.0" width="63.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="864.2" y="734.0">Java_or..</text>
</g>
<g>
<title>__malloc (3 samples, 0.06%)</title><rect x="862.2" y="707.0" width="0.7" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="865.2" y="718.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="862.9" y="707.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="865.9" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.06%)</title><rect x="863.4" y="707.0" width="0.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="866.4" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.04%)</title><rect x="864.1" y="707.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="867.1" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (246 samples, 5.06%)</title><rect x="865.1" y="707.0" width="59.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="868.1" y="718.0">rocksd..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.04%)</title><rect x="865.3" y="691.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="868.3" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.04%)</title><rect x="865.8" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="868.8" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (7 samples, 0.14%)</title><rect x="866.8" y="691.0" width="1.7" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="869.8" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.06%)</title><rect x="867.8" y="675.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="870.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (230 samples, 4.73%)</title><rect x="868.5" y="691.0" width="55.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="871.5" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (227 samples, 4.67%)</title><rect x="869.2" y="675.0" width="55.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="872.2" y="686.0">rocks..</text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="869.2" y="659.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="872.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (221 samples, 4.54%)</title><rect x="869.7" y="659.0" width="53.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="872.7" y="670.0">rocks..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (3 samples, 0.06%)</title><rect x="870.2" y="643.0" width="0.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="873.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (199 samples, 4.09%)</title><rect x="870.9" y="643.0" width="48.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="873.9" y="654.0">rock..</text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="871.2" y="627.0" width="0.4" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="874.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (190 samples, 3.91%)</title><rect x="871.6" y="627.0" width="46.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="874.6" y="638.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="877.2" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="880.2" y="622.0"></text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.04%)</title><rect x="877.7" y="611.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="880.7" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="878.2" y="611.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="881.2" y="622.0"></text>
</g>
<g>
<title>_init (3 samples, 0.06%)</title><rect x="878.7" y="611.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="881.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (3 samples, 0.06%)</title><rect x="879.7" y="611.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="882.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (37 samples, 0.76%)</title><rect x="880.4" y="611.0" width="9.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="883.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (34 samples, 0.70%)</title><rect x="880.9" y="595.0" width="8.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="883.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (28 samples, 0.58%)</title><rect x="882.1" y="579.0" width="6.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="885.1" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (9 samples, 0.19%)</title><rect x="882.3" y="563.0" width="2.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="885.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (16 samples, 0.33%)</title><rect x="885.0" y="563.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="888.0" y="574.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.04%)</title><rect x="885.2" y="547.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="888.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.04%)</title><rect x="885.7" y="547.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="888.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (8 samples, 0.16%)</title><rect x="886.7" y="547.0" width="1.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="889.7" y="558.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="887.2" y="531.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="890.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (4 samples, 0.08%)</title><rect x="889.4" y="611.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="892.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (63 samples, 1.30%)</title><rect x="891.1" y="611.0" width="15.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="894.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="892.0" y="595.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="895.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (57 samples, 1.17%)</title><rect x="892.5" y="595.0" width="13.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="895.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (53 samples, 1.09%)</title><rect x="893.2" y="579.0" width="12.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (3 samples, 0.06%)</title><rect x="893.5" y="563.0" width="0.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="896.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (48 samples, 0.99%)</title><rect x="894.5" y="563.0" width="11.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="897.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (42 samples, 0.86%)</title><rect x="895.7" y="547.0" width="10.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="898.7" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (5 samples, 0.10%)</title><rect x="896.2" y="531.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="899.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.06%)</title><rect x="896.6" y="515.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="899.6" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (30 samples, 0.62%)</title><rect x="897.4" y="531.0" width="7.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="900.4" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (22 samples, 0.45%)</title><rect x="898.6" y="515.0" width="5.3" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="901.6" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (8 samples, 0.16%)</title><rect x="901.2" y="499.0" width="2.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="904.2" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="901.5" y="483.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="904.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 0.10%)</title><rect x="902.0" y="483.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="905.0" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.06%)</title><rect x="902.5" y="467.0" width="0.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="905.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.06%)</title><rect x="903.2" y="499.0" width="0.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="906.2" y="510.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="903.4" y="483.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="906.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.06%)</title><rect x="903.9" y="515.0" width="0.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="906.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.06%)</title><rect x="905.1" y="531.0" width="0.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="908.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (3 samples, 0.06%)</title><rect x="905.1" y="515.0" width="0.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="908.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (8 samples, 0.16%)</title><rect x="906.3" y="611.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="909.3" y="622.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.04%)</title><rect x="906.3" y="595.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="909.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.12%)</title><rect x="906.8" y="595.0" width="1.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="909.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.10%)</title><rect x="906.8" y="579.0" width="1.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="909.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.10%)</title><rect x="906.8" y="563.0" width="1.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="909.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 0.10%)</title><rect x="906.8" y="547.0" width="1.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="909.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (4 samples, 0.08%)</title><rect x="907.1" y="531.0" width="0.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="910.1" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.08%)</title><rect x="907.1" y="515.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="910.1" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (4 samples, 0.08%)</title><rect x="907.1" y="499.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="910.1" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.04%)</title><rect x="907.6" y="483.0" width="0.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="910.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.04%)</title><rect x="908.5" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="911.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (29 samples, 0.60%)</title><rect x="909.0" y="611.0" width="7.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="912.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="916.3" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="919.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.04%)</title><rect x="916.3" y="595.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="919.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.04%)</title><rect x="916.8" y="611.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="919.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.06%)</title><rect x="919.4" y="643.0" width="0.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="922.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.08%)</title><rect x="920.2" y="643.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="923.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (2 samples, 0.04%)</title><rect x="920.4" y="627.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="923.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="921.1" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="924.1" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.04%)</title><rect x="922.1" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="925.1" y="654.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (3 samples, 0.06%)</title><rect x="922.6" y="643.0" width="0.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="925.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="923.6" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="926.6" y="670.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 2.04%)</title><rect x="924.8" y="723.0" width="24.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="927.8" y="734.0">[..</text>
</g>
<g>
<title>__write (95 samples, 1.95%)</title><rect x="925.3" y="707.0" width="23.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="928.3" y="718.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 1.91%)</title><rect x="925.8" y="691.0" width="22.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.8" y="702.0">e..</text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.06%)</title><rect x="925.8" y="675.0" width="0.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="928.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (90 samples, 1.85%)</title><rect x="926.5" y="675.0" width="21.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="929.5" y="686.0">d..</text>
</g>
<g>
<title>__x64_sys_write (90 samples, 1.85%)</title><rect x="926.5" y="659.0" width="21.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="929.5" y="670.0">_..</text>
</g>
<g>
<title>ksys_write (90 samples, 1.85%)</title><rect x="926.5" y="643.0" width="21.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.5" y="654.0">k..</text>
</g>
<g>
<title>__fdget_pos (8 samples, 0.16%)</title><rect x="926.7" y="627.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="929.7" y="638.0"></text>
</g>
<g>
<title>__fget_light (7 samples, 0.14%)</title><rect x="926.7" y="611.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="929.7" y="622.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.10%)</title><rect x="927.2" y="595.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="930.2" y="606.0"></text>
</g>
<g>
<title>vfs_write (81 samples, 1.67%)</title><rect x="928.7" y="627.0" width="19.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.7" y="638.0"></text>
</g>
<g>
<title>__sb_start_write (4 samples, 0.08%)</title><rect x="928.9" y="611.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="931.9" y="622.0"></text>
</g>
<g>
<title>__vfs_write (74 samples, 1.52%)</title><rect x="929.9" y="611.0" width="17.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="932.9" y="622.0"></text>
</g>
<g>
<title>new_sync_write (74 samples, 1.52%)</title><rect x="929.9" y="595.0" width="17.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.9" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (73 samples, 1.50%)</title><rect x="930.1" y="579.0" width="17.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="933.1" y="590.0"></text>
</g>
<g>
<title>__generic_file_write_iter (67 samples, 1.38%)</title><rect x="930.6" y="563.0" width="16.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="933.6" y="574.0"></text>
</g>
<g>
<title>file_update_time (4 samples, 0.08%)</title><rect x="931.8" y="547.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.8" y="558.0"></text>
</g>
<g>
<title>generic_update_time (3 samples, 0.06%)</title><rect x="932.1" y="531.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="935.1" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.06%)</title><rect x="932.1" y="515.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="935.1" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.06%)</title><rect x="932.1" y="499.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="935.1" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.04%)</title><rect x="932.3" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="935.3" y="494.0"></text>
</g>
<g>
<title>generic_perform_write (58 samples, 1.19%)</title><rect x="932.8" y="547.0" width="14.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.8" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (18 samples, 0.37%)</title><rect x="933.0" y="531.0" width="4.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.0" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (11 samples, 0.23%)</title><rect x="933.0" y="515.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="936.0" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (10 samples, 0.21%)</title><rect x="933.3" y="499.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="936.3" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (6 samples, 0.12%)</title><rect x="933.3" y="483.0" width="1.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.3" y="494.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.08%)</title><rect x="934.7" y="483.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="937.7" y="494.0"></text>
</g>
<g>
<title>add_transaction_credits (3 samples, 0.06%)</title><rect x="935.0" y="467.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="938.0" y="478.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (7 samples, 0.14%)</title><rect x="935.7" y="515.0" width="1.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="938.7" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (5 samples, 0.10%)</title><rect x="935.9" y="499.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="938.9" y="510.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.10%)</title><rect x="935.9" y="483.0" width="1.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="938.9" y="494.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.10%)</title><rect x="935.9" y="467.0" width="1.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="938.9" y="478.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.04%)</title><rect x="936.7" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="939.7" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end (38 samples, 0.78%)</title><rect x="937.4" y="531.0" width="9.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.4" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.10%)</title><rect x="937.4" y="515.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.4" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.10%)</title><rect x="937.4" y="499.0" width="1.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="940.4" y="510.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.04%)</title><rect x="937.6" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="940.6" y="494.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="937.6" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="940.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="937.6" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="940.6" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="938.1" y="483.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="941.1" y="494.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.04%)</title><rect x="938.6" y="515.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="941.6" y="526.0"></text>
</g>
<g>
<title>generic_write_end (31 samples, 0.64%)</title><rect x="939.1" y="515.0" width="7.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="942.1" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (30 samples, 0.62%)</title><rect x="939.1" y="499.0" width="7.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="942.1" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (28 samples, 0.58%)</title><rect x="939.1" y="483.0" width="6.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="942.1" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (28 samples, 0.58%)</title><rect x="939.1" y="467.0" width="6.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="942.1" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (27 samples, 0.56%)</title><rect x="939.3" y="451.0" width="6.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="942.3" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (17 samples, 0.35%)</title><rect x="939.8" y="435.0" width="4.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="942.8" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (16 samples, 0.33%)</title><rect x="940.1" y="419.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="943.1" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (7 samples, 0.14%)</title><rect x="942.3" y="403.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="945.3" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (6 samples, 0.12%)</title><rect x="942.5" y="387.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="945.5" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (4 samples, 0.08%)</title><rect x="943.0" y="371.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="946.0" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.08%)</title><rect x="943.0" y="355.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="946.0" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (8 samples, 0.16%)</title><rect x="944.0" y="435.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="947.0" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.06%)</title><rect x="944.0" y="419.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="947.0" y="430.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.04%)</title><rect x="944.0" y="403.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.0" y="414.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.04%)</title><rect x="944.0" y="387.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="947.0" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (3 samples, 0.06%)</title><rect x="944.7" y="419.0" width="0.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="947.7" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (2 samples, 0.04%)</title><rect x="944.7" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="947.7" y="414.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (2 samples, 0.04%)</title><rect x="944.7" y="387.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="947.7" y="398.0"></text>
</g>
<g>
<title>ext4_inode_table (2 samples, 0.04%)</title><rect x="945.4" y="419.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="948.4" y="430.0"></text>
</g>
<g>
<title>ext4_write_checks (3 samples, 0.06%)</title><rect x="946.9" y="563.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="949.9" y="574.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.04%)</title><rect x="947.1" y="547.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="950.1" y="558.0"></text>
</g>
<g>
<title>generic_write_check_limits (2 samples, 0.04%)</title><rect x="947.1" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="950.1" y="542.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.04%)</title><rect x="948.3" y="707.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="951.3" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.04%)</title><rect x="949.5" y="723.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="952.5" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.06%)</title><rect x="950.0" y="723.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="953.0" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (5 samples, 0.10%)</title><rect x="951.2" y="755.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="954.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (3 samples, 0.06%)</title><rect x="951.7" y="739.0" width="0.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="954.7" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (3 samples, 0.06%)</title><rect x="951.7" y="723.0" width="0.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="954.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (3 samples, 0.06%)</title><rect x="951.7" y="707.0" width="0.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="954.7" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.06%)</title><rect x="951.7" y="691.0" width="0.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="954.7" y="702.0"></text>
</g>
<g>
<title>[NIO Worker #8 tid=32698] (844 samples, 17.36%)</title><rect x="952.7" y="883.0" width="204.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="955.7" y="894.0">[NIO Worker #8 tid=32698]</text>
</g>
<g>
<title>[not_walkable_Java] (11 samples, 0.23%)</title><rect x="952.9" y="867.0" width="2.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="955.9" y="878.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.23%)</title><rect x="952.9" y="851.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="955.9" y="862.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.04%)</title><rect x="952.9" y="835.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="955.9" y="846.0"></text>
</g>
<g>
<title>clock_gettime (8 samples, 0.16%)</title><rect x="953.7" y="835.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="956.7" y="846.0"></text>
</g>
<g>
<title>[vdso] (6 samples, 0.12%)</title><rect x="954.1" y="819.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="957.1" y="830.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.04%)</title><rect x="955.6" y="867.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="958.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.04%)</title><rect x="955.6" y="851.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="958.6" y="862.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.04%)</title><rect x="955.6" y="835.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="958.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.run (830 samples, 17.07%)</title><rect x="956.1" y="867.0" width="201.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="959.1" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (830 samples, 17.07%)</title><rect x="956.1" y="851.0" width="201.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="959.1" y="862.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (830 samples, 17.07%)</title><rect x="956.1" y="835.0" width="201.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="959.1" y="846.0">java/util/concurrent/Threa..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.06%)</title><rect x="962.2" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="965.2" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.12%)</title><rect x="962.9" y="819.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="965.9" y="830.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (4 samples, 0.08%)</title><rect x="963.4" y="803.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="966.4" y="814.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (3 samples, 0.06%)</title><rect x="963.4" y="787.0" width="0.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="966.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (2 samples, 0.04%)</title><rect x="964.3" y="819.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="967.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (186 samples, 3.82%)</title><rect x="964.8" y="819.0" width="45.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="967.8" y="830.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.poll (183 samples, 3.76%)</title><rect x="965.6" y="803.0" width="44.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="968.6" y="814.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (181 samples, 3.72%)</title><rect x="965.8" y="787.0" width="43.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.8" y="798.0">java..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (137 samples, 2.82%)</title><rect x="966.8" y="771.0" width="33.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="969.8" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.parkNanos (137 samples, 2.82%)</title><rect x="966.8" y="755.0" width="33.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.8" y="766.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (137 samples, 2.82%)</title><rect x="966.8" y="739.0" width="33.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="969.8" y="750.0">jd..</text>
</g>
<g>
<title>Unsafe_Park (60 samples, 1.23%)</title><rect x="967.2" y="723.0" width="14.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="970.2" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (10 samples, 0.21%)</title><rect x="969.2" y="707.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="972.2" y="718.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (4 samples, 0.08%)</title><rect x="970.4" y="691.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="973.4" y="702.0"></text>
</g>
<g>
<title>__lll_unlock_wake (33 samples, 0.68%)</title><rect x="971.9" y="707.0" width="8.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="974.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.51%)</title><rect x="973.8" y="691.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="976.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.04%)</title><rect x="973.8" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="976.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 0.47%)</title><rect x="974.3" y="675.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="977.3" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 0.37%)</title><rect x="975.3" y="659.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="978.3" y="670.0"></text>
</g>
<g>
<title>do_futex (17 samples, 0.35%)</title><rect x="975.3" y="643.0" width="4.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="978.3" y="654.0"></text>
</g>
<g>
<title>futex_wake (16 samples, 0.33%)</title><rect x="975.5" y="627.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="978.5" y="638.0"></text>
</g>
<g>
<title>get_futex_key (5 samples, 0.10%)</title><rect x="978.2" y="611.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="981.2" y="622.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.04%)</title><rect x="979.9" y="707.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="982.9" y="718.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="980.4" y="707.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="983.4" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.04%)</title><rect x="981.1" y="707.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="984.1" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (64 samples, 1.32%)</title><rect x="982.1" y="723.0" width="15.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="985.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 1.09%)</title><rect x="984.7" y="707.0" width="12.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="987.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (53 samples, 1.09%)</title><rect x="984.7" y="691.0" width="12.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="987.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (51 samples, 1.05%)</title><rect x="985.2" y="675.0" width="12.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="988.2" y="686.0"></text>
</g>
<g>
<title>do_futex (48 samples, 0.99%)</title><rect x="985.7" y="659.0" width="11.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="988.7" y="670.0"></text>
</g>
<g>
<title>futex_wait (41 samples, 0.84%)</title><rect x="986.9" y="643.0" width="10.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="989.9" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (30 samples, 0.62%)</title><rect x="987.1" y="627.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="990.1" y="638.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (15 samples, 0.31%)</title><rect x="987.1" y="611.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="990.1" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (13 samples, 0.27%)</title><rect x="987.1" y="595.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="990.1" y="606.0"></text>
</g>
<g>
<title>lock_hrtimer_base.isra.21 (2 samples, 0.04%)</title><rect x="990.3" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="993.3" y="606.0"></text>
</g>
<g>
<title>schedule (15 samples, 0.31%)</title><rect x="990.8" y="611.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="993.8" y="622.0"></text>
</g>
<g>
<title>__schedule (15 samples, 0.31%)</title><rect x="990.8" y="595.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="993.8" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.31%)</title><rect x="990.8" y="579.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="993.8" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (6 samples, 0.12%)</title><rect x="994.4" y="627.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="997.4" y="638.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.04%)</title><rect x="995.2" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="998.2" y="622.0"></text>
</g>
<g>
<title>hrtimer_cancel (3 samples, 0.06%)</title><rect x="996.1" y="627.0" width="0.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="999.1" y="638.0"></text>
</g>
<g>
<title>hrtimer_try_to_cancel (3 samples, 0.06%)</title><rect x="996.1" y="611.0" width="0.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="999.1" y="622.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="997.6" y="723.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1000.6" y="734.0"></text>
</g>
<g>
<title>__pthread_mutex_cond_lock (3 samples, 0.06%)</title><rect x="998.1" y="723.0" width="0.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1001.1" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.06%)</title><rect x="999.3" y="723.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1002.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (37 samples, 0.76%)</title><rect x="1000.2" y="771.0" width="9.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1003.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (27 samples, 0.56%)</title><rect x="1002.7" y="755.0" width="6.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1005.7" y="766.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="1009.2" y="771.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.2" y="782.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="1009.2" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1012.2" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="1009.2" y="739.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1012.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1167666647.run (606 samples, 12.46%)</title><rect x="1010.4" y="819.0" width="147.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1013.4" y="830.0">ru/mail/polis/servi..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (605 samples, 12.44%)</title><rect x="1010.7" y="803.0" width="146.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1013.7" y="814.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (242 samples, 4.98%)</title><rect x="1010.9" y="787.0" width="58.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1013.9" y="798.0">one/ni..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.04%)</title><rect x="1011.7" y="771.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1014.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.04%)</title><rect x="1011.7" y="755.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1014.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.04%)</title><rect x="1011.7" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1014.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (231 samples, 4.75%)</title><rect x="1012.1" y="771.0" width="56.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.1" y="782.0">one/ni..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.12%)</title><rect x="1012.1" y="755.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1015.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1012.6" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1015.6" y="750.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="1012.6" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1015.6" y="734.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="1012.6" y="707.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1015.6" y="718.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="1012.6" y="691.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1015.6" y="702.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="1012.6" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1015.6" y="686.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.04%)</title><rect x="1013.1" y="739.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1016.1" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (225 samples, 4.63%)</title><rect x="1013.6" y="755.0" width="54.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.6" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (222 samples, 4.57%)</title><rect x="1014.3" y="739.0" width="53.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.3" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (220 samples, 4.52%)</title><rect x="1014.8" y="723.0" width="53.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1017.8" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (220 samples, 4.52%)</title><rect x="1014.8" y="707.0" width="53.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.8" y="718.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.08%)</title><rect x="1015.5" y="691.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1018.5" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.04%)</title><rect x="1016.7" y="691.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1019.7" y="702.0"></text>
</g>
<g>
<title>__send (209 samples, 4.30%)</title><rect x="1017.2" y="691.0" width="50.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1020.2" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (202 samples, 4.15%)</title><rect x="1018.9" y="675.0" width="49.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1021.9" y="686.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (202 samples, 4.15%)</title><rect x="1018.9" y="659.0" width="49.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1021.9" y="670.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (200 samples, 4.11%)</title><rect x="1019.2" y="643.0" width="48.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1022.2" y="654.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (199 samples, 4.09%)</title><rect x="1019.2" y="627.0" width="48.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1022.2" y="638.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (190 samples, 3.91%)</title><rect x="1020.1" y="611.0" width="46.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1023.1" y="622.0">sock..</text>
</g>
<g>
<title>inet_sendmsg (187 samples, 3.85%)</title><rect x="1020.1" y="595.0" width="45.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1023.1" y="606.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (185 samples, 3.80%)</title><rect x="1020.6" y="579.0" width="44.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1023.6" y="590.0">tcp_..</text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.04%)</title><rect x="1021.8" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1024.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (175 samples, 3.60%)</title><rect x="1022.3" y="563.0" width="42.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1025.3" y="574.0">tcp_..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.06%)</title><rect x="1023.1" y="547.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1026.1" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.04%)</title><rect x="1023.3" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1026.3" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.16%)</title><rect x="1024.3" y="547.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.3" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.14%)</title><rect x="1024.5" y="531.0" width="1.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1027.5" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.06%)</title><rect x="1025.0" y="515.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1028.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.06%)</title><rect x="1025.0" y="499.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1028.0" y="510.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.04%)</title><rect x="1025.7" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1028.7" y="526.0"></text>
</g>
<g>
<title>tcp_push (154 samples, 3.17%)</title><rect x="1026.5" y="547.0" width="37.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1029.5" y="558.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (153 samples, 3.15%)</title><rect x="1026.7" y="531.0" width="37.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1029.7" y="542.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (152 samples, 3.13%)</title><rect x="1026.9" y="515.0" width="36.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1029.9" y="526.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (139 samples, 2.86%)</title><rect x="1028.2" y="499.0" width="33.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1031.2" y="510.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (132 samples, 2.71%)</title><rect x="1029.1" y="483.0" width="32.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1032.1" y="494.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (132 samples, 2.71%)</title><rect x="1029.1" y="467.0" width="32.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1032.1" y="478.0">__..</text>
</g>
<g>
<title>ip_local_out (132 samples, 2.71%)</title><rect x="1029.1" y="451.0" width="32.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.1" y="462.0">ip..</text>
</g>
<g>
<title>ip_output (131 samples, 2.69%)</title><rect x="1029.4" y="435.0" width="31.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1032.4" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output (131 samples, 2.69%)</title><rect x="1029.4" y="419.0" width="31.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1032.4" y="430.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (130 samples, 2.67%)</title><rect x="1029.6" y="403.0" width="31.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1032.6" y="414.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (106 samples, 2.18%)</title><rect x="1030.3" y="387.0" width="25.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1033.3" y="398.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (106 samples, 2.18%)</title><rect x="1030.3" y="371.0" width="25.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1033.3" y="382.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (105 samples, 2.16%)</title><rect x="1030.6" y="355.0" width="25.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1033.6" y="366.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (105 samples, 2.16%)</title><rect x="1030.6" y="339.0" width="25.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1033.6" y="350.0">_..</text>
</g>
<g>
<title>net_rx_action (99 samples, 2.04%)</title><rect x="1032.0" y="323.0" width="24.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1035.0" y="334.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.04%)</title><rect x="1032.8" y="307.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1035.8" y="318.0"></text>
</g>
<g>
<title>process_backlog (94 samples, 1.93%)</title><rect x="1033.2" y="307.0" width="22.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1036.2" y="318.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (93 samples, 1.91%)</title><rect x="1033.2" y="291.0" width="22.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1036.2" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (92 samples, 1.89%)</title><rect x="1033.2" y="275.0" width="22.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1036.2" y="286.0">_..</text>
</g>
<g>
<title>ip_rcv (91 samples, 1.87%)</title><rect x="1033.5" y="259.0" width="22.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1036.5" y="270.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (91 samples, 1.87%)</title><rect x="1033.5" y="243.0" width="22.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1036.5" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver (88 samples, 1.81%)</title><rect x="1033.5" y="227.0" width="21.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1036.5" y="238.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (88 samples, 1.81%)</title><rect x="1033.5" y="211.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1036.5" y="222.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (87 samples, 1.79%)</title><rect x="1033.5" y="195.0" width="21.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1036.5" y="206.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (85 samples, 1.75%)</title><rect x="1034.0" y="179.0" width="20.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1037.0" y="190.0"></text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.04%)</title><rect x="1034.7" y="163.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1037.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (80 samples, 1.65%)</title><rect x="1035.2" y="163.0" width="19.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1038.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (79 samples, 1.62%)</title><rect x="1035.4" y="147.0" width="19.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1038.4" y="158.0"></text>
</g>
<g>
<title>tcp_ack (17 samples, 0.35%)</title><rect x="1036.6" y="131.0" width="4.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1039.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (13 samples, 0.27%)</title><rect x="1037.4" y="115.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1040.4" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.14%)</title><rect x="1038.3" y="99.0" width="1.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1041.3" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.04%)</title><rect x="1038.3" y="83.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1041.3" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.04%)</title><rect x="1038.3" y="67.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1041.3" y="78.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.04%)</title><rect x="1038.3" y="51.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1041.3" y="62.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.08%)</title><rect x="1038.8" y="83.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1041.8" y="94.0"></text>
</g>
<g>
<title>skb_release_data (3 samples, 0.06%)</title><rect x="1038.8" y="67.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1041.8" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.04%)</title><rect x="1039.1" y="51.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1042.1" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.04%)</title><rect x="1039.1" y="35.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1042.1" y="46.0"></text>
</g>
<g>
<title>tcp_data_queue (53 samples, 1.09%)</title><rect x="1040.8" y="131.0" width="12.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1043.8" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (49 samples, 1.01%)</title><rect x="1041.3" y="115.0" width="11.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1044.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (48 samples, 0.99%)</title><rect x="1041.5" y="99.0" width="11.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1044.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (48 samples, 0.99%)</title><rect x="1041.5" y="83.0" width="11.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1044.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (47 samples, 0.97%)</title><rect x="1041.7" y="67.0" width="11.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1044.7" y="78.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.04%)</title><rect x="1053.1" y="115.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1056.1" y="126.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.04%)</title><rect x="1054.8" y="227.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1057.8" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (21 samples, 0.43%)</title><rect x="1056.1" y="387.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1059.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (21 samples, 0.43%)</title><rect x="1056.1" y="371.0" width="5.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1059.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.16%)</title><rect x="1057.5" y="355.0" width="2.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1060.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.06%)</title><rect x="1058.5" y="339.0" width="0.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1061.5" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.04%)</title><rect x="1058.7" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1061.7" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.04%)</title><rect x="1058.7" y="307.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1061.7" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.04%)</title><rect x="1058.7" y="291.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1061.7" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.04%)</title><rect x="1059.5" y="355.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1062.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.08%)</title><rect x="1060.2" y="355.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1063.2" y="366.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.06%)</title><rect x="1061.2" y="483.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1064.2" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.04%)</title><rect x="1061.4" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1064.4" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (3 samples, 0.06%)</title><rect x="1062.6" y="499.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1065.6" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.06%)</title><rect x="1062.6" y="483.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1065.6" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.04%)</title><rect x="1062.9" y="467.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.9" y="478.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.04%)</title><rect x="1062.9" y="451.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1065.9" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.04%)</title><rect x="1062.9" y="435.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1065.9" y="446.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.08%)</title><rect x="1063.8" y="547.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1066.8" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.04%)</title><rect x="1063.8" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1066.8" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.04%)</title><rect x="1064.3" y="531.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1067.3" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.06%)</title><rect x="1064.8" y="563.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1067.8" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (3 samples, 0.06%)</title><rect x="1065.5" y="595.0" width="0.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1068.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.04%)</title><rect x="1065.8" y="579.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1068.8" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.04%)</title><rect x="1065.8" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1068.8" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.04%)</title><rect x="1065.8" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1068.8" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.04%)</title><rect x="1065.8" y="531.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1068.8" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.10%)</title><rect x="1066.2" y="611.0" width="1.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1069.2" y="622.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.08%)</title><rect x="1066.5" y="595.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1069.5" y="606.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.08%)</title><rect x="1066.5" y="579.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1069.5" y="590.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.08%)</title><rect x="1066.5" y="563.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1069.5" y="574.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (6 samples, 0.12%)</title><rect x="1068.2" y="771.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1071.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.08%)</title><rect x="1068.7" y="755.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1071.7" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.08%)</title><rect x="1068.7" y="739.0" width="0.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1071.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="1069.2" y="723.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1072.2" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.04%)</title><rect x="1069.2" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1072.2" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.04%)</title><rect x="1069.2" y="691.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (362 samples, 7.44%)</title><rect x="1069.6" y="787.0" width="87.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1072.6" y="798.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="1069.6" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.04%)</title><rect x="1069.6" y="755.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1072.6" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1069.6" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1072.6" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1069.6" y="723.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1072.6" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1069.6" y="707.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1072.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.08%)</title><rect x="1070.4" y="771.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1073.4" y="782.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.04%)</title><rect x="1071.3" y="771.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1074.3" y="782.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.04%)</title><rect x="1071.3" y="755.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1074.3" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.04%)</title><rect x="1071.3" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1074.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (353 samples, 7.26%)</title><rect x="1071.8" y="771.0" width="85.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1074.8" y="782.0">ru/mail/po..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.04%)</title><rect x="1071.8" y="755.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1074.8" y="766.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (345 samples, 7.09%)</title><rect x="1072.3" y="755.0" width="83.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1075.3" y="766.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (344 samples, 7.07%)</title><rect x="1072.6" y="739.0" width="83.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1075.6" y="750.0">org/rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (251 samples, 5.16%)</title><rect x="1073.5" y="723.0" width="60.9" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1076.5" y="734.0">Java_o..</text>
</g>
<g>
<title>__malloc (4 samples, 0.08%)</title><rect x="1074.3" y="707.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1077.3" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.04%)</title><rect x="1075.2" y="707.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1078.2" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.04%)</title><rect x="1075.7" y="707.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1078.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="1076.2" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1079.2" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (238 samples, 4.89%)</title><rect x="1076.7" y="707.0" width="57.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1079.7" y="718.0">rocksd..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.06%)</title><rect x="1077.2" y="691.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1080.2" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.08%)</title><rect x="1077.9" y="691.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1080.9" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.04%)</title><rect x="1079.1" y="691.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1082.1" y="702.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.06%)</title><rect x="1079.6" y="691.0" width="0.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1082.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (219 samples, 4.50%)</title><rect x="1080.3" y="691.0" width="53.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1083.3" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (215 samples, 4.42%)</title><rect x="1081.3" y="675.0" width="52.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1084.3" y="686.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (210 samples, 4.32%)</title><rect x="1081.5" y="659.0" width="51.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1084.5" y="670.0">rocks..</text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.04%)</title><rect x="1082.5" y="643.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1085.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (186 samples, 3.82%)</title><rect x="1083.2" y="643.0" width="45.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1086.2" y="654.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.04%)</title><rect x="1083.2" y="627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1086.2" y="638.0"></text>
</g>
<g>
<title>_init (3 samples, 0.06%)</title><rect x="1083.7" y="627.0" width="0.7" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1086.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (180 samples, 3.70%)</title><rect x="1084.4" y="627.0" width="43.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1087.4" y="638.0">rock..</text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.06%)</title><rect x="1090.0" y="611.0" width="0.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1093.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.04%)</title><rect x="1090.8" y="611.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1093.8" y="622.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1091.2" y="611.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1094.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (30 samples, 0.62%)</title><rect x="1092.2" y="611.0" width="7.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1095.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (26 samples, 0.53%)</title><rect x="1092.7" y="595.0" width="6.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1095.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (25 samples, 0.51%)</title><rect x="1092.9" y="579.0" width="6.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1095.9" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (5 samples, 0.10%)</title><rect x="1093.4" y="563.0" width="1.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1096.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (15 samples, 0.31%)</title><rect x="1095.4" y="563.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1098.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="1096.1" y="547.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1099.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (9 samples, 0.19%)</title><rect x="1096.6" y="547.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1099.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.08%)</title><rect x="1097.8" y="531.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1100.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.06%)</title><rect x="1099.7" y="611.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1102.7" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.04%)</title><rect x="1099.7" y="595.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1102.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (65 samples, 1.34%)</title><rect x="1100.9" y="611.0" width="15.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1103.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.04%)</title><rect x="1101.7" y="595.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1104.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (60 samples, 1.23%)</title><rect x="1102.2" y="595.0" width="14.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (55 samples, 1.13%)</title><rect x="1102.6" y="579.0" width="13.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1105.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (55 samples, 1.13%)</title><rect x="1102.6" y="563.0" width="13.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1105.6" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.04%)</title><rect x="1103.9" y="547.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1106.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (44 samples, 0.90%)</title><rect x="1105.1" y="547.0" width="10.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1108.1" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (3 samples, 0.06%)</title><rect x="1105.8" y="531.0" width="0.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1108.8" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (33 samples, 0.68%)</title><rect x="1106.5" y="531.0" width="8.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1109.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (27 samples, 0.56%)</title><rect x="1107.7" y="515.0" width="6.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1110.7" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (12 samples, 0.25%)</title><rect x="1110.2" y="499.0" width="2.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1113.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.19%)</title><rect x="1110.9" y="483.0" width="2.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1113.9" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.06%)</title><rect x="1112.1" y="467.0" width="0.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1115.1" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.08%)</title><rect x="1113.3" y="499.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1116.3" y="510.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.04%)</title><rect x="1113.3" y="483.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1116.3" y="494.0"></text>
</g>
<g>
<title>_init (2 samples, 0.04%)</title><rect x="1113.8" y="483.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1116.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.06%)</title><rect x="1114.5" y="531.0" width="0.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1117.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.04%)</title><rect x="1116.0" y="579.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1119.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (7 samples, 0.14%)</title><rect x="1116.7" y="611.0" width="1.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1119.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.10%)</title><rect x="1117.0" y="595.0" width="1.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1120.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.10%)</title><rect x="1117.0" y="579.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1120.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (4 samples, 0.08%)</title><rect x="1117.2" y="563.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1120.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.06%)</title><rect x="1117.2" y="547.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1120.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.04%)</title><rect x="1117.4" y="531.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1120.4" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.04%)</title><rect x="1117.4" y="515.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1120.4" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.04%)</title><rect x="1117.4" y="499.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1120.4" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni11261709097369429262.so (2 samples, 0.04%)</title><rect x="1117.4" y="483.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1120.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.04%)</title><rect x="1117.4" y="467.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1120.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (27 samples, 0.56%)</title><rect x="1118.4" y="611.0" width="6.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1121.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.06%)</title><rect x="1125.0" y="611.0" width="0.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1128.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.04%)</title><rect x="1125.2" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1128.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (4 samples, 0.08%)</title><rect x="1125.7" y="611.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1128.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.04%)</title><rect x="1126.9" y="611.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1129.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (3 samples, 0.06%)</title><rect x="1127.4" y="611.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1130.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.04%)</title><rect x="1128.4" y="643.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1131.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.21%)</title><rect x="1128.9" y="643.0" width="2.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1131.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.04%)</title><rect x="1129.1" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.04%)</title><rect x="1129.6" y="627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1132.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.06%)</title><rect x="1130.3" y="627.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1133.3" y="638.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (2 samples, 0.04%)</title><rect x="1130.6" y="611.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1133.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.04%)</title><rect x="1131.3" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1134.3" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (3 samples, 0.06%)</title><rect x="1131.8" y="643.0" width="0.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1134.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.04%)</title><rect x="1132.7" y="659.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1135.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.06%)</title><rect x="1133.5" y="691.0" width="0.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 1.65%)</title><rect x="1134.4" y="723.0" width="19.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1137.4" y="734.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.04%)</title><rect x="1134.4" y="707.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1137.4" y="718.0"></text>
</g>
<g>
<title>__write (74 samples, 1.52%)</title><rect x="1135.4" y="707.0" width="18.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1138.4" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (70 samples, 1.44%)</title><rect x="1136.4" y="691.0" width="17.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1139.4" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.06%)</title><rect x="1136.4" y="675.0" width="0.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1139.4" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (67 samples, 1.38%)</title><rect x="1137.1" y="675.0" width="16.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1140.1" y="686.0"></text>
</g>
<g>
<title>__x64_sys_write (67 samples, 1.38%)</title><rect x="1137.1" y="659.0" width="16.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.1" y="670.0"></text>
</g>
<g>
<title>ksys_write (66 samples, 1.36%)</title><rect x="1137.3" y="643.0" width="16.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1140.3" y="654.0"></text>
</g>
<g>
<title>__fdget_pos (6 samples, 0.12%)</title><rect x="1137.6" y="627.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1140.6" y="638.0"></text>
</g>
<g>
<title>__fget_light (6 samples, 0.12%)</title><rect x="1137.6" y="611.0" width="1.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1140.6" y="622.0"></text>
</g>
<g>
<title>__fget (5 samples, 0.10%)</title><rect x="1137.8" y="595.0" width="1.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1140.8" y="606.0"></text>
</g>
<g>
<title>vfs_write (58 samples, 1.19%)</title><rect x="1139.3" y="627.0" width="14.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1142.3" y="638.0"></text>
</g>
<g>
<title>__vfs_write (51 samples, 1.05%)</title><rect x="1140.5" y="611.0" width="12.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1143.5" y="622.0"></text>
</g>
<g>
<title>new_sync_write (49 samples, 1.01%)</title><rect x="1141.0" y="595.0" width="11.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.0" y="606.0"></text>
</g>
<g>
<title>ext4_file_write_iter (48 samples, 0.99%)</title><rect x="1141.2" y="579.0" width="11.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1144.2" y="590.0"></text>
</g>
<g>
<title>__generic_file_write_iter (43 samples, 0.88%)</title><rect x="1141.7" y="563.0" width="10.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1144.7" y="574.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.10%)</title><rect x="1142.2" y="547.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1145.2" y="558.0"></text>
</g>
<g>
<title>generic_update_time (4 samples, 0.08%)</title><rect x="1142.4" y="531.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1145.4" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.08%)</title><rect x="1142.4" y="515.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1145.4" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.08%)</title><rect x="1142.4" y="499.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1145.4" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (4 samples, 0.08%)</title><rect x="1142.4" y="483.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1145.4" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (3 samples, 0.06%)</title><rect x="1142.4" y="467.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1145.4" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (3 samples, 0.06%)</title><rect x="1142.4" y="451.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1145.4" y="462.0"></text>
</g>
<g>
<title>generic_perform_write (36 samples, 0.74%)</title><rect x="1143.4" y="547.0" width="8.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1146.4" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (14 samples, 0.29%)</title><rect x="1143.7" y="531.0" width="3.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.7" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.08%)</title><rect x="1143.9" y="515.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1146.9" y="526.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.08%)</title><rect x="1143.9" y="499.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1146.9" y="510.0"></text>
</g>
<g>
<title>kmem_cache_alloc (3 samples, 0.06%)</title><rect x="1143.9" y="483.0" width="0.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.9" y="494.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (8 samples, 0.16%)</title><rect x="1145.1" y="515.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1148.1" y="526.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.14%)</title><rect x="1145.1" y="499.0" width="1.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1148.1" y="510.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.08%)</title><rect x="1145.6" y="483.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1148.6" y="494.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.04%)</title><rect x="1146.1" y="467.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1149.1" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (21 samples, 0.43%)</title><rect x="1147.1" y="531.0" width="5.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.1" y="542.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.06%)</title><rect x="1147.1" y="515.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1150.1" y="526.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.04%)</title><rect x="1147.1" y="499.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.1" y="510.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.04%)</title><rect x="1147.1" y="483.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1150.1" y="494.0"></text>
</g>
<g>
<title>generic_write_end (18 samples, 0.37%)</title><rect x="1147.8" y="515.0" width="4.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1150.8" y="526.0"></text>
</g>
<g>
<title>__generic_write_end (16 samples, 0.33%)</title><rect x="1148.0" y="499.0" width="3.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1151.0" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (16 samples, 0.33%)</title><rect x="1148.0" y="483.0" width="3.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1151.0" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (16 samples, 0.33%)</title><rect x="1148.0" y="467.0" width="3.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1151.0" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (13 samples, 0.27%)</title><rect x="1148.7" y="451.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1151.7" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (9 samples, 0.19%)</title><rect x="1149.0" y="435.0" width="2.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1152.0" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (9 samples, 0.19%)</title><rect x="1149.0" y="419.0" width="2.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1152.0" y="430.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (3 samples, 0.06%)</title><rect x="1149.2" y="403.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1152.2" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.06%)</title><rect x="1149.2" y="387.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1152.2" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (5 samples, 0.10%)</title><rect x="1150.0" y="403.0" width="1.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1153.0" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (5 samples, 0.10%)</title><rect x="1150.0" y="387.0" width="1.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1153.0" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (4 samples, 0.08%)</title><rect x="1150.2" y="371.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1153.2" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.08%)</title><rect x="1150.2" y="355.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1153.2" y="366.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.06%)</title><rect x="1151.2" y="435.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1154.2" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.06%)</title><rect x="1151.2" y="419.0" width="0.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1154.2" y="430.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.04%)</title><rect x="1151.4" y="403.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1154.4" y="414.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.04%)</title><rect x="1152.1" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1155.1" y="574.0"></text>
</g>
<g>
<title>generic_write_checks (2 samples, 0.04%)</title><rect x="1152.1" y="547.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1155.1" y="558.0"></text>
</g>
<g>
<title>generic_write_check_limits (2 samples, 0.04%)</title><rect x="1152.1" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.1" y="542.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.08%)</title><rect x="1154.6" y="723.0" width="0.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1157.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.06%)</title><rect x="1154.8" y="707.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1157.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.06%)</title><rect x="1154.8" y="691.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1157.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.06%)</title><rect x="1154.8" y="675.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1157.8" y="686.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.06%)</title><rect x="1154.8" y="659.0" width="0.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1157.8" y="670.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.06%)</title><rect x="1154.8" y="643.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1157.8" y="654.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.06%)</title><rect x="1154.8" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1157.8" y="638.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.06%)</title><rect x="1154.8" y="611.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1157.8" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.06%)</title><rect x="1154.8" y="595.0" width="0.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1157.8" y="606.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.04%)</title><rect x="1155.5" y="723.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1158.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (5 samples, 0.10%)</title><rect x="1156.0" y="755.0" width="1.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.0" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (4 samples, 0.08%)</title><rect x="1156.3" y="739.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1159.3" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.04%)</title><rect x="1156.3" y="723.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.3" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.04%)</title><rect x="1156.3" y="707.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1159.3" y="718.0"></text>
</g>
<g>
<title>jbyte_arraycopy (2 samples, 0.04%)</title><rect x="1156.3" y="691.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1159.3" y="702.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.04%)</title><rect x="1156.8" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1156.8" y="707.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1159.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.04%)</title><rect x="1156.8" y="691.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1159.8" y="702.0"></text>
</g>
<g>
<title>[tid=32593] (2 samples, 0.04%)</title><rect x="1157.5" y="883.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1160.5" y="894.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.04%)</title><rect x="1157.5" y="867.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1160.5" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.04%)</title><rect x="1157.5" y="851.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1160.5" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.04%)</title><rect x="1157.5" y="835.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.5" y="846.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.04%)</title><rect x="1157.5" y="819.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.5" y="830.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.04%)</title><rect x="1157.5" y="803.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1160.5" y="814.0"></text>
</g>
<g>
<title>[tid=32600] (2 samples, 0.04%)</title><rect x="1158.0" y="883.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1161.0" y="894.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.04%)</title><rect x="1158.0" y="867.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1161.0" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.04%)</title><rect x="1158.0" y="851.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1161.0" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.04%)</title><rect x="1158.0" y="835.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.0" y="846.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.04%)</title><rect x="1158.0" y="819.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1161.0" y="830.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.04%)</title><rect x="1158.0" y="803.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.0" y="814.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.04%)</title><rect x="1158.0" y="787.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.0" y="798.0"></text>
</g>
<g>
<title>[tid=32605] (109 samples, 2.24%)</title><rect x="1158.7" y="883.0" width="26.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1161.7" y="894.0">[..</text>
</g>
<g>
<title>start_thread (108 samples, 2.22%)</title><rect x="1158.9" y="867.0" width="26.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1161.9" y="878.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (108 samples, 2.22%)</title><rect x="1158.9" y="851.0" width="26.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1161.9" y="862.0">t..</text>
</g>
<g>
<title>Thread::call_run() (108 samples, 2.22%)</title><rect x="1158.9" y="835.0" width="26.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1161.9" y="846.0">T..</text>
</g>
<g>
<title>JavaThread::run() (108 samples, 2.22%)</title><rect x="1158.9" y="819.0" width="26.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1161.9" y="830.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (108 samples, 2.22%)</title><rect x="1158.9" y="803.0" width="26.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.9" y="814.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (108 samples, 2.22%)</title><rect x="1158.9" y="787.0" width="26.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1161.9" y="798.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (108 samples, 2.22%)</title><rect x="1158.9" y="771.0" width="26.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.9" y="782.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (108 samples, 2.22%)</title><rect x="1158.9" y="755.0" width="26.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1161.9" y="766.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (108 samples, 2.22%)</title><rect x="1158.9" y="739.0" width="26.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.9" y="750.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (52 samples, 1.07%)</title><rect x="1159.4" y="723.0" width="12.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.4" y="734.0"></text>
</g>
<g>
<title>Matcher::match() (7 samples, 0.14%)</title><rect x="1159.4" y="707.0" width="1.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.4" y="718.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (6 samples, 0.12%)</title><rect x="1159.7" y="691.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.7" y="702.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (3 samples, 0.06%)</title><rect x="1160.4" y="675.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1163.4" y="686.0"></text>
</g>
<g>
<title>PhaseBlockLayout::PhaseBlockLayout(PhaseCFG&amp;) (2 samples, 0.04%)</title><rect x="1161.1" y="707.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.1" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 0.10%)</title><rect x="1161.6" y="707.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.6" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (5 samples, 0.10%)</title><rect x="1161.6" y="691.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.6" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (2 samples, 0.04%)</title><rect x="1161.6" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1164.6" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.04%)</title><rect x="1162.1" y="675.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1165.1" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (38 samples, 0.78%)</title><rect x="1162.8" y="707.0" width="9.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.8" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (2 samples, 0.04%)</title><rect x="1162.8" y="691.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1165.8" y="702.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.04%)</title><rect x="1162.8" y="675.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.8" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (2 samples, 0.04%)</title><rect x="1163.3" y="691.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1166.3" y="702.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (2 samples, 0.04%)</title><rect x="1163.3" y="675.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.3" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (12 samples, 0.25%)</title><rect x="1164.0" y="691.0" width="2.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1167.0" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (4 samples, 0.08%)</title><rect x="1164.5" y="675.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1167.5" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (5 samples, 0.10%)</title><rect x="1165.5" y="675.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.5" y="686.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.04%)</title><rect x="1165.5" y="659.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1168.5" y="670.0"></text>
</g>
<g>
<title>RegMask::smear_to_sets(int) (3 samples, 0.06%)</title><rect x="1166.0" y="659.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.0" y="670.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (2 samples, 0.04%)</title><rect x="1167.4" y="691.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1170.4" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (10 samples, 0.21%)</title><rect x="1168.4" y="691.0" width="2.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1171.4" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (2 samples, 0.04%)</title><rect x="1170.1" y="675.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.1" y="686.0"></text>
</g>
<g>
<title>Compile::Optimize() (34 samples, 0.70%)</title><rect x="1172.0" y="723.0" width="8.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1175.0" y="734.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (2 samples, 0.04%)</title><rect x="1172.8" y="707.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1175.8" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (20 samples, 0.41%)</title><rect x="1173.3" y="707.0" width="4.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1176.3" y="718.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (2 samples, 0.04%)</title><rect x="1173.3" y="691.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1176.3" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (10 samples, 0.21%)</title><rect x="1174.0" y="691.0" width="2.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.0" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (6 samples, 0.12%)</title><rect x="1175.0" y="675.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1178.0" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (6 samples, 0.12%)</title><rect x="1175.0" y="659.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1178.0" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (2 samples, 0.04%)</title><rect x="1175.9" y="643.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1178.9" y="654.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (2 samples, 0.04%)</title><rect x="1176.9" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1179.9" y="702.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (6 samples, 0.12%)</title><rect x="1178.1" y="707.0" width="1.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1181.1" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (6 samples, 0.12%)</title><rect x="1178.1" y="691.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.1" y="702.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (3 samples, 0.06%)</title><rect x="1179.6" y="707.0" width="0.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.6" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (19 samples, 0.39%)</title><rect x="1180.3" y="723.0" width="4.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.3" y="734.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (19 samples, 0.39%)</title><rect x="1180.3" y="707.0" width="4.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.3" y="718.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (19 samples, 0.39%)</title><rect x="1180.3" y="691.0" width="4.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1183.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_block() (19 samples, 0.39%)</title><rect x="1180.3" y="675.0" width="4.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1183.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (19 samples, 0.39%)</title><rect x="1180.3" y="659.0" width="4.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1183.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_call() (18 samples, 0.37%)</title><rect x="1180.5" y="643.0" width="4.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1183.5" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (12 samples, 0.25%)</title><rect x="1181.0" y="627.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1184.0" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (12 samples, 0.25%)</title><rect x="1181.0" y="611.0" width="2.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (12 samples, 0.25%)</title><rect x="1181.0" y="595.0" width="2.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (12 samples, 0.25%)</title><rect x="1181.0" y="579.0" width="2.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1184.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (12 samples, 0.25%)</title><rect x="1181.0" y="563.0" width="2.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.0" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (12 samples, 0.25%)</title><rect x="1181.0" y="547.0" width="2.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.0" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (11 samples, 0.23%)</title><rect x="1181.0" y="531.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1184.0" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (11 samples, 0.23%)</title><rect x="1181.0" y="515.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.0" y="526.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (2 samples, 0.04%)</title><rect x="1181.0" y="499.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (9 samples, 0.19%)</title><rect x="1181.5" y="499.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1184.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (9 samples, 0.19%)</title><rect x="1181.5" y="483.0" width="2.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (9 samples, 0.19%)</title><rect x="1181.5" y="467.0" width="2.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.5" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.14%)</title><rect x="1182.0" y="451.0" width="1.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.0" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 0.12%)</title><rect x="1182.2" y="435.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.2" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 0.12%)</title><rect x="1182.2" y="419.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.2" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 0.12%)</title><rect x="1182.2" y="403.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.2" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 0.12%)</title><rect x="1182.2" y="387.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.2" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 0.12%)</title><rect x="1182.2" y="371.0" width="1.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.06%)</title><rect x="1182.5" y="355.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.5" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1182.7" y="339.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.7" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1182.7" y="323.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.7" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1182.7" y="307.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1185.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1182.7" y="291.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.7" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1182.7" y="275.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.7" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1182.7" y="259.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.7" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1182.7" y="243.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.7" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1182.7" y="227.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.7" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1182.7" y="211.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.7" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1182.7" y="195.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1182.7" y="179.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.7" y="190.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (2 samples, 0.04%)</title><rect x="1183.2" y="355.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.2" y="366.0"></text>
</g>
<g>
<title>Parse::do_put_xxx(Node*, ciField*, bool) (2 samples, 0.04%)</title><rect x="1183.2" y="339.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.2" y="350.0"></text>
</g>
<g>
<title>GraphKit::access_store_at(Node*, Node*, Node*, TypePtr const*, Node*, Type const*, BasicType, unsigned long) (2 samples, 0.04%)</title><rect x="1183.2" y="323.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.2" y="334.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1183.9" y="627.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.9" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1183.9" y="611.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.9" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.08%)</title><rect x="1183.9" y="595.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.08%)</title><rect x="1183.9" y="579.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.08%)</title><rect x="1183.9" y="563.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.9" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.08%)</title><rect x="1183.9" y="547.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.9" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.08%)</title><rect x="1183.9" y="531.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.9" y="542.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.08%)</title><rect x="1183.9" y="515.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.9" y="526.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.08%)</title><rect x="1183.9" y="499.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.08%)</title><rect x="1183.9" y="483.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.9" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.08%)</title><rect x="1183.9" y="467.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.9" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.08%)</title><rect x="1183.9" y="451.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.9" y="462.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.08%)</title><rect x="1183.9" y="435.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.9" y="446.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.06%)</title><rect x="1183.9" y="419.0" width="0.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.9" y="430.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.06%)</title><rect x="1183.9" y="403.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.9" y="414.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.06%)</title><rect x="1183.9" y="387.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.9" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.06%)</title><rect x="1183.9" y="371.0" width="0.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.9" y="382.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.06%)</title><rect x="1183.9" y="355.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.9" y="366.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.04%)</title><rect x="1183.9" y="339.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.9" y="350.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.04%)</title><rect x="1183.9" y="323.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.9" y="334.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.04%)</title><rect x="1183.9" y="307.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.9" y="318.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.04%)</title><rect x="1183.9" y="291.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.9" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.04%)</title><rect x="1183.9" y="275.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.9" y="286.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.04%)</title><rect x="1183.9" y="259.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.9" y="270.0"></text>
</g>
<g>
<title>[tid=32606] (15 samples, 0.31%)</title><rect x="1185.1" y="883.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1188.1" y="894.0"></text>
</g>
<g>
<title>start_thread (13 samples, 0.27%)</title><rect x="1185.6" y="867.0" width="3.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.6" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (13 samples, 0.27%)</title><rect x="1185.6" y="851.0" width="3.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1188.6" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (13 samples, 0.27%)</title><rect x="1185.6" y="835.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.6" y="846.0"></text>
</g>
<g>
<title>JavaThread::run() (13 samples, 0.27%)</title><rect x="1185.6" y="819.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1188.6" y="830.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (13 samples, 0.27%)</title><rect x="1185.6" y="803.0" width="3.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1188.6" y="814.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (13 samples, 0.27%)</title><rect x="1185.6" y="787.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="798.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (12 samples, 0.25%)</title><rect x="1185.6" y="771.0" width="2.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.6" y="782.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 0.23%)</title><rect x="1185.6" y="755.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.6" y="766.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (11 samples, 0.23%)</title><rect x="1185.6" y="739.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1188.6" y="750.0"></text>
</g>
<g>
<title>Compilation::compile_method() (11 samples, 0.23%)</title><rect x="1185.6" y="723.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.6" y="734.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (11 samples, 0.23%)</title><rect x="1185.6" y="707.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.6" y="718.0"></text>
</g>
<g>
<title>Compilation::build_hir() (6 samples, 0.12%)</title><rect x="1185.6" y="691.0" width="1.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.6" y="702.0"></text>
</g>
<g>
<title>IR::IR(Compilation*, ciMethod*, int) (5 samples, 0.10%)</title><rect x="1185.6" y="675.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.6" y="686.0"></text>
</g>
<g>
<title>IRScope::IRScope(Compilation*, IRScope*, int, ciMethod*, int, bool) (5 samples, 0.10%)</title><rect x="1185.6" y="659.0" width="1.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.6" y="670.0"></text>
</g>
<g>
<title>GraphBuilder::GraphBuilder(Compilation*, IRScope*) (5 samples, 0.10%)</title><rect x="1185.6" y="643.0" width="1.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.6" y="654.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (4 samples, 0.08%)</title><rect x="1185.9" y="627.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.9" y="638.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (4 samples, 0.08%)</title><rect x="1185.9" y="611.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1188.9" y="622.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (3 samples, 0.06%)</title><rect x="1186.1" y="595.0" width="0.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1189.1" y="606.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.06%)</title><rect x="1186.1" y="579.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1189.1" y="590.0"></text>
</g>
<g>
<title>GraphBuilder::try_inline_full(ciMethod*, bool, bool, Bytecodes::Code, Instruction*) (3 samples, 0.06%)</title><rect x="1186.1" y="563.0" width="0.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1189.1" y="574.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_all_blocks(bool) (3 samples, 0.06%)</title><rect x="1186.1" y="547.0" width="0.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.1" y="558.0"></text>
</g>
<g>
<title>GraphBuilder::iterate_bytecodes_for_block(int) (3 samples, 0.06%)</title><rect x="1186.1" y="531.0" width="0.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.1" y="542.0"></text>
</g>
<g>
<title>GraphBuilder::invoke(Bytecodes::Code) (2 samples, 0.04%)</title><rect x="1186.4" y="515.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.4" y="526.0"></text>
</g>
<g>
<title>Compilation::emit_code_body() (2 samples, 0.04%)</title><rect x="1187.1" y="691.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.1" y="702.0"></text>
</g>
<g>
<title>LIR_Assembler::emit_code(BlockList*) (2 samples, 0.04%)</title><rect x="1187.1" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.1" y="686.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.06%)</title><rect x="1187.6" y="691.0" width="0.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.6" y="702.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (2 samples, 0.04%)</title><rect x="1187.8" y="675.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.8" y="686.0"></text>
</g>
<g>
<title>[tid=32610] (4 samples, 0.08%)</title><rect x="1189.0" y="883.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1192.0" y="894.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.06%)</title><rect x="1189.3" y="867.0" width="0.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1192.3" y="878.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.06%)</title><rect x="1189.3" y="851.0" width="0.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1192.3" y="862.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.06%)</title><rect x="1189.3" y="835.0" width="0.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.3" y="846.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.06%)</title><rect x="1189.3" y="819.0" width="0.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.3" y="830.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.06%)</title><rect x="1189.3" y="803.0" width="0.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.3" y="814.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.06%)</title><rect x="1189.3" y="787.0" width="0.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.3" y="798.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (2 samples, 0.04%)</title><rect x="1189.3" y="771.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1192.3" y="782.0"></text>
</g>
</g>
</svg>
