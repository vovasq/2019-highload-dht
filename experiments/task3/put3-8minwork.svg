<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (5,783 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>[NIO Selector #3 tid=796] (331 samples, 5.72%)</title><rect x="10.0" y="899.0" width="67.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="910.0">[NIO Se..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.03%)</title><rect x="10.0" y="883.0" width="0.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (329 samples, 5.69%)</title><rect x="10.4" y="883.0" width="67.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.4" y="894.0">one/nio..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="12.4" y="867.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.4" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.hasNext (2 samples, 0.03%)</title><rect x="12.9" y="867.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="15.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (132 samples, 2.28%)</title><rect x="13.5" y="867.0" width="26.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="16.5" y="878.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.05%)</title><rect x="13.9" y="851.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="16.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (127 samples, 2.20%)</title><rect x="14.5" y="851.0" width="25.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="17.5" y="862.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.05%)</title><rect x="16.1" y="835.0" width="0.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="19.1" y="846.0"></text>
</g>
<g>
<title>[unknown] (110 samples, 1.90%)</title><rect x="16.7" y="835.0" width="22.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="19.7" y="846.0">[..</text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="16.7" y="819.0" width="0.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="19.7" y="830.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="16.9" y="803.0" width="0.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="19.9" y="814.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.03%)</title><rect x="17.1" y="787.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="20.1" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="18.0" y="819.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="21.0" y="830.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="18.4" y="819.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="21.4" y="830.0"></text>
</g>
<g>
<title>epoll_wait (99 samples, 1.71%)</title><rect x="19.0" y="819.0" width="20.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="22.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (79 samples, 1.37%)</title><rect x="23.1" y="803.0" width="16.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="26.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (78 samples, 1.35%)</title><rect x="23.3" y="787.0" width="15.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="26.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (75 samples, 1.30%)</title><rect x="23.9" y="771.0" width="15.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="26.9" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (72 samples, 1.25%)</title><rect x="24.5" y="755.0" width="14.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="27.5" y="766.0"></text>
</g>
<g>
<title>ep_poll (65 samples, 1.12%)</title><rect x="24.9" y="739.0" width="13.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="27.9" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (25 samples, 0.43%)</title><rect x="26.9" y="723.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="29.9" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.03%)</title><rect x="29.0" y="707.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="32.0" y="718.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.19%)</title><rect x="29.4" y="707.0" width="2.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="32.4" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (8 samples, 0.14%)</title><rect x="30.0" y="691.0" width="1.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="33.0" y="702.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.10%)</title><rect x="30.2" y="675.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="33.2" y="686.0"></text>
</g>
<g>
<title>tcp_poll (4 samples, 0.07%)</title><rect x="30.6" y="659.0" width="0.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="33.6" y="670.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="32.0" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.0" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (28 samples, 0.48%)</title><rect x="32.4" y="723.0" width="5.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="35.4" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 0.47%)</title><rect x="32.6" y="707.0" width="5.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.6" y="718.0"></text>
</g>
<g>
<title>schedule (27 samples, 0.47%)</title><rect x="32.6" y="691.0" width="5.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="35.6" y="702.0"></text>
</g>
<g>
<title>__schedule (27 samples, 0.47%)</title><rect x="32.6" y="675.0" width="5.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="35.6" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (25 samples, 0.43%)</title><rect x="33.1" y="659.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="36.1" y="670.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="37.8" y="643.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="40.8" y="654.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="37.8" y="627.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="40.8" y="638.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="37.8" y="611.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="40.8" y="622.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="37.8" y="595.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="40.8" y="606.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="37.8" y="579.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="40.8" y="590.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="37.8" y="563.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="40.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="37.8" y="547.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="40.8" y="558.0"></text>
</g>
<g>
<title>fput (5 samples, 0.09%)</title><rect x="38.2" y="739.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="41.2" y="750.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="39.2" y="835.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="42.2" y="846.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="39.6" y="835.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="42.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (182 samples, 3.15%)</title><rect x="40.4" y="867.0" width="37.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="43.4" y="878.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (178 samples, 3.08%)</title><rect x="40.8" y="851.0" width="36.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="43.8" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (107 samples, 1.85%)</title><rect x="40.8" y="835.0" width="21.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="43.8" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (76 samples, 1.31%)</title><rect x="41.6" y="819.0" width="15.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (76 samples, 1.31%)</title><rect x="41.6" y="803.0" width="15.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="44.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.03%)</title><rect x="41.8" y="787.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="44.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="41.8" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="44.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (72 samples, 1.25%)</title><rect x="42.4" y="787.0" width="14.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="45.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="42.4" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="45.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.03%)</title><rect x="42.9" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="45.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="42.9" y="755.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="45.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="42.9" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="45.9" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (68 samples, 1.18%)</title><rect x="43.3" y="771.0" width="13.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="46.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.07%)</title><rect x="43.9" y="755.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="46.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="44.1" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="47.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="44.1" y="723.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="47.1" y="734.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (61 samples, 1.05%)</title><rect x="44.7" y="755.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.7" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (61 samples, 1.05%)</title><rect x="44.7" y="739.0" width="12.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="47.7" y="750.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (61 samples, 1.05%)</title><rect x="44.7" y="723.0" width="12.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="47.7" y="734.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (61 samples, 1.05%)</title><rect x="44.7" y="707.0" width="12.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="47.7" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (61 samples, 1.05%)</title><rect x="44.7" y="691.0" width="12.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="47.7" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (61 samples, 1.05%)</title><rect x="44.7" y="675.0" width="12.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.7" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (57 samples, 0.99%)</title><rect x="44.7" y="659.0" width="11.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.7" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (56 samples, 0.97%)</title><rect x="44.9" y="643.0" width="11.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (56 samples, 0.97%)</title><rect x="44.9" y="627.0" width="11.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.9" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.319] (2 samples, 0.03%)</title><rect x="44.9" y="611.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="47.9" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (5 samples, 0.09%)</title><rect x="45.5" y="611.0" width="1.0" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="48.5" y="622.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="46.1" y="595.0" width="0.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="49.1" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (46 samples, 0.80%)</title><rect x="46.9" y="611.0" width="9.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="49.9" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.66%)</title><rect x="48.6" y="595.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.6" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.66%)</title><rect x="48.6" y="579.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="51.6" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (38 samples, 0.66%)</title><rect x="48.6" y="563.0" width="7.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="51.6" y="574.0"></text>
</g>
<g>
<title>do_futex (37 samples, 0.64%)</title><rect x="48.6" y="547.0" width="7.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="51.6" y="558.0"></text>
</g>
<g>
<title>futex_wake (36 samples, 0.62%)</title><rect x="48.8" y="531.0" width="7.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="51.8" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="49.6" y="515.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="52.6" y="526.0"></text>
</g>
<g>
<title>wake_up_q (30 samples, 0.52%)</title><rect x="50.0" y="515.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.0" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (30 samples, 0.52%)</title><rect x="50.0" y="499.0" width="6.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="53.0" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (30 samples, 0.52%)</title><rect x="50.0" y="483.0" width="6.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="53.0" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 0.05%)</title><rect x="56.3" y="659.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="59.3" y="670.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.05%)</title><rect x="56.3" y="643.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="59.3" y="654.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title><rect x="56.3" y="627.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="59.3" y="638.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.28%)</title><rect x="57.1" y="819.0" width="3.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="60.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.03%)</title><rect x="58.0" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="61.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="58.0" y="787.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="61.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="58.0" y="771.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="61.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="58.0" y="755.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="61.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.17%)</title><rect x="58.4" y="803.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="61.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.16%)</title><rect x="58.6" y="787.0" width="1.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="61.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="59.8" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="62.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.03%)</title><rect x="59.8" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="62.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.03%)</title><rect x="59.8" y="739.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="62.8" y="750.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="59.8" y="723.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.8" y="734.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="59.8" y="707.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="62.8" y="718.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="59.8" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="62.8" y="702.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="59.8" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="62.8" y="686.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="59.8" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.8" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (4 samples, 0.07%)</title><rect x="60.4" y="819.0" width="0.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="63.4" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (2 samples, 0.03%)</title><rect x="60.6" y="803.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="63.6" y="814.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="60.6" y="787.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="63.6" y="798.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="60.6" y="771.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="63.6" y="782.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="60.6" y="755.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="63.6" y="766.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="60.6" y="739.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="63.6" y="750.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="60.6" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="63.6" y="734.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="60.6" y="707.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.6" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.09%)</title><rect x="61.4" y="819.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="64.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.09%)</title><rect x="61.4" y="803.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="64.4" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (71 samples, 1.23%)</title><rect x="62.6" y="835.0" width="14.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="65.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (70 samples, 1.21%)</title><rect x="62.6" y="819.0" width="14.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="65.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.35%)</title><rect x="63.3" y="803.0" width="4.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="66.3" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.35%)</title><rect x="63.3" y="787.0" width="4.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="66.3" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.28%)</title><rect x="63.3" y="771.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="66.3" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="63.7" y="755.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="66.7" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="64.5" y="755.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="67.5" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.14%)</title><rect x="64.9" y="755.0" width="1.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="67.9" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.05%)</title><rect x="65.5" y="739.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="68.5" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="66.1" y="739.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="69.1" y="750.0"></text>
</g>
<g>
<title>recv (3 samples, 0.05%)</title><rect x="66.7" y="771.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="69.7" y="782.0"></text>
</g>
<g>
<title>recv (47 samples, 0.81%)</title><rect x="67.3" y="803.0" width="9.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="70.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.66%)</title><rect x="69.2" y="787.0" width="7.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="72.2" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 0.66%)</title><rect x="69.2" y="771.0" width="7.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="72.2" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (36 samples, 0.62%)</title><rect x="69.6" y="755.0" width="7.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="72.6" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (33 samples, 0.57%)</title><rect x="69.6" y="739.0" width="6.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="72.6" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (26 samples, 0.45%)</title><rect x="70.2" y="723.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="73.2" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (16 samples, 0.28%)</title><rect x="70.4" y="707.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="73.4" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (15 samples, 0.26%)</title><rect x="70.6" y="691.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="73.6" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.14%)</title><rect x="71.4" y="675.0" width="1.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="74.4" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.12%)</title><rect x="71.6" y="659.0" width="1.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="74.6" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.09%)</title><rect x="72.0" y="643.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="75.0" y="654.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="72.0" y="627.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="75.0" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.05%)</title><rect x="72.4" y="627.0" width="0.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="75.4" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.05%)</title><rect x="72.4" y="611.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="75.4" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (9 samples, 0.16%)</title><rect x="73.7" y="707.0" width="1.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="76.7" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (9 samples, 0.16%)</title><rect x="73.7" y="691.0" width="1.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.7" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (9 samples, 0.16%)</title><rect x="73.7" y="675.0" width="1.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="76.7" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (8 samples, 0.14%)</title><rect x="73.9" y="659.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="76.9" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.09%)</title><rect x="74.5" y="643.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="77.5" y="654.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.03%)</title><rect x="74.7" y="627.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="77.7" y="638.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="75.1" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="78.1" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="75.5" y="723.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="78.5" y="734.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="75.5" y="707.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="78.5" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="75.5" y="691.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="78.5" y="702.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.07%)</title><rect x="75.5" y="675.0" width="0.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="78.5" y="686.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.03%)</title><rect x="76.3" y="739.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="79.3" y="750.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.03%)</title><rect x="77.1" y="851.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="80.1" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=798] (331 samples, 5.72%)</title><rect x="77.5" y="899.0" width="67.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="80.5" y="910.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (330 samples, 5.71%)</title><rect x="77.7" y="883.0" width="67.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="80.7" y="894.0">one/nio..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.05%)</title><rect x="80.2" y="867.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="83.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (122 samples, 2.11%)</title><rect x="81.0" y="867.0" width="24.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="84.0" y="878.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (6 samples, 0.10%)</title><rect x="81.6" y="851.0" width="1.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="84.6" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (4 samples, 0.07%)</title><rect x="82.0" y="835.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="85.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (113 samples, 1.95%)</title><rect x="82.8" y="851.0" width="23.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.8" y="862.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.05%)</title><rect x="84.7" y="835.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="87.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (95 samples, 1.64%)</title><rect x="85.3" y="835.0" width="19.4" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="88.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="85.3" y="819.0" width="0.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="88.3" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="85.3" y="803.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="88.3" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (5 samples, 0.09%)</title><rect x="85.9" y="819.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="88.9" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="87.1" y="819.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="90.1" y="830.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="87.5" y="819.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="90.5" y="830.0"></text>
</g>
<g>
<title>epoll_wait (81 samples, 1.40%)</title><rect x="88.1" y="819.0" width="16.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="91.1" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (59 samples, 1.02%)</title><rect x="92.6" y="803.0" width="12.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="95.6" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.00%)</title><rect x="92.8" y="787.0" width="11.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="95.8" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (55 samples, 0.95%)</title><rect x="93.5" y="771.0" width="11.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="96.5" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (53 samples, 0.92%)</title><rect x="93.5" y="755.0" width="10.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.5" y="766.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="93.9" y="739.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="96.9" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="93.9" y="723.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="96.9" y="734.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="93.9" y="707.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="96.9" y="718.0"></text>
</g>
<g>
<title>ep_poll (46 samples, 0.80%)</title><rect x="94.3" y="739.0" width="9.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="97.3" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (17 samples, 0.29%)</title><rect x="95.3" y="723.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="98.3" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.19%)</title><rect x="96.3" y="707.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="99.3" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (3 samples, 0.05%)</title><rect x="97.3" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.3" y="702.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.05%)</title><rect x="97.3" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="100.3" y="686.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.03%)</title><rect x="97.5" y="659.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.5" y="670.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.05%)</title><rect x="97.9" y="691.0" width="0.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="100.9" y="702.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="98.8" y="723.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="101.8" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (22 samples, 0.38%)</title><rect x="99.2" y="723.0" width="4.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="102.2" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (22 samples, 0.38%)</title><rect x="99.2" y="707.0" width="4.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="102.2" y="718.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.36%)</title><rect x="99.4" y="691.0" width="4.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="102.4" y="702.0"></text>
</g>
<g>
<title>__schedule (21 samples, 0.36%)</title><rect x="99.4" y="675.0" width="4.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="102.4" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.33%)</title><rect x="99.8" y="659.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="102.8" y="670.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="103.7" y="739.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="106.7" y="750.0"></text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="104.3" y="755.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="107.3" y="766.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.07%)</title><rect x="104.7" y="835.0" width="0.8" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="107.7" y="846.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.03%)</title><rect x="105.5" y="835.0" width="0.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="108.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (192 samples, 3.32%)</title><rect x="105.9" y="867.0" width="39.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="108.9" y="878.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (191 samples, 3.30%)</title><rect x="106.1" y="851.0" width="39.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="109.1" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (125 samples, 2.16%)</title><rect x="106.1" y="835.0" width="25.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="109.1" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (95 samples, 1.64%)</title><rect x="106.5" y="819.0" width="19.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="109.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (95 samples, 1.64%)</title><rect x="106.5" y="803.0" width="19.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="109.5" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (93 samples, 1.61%)</title><rect x="106.9" y="787.0" width="19.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="109.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.03%)</title><rect x="106.9" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="109.9" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="106.9" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="109.9" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.07%)</title><rect x="107.3" y="771.0" width="0.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="110.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="107.3" y="755.0" width="0.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="110.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="107.3" y="739.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="110.3" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="107.5" y="723.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="110.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (87 samples, 1.50%)</title><rect x="108.1" y="771.0" width="17.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="108.4" y="755.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.05%)</title><rect x="108.4" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="111.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="108.4" y="723.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.4" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="108.4" y="707.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="111.4" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.05%)</title><rect x="108.4" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.4" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="108.4" y="675.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="111.4" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.05%)</title><rect x="108.4" y="659.0" width="0.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.4" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (3 samples, 0.05%)</title><rect x="108.4" y="643.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.4" y="654.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.09%)</title><rect x="109.0" y="755.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.0" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (4 samples, 0.07%)</title><rect x="109.2" y="739.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="112.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="109.2" y="723.0" width="0.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (4 samples, 0.07%)</title><rect x="109.2" y="707.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="112.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="109.2" y="691.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.2" y="702.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (78 samples, 1.35%)</title><rect x="110.0" y="755.0" width="15.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (78 samples, 1.35%)</title><rect x="110.0" y="739.0" width="15.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="113.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (78 samples, 1.35%)</title><rect x="110.0" y="723.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.0" y="734.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (78 samples, 1.35%)</title><rect x="110.0" y="707.0" width="15.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="113.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (78 samples, 1.35%)</title><rect x="110.0" y="691.0" width="15.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (78 samples, 1.35%)</title><rect x="110.0" y="675.0" width="15.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="113.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (76 samples, 1.31%)</title><rect x="110.0" y="659.0" width="15.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="113.0" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (76 samples, 1.31%)</title><rect x="110.0" y="643.0" width="15.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="113.0" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (76 samples, 1.31%)</title><rect x="110.0" y="627.0" width="15.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="113.0" y="638.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="110.0" y="611.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="113.0" y="622.0"></text>
</g>
<g>
<title>Unsafe_Unpark (19 samples, 0.33%)</title><rect x="110.4" y="611.0" width="3.9" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="113.4" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="111.6" y="595.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="114.6" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::~ThreadsListHandle() (2 samples, 0.03%)</title><rect x="112.0" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="115.0" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (6 samples, 0.10%)</title><rect x="112.4" y="595.0" width="1.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="115.4" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="113.7" y="595.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="116.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="114.3" y="611.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="117.3" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (52 samples, 0.90%)</title><rect x="114.9" y="611.0" width="10.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="117.9" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (42 samples, 0.73%)</title><rect x="116.9" y="595.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="119.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.73%)</title><rect x="116.9" y="579.0" width="8.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="119.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (41 samples, 0.71%)</title><rect x="116.9" y="563.0" width="8.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="119.9" y="574.0"></text>
</g>
<g>
<title>do_futex (41 samples, 0.71%)</title><rect x="116.9" y="547.0" width="8.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="119.9" y="558.0"></text>
</g>
<g>
<title>futex_wake (41 samples, 0.71%)</title><rect x="116.9" y="531.0" width="8.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="119.9" y="542.0"></text>
</g>
<g>
<title>wake_up_q (36 samples, 0.62%)</title><rect x="117.9" y="515.0" width="7.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="120.9" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (35 samples, 0.61%)</title><rect x="118.1" y="499.0" width="7.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="121.1" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (35 samples, 0.61%)</title><rect x="118.1" y="483.0" width="7.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="121.1" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.03%)</title><rect x="125.5" y="659.0" width="0.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="128.5" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (11 samples, 0.19%)</title><rect x="125.9" y="819.0" width="2.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.05%)</title><rect x="127.1" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="130.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="127.3" y="787.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="127.3" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="130.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="127.3" y="755.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="130.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (8 samples, 0.14%)</title><rect x="128.1" y="819.0" width="1.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="131.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.09%)</title><rect x="128.1" y="803.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="131.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (5 samples, 0.09%)</title><rect x="128.1" y="787.0" width="1.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="131.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="128.8" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="131.8" y="782.0"></text>
</g>
<g>
<title>java/lang/Character.digit (2 samples, 0.03%)</title><rect x="128.8" y="755.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.8" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.digit (2 samples, 0.03%)</title><rect x="128.8" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="131.8" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (2 samples, 0.03%)</title><rect x="129.4" y="803.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="132.4" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.09%)</title><rect x="129.8" y="819.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="132.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="130.0" y="803.0" width="0.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="133.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="130.4" y="787.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="133.4" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.03%)</title><rect x="130.4" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.03%)</title><rect x="130.4" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="133.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.07%)</title><rect x="130.8" y="819.0" width="0.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="133.8" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="131.0" y="803.0" width="0.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="134.0" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (66 samples, 1.14%)</title><rect x="131.6" y="835.0" width="13.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="134.6" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (66 samples, 1.14%)</title><rect x="131.6" y="819.0" width="13.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="134.6" y="830.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.21%)</title><rect x="132.2" y="803.0" width="2.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="135.2" y="814.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.21%)</title><rect x="132.2" y="787.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="135.2" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 0.21%)</title><rect x="132.2" y="771.0" width="2.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="135.2" y="782.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.07%)</title><rect x="132.4" y="755.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="135.4" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.10%)</title><rect x="133.4" y="755.0" width="1.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="136.4" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="134.3" y="739.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="137.3" y="750.0"></text>
</g>
<g>
<title>recv (51 samples, 0.88%)</title><rect x="134.7" y="803.0" width="10.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="137.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (43 samples, 0.74%)</title><rect x="136.3" y="787.0" width="8.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="139.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 0.73%)</title><rect x="136.5" y="771.0" width="8.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="139.5" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (40 samples, 0.69%)</title><rect x="136.9" y="755.0" width="8.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="139.9" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (38 samples, 0.66%)</title><rect x="136.9" y="739.0" width="7.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="139.9" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (32 samples, 0.55%)</title><rect x="137.5" y="723.0" width="6.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="140.5" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (20 samples, 0.35%)</title><rect x="137.5" y="707.0" width="4.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.5" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (19 samples, 0.33%)</title><rect x="137.7" y="691.0" width="3.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="140.7" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.12%)</title><rect x="140.0" y="675.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="143.0" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.10%)</title><rect x="140.0" y="659.0" width="1.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="143.0" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.10%)</title><rect x="140.0" y="643.0" width="1.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="143.0" y="654.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.05%)</title><rect x="140.0" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="143.0" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.03%)</title><rect x="140.8" y="627.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.8" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.03%)</title><rect x="140.8" y="611.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="143.8" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.21%)</title><rect x="141.6" y="707.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="144.6" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (12 samples, 0.21%)</title><rect x="141.6" y="691.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="144.6" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.21%)</title><rect x="141.6" y="675.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="144.6" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (12 samples, 0.21%)</title><rect x="141.6" y="659.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="144.6" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.05%)</title><rect x="143.2" y="643.0" width="0.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="146.2" y="654.0"></text>
</g>
<g>
<title>aa_label_next_confined (2 samples, 0.03%)</title><rect x="143.4" y="627.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="146.4" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="144.1" y="723.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="147.1" y="734.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="144.1" y="707.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="147.1" y="718.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="144.1" y="691.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="147.1" y="702.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="144.3" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="147.3" y="686.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=799] (330 samples, 5.71%)</title><rect x="145.1" y="899.0" width="67.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="148.1" y="910.0">[NIO Se..</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.03%)</title><rect x="145.1" y="883.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="148.1" y="894.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="145.1" y="867.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="148.1" y="878.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="145.1" y="851.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="148.1" y="862.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="145.1" y="835.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="148.1" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (328 samples, 5.67%)</title><rect x="145.5" y="883.0" width="66.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="148.5" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (8 samples, 0.14%)</title><rect x="149.0" y="867.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="152.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (7 samples, 0.12%)</title><rect x="149.2" y="851.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (116 samples, 2.01%)</title><rect x="150.6" y="867.0" width="23.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="153.6" y="878.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.05%)</title><rect x="151.0" y="851.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (3 samples, 0.05%)</title><rect x="151.0" y="835.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="154.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (111 samples, 1.92%)</title><rect x="151.6" y="851.0" width="22.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="154.6" y="862.0">o..</text>
</g>
<g>
<title>[unknown] (88 samples, 1.52%)</title><rect x="153.9" y="835.0" width="17.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="156.9" y="846.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.05%)</title><rect x="153.9" y="819.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="156.9" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="154.1" y="803.0" width="0.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="157.1" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="154.7" y="819.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="157.7" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.03%)</title><rect x="155.3" y="819.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="158.3" y="830.0"></text>
</g>
<g>
<title>epoll_wait (78 samples, 1.35%)</title><rect x="155.9" y="819.0" width="15.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="158.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (61 samples, 1.05%)</title><rect x="159.4" y="803.0" width="12.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="162.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (60 samples, 1.04%)</title><rect x="159.6" y="787.0" width="12.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="162.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (60 samples, 1.04%)</title><rect x="159.6" y="771.0" width="12.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="162.6" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (59 samples, 1.02%)</title><rect x="159.8" y="755.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="162.8" y="766.0"></text>
</g>
<g>
<title>ep_poll (54 samples, 0.93%)</title><rect x="160.2" y="739.0" width="11.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="163.2" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (30 samples, 0.52%)</title><rect x="161.0" y="723.0" width="6.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="164.0" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (19 samples, 0.33%)</title><rect x="162.8" y="707.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="165.8" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (13 samples, 0.22%)</title><rect x="163.6" y="691.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="166.6" y="702.0"></text>
</g>
<g>
<title>sock_poll (10 samples, 0.17%)</title><rect x="164.1" y="675.0" width="2.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="167.1" y="686.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.10%)</title><rect x="164.9" y="659.0" width="1.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="167.9" y="670.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.03%)</title><rect x="166.3" y="691.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="169.3" y="702.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (20 samples, 0.35%)</title><rect x="167.1" y="723.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="170.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (20 samples, 0.35%)</title><rect x="167.1" y="707.0" width="4.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="170.1" y="718.0"></text>
</g>
<g>
<title>schedule (19 samples, 0.33%)</title><rect x="167.3" y="691.0" width="3.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="170.3" y="702.0"></text>
</g>
<g>
<title>__schedule (19 samples, 0.33%)</title><rect x="167.3" y="675.0" width="3.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="170.3" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (18 samples, 0.31%)</title><rect x="167.5" y="659.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="170.5" y="670.0"></text>
</g>
<g>
<title>fput (3 samples, 0.05%)</title><rect x="171.2" y="739.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="174.2" y="750.0"></text>
</g>
<g>
<title>_init (3 samples, 0.05%)</title><rect x="171.8" y="835.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="174.8" y="846.0"></text>
</g>
<g>
<title>clock_gettime (7 samples, 0.12%)</title><rect x="172.4" y="835.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="175.4" y="846.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.03%)</title><rect x="173.8" y="835.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="176.8" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (187 samples, 3.23%)</title><rect x="174.3" y="867.0" width="38.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="177.3" y="878.0">one..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="174.7" y="851.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="177.7" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (180 samples, 3.11%)</title><rect x="175.1" y="851.0" width="36.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="178.1" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (122 samples, 2.11%)</title><rect x="175.1" y="835.0" width="24.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="178.1" y="846.0">o..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="175.9" y="819.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="178.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (85 samples, 1.47%)</title><rect x="176.3" y="819.0" width="17.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="179.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (85 samples, 1.47%)</title><rect x="176.3" y="803.0" width="17.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="179.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (2 samples, 0.03%)</title><rect x="176.5" y="787.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="179.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (82 samples, 1.42%)</title><rect x="176.9" y="787.0" width="16.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="179.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.03%)</title><rect x="176.9" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="179.9" y="782.0"></text>
</g>
<g>
<title>java/lang/String.coder (2 samples, 0.03%)</title><rect x="176.9" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="179.9" y="766.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="176.9" y="739.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="179.9" y="750.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.07%)</title><rect x="177.3" y="771.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="180.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.03%)</title><rect x="177.7" y="755.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="180.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (74 samples, 1.28%)</title><rect x="178.5" y="771.0" width="15.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="181.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.03%)</title><rect x="178.5" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="181.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encode (2 samples, 0.03%)</title><rect x="178.5" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="181.5" y="750.0"></text>
</g>
<g>
<title>java/lang/StringCoding.encodeUTF8 (2 samples, 0.03%)</title><rect x="178.5" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="181.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.07%)</title><rect x="179.2" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="182.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.03%)</title><rect x="179.6" y="739.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="182.6" y="750.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="179.6" y="723.0" width="0.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="182.6" y="734.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="179.6" y="707.0" width="0.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="182.6" y="718.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="179.6" y="691.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="182.6" y="702.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (67 samples, 1.16%)</title><rect x="180.0" y="755.0" width="13.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="183.0" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (67 samples, 1.16%)</title><rect x="180.0" y="739.0" width="13.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="183.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (67 samples, 1.16%)</title><rect x="180.0" y="723.0" width="13.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="183.0" y="734.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (67 samples, 1.16%)</title><rect x="180.0" y="707.0" width="13.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="183.0" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (67 samples, 1.16%)</title><rect x="180.0" y="691.0" width="13.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="183.0" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (67 samples, 1.16%)</title><rect x="180.0" y="675.0" width="13.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.0" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (61 samples, 1.05%)</title><rect x="180.4" y="659.0" width="12.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="183.4" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (61 samples, 1.05%)</title><rect x="180.4" y="643.0" width="12.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="183.4" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (61 samples, 1.05%)</title><rect x="180.4" y="627.0" width="12.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="183.4" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.22%)</title><rect x="181.0" y="611.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="184.0" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="181.4" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="184.4" y="606.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (2 samples, 0.03%)</title><rect x="181.8" y="595.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="184.8" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="182.2" y="595.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="185.2" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (3 samples, 0.05%)</title><rect x="182.6" y="595.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="185.6" y="606.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (2 samples, 0.03%)</title><rect x="183.2" y="595.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="186.2" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (44 samples, 0.76%)</title><rect x="183.8" y="611.0" width="9.0" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="186.8" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (39 samples, 0.67%)</title><rect x="184.9" y="595.0" width="7.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="187.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 0.67%)</title><rect x="184.9" y="579.0" width="7.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="187.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (38 samples, 0.66%)</title><rect x="185.1" y="563.0" width="7.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="188.1" y="574.0"></text>
</g>
<g>
<title>do_futex (38 samples, 0.66%)</title><rect x="185.1" y="547.0" width="7.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="188.1" y="558.0"></text>
</g>
<g>
<title>futex_wake (37 samples, 0.64%)</title><rect x="185.1" y="531.0" width="7.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="188.1" y="542.0"></text>
</g>
<g>
<title>mark_wake_futex (2 samples, 0.03%)</title><rect x="185.7" y="515.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="188.7" y="526.0"></text>
</g>
<g>
<title>wake_up_q (31 samples, 0.54%)</title><rect x="186.3" y="515.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="189.3" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (31 samples, 0.54%)</title><rect x="186.3" y="499.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="189.3" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 0.54%)</title><rect x="186.3" y="483.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="189.3" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.03%)</title><rect x="193.0" y="659.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="196.0" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (15 samples, 0.26%)</title><rect x="193.6" y="819.0" width="3.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="196.6" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.05%)</title><rect x="195.1" y="803.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="198.1" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.05%)</title><rect x="195.1" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="195.3" y="771.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="198.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.03%)</title><rect x="195.3" y="755.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="198.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.09%)</title><rect x="195.7" y="803.0" width="1.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="198.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.09%)</title><rect x="195.7" y="787.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="198.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.09%)</title><rect x="196.7" y="819.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="199.7" y="830.0"></text>
</g>
<g>
<title>page_fault (3 samples, 0.05%)</title><rect x="197.1" y="803.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.1" y="814.0"></text>
</g>
<g>
<title>do_page_fault (3 samples, 0.05%)</title><rect x="197.1" y="787.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="200.1" y="798.0"></text>
</g>
<g>
<title>__do_page_fault (3 samples, 0.05%)</title><rect x="197.1" y="771.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (4 samples, 0.07%)</title><rect x="197.7" y="819.0" width="0.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.7" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="197.7" y="803.0" width="0.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="200.7" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (7 samples, 0.12%)</title><rect x="198.5" y="819.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="201.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.10%)</title><rect x="198.7" y="803.0" width="1.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="201.7" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (58 samples, 1.00%)</title><rect x="200.0" y="835.0" width="11.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="203.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (58 samples, 1.00%)</title><rect x="200.0" y="819.0" width="11.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="203.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.26%)</title><rect x="200.6" y="803.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="203.6" y="814.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.26%)</title><rect x="200.6" y="787.0" width="3.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="203.6" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (13 samples, 0.22%)</title><rect x="200.6" y="771.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="203.6" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="200.8" y="755.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="203.8" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (6 samples, 0.10%)</title><rect x="201.4" y="755.0" width="1.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="204.4" y="766.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.05%)</title><rect x="201.8" y="739.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="204.8" y="750.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.05%)</title><rect x="202.6" y="755.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="205.6" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.03%)</title><rect x="203.2" y="771.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="206.2" y="782.0"></text>
</g>
<g>
<title>recv (40 samples, 0.69%)</title><rect x="203.6" y="803.0" width="8.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="206.6" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 0.66%)</title><rect x="204.0" y="787.0" width="7.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="207.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.03%)</title><rect x="204.0" y="771.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="207.0" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 0.62%)</title><rect x="204.5" y="771.0" width="7.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="207.5" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (32 samples, 0.55%)</title><rect x="205.3" y="755.0" width="6.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="208.3" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (31 samples, 0.54%)</title><rect x="205.3" y="739.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="208.3" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (28 samples, 0.48%)</title><rect x="205.3" y="723.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="208.3" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (19 samples, 0.33%)</title><rect x="205.3" y="707.0" width="3.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="208.3" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (19 samples, 0.33%)</title><rect x="205.3" y="691.0" width="3.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="208.3" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.07%)</title><rect x="205.7" y="675.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="208.7" y="686.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.05%)</title><rect x="205.7" y="659.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="208.7" y="670.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.03%)</title><rect x="205.9" y="643.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="208.9" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (8 samples, 0.14%)</title><rect x="207.1" y="675.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="210.1" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.14%)</title><rect x="207.1" y="659.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="210.1" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.14%)</title><rect x="207.1" y="643.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.1" y="654.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.07%)</title><rect x="207.1" y="627.0" width="0.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="210.1" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="207.5" y="611.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="210.5" y="622.0"></text>
</g>
<g>
<title>_copy_to_iter (4 samples, 0.07%)</title><rect x="207.9" y="627.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="210.9" y="638.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (4 samples, 0.07%)</title><rect x="207.9" y="611.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="210.9" y="622.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.03%)</title><rect x="208.7" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="211.7" y="686.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.03%)</title><rect x="208.7" y="659.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.7" y="670.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.03%)</title><rect x="208.7" y="643.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="211.7" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.14%)</title><rect x="209.1" y="707.0" width="1.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="212.1" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (7 samples, 0.12%)</title><rect x="209.4" y="691.0" width="1.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="212.4" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.12%)</title><rect x="209.4" y="675.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="212.4" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.12%)</title><rect x="209.4" y="659.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="212.4" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (4 samples, 0.07%)</title><rect x="210.0" y="643.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="213.0" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="211.0" y="723.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="214.0" y="734.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.03%)</title><rect x="211.0" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="214.0" y="718.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="211.0" y="691.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="214.0" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.05%)</title><rect x="211.8" y="851.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="214.8" y="862.0"></text>
</g>
<g>
<title>gettimeofday (3 samples, 0.05%)</title><rect x="211.8" y="835.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="214.8" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=800] (326 samples, 5.64%)</title><rect x="212.4" y="899.0" width="66.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="215.4" y="910.0">[NIO Se..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (323 samples, 5.59%)</title><rect x="213.0" y="883.0" width="65.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="216.0" y="894.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.05%)</title><rect x="215.1" y="867.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="218.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.05%)</title><rect x="215.1" y="851.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="218.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (106 samples, 1.83%)</title><rect x="215.7" y="867.0" width="21.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.7" y="878.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (2 samples, 0.03%)</title><rect x="216.1" y="851.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (102 samples, 1.76%)</title><rect x="216.5" y="851.0" width="20.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="219.5" y="862.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.07%)</title><rect x="217.5" y="835.0" width="0.8" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="220.5" y="846.0"></text>
</g>
<g>
<title>[unknown] (88 samples, 1.52%)</title><rect x="218.3" y="835.0" width="18.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="221.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.07%)</title><rect x="218.3" y="819.0" width="0.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="221.3" y="830.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="218.5" y="803.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="221.5" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.05%)</title><rect x="219.1" y="819.0" width="0.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="222.1" y="830.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.07%)</title><rect x="219.8" y="819.0" width="0.8" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="222.8" y="830.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.05%)</title><rect x="220.6" y="819.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="223.6" y="830.0"></text>
</g>
<g>
<title>epoll_wait (74 samples, 1.28%)</title><rect x="221.2" y="819.0" width="15.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="224.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 1.00%)</title><rect x="224.5" y="803.0" width="11.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="227.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (58 samples, 1.00%)</title><rect x="224.5" y="787.0" width="11.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="227.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (55 samples, 0.95%)</title><rect x="225.1" y="771.0" width="11.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="228.1" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (54 samples, 0.93%)</title><rect x="225.1" y="755.0" width="11.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="228.1" y="766.0"></text>
</g>
<g>
<title>ep_poll (47 samples, 0.81%)</title><rect x="225.5" y="739.0" width="9.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="228.5" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (23 samples, 0.40%)</title><rect x="227.3" y="723.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="230.3" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.19%)</title><rect x="229.6" y="707.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="232.6" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (8 samples, 0.14%)</title><rect x="230.2" y="691.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="233.2" y="702.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.12%)</title><rect x="230.4" y="675.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="233.4" y="686.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.05%)</title><rect x="230.8" y="659.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="233.8" y="670.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="231.4" y="659.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="234.4" y="670.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.03%)</title><rect x="232.0" y="723.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="235.0" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (13 samples, 0.22%)</title><rect x="232.4" y="723.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="235.4" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (13 samples, 0.22%)</title><rect x="232.4" y="707.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="235.4" y="718.0"></text>
</g>
<g>
<title>schedule (13 samples, 0.22%)</title><rect x="232.4" y="691.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="235.4" y="702.0"></text>
</g>
<g>
<title>__schedule (13 samples, 0.22%)</title><rect x="232.4" y="675.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="235.4" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.19%)</title><rect x="232.8" y="659.0" width="2.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="235.8" y="670.0"></text>
</g>
<g>
<title>fput (4 samples, 0.07%)</title><rect x="235.3" y="739.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="238.3" y="750.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.03%)</title><rect x="236.3" y="835.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="239.3" y="846.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.05%)</title><rect x="236.7" y="835.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="239.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (204 samples, 3.53%)</title><rect x="237.3" y="867.0" width="41.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="240.3" y="878.0">one..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="238.1" y="851.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="241.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (198 samples, 3.42%)</title><rect x="238.5" y="851.0" width="40.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="241.5" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (132 samples, 2.28%)</title><rect x="238.7" y="835.0" width="27.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="241.7" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (105 samples, 1.82%)</title><rect x="239.3" y="819.0" width="21.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="242.3" y="830.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (105 samples, 1.82%)</title><rect x="239.3" y="803.0" width="21.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="242.3" y="814.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (5 samples, 0.09%)</title><rect x="239.3" y="787.0" width="1.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="242.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.03%)</title><rect x="240.4" y="787.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="243.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.03%)</title><rect x="240.4" y="771.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="243.4" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (2 samples, 0.03%)</title><rect x="240.4" y="755.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="243.4" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.03%)</title><rect x="240.8" y="787.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="243.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="240.8" y="771.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="243.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.03%)</title><rect x="240.8" y="755.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="243.8" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.handleDefault (96 samples, 1.66%)</title><rect x="241.2" y="787.0" width="19.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="244.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (4 samples, 0.07%)</title><rect x="241.4" y="771.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="244.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (3 samples, 0.05%)</title><rect x="241.6" y="755.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="244.6" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (4 samples, 0.07%)</title><rect x="242.2" y="771.0" width="0.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="245.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.07%)</title><rect x="242.2" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="245.2" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.07%)</title><rect x="242.2" y="739.0" width="0.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="245.2" y="750.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.05%)</title><rect x="242.2" y="723.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="245.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.entity (86 samples, 1.49%)</title><rect x="243.2" y="771.0" width="17.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="246.2" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.03%)</title><rect x="243.2" y="755.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="246.2" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.03%)</title><rect x="243.2" y="739.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="246.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.get$Lambda (2 samples, 0.03%)</title><rect x="243.2" y="723.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="246.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.&lt;init&gt; (2 samples, 0.03%)</title><rect x="243.2" y="707.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="246.2" y="718.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="243.2" y="691.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="246.2" y="702.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="243.2" y="675.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="246.2" y="686.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="243.2" y="659.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="246.2" y="670.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="243.2" y="643.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="246.2" y="654.0"></text>
</g>
<g>
<title>__handle_mm_fault (2 samples, 0.03%)</title><rect x="243.2" y="627.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="246.2" y="638.0"></text>
</g>
<g>
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="243.2" y="611.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="246.2" y="622.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (3 samples, 0.05%)</title><rect x="243.8" y="755.0" width="0.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="246.8" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.03%)</title><rect x="244.0" y="739.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="247.0" y="750.0"></text>
</g>
<g>
<title>one/nio/server/Server.asyncExecute (80 samples, 1.38%)</title><rect x="244.4" y="755.0" width="16.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="247.4" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (80 samples, 1.38%)</title><rect x="244.4" y="739.0" width="16.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.4" y="750.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (80 samples, 1.38%)</title><rect x="244.4" y="723.0" width="16.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="247.4" y="734.0"></text>
</g>
<g>
<title>one/nio/server/WorkerPool$WaitingSynchronousQueue.offer (80 samples, 1.38%)</title><rect x="244.4" y="707.0" width="16.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="247.4" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.offer (80 samples, 1.38%)</title><rect x="244.4" y="691.0" width="16.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.4" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (80 samples, 1.38%)</title><rect x="244.4" y="675.0" width="16.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="247.4" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (73 samples, 1.26%)</title><rect x="245.5" y="659.0" width="14.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="248.5" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (71 samples, 1.23%)</title><rect x="245.9" y="643.0" width="14.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="248.9" y="654.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (71 samples, 1.23%)</title><rect x="245.9" y="627.0" width="14.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="248.9" y="638.0"></text>
</g>
<g>
<title>Unsafe_Unpark (13 samples, 0.22%)</title><rect x="246.1" y="611.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="249.1" y="622.0"></text>
</g>
<g>
<title>ThreadsListHandle::ThreadsListHandle(Thread*) (2 samples, 0.03%)</title><rect x="246.7" y="595.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="249.7" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.07%)</title><rect x="247.3" y="595.0" width="0.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="250.3" y="606.0"></text>
</g>
<g>
<title>java_lang_Thread::thread(oopDesc*) (2 samples, 0.03%)</title><rect x="248.1" y="595.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="251.1" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="248.7" y="611.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="251.7" y="622.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (54 samples, 0.93%)</title><rect x="249.3" y="611.0" width="11.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="252.3" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (47 samples, 0.81%)</title><rect x="250.8" y="595.0" width="9.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.8" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (46 samples, 0.80%)</title><rect x="251.0" y="579.0" width="9.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="254.0" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (45 samples, 0.78%)</title><rect x="251.2" y="563.0" width="9.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="254.2" y="574.0"></text>
</g>
<g>
<title>do_futex (45 samples, 0.78%)</title><rect x="251.2" y="547.0" width="9.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="254.2" y="558.0"></text>
</g>
<g>
<title>futex_wake (43 samples, 0.74%)</title><rect x="251.4" y="531.0" width="8.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="254.4" y="542.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="251.6" y="515.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="254.6" y="526.0"></text>
</g>
<g>
<title>wake_up_q (39 samples, 0.67%)</title><rect x="252.2" y="515.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="255.2" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (39 samples, 0.67%)</title><rect x="252.2" y="499.0" width="8.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.2" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (39 samples, 0.67%)</title><rect x="252.2" y="483.0" width="8.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="255.2" y="494.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (2 samples, 0.03%)</title><rect x="260.4" y="659.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.28%)</title><rect x="260.8" y="819.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="263.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (6 samples, 0.10%)</title><rect x="262.2" y="803.0" width="1.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.09%)</title><rect x="262.4" y="787.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="265.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (5 samples, 0.09%)</title><rect x="262.4" y="771.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="265.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (4 samples, 0.07%)</title><rect x="262.6" y="755.0" width="0.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="265.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="263.4" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="266.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.05%)</title><rect x="263.4" y="787.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="266.4" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.05%)</title><rect x="264.0" y="819.0" width="0.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="267.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="264.9" y="819.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.9" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.03%)</title><rect x="264.9" y="803.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="267.9" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (65 samples, 1.12%)</title><rect x="265.7" y="835.0" width="13.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="268.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (64 samples, 1.11%)</title><rect x="265.7" y="819.0" width="13.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="268.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.35%)</title><rect x="267.1" y="803.0" width="4.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="270.1" y="814.0"></text>
</g>
<g>
<title>[unknown] (20 samples, 0.35%)</title><rect x="267.1" y="787.0" width="4.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="270.1" y="798.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.24%)</title><rect x="267.1" y="771.0" width="2.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="270.1" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="268.1" y="755.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="271.1" y="766.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="268.5" y="755.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="271.5" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.07%)</title><rect x="269.1" y="755.0" width="0.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="272.1" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="269.1" y="739.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="272.1" y="750.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.03%)</title><rect x="269.5" y="739.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="272.5" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="270.0" y="771.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="273.0" y="782.0"></text>
</g>
<g>
<title>recv (3 samples, 0.05%)</title><rect x="270.6" y="771.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="273.6" y="782.0"></text>
</g>
<g>
<title>recv (37 samples, 0.64%)</title><rect x="271.2" y="803.0" width="7.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="274.2" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.52%)</title><rect x="272.6" y="787.0" width="6.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="275.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.03%)</title><rect x="272.6" y="771.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.6" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (28 samples, 0.48%)</title><rect x="273.0" y="771.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="276.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (25 samples, 0.43%)</title><rect x="273.6" y="755.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.6" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (25 samples, 0.43%)</title><rect x="273.6" y="739.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="276.6" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (20 samples, 0.35%)</title><rect x="273.8" y="723.0" width="4.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="276.8" y="734.0"></text>
</g>
<g>
<title>inet_recvmsg (13 samples, 0.22%)</title><rect x="273.8" y="707.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="276.8" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.22%)</title><rect x="273.8" y="691.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="276.8" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="274.0" y="675.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="277.0" y="686.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.03%)</title><rect x="274.0" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="277.0" y="670.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.03%)</title><rect x="274.0" y="643.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="277.0" y="654.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="274.9" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="277.9" y="686.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="274.9" y="659.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="277.9" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.07%)</title><rect x="275.3" y="675.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="278.3" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.07%)</title><rect x="275.3" y="659.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="278.3" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (4 samples, 0.07%)</title><rect x="275.3" y="643.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="278.3" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.03%)</title><rect x="276.1" y="675.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="279.1" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.12%)</title><rect x="276.5" y="707.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="279.5" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.09%)</title><rect x="276.9" y="691.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="279.9" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.09%)</title><rect x="276.9" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="279.9" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.09%)</title><rect x="276.9" y="659.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="279.9" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.09%)</title><rect x="276.9" y="643.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="279.9" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (4 samples, 0.07%)</title><rect x="277.1" y="627.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="280.1" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="277.9" y="723.0" width="0.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="280.9" y="734.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="277.9" y="707.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="280.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="277.9" y="691.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="280.9" y="702.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="278.1" y="675.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="281.1" y="686.0"></text>
</g>
<g>
<title>[NIO Worker #5 tid=873] (1,070 samples, 18.50%)</title><rect x="278.9" y="899.0" width="218.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="281.9" y="910.0">[NIO Worker #5 tid=873]</text>
</g>
<g>
<title>java/lang/Thread.run (1,069 samples, 18.49%)</title><rect x="279.1" y="883.0" width="218.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="282.1" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,069 samples, 18.49%)</title><rect x="279.1" y="867.0" width="218.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.1" y="878.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,069 samples, 18.49%)</title><rect x="279.1" y="851.0" width="218.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="282.1" y="862.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/lang/Thread.interrupted (7 samples, 0.12%)</title><rect x="284.0" y="835.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.0" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (7 samples, 0.12%)</title><rect x="284.0" y="819.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.0" y="830.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (6 samples, 0.10%)</title><rect x="284.0" y="803.0" width="1.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="287.0" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.03%)</title><rect x="284.4" y="787.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="287.4" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (436 samples, 7.54%)</title><rect x="285.9" y="835.0" width="88.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.9" y="846.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (436 samples, 7.54%)</title><rect x="285.9" y="819.0" width="88.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="288.9" y="830.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (436 samples, 7.54%)</title><rect x="285.9" y="803.0" width="88.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="288.9" y="814.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.tryMatch (2 samples, 0.03%)</title><rect x="286.1" y="787.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="289.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (107 samples, 1.85%)</title><rect x="286.5" y="787.0" width="21.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.5" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (5 samples, 0.09%)</title><rect x="286.7" y="771.0" width="1.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="289.7" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (101 samples, 1.75%)</title><rect x="287.7" y="771.0" width="20.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="290.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (101 samples, 1.75%)</title><rect x="287.7" y="755.0" width="20.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="290.7" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (54 samples, 0.93%)</title><rect x="288.7" y="739.0" width="11.0" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="291.7" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="290.6" y="723.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="293.6" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (8 samples, 0.14%)</title><rect x="291.0" y="723.0" width="1.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="294.0" y="734.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.09%)</title><rect x="291.6" y="707.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="294.6" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (24 samples, 0.42%)</title><rect x="292.6" y="723.0" width="4.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="295.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.22%)</title><rect x="294.8" y="707.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="297.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="294.8" y="691.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="297.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (11 samples, 0.19%)</title><rect x="295.3" y="691.0" width="2.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="298.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.14%)</title><rect x="295.7" y="675.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="298.7" y="686.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.14%)</title><rect x="295.7" y="659.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="298.7" y="670.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.09%)</title><rect x="295.9" y="643.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="298.9" y="654.0"></text>
</g>
<g>
<title>get_futex_key (2 samples, 0.03%)</title><rect x="296.5" y="627.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="299.5" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="297.7" y="723.0" width="0.4" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="300.7" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (5 samples, 0.09%)</title><rect x="298.3" y="723.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="301.3" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.03%)</title><rect x="299.3" y="723.0" width="0.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="302.3" y="734.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.73%)</title><rect x="299.7" y="739.0" width="8.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="302.7" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (40 samples, 0.69%)</title><rect x="299.7" y="723.0" width="8.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="302.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.52%)</title><rect x="301.8" y="707.0" width="6.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="304.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (30 samples, 0.52%)</title><rect x="301.8" y="691.0" width="6.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="304.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (29 samples, 0.50%)</title><rect x="302.0" y="675.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="305.0" y="686.0"></text>
</g>
<g>
<title>do_futex (27 samples, 0.47%)</title><rect x="302.4" y="659.0" width="5.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="305.4" y="670.0"></text>
</g>
<g>
<title>futex_wait (26 samples, 0.45%)</title><rect x="302.6" y="643.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="305.6" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (21 samples, 0.36%)</title><rect x="302.6" y="627.0" width="4.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="305.6" y="638.0"></text>
</g>
<g>
<title>schedule (21 samples, 0.36%)</title><rect x="302.6" y="611.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="305.6" y="622.0"></text>
</g>
<g>
<title>__schedule (20 samples, 0.35%)</title><rect x="302.8" y="595.0" width="4.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="305.8" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (19 samples, 0.33%)</title><rect x="303.0" y="579.0" width="3.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.0" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.05%)</title><rect x="306.9" y="627.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="309.9" y="638.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (5 samples, 0.09%)</title><rect x="308.3" y="787.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="311.3" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (4 samples, 0.07%)</title><rect x="308.5" y="771.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="311.5" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (4 samples, 0.07%)</title><rect x="308.5" y="755.0" width="0.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="311.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (321 samples, 5.55%)</title><rect x="309.3" y="787.0" width="65.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="312.3" y="798.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (313 samples, 5.41%)</title><rect x="311.0" y="771.0" width="63.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="314.0" y="782.0">java/ut..</text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.05%)</title><rect x="374.2" y="755.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="377.2" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="374.2" y="739.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="377.2" y="750.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.05%)</title><rect x="374.2" y="723.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="377.2" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="374.2" y="707.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="377.2" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.05%)</title><rect x="374.2" y="691.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="377.2" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.05%)</title><rect x="374.2" y="675.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="377.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="374.2" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="377.2" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.run (599 samples, 10.36%)</title><rect x="375.0" y="835.0" width="122.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="378.0" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (598 samples, 10.34%)</title><rect x="375.2" y="819.0" width="122.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="378.2" y="830.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (245 samples, 4.24%)</title><rect x="375.4" y="803.0" width="50.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="378.4" y="814.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="376.5" y="787.0" width="0.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="379.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="376.5" y="771.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="379.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="376.5" y="755.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="379.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (234 samples, 4.05%)</title><rect x="376.9" y="787.0" width="47.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="379.9" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.12%)</title><rect x="376.9" y="771.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="379.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.07%)</title><rect x="377.5" y="755.0" width="0.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="380.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="377.9" y="739.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="380.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="377.9" y="723.0" width="0.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="380.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (227 samples, 3.93%)</title><rect x="378.3" y="771.0" width="46.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="381.3" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (226 samples, 3.91%)</title><rect x="378.3" y="755.0" width="46.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="381.3" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (225 samples, 3.89%)</title><rect x="378.3" y="739.0" width="45.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="381.3" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (225 samples, 3.89%)</title><rect x="378.3" y="723.0" width="45.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="381.3" y="734.0">one/..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.17%)</title><rect x="379.3" y="707.0" width="2.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="382.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.17%)</title><rect x="379.3" y="691.0" width="2.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="382.3" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.07%)</title><rect x="379.3" y="675.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="382.3" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="379.5" y="659.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="382.5" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="379.5" y="643.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="382.5" y="654.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="380.1" y="675.0" width="0.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="383.1" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="381.0" y="675.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="384.0" y="686.0"></text>
</g>
<g>
<title>__send (209 samples, 3.61%)</title><rect x="381.6" y="707.0" width="42.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="384.6" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (201 samples, 3.48%)</title><rect x="383.2" y="691.0" width="41.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="386.2" y="702.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (201 samples, 3.48%)</title><rect x="383.2" y="675.0" width="41.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="386.2" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (200 samples, 3.46%)</title><rect x="383.2" y="659.0" width="40.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="386.2" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (199 samples, 3.44%)</title><rect x="383.2" y="643.0" width="40.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="386.2" y="654.0">__s..</text>
</g>
<g>
<title>inet_sendmsg (2 samples, 0.03%)</title><rect x="383.4" y="627.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="386.4" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (192 samples, 3.32%)</title><rect x="383.8" y="627.0" width="39.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="386.8" y="638.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (191 samples, 3.30%)</title><rect x="383.8" y="611.0" width="39.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="386.8" y="622.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (190 samples, 3.29%)</title><rect x="384.0" y="595.0" width="38.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="387.0" y="606.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="384.6" y="579.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="387.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (183 samples, 3.16%)</title><rect x="385.4" y="579.0" width="37.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="388.4" y="590.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.05%)</title><rect x="387.1" y="563.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.05%)</title><rect x="387.1" y="547.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="390.1" y="558.0"></text>
</g>
<g>
<title>tcp_push (164 samples, 2.84%)</title><rect x="387.9" y="563.0" width="33.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="390.9" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (163 samples, 2.82%)</title><rect x="388.1" y="547.0" width="33.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="391.1" y="558.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (161 samples, 2.78%)</title><rect x="388.5" y="531.0" width="32.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="391.5" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (151 samples, 2.61%)</title><rect x="389.7" y="515.0" width="30.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="392.7" y="526.0">__..</text>
</g>
<g>
<title>__skb_clone (3 samples, 0.05%)</title><rect x="390.1" y="499.0" width="0.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="393.1" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (144 samples, 2.49%)</title><rect x="390.8" y="499.0" width="29.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="393.8" y="510.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (144 samples, 2.49%)</title><rect x="390.8" y="483.0" width="29.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="393.8" y="494.0">__..</text>
</g>
<g>
<title>ip_local_out (141 samples, 2.44%)</title><rect x="391.0" y="467.0" width="28.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="394.0" y="478.0">ip..</text>
</g>
<g>
<title>ip_output (140 samples, 2.42%)</title><rect x="391.0" y="451.0" width="28.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="394.0" y="462.0">ip..</text>
</g>
<g>
<title>ip_finish_output (139 samples, 2.40%)</title><rect x="391.0" y="435.0" width="28.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="394.0" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (138 samples, 2.39%)</title><rect x="391.0" y="419.0" width="28.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="394.0" y="430.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (125 samples, 2.16%)</title><rect x="391.0" y="403.0" width="25.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="394.0" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (125 samples, 2.16%)</title><rect x="391.0" y="387.0" width="25.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="394.0" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (124 samples, 2.14%)</title><rect x="391.2" y="371.0" width="25.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="394.2" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (124 samples, 2.14%)</title><rect x="391.2" y="355.0" width="25.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="394.2" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (121 samples, 2.09%)</title><rect x="391.8" y="339.0" width="24.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="394.8" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (120 samples, 2.08%)</title><rect x="392.0" y="323.0" width="24.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="395.0" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (118 samples, 2.04%)</title><rect x="392.4" y="307.0" width="24.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="395.4" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (118 samples, 2.04%)</title><rect x="392.4" y="291.0" width="24.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="395.4" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (115 samples, 1.99%)</title><rect x="392.8" y="275.0" width="23.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="395.8" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.03%)</title><rect x="393.0" y="259.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="396.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (110 samples, 1.90%)</title><rect x="393.4" y="259.0" width="22.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="396.4" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (106 samples, 1.83%)</title><rect x="393.4" y="243.0" width="21.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="396.4" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (106 samples, 1.83%)</title><rect x="393.4" y="227.0" width="21.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="396.4" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (105 samples, 1.82%)</title><rect x="393.6" y="211.0" width="21.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="396.6" y="222.0">i..</text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="393.8" y="195.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="396.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (100 samples, 1.73%)</title><rect x="394.6" y="195.0" width="20.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="397.6" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.05%)</title><rect x="395.2" y="179.0" width="0.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="398.2" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.05%)</title><rect x="395.9" y="179.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="398.9" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.03%)</title><rect x="395.9" y="163.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="398.9" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (91 samples, 1.57%)</title><rect x="396.5" y="179.0" width="18.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="399.5" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (91 samples, 1.57%)</title><rect x="396.5" y="163.0" width="18.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="399.5" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.07%)</title><rect x="396.9" y="147.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="399.9" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (4 samples, 0.07%)</title><rect x="396.9" y="131.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="399.9" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.07%)</title><rect x="396.9" y="115.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="399.9" y="126.0"></text>
</g>
<g>
<title>mod_timer (4 samples, 0.07%)</title><rect x="396.9" y="99.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="399.9" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="397.1" y="83.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="400.1" y="94.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.03%)</title><rect x="397.7" y="147.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.7" y="158.0"></text>
</g>
<g>
<title>tcp_ack (18 samples, 0.31%)</title><rect x="398.1" y="147.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="401.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.17%)</title><rect x="399.3" y="131.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="402.3" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (8 samples, 0.14%)</title><rect x="399.5" y="115.0" width="1.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="402.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.12%)</title><rect x="399.7" y="99.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="402.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (7 samples, 0.12%)</title><rect x="399.7" y="83.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="402.7" y="94.0"></text>
</g>
<g>
<title>skb_free_head (5 samples, 0.09%)</title><rect x="400.1" y="67.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="403.1" y="78.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.07%)</title><rect x="400.3" y="51.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="403.3" y="62.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.03%)</title><rect x="400.7" y="35.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="403.7" y="46.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.03%)</title><rect x="401.4" y="131.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="404.4" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (62 samples, 1.07%)</title><rect x="402.0" y="147.0" width="12.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="405.0" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (57 samples, 0.99%)</title><rect x="402.2" y="131.0" width="11.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="405.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (54 samples, 0.93%)</title><rect x="402.8" y="115.0" width="11.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="405.8" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (53 samples, 0.92%)</title><rect x="402.8" y="99.0" width="10.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="405.8" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (53 samples, 0.92%)</title><rect x="402.8" y="83.0" width="10.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="405.8" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.05%)</title><rect x="413.8" y="131.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="416.8" y="142.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.03%)</title><rect x="415.0" y="243.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="418.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.03%)</title><rect x="415.4" y="243.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="418.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (2 samples, 0.03%)</title><rect x="415.8" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="418.8" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (12 samples, 0.21%)</title><rect x="416.5" y="403.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="419.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (12 samples, 0.21%)</title><rect x="416.5" y="387.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="419.5" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (4 samples, 0.07%)</title><rect x="417.1" y="371.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="420.1" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (4 samples, 0.07%)</title><rect x="417.1" y="355.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="420.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="417.1" y="339.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="420.1" y="350.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.03%)</title><rect x="418.1" y="371.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="421.1" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.03%)</title><rect x="419.7" y="467.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="422.7" y="478.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="420.7" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="423.7" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.09%)</title><rect x="421.4" y="563.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="424.4" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="421.8" y="547.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="424.8" y="558.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="422.4" y="563.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.4" y="574.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="423.0" y="627.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="426.0" y="638.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="423.0" y="611.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="426.0" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="423.0" y="595.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="426.0" y="606.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="423.2" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="426.2" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.05%)</title><rect x="424.6" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="427.6" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="424.8" y="771.0" width="0.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="427.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (352 samples, 6.09%)</title><rect x="425.4" y="803.0" width="71.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="428.4" y="814.0">ru/mail/..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.03%)</title><rect x="425.6" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="428.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (348 samples, 6.02%)</title><rect x="426.3" y="787.0" width="71.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="429.3" y="798.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (341 samples, 5.90%)</title><rect x="426.7" y="771.0" width="69.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="429.7" y="782.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (341 samples, 5.90%)</title><rect x="426.7" y="755.0" width="69.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.7" y="766.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (238 samples, 4.12%)</title><rect x="427.5" y="739.0" width="48.5" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="430.5" y="750.0">Java..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="427.9" y="723.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="430.9" y="734.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.05%)</title><rect x="428.3" y="723.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="431.3" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (229 samples, 3.96%)</title><rect x="429.3" y="723.0" width="46.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="432.3" y="734.0">rock..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="429.5" y="707.0" width="0.4" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="432.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.05%)</title><rect x="429.9" y="707.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="432.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (220 samples, 3.80%)</title><rect x="430.5" y="707.0" width="44.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="433.5" y="718.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="430.7" y="691.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="433.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (217 samples, 3.75%)</title><rect x="431.2" y="691.0" width="44.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="434.2" y="702.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (214 samples, 3.70%)</title><rect x="431.4" y="675.0" width="43.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="434.4" y="686.0">rock..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (3 samples, 0.05%)</title><rect x="431.6" y="659.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="434.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (192 samples, 3.32%)</title><rect x="432.2" y="659.0" width="39.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="435.2" y="670.0">roc..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (174 samples, 3.01%)</title><rect x="433.2" y="643.0" width="35.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="436.2" y="654.0">roc..</text>
</g>
<g>
<title>__GI___sched_yield (6 samples, 0.10%)</title><rect x="436.3" y="627.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="439.3" y="638.0"></text>
</g>
<g>
<title>_init (6 samples, 0.10%)</title><rect x="437.5" y="627.0" width="1.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="440.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (5 samples, 0.09%)</title><rect x="438.7" y="627.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="441.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (30 samples, 0.52%)</title><rect x="439.7" y="627.0" width="6.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="442.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (27 samples, 0.47%)</title><rect x="440.1" y="611.0" width="5.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="443.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (26 samples, 0.45%)</title><rect x="440.1" y="595.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="443.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (8 samples, 0.14%)</title><rect x="440.3" y="579.0" width="1.7" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="443.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.03%)</title><rect x="442.0" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="445.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (14 samples, 0.24%)</title><rect x="442.4" y="579.0" width="2.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="445.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="443.0" y="563.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="446.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (9 samples, 0.16%)</title><rect x="443.4" y="563.0" width="1.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="446.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (2 samples, 0.03%)</title><rect x="444.0" y="547.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="447.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (3 samples, 0.05%)</title><rect x="444.6" y="547.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="447.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (4 samples, 0.07%)</title><rect x="446.0" y="627.0" width="0.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="449.0" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (4 samples, 0.07%)</title><rect x="446.0" y="611.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="449.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (58 samples, 1.00%)</title><rect x="446.9" y="627.0" width="11.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="449.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (57 samples, 0.99%)</title><rect x="447.1" y="611.0" width="11.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="450.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (53 samples, 0.92%)</title><rect x="447.5" y="595.0" width="10.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="450.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="447.7" y="579.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="450.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (50 samples, 0.86%)</title><rect x="448.1" y="579.0" width="10.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="451.1" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.03%)</title><rect x="449.3" y="563.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="452.3" y="574.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="449.7" y="563.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="452.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (37 samples, 0.64%)</title><rect x="450.5" y="563.0" width="7.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="453.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (3 samples, 0.05%)</title><rect x="450.9" y="547.0" width="0.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="453.9" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (27 samples, 0.47%)</title><rect x="451.6" y="547.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="454.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (26 samples, 0.45%)</title><rect x="451.8" y="531.0" width="5.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="454.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (12 samples, 0.21%)</title><rect x="453.8" y="515.0" width="2.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="456.8" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="453.8" y="499.0" width="0.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="456.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.16%)</title><rect x="454.4" y="499.0" width="1.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="457.4" y="510.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="455.0" y="483.0" width="0.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="458.0" y="494.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="455.8" y="483.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="458.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.07%)</title><rect x="456.2" y="515.0" width="0.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="459.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="457.1" y="547.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="460.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (10 samples, 0.17%)</title><rect x="458.7" y="627.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="461.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="458.7" y="611.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="461.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (7 samples, 0.12%)</title><rect x="459.1" y="611.0" width="1.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="462.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.10%)</title><rect x="459.3" y="595.0" width="1.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="462.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.10%)</title><rect x="459.3" y="579.0" width="1.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="462.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.05%)</title><rect x="459.7" y="563.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="462.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.03%)</title><rect x="459.9" y="547.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="462.9" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.03%)</title><rect x="460.9" y="627.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="463.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (32 samples, 0.55%)</title><rect x="461.4" y="627.0" width="6.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="464.4" y="638.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.03%)</title><rect x="467.5" y="611.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="470.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (2 samples, 0.03%)</title><rect x="467.9" y="627.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="470.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (2 samples, 0.03%)</title><rect x="468.3" y="627.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="471.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (2 samples, 0.03%)</title><rect x="468.7" y="643.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="471.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.03%)</title><rect x="469.1" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="472.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.03%)</title><rect x="469.5" y="643.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="472.5" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (3 samples, 0.05%)</title><rect x="470.7" y="643.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="473.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 0.21%)</title><rect x="471.6" y="659.0" width="2.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="474.6" y="670.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="471.6" y="643.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="474.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.03%)</title><rect x="472.0" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="475.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Count() const (2 samples, 0.03%)</title><rect x="472.4" y="643.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="475.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.10%)</title><rect x="472.8" y="643.0" width="1.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="475.8" y="654.0"></text>
</g>
<g>
<title>std::string::_M_leak_hard() (3 samples, 0.05%)</title><rect x="473.4" y="627.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="476.4" y="638.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (3 samples, 0.05%)</title><rect x="474.4" y="659.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="477.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.03%)</title><rect x="475.4" y="707.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="478.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.59%)</title><rect x="476.0" y="739.0" width="18.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="479.0" y="750.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.03%)</title><rect x="476.4" y="723.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="479.4" y="734.0"></text>
</g>
<g>
<title>__write (86 samples, 1.49%)</title><rect x="476.9" y="723.0" width="17.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="479.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (80 samples, 1.38%)</title><rect x="478.1" y="707.0" width="16.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (80 samples, 1.38%)</title><rect x="478.1" y="691.0" width="16.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="481.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (80 samples, 1.38%)</title><rect x="478.1" y="675.0" width="16.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="481.1" y="686.0"></text>
</g>
<g>
<title>ksys_write (79 samples, 1.37%)</title><rect x="478.3" y="659.0" width="16.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="481.3" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="478.5" y="643.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="481.5" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="478.5" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="481.5" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="478.5" y="611.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="481.5" y="622.0"></text>
</g>
<g>
<title>vfs_write (74 samples, 1.28%)</title><rect x="479.3" y="643.0" width="15.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="482.3" y="654.0"></text>
</g>
<g>
<title>__sb_start_write (3 samples, 0.05%)</title><rect x="479.3" y="627.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="482.3" y="638.0"></text>
</g>
<g>
<title>__vfs_write (62 samples, 1.07%)</title><rect x="479.9" y="627.0" width="12.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="482.9" y="638.0"></text>
</g>
<g>
<title>new_sync_write (62 samples, 1.07%)</title><rect x="479.9" y="611.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="482.9" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (62 samples, 1.07%)</title><rect x="479.9" y="595.0" width="12.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="482.9" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (61 samples, 1.05%)</title><rect x="480.1" y="579.0" width="12.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="483.1" y="590.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.05%)</title><rect x="480.5" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="483.5" y="574.0"></text>
</g>
<g>
<title>generic_update_time (3 samples, 0.05%)</title><rect x="480.5" y="547.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="483.5" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.05%)</title><rect x="480.5" y="531.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="483.5" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.05%)</title><rect x="480.5" y="515.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="483.5" y="526.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.03%)</title><rect x="480.7" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="483.7" y="510.0"></text>
</g>
<g>
<title>generic_perform_write (55 samples, 0.95%)</title><rect x="481.1" y="563.0" width="11.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="484.1" y="574.0"></text>
</g>
<g>
<title>balance_dirty_pages_ratelimited (2 samples, 0.03%)</title><rect x="481.1" y="547.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="484.1" y="558.0"></text>
</g>
<g>
<title>ext4_da_write_begin (26 samples, 0.45%)</title><rect x="481.8" y="547.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="484.8" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (10 samples, 0.17%)</title><rect x="482.0" y="531.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="485.0" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (10 samples, 0.17%)</title><rect x="482.0" y="515.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="485.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.03%)</title><rect x="482.2" y="499.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="485.2" y="510.0"></text>
</g>
<g>
<title>start_this_handle (7 samples, 0.12%)</title><rect x="482.6" y="499.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="485.6" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (2 samples, 0.03%)</title><rect x="483.6" y="483.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.6" y="494.0"></text>
</g>
<g>
<title>ext4_nonda_switch (3 samples, 0.05%)</title><rect x="484.2" y="531.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="487.2" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (10 samples, 0.17%)</title><rect x="484.8" y="531.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="487.8" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (9 samples, 0.16%)</title><rect x="484.8" y="515.0" width="1.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="487.8" y="526.0"></text>
</g>
<g>
<title>find_get_entry (8 samples, 0.14%)</title><rect x="485.0" y="499.0" width="1.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="488.0" y="510.0"></text>
</g>
<g>
<title>xas_load (5 samples, 0.09%)</title><rect x="485.6" y="483.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="488.6" y="494.0"></text>
</g>
<g>
<title>xas_start (3 samples, 0.05%)</title><rect x="486.0" y="467.0" width="0.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="489.0" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (24 samples, 0.42%)</title><rect x="487.1" y="547.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="490.1" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="487.1" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="490.1" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="487.1" y="515.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="490.1" y="526.0"></text>
</g>
<g>
<title>generic_write_end (22 samples, 0.38%)</title><rect x="487.5" y="531.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="490.5" y="542.0"></text>
</g>
<g>
<title>__generic_write_end (18 samples, 0.31%)</title><rect x="487.5" y="515.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="490.5" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (18 samples, 0.31%)</title><rect x="487.5" y="499.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="490.5" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (18 samples, 0.31%)</title><rect x="487.5" y="483.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="490.5" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (16 samples, 0.28%)</title><rect x="487.7" y="467.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="490.7" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (10 samples, 0.17%)</title><rect x="487.7" y="451.0" width="2.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="490.7" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (10 samples, 0.17%)</title><rect x="487.7" y="435.0" width="2.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="490.7" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 0.10%)</title><rect x="488.3" y="419.0" width="1.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="491.3" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (6 samples, 0.10%)</title><rect x="488.3" y="403.0" width="1.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="491.3" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (4 samples, 0.07%)</title><rect x="488.3" y="387.0" width="0.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="491.3" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.03%)</title><rect x="489.1" y="387.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="492.1" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.03%)</title><rect x="489.1" y="371.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="492.1" y="382.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (6 samples, 0.10%)</title><rect x="489.7" y="451.0" width="1.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="492.7" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.05%)</title><rect x="489.9" y="435.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="492.9" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.03%)</title><rect x="489.9" y="419.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="492.9" y="430.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.03%)</title><rect x="489.9" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="492.9" y="414.0"></text>
</g>
<g>
<title>block_write_end (4 samples, 0.07%)</title><rect x="491.1" y="515.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="494.1" y="526.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.03%)</title><rect x="491.5" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="494.5" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (8 samples, 0.14%)</title><rect x="492.8" y="627.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="495.8" y="638.0"></text>
</g>
<g>
<title>security_file_permission (7 samples, 0.12%)</title><rect x="493.0" y="611.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="496.0" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.09%)</title><rect x="493.0" y="595.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="496.0" y="606.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.09%)</title><rect x="493.0" y="579.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="496.0" y="590.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.05%)</title><rect x="493.4" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="496.4" y="574.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="494.0" y="595.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="497.0" y="606.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.03%)</title><rect x="494.4" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="497.4" y="734.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="495.0" y="739.0" width="0.4" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="498.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="495.0" y="723.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="498.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="495.0" y="707.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="498.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="495.0" y="691.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="498.0" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="495.0" y="675.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="498.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="495.0" y="659.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="498.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="495.0" y="643.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="498.0" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="495.0" y="627.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="498.0" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="495.0" y="611.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="498.0" y="622.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.03%)</title><rect x="495.4" y="739.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="498.4" y="750.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.03%)</title><rect x="495.8" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="498.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (4 samples, 0.07%)</title><rect x="496.2" y="771.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="499.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (2 samples, 0.03%)</title><rect x="496.7" y="755.0" width="0.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="499.7" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (2 samples, 0.03%)</title><rect x="496.7" y="739.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="499.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (2 samples, 0.03%)</title><rect x="496.7" y="723.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="499.7" y="734.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.03%)</title><rect x="496.7" y="707.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="499.7" y="718.0"></text>
</g>
<g>
<title>[NIO Worker #6 tid=876] (1,080 samples, 18.68%)</title><rect x="497.3" y="899.0" width="220.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="500.3" y="910.0">[NIO Worker #6 tid=876]</text>
</g>
<g>
<title>java/lang/Thread.run (1,078 samples, 18.64%)</title><rect x="497.7" y="883.0" width="219.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="500.7" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,078 samples, 18.64%)</title><rect x="497.7" y="867.0" width="219.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="500.7" y="878.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,078 samples, 18.64%)</title><rect x="497.7" y="851.0" width="219.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="500.7" y="862.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="500.5" y="835.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="503.5" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="500.5" y="819.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="503.5" y="830.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.03%)</title><rect x="500.5" y="803.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="503.5" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="500.5" y="787.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="503.5" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.03%)</title><rect x="500.5" y="771.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="503.5" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.03%)</title><rect x="500.5" y="755.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="503.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="500.5" y="739.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="503.5" y="750.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (6 samples, 0.10%)</title><rect x="500.9" y="835.0" width="1.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="503.9" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (5 samples, 0.09%)</title><rect x="501.1" y="819.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.1" y="830.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (4 samples, 0.07%)</title><rect x="501.1" y="803.0" width="0.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="504.1" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.296] (2 samples, 0.03%)</title><rect x="501.3" y="787.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="504.3" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.lock (3 samples, 0.05%)</title><rect x="502.2" y="835.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="505.2" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquire (2 samples, 0.03%)</title><rect x="502.4" y="819.0" width="0.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="505.4" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.tryAcquire (2 samples, 0.03%)</title><rect x="502.4" y="803.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="505.4" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.unlock (2 samples, 0.03%)</title><rect x="502.8" y="835.0" width="0.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="505.8" y="846.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (469 samples, 8.11%)</title><rect x="503.4" y="835.0" width="95.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="506.4" y="846.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (467 samples, 8.08%)</title><rect x="503.8" y="819.0" width="95.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="506.8" y="830.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (467 samples, 8.08%)</title><rect x="503.8" y="803.0" width="95.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="506.8" y="814.0">java/util/c..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (108 samples, 1.87%)</title><rect x="504.6" y="787.0" width="22.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="507.6" y="798.0">j..</text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="505.0" y="771.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="508.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (4 samples, 0.07%)</title><rect x="505.4" y="771.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="508.4" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (100 samples, 1.73%)</title><rect x="506.2" y="771.0" width="20.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="509.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (100 samples, 1.73%)</title><rect x="506.2" y="755.0" width="20.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="509.2" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (51 samples, 0.88%)</title><rect x="506.9" y="739.0" width="10.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="509.9" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (12 samples, 0.21%)</title><rect x="508.3" y="723.0" width="2.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="511.3" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="510.1" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="513.1" y="718.0"></text>
</g>
<g>
<title>__lll_unlock_wake (23 samples, 0.40%)</title><rect x="510.7" y="723.0" width="4.7" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="513.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 0.22%)</title><rect x="512.8" y="707.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="515.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (13 samples, 0.22%)</title><rect x="512.8" y="691.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="515.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 0.14%)</title><rect x="513.6" y="675.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="516.6" y="686.0"></text>
</g>
<g>
<title>do_futex (5 samples, 0.09%)</title><rect x="513.8" y="659.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="516.8" y="670.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="514.0" y="643.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="514.8" y="659.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="517.8" y="670.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="515.8" y="723.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="518.8" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="516.2" y="723.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="519.2" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (3 samples, 0.05%)</title><rect x="516.6" y="723.0" width="0.7" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="519.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (45 samples, 0.78%)</title><rect x="517.3" y="739.0" width="9.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="520.3" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (42 samples, 0.73%)</title><rect x="517.5" y="723.0" width="8.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="520.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (30 samples, 0.52%)</title><rect x="519.9" y="707.0" width="6.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="522.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 0.50%)</title><rect x="520.1" y="691.0" width="5.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="523.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (25 samples, 0.43%)</title><rect x="520.7" y="675.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="523.7" y="686.0"></text>
</g>
<g>
<title>do_futex (24 samples, 0.42%)</title><rect x="520.9" y="659.0" width="4.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="523.9" y="670.0"></text>
</g>
<g>
<title>futex_wait (24 samples, 0.42%)</title><rect x="520.9" y="643.0" width="4.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="523.9" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (14 samples, 0.24%)</title><rect x="521.5" y="627.0" width="2.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="524.5" y="638.0"></text>
</g>
<g>
<title>schedule (10 samples, 0.17%)</title><rect x="522.4" y="611.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="525.4" y="622.0"></text>
</g>
<g>
<title>__schedule (10 samples, 0.17%)</title><rect x="522.4" y="595.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.4" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (9 samples, 0.16%)</title><rect x="522.6" y="579.0" width="1.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="525.6" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (7 samples, 0.12%)</title><rect x="524.4" y="627.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="527.4" y="638.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="525.2" y="611.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="528.2" y="622.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (2 samples, 0.03%)</title><rect x="526.6" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="529.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (353 samples, 6.10%)</title><rect x="527.1" y="787.0" width="72.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="530.1" y="798.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (333 samples, 5.76%)</title><rect x="531.1" y="771.0" width="68.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="534.1" y="782.0">java/ut..</text>
</g>
<g>
<title>apic_timer_interrupt (5 samples, 0.09%)</title><rect x="598.1" y="755.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="601.1" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (5 samples, 0.09%)</title><rect x="598.1" y="739.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="601.1" y="750.0"></text>
</g>
<g>
<title>irq_exit (5 samples, 0.09%)</title><rect x="598.1" y="723.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="601.1" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 0.09%)</title><rect x="598.1" y="707.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="601.1" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (5 samples, 0.09%)</title><rect x="598.1" y="691.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="601.1" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (4 samples, 0.07%)</title><rect x="598.3" y="675.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="601.3" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="598.3" y="659.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="601.3" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.run (580 samples, 10.03%)</title><rect x="599.3" y="835.0" width="118.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="602.3" y="846.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (579 samples, 10.01%)</title><rect x="599.5" y="819.0" width="118.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="602.5" y="830.0">ru/mail/polis/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (246 samples, 4.25%)</title><rect x="600.1" y="803.0" width="50.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="603.1" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (235 samples, 4.06%)</title><rect x="601.1" y="787.0" width="48.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="604.1" y="798.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.07%)</title><rect x="601.1" y="771.0" width="0.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="604.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 0.07%)</title><rect x="601.1" y="755.0" width="0.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="604.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.05%)</title><rect x="601.3" y="739.0" width="0.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="604.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.05%)</title><rect x="601.3" y="723.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="604.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (231 samples, 3.99%)</title><rect x="601.9" y="771.0" width="47.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="604.9" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (230 samples, 3.98%)</title><rect x="602.1" y="755.0" width="47.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="605.1" y="766.0">one/..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.03%)</title><rect x="602.3" y="739.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="605.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (226 samples, 3.91%)</title><rect x="602.8" y="739.0" width="46.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="605.8" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (226 samples, 3.91%)</title><rect x="602.8" y="723.0" width="46.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="605.8" y="734.0">one/..</text>
</g>
<g>
<title>[unknown] (8 samples, 0.14%)</title><rect x="603.8" y="707.0" width="1.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="606.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.14%)</title><rect x="603.8" y="691.0" width="1.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="606.8" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.09%)</title><rect x="603.8" y="675.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="606.8" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.05%)</title><rect x="604.2" y="659.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="607.2" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="604.2" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="607.2" y="654.0"></text>
</g>
<g>
<title>__send (213 samples, 3.68%)</title><rect x="605.4" y="707.0" width="43.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="608.4" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (206 samples, 3.56%)</title><rect x="606.8" y="691.0" width="42.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="609.8" y="702.0">entr..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.03%)</title><rect x="606.8" y="675.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="609.8" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (204 samples, 3.53%)</title><rect x="607.2" y="675.0" width="41.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="610.2" y="686.0">do_..</text>
</g>
<g>
<title>__x64_sys_sendto (201 samples, 3.48%)</title><rect x="607.7" y="659.0" width="41.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="610.7" y="670.0">__x..</text>
</g>
<g>
<title>__sys_sendto (199 samples, 3.44%)</title><rect x="607.7" y="643.0" width="40.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="610.7" y="654.0">__s..</text>
</g>
<g>
<title>fput (2 samples, 0.03%)</title><rect x="607.9" y="627.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="610.9" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (193 samples, 3.34%)</title><rect x="608.3" y="627.0" width="39.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.3" y="638.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (186 samples, 3.22%)</title><rect x="608.3" y="611.0" width="37.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="611.3" y="622.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (185 samples, 3.20%)</title><rect x="608.5" y="595.0" width="37.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="611.5" y="606.0">tcp..</text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.03%)</title><rect x="608.7" y="579.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="611.7" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (177 samples, 3.06%)</title><rect x="610.1" y="579.0" width="36.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="613.1" y="590.0">tcp..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.03%)</title><rect x="610.7" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="613.7" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.03%)</title><rect x="610.7" y="547.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="613.7" y="558.0"></text>
</g>
<g>
<title>check_stack_object (2 samples, 0.03%)</title><rect x="611.3" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="614.3" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.14%)</title><rect x="612.1" y="563.0" width="1.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="615.1" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.14%)</title><rect x="612.1" y="547.0" width="1.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="615.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.07%)</title><rect x="612.3" y="531.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="615.3" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.07%)</title><rect x="612.3" y="515.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="615.3" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.03%)</title><rect x="613.2" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="616.2" y="542.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.05%)</title><rect x="613.8" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="616.8" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.03%)</title><rect x="614.4" y="563.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="617.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (148 samples, 2.56%)</title><rect x="614.8" y="563.0" width="30.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="617.8" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (147 samples, 2.54%)</title><rect x="615.0" y="547.0" width="30.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="618.0" y="558.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (144 samples, 2.49%)</title><rect x="615.6" y="531.0" width="29.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="618.6" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (133 samples, 2.30%)</title><rect x="616.4" y="515.0" width="27.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="619.4" y="526.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (128 samples, 2.21%)</title><rect x="617.4" y="499.0" width="26.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="620.4" y="510.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (128 samples, 2.21%)</title><rect x="617.4" y="483.0" width="26.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="620.4" y="494.0">_..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.03%)</title><rect x="617.4" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="620.4" y="478.0"></text>
</g>
<g>
<title>ip_local_out (126 samples, 2.18%)</title><rect x="617.9" y="467.0" width="25.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="620.9" y="478.0">i..</text>
</g>
<g>
<title>ip_output (126 samples, 2.18%)</title><rect x="617.9" y="451.0" width="25.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="620.9" y="462.0">i..</text>
</g>
<g>
<title>ip_finish_output (125 samples, 2.16%)</title><rect x="618.1" y="435.0" width="25.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="621.1" y="446.0">i..</text>
</g>
<g>
<title>ip_finish_output2 (123 samples, 2.13%)</title><rect x="618.5" y="419.0" width="25.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="621.5" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (113 samples, 1.95%)</title><rect x="618.7" y="403.0" width="23.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="621.7" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (113 samples, 1.95%)</title><rect x="618.7" y="387.0" width="23.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="621.7" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (113 samples, 1.95%)</title><rect x="618.7" y="371.0" width="23.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="621.7" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (113 samples, 1.95%)</title><rect x="618.7" y="355.0" width="23.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="621.7" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (111 samples, 1.92%)</title><rect x="619.1" y="339.0" width="22.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="622.1" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (110 samples, 1.90%)</title><rect x="619.3" y="323.0" width="22.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="622.3" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (109 samples, 1.88%)</title><rect x="619.5" y="307.0" width="22.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="622.5" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (109 samples, 1.88%)</title><rect x="619.5" y="291.0" width="22.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="622.5" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="619.5" y="275.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="622.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (107 samples, 1.85%)</title><rect x="619.9" y="275.0" width="21.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="622.9" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (3 samples, 0.05%)</title><rect x="619.9" y="259.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="622.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (104 samples, 1.80%)</title><rect x="620.5" y="259.0" width="21.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="623.5" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (103 samples, 1.78%)</title><rect x="620.5" y="243.0" width="21.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="623.5" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (103 samples, 1.78%)</title><rect x="620.5" y="227.0" width="21.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="623.5" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (101 samples, 1.75%)</title><rect x="620.5" y="211.0" width="20.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="623.5" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (101 samples, 1.75%)</title><rect x="620.5" y="195.0" width="20.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="623.5" y="206.0"></text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.07%)</title><rect x="620.9" y="179.0" width="0.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="623.9" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (90 samples, 1.56%)</title><rect x="622.8" y="179.0" width="18.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="625.8" y="190.0"></text>
</g>
<g>
<title>tcp_ack (2 samples, 0.03%)</title><rect x="622.8" y="163.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="625.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (87 samples, 1.50%)</title><rect x="623.4" y="163.0" width="17.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="626.4" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (4 samples, 0.07%)</title><rect x="623.4" y="147.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="626.4" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.03%)</title><rect x="623.8" y="131.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="626.8" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="623.8" y="115.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="626.8" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.05%)</title><rect x="624.6" y="147.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="627.6" y="158.0"></text>
</g>
<g>
<title>tcp_ack (20 samples, 0.35%)</title><rect x="625.2" y="147.0" width="4.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="628.2" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (12 samples, 0.21%)</title><rect x="626.8" y="131.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="629.8" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (9 samples, 0.16%)</title><rect x="627.2" y="115.0" width="1.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="630.2" y="126.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.12%)</title><rect x="627.4" y="99.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="630.4" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.09%)</title><rect x="627.9" y="83.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="630.9" y="94.0"></text>
</g>
<g>
<title>tcp_data_queue (54 samples, 0.93%)</title><rect x="629.5" y="147.0" width="11.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="632.5" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (49 samples, 0.85%)</title><rect x="630.1" y="131.0" width="10.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="633.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (47 samples, 0.81%)</title><rect x="630.5" y="115.0" width="9.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="633.5" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (46 samples, 0.80%)</title><rect x="630.7" y="99.0" width="9.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="633.7" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (46 samples, 0.80%)</title><rect x="630.7" y="83.0" width="9.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="633.7" y="94.0"></text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.03%)</title><rect x="641.1" y="211.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="644.1" y="222.0"></text>
</g>
<g>
<title>dev_queue_xmit (9 samples, 0.16%)</title><rect x="641.7" y="403.0" width="1.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="644.7" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.14%)</title><rect x="641.7" y="387.0" width="1.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="644.7" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.05%)</title><rect x="641.9" y="371.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.9" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.05%)</title><rect x="641.9" y="355.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="644.9" y="366.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="642.1" y="339.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="645.1" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="642.1" y="323.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="645.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="642.1" y="307.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="645.1" y="318.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 0.07%)</title><rect x="644.0" y="515.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.0" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.03%)</title><rect x="644.4" y="499.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="647.4" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="644.4" y="483.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="647.4" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="644.4" y="467.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="647.4" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="644.4" y="451.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="647.4" y="462.0"></text>
</g>
<g>
<title>tcp_send_mss (5 samples, 0.09%)</title><rect x="645.0" y="563.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="648.0" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.07%)</title><rect x="645.2" y="547.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="648.2" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="645.6" y="531.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="648.6" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.12%)</title><rect x="646.2" y="611.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="649.2" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.10%)</title><rect x="646.4" y="595.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="649.4" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.10%)</title><rect x="646.4" y="579.0" width="1.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="649.4" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.07%)</title><rect x="646.8" y="563.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="649.8" y="574.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.05%)</title><rect x="646.8" y="547.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="649.8" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.05%)</title><rect x="647.6" y="627.0" width="0.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="650.6" y="638.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.05%)</title><rect x="647.6" y="611.0" width="0.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="650.6" y="622.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="647.6" y="595.0" width="0.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="650.6" y="606.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="647.6" y="579.0" width="0.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="650.6" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.09%)</title><rect x="649.1" y="787.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="652.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.03%)</title><rect x="649.1" y="771.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="652.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.05%)</title><rect x="649.5" y="771.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="652.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.05%)</title><rect x="649.5" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="652.5" y="766.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="649.7" y="739.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="652.7" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.03%)</title><rect x="649.7" y="723.0" width="0.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="652.7" y="734.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.03%)</title><rect x="649.7" y="707.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="652.7" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (330 samples, 5.71%)</title><rect x="650.3" y="803.0" width="67.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.3" y="814.0">ru/mail..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.07%)</title><rect x="650.3" y="787.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="653.3" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.07%)</title><rect x="650.3" y="771.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.3" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="650.3" y="755.0" width="0.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="653.3" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="650.3" y="739.0" width="0.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="653.3" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.07%)</title><rect x="650.3" y="723.0" width="0.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="653.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (326 samples, 5.64%)</title><rect x="651.1" y="787.0" width="66.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="654.1" y="798.0">ru/mail..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (319 samples, 5.52%)</title><rect x="651.1" y="771.0" width="65.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="654.1" y="782.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (318 samples, 5.50%)</title><rect x="651.3" y="755.0" width="64.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="654.3" y="766.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (222 samples, 3.84%)</title><rect x="651.3" y="739.0" width="45.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="654.3" y="750.0">Java..</text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.03%)</title><rect x="651.9" y="723.0" width="0.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="654.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="652.3" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="655.3" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (215 samples, 3.72%)</title><rect x="652.7" y="723.0" width="43.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="655.7" y="734.0">rock..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.03%)</title><rect x="653.4" y="707.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="656.4" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.05%)</title><rect x="653.8" y="707.0" width="0.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="656.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (206 samples, 3.56%)</title><rect x="654.4" y="707.0" width="42.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="657.4" y="718.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (201 samples, 3.48%)</title><rect x="655.4" y="691.0" width="41.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="658.4" y="702.0">roc..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (196 samples, 3.39%)</title><rect x="655.6" y="675.0" width="40.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="658.6" y="686.0">roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="656.0" y="659.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="659.0" y="670.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="656.4" y="659.0" width="0.4" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="659.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (180 samples, 3.11%)</title><rect x="657.0" y="659.0" width="36.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="660.0" y="670.0">roc..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="657.2" y="643.0" width="0.4" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="660.2" y="654.0"></text>
</g>
<g>
<title>_init (7 samples, 0.12%)</title><rect x="657.6" y="643.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="660.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (161 samples, 2.78%)</title><rect x="659.3" y="643.0" width="32.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="662.3" y="654.0">ro..</text>
</g>
<g>
<title>__GI___sched_yield (2 samples, 0.03%)</title><rect x="661.5" y="627.0" width="0.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="664.5" y="638.0"></text>
</g>
<g>
<title>_init (7 samples, 0.12%)</title><rect x="661.9" y="627.0" width="1.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="664.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (31 samples, 0.54%)</title><rect x="663.8" y="627.0" width="6.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="666.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (28 samples, 0.48%)</title><rect x="664.2" y="611.0" width="5.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="667.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (25 samples, 0.43%)</title><rect x="664.2" y="595.0" width="5.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="667.2" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (4 samples, 0.07%)</title><rect x="664.4" y="579.0" width="0.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="667.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.03%)</title><rect x="665.2" y="579.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="668.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (17 samples, 0.29%)</title><rect x="665.8" y="579.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="668.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="666.2" y="563.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="669.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (12 samples, 0.21%)</title><rect x="666.8" y="563.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="669.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (9 samples, 0.16%)</title><rect x="667.4" y="547.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="670.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="668.9" y="531.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="671.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (3 samples, 0.05%)</title><rect x="669.3" y="595.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="672.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() (2 samples, 0.03%)</title><rect x="670.3" y="627.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="673.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (46 samples, 0.80%)</title><rect x="670.7" y="627.0" width="9.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="673.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (45 samples, 0.78%)</title><rect x="670.9" y="611.0" width="9.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="673.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (43 samples, 0.74%)</title><rect x="670.9" y="595.0" width="8.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="673.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (41 samples, 0.71%)</title><rect x="671.3" y="579.0" width="8.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="674.3" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.03%)</title><rect x="671.3" y="563.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="674.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (34 samples, 0.59%)</title><rect x="672.3" y="563.0" width="7.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="675.3" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (4 samples, 0.07%)</title><rect x="672.7" y="547.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="675.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.05%)</title><rect x="672.9" y="531.0" width="0.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="675.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.03%)</title><rect x="673.2" y="515.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="676.2" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (27 samples, 0.47%)</title><rect x="673.6" y="547.0" width="5.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="676.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (22 samples, 0.38%)</title><rect x="674.2" y="531.0" width="4.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="677.2" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (11 samples, 0.19%)</title><rect x="675.8" y="515.0" width="2.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="678.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 0.19%)</title><rect x="675.8" y="499.0" width="2.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="678.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.03%)</title><rect x="676.6" y="483.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="679.6" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.05%)</title><rect x="677.2" y="483.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="680.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.05%)</title><rect x="678.0" y="515.0" width="0.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="681.0" y="526.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.03%)</title><rect x="678.3" y="499.0" width="0.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="681.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.03%)</title><rect x="678.7" y="531.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="681.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="679.3" y="563.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="682.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.03%)</title><rect x="679.7" y="595.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="682.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (12 samples, 0.21%)</title><rect x="680.1" y="627.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="683.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (10 samples, 0.17%)</title><rect x="680.5" y="611.0" width="2.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="683.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.17%)</title><rect x="680.5" y="595.0" width="2.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="683.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 0.16%)</title><rect x="680.7" y="579.0" width="1.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="683.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (6 samples, 0.10%)</title><rect x="680.9" y="563.0" width="1.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="683.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (5 samples, 0.09%)</title><rect x="681.1" y="547.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="684.1" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.09%)</title><rect x="681.1" y="531.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="684.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (5 samples, 0.09%)</title><rect x="681.1" y="515.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="684.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.03%)</title><rect x="682.7" y="627.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="685.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (35 samples, 0.61%)</title><rect x="683.1" y="627.0" width="7.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="686.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.07%)</title><rect x="690.3" y="627.0" width="0.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="693.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.05%)</title><rect x="690.5" y="611.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="693.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="691.3" y="627.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="694.3" y="638.0"></text>
</g>
<g>
<title>std::condition_variable::~condition_variable() (2 samples, 0.03%)</title><rect x="693.4" y="643.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="696.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="694.2" y="659.0" width="0.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="697.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="694.6" y="643.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="697.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="695.8" y="675.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="698.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (86 samples, 1.49%)</title><rect x="696.6" y="739.0" width="17.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="699.6" y="750.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="696.6" y="723.0" width="0.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="699.6" y="734.0"></text>
</g>
<g>
<title>__write (82 samples, 1.42%)</title><rect x="697.2" y="723.0" width="16.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="700.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (78 samples, 1.35%)</title><rect x="698.0" y="707.0" width="16.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="701.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.05%)</title><rect x="698.0" y="691.0" width="0.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="701.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (74 samples, 1.28%)</title><rect x="698.9" y="691.0" width="15.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="701.9" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (71 samples, 1.23%)</title><rect x="699.5" y="675.0" width="14.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="702.5" y="686.0"></text>
</g>
<g>
<title>ksys_write (71 samples, 1.23%)</title><rect x="699.5" y="659.0" width="14.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="702.5" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (4 samples, 0.07%)</title><rect x="699.7" y="643.0" width="0.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="702.7" y="654.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="699.7" y="627.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="702.7" y="638.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="699.7" y="611.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.7" y="622.0"></text>
</g>
<g>
<title>vfs_write (66 samples, 1.14%)</title><rect x="700.5" y="643.0" width="13.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="703.5" y="654.0"></text>
</g>
<g>
<title>__vfs_write (61 samples, 1.05%)</title><rect x="700.5" y="627.0" width="12.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="703.5" y="638.0"></text>
</g>
<g>
<title>new_sync_write (61 samples, 1.05%)</title><rect x="700.5" y="611.0" width="12.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="703.5" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (61 samples, 1.05%)</title><rect x="700.5" y="595.0" width="12.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="703.5" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (60 samples, 1.04%)</title><rect x="700.7" y="579.0" width="12.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="703.7" y="590.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.09%)</title><rect x="701.1" y="563.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="704.1" y="574.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.03%)</title><rect x="701.7" y="547.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="704.7" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.03%)</title><rect x="701.7" y="531.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="704.7" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.03%)</title><rect x="701.7" y="515.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.7" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (52 samples, 0.90%)</title><rect x="702.1" y="563.0" width="10.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="705.1" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_begin (21 samples, 0.36%)</title><rect x="702.3" y="547.0" width="4.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="705.3" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (7 samples, 0.12%)</title><rect x="702.7" y="531.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="705.7" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (6 samples, 0.10%)</title><rect x="702.9" y="515.0" width="1.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="705.9" y="526.0"></text>
</g>
<g>
<title>start_this_handle (5 samples, 0.09%)</title><rect x="703.1" y="499.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="706.1" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (5 samples, 0.09%)</title><rect x="703.1" y="483.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.1" y="494.0"></text>
</g>
<g>
<title>ext4_block_write_begin (4 samples, 0.07%)</title><rect x="704.2" y="531.0" width="0.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="707.2" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (7 samples, 0.12%)</title><rect x="705.0" y="531.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="708.0" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.12%)</title><rect x="705.0" y="515.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.0" y="526.0"></text>
</g>
<g>
<title>find_get_entry (5 samples, 0.09%)</title><rect x="705.4" y="499.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="708.4" y="510.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.05%)</title><rect x="705.6" y="483.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="708.6" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (29 samples, 0.50%)</title><rect x="706.6" y="547.0" width="5.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="709.6" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.07%)</title><rect x="706.6" y="531.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="709.6" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (4 samples, 0.07%)</title><rect x="706.6" y="515.0" width="0.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.03%)</title><rect x="707.0" y="499.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="710.0" y="510.0"></text>
</g>
<g>
<title>generic_write_end (24 samples, 0.42%)</title><rect x="707.6" y="531.0" width="4.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="710.6" y="542.0"></text>
</g>
<g>
<title>__generic_write_end (22 samples, 0.38%)</title><rect x="707.6" y="515.0" width="4.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="710.6" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (21 samples, 0.36%)</title><rect x="707.6" y="499.0" width="4.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="710.6" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (20 samples, 0.35%)</title><rect x="707.8" y="483.0" width="4.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="710.8" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (18 samples, 0.31%)</title><rect x="708.0" y="467.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="711.0" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (8 samples, 0.14%)</title><rect x="708.0" y="451.0" width="1.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="711.0" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (8 samples, 0.14%)</title><rect x="708.0" y="435.0" width="1.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="711.0" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (5 samples, 0.09%)</title><rect x="708.7" y="419.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="711.7" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (5 samples, 0.09%)</title><rect x="708.7" y="403.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="711.7" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.03%)</title><rect x="708.7" y="387.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="711.7" y="398.0"></text>
</g>
<g>
<title>crypto_shash_update (3 samples, 0.05%)</title><rect x="709.1" y="387.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.1" y="398.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (3 samples, 0.05%)</title><rect x="709.1" y="371.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="712.1" y="382.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (10 samples, 0.17%)</title><rect x="709.7" y="451.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="712.7" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (8 samples, 0.14%)</title><rect x="709.9" y="435.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="712.9" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (4 samples, 0.07%)</title><rect x="710.1" y="419.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="713.1" y="430.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.05%)</title><rect x="710.3" y="403.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.3" y="414.0"></text>
</g>
<g>
<title>ext4_get_group_desc (3 samples, 0.05%)</title><rect x="710.9" y="419.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="713.9" y="430.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.03%)</title><rect x="712.1" y="515.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="715.1" y="526.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.03%)</title><rect x="712.1" y="499.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="715.1" y="510.0"></text>
</g>
<g>
<title>rw_verify_area (5 samples, 0.09%)</title><rect x="712.9" y="627.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="715.9" y="638.0"></text>
</g>
<g>
<title>security_file_permission (4 samples, 0.07%)</title><rect x="713.1" y="611.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="716.1" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.05%)</title><rect x="713.1" y="595.0" width="0.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="716.1" y="606.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.05%)</title><rect x="713.1" y="579.0" width="0.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="716.1" y="590.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.03%)</title><rect x="714.2" y="739.0" width="0.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="717.2" y="750.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="714.6" y="739.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="717.6" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.03%)</title><rect x="715.6" y="739.0" width="0.4" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="718.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="715.6" y="723.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="718.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="715.6" y="707.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="718.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="715.6" y="691.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="718.6" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="715.6" y="675.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="718.6" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="715.6" y="659.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="718.6" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="715.6" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="718.6" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="715.6" y="627.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="718.6" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="715.6" y="611.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="718.6" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (6 samples, 0.10%)</title><rect x="716.2" y="771.0" width="1.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="719.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (3 samples, 0.05%)</title><rect x="716.8" y="755.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="719.8" y="766.0"></text>
</g>
<g>
<title>[NIO Worker #7 tid=875] (1,082 samples, 18.71%)</title><rect x="717.6" y="899.0" width="220.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="720.6" y="910.0">[NIO Worker #7 tid=875]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.03%)</title><rect x="717.6" y="883.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="720.6" y="894.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.03%)</title><rect x="717.6" y="867.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="720.6" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) (2 samples, 0.03%)</title><rect x="717.6" y="851.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="720.6" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (1,080 samples, 18.68%)</title><rect x="718.0" y="883.0" width="220.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="721.0" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,080 samples, 18.68%)</title><rect x="718.0" y="867.0" width="220.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="721.0" y="878.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,080 samples, 18.68%)</title><rect x="718.0" y="851.0" width="220.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="721.0" y="862.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>I2C/C2I adapters (5 samples, 0.09%)</title><rect x="722.3" y="835.0" width="1.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="725.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (3 samples, 0.05%)</title><rect x="723.3" y="835.0" width="0.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="726.3" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (3 samples, 0.05%)</title><rect x="723.3" y="819.0" width="0.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="726.3" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (441 samples, 7.63%)</title><rect x="724.2" y="835.0" width="89.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="727.2" y="846.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (441 samples, 7.63%)</title><rect x="724.2" y="819.0" width="89.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="727.2" y="830.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (440 samples, 7.61%)</title><rect x="724.4" y="803.0" width="89.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="727.4" y="814.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (109 samples, 1.88%)</title><rect x="724.6" y="787.0" width="22.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="727.6" y="798.0">j..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (4 samples, 0.07%)</title><rect x="724.6" y="771.0" width="0.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="727.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (105 samples, 1.82%)</title><rect x="725.4" y="771.0" width="21.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="728.4" y="782.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (105 samples, 1.82%)</title><rect x="725.4" y="755.0" width="21.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="728.4" y="766.0">j..</text>
</g>
<g>
<title>Unsafe_Park (62 samples, 1.07%)</title><rect x="725.6" y="739.0" width="12.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="728.6" y="750.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.03%)</title><rect x="726.0" y="723.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="729.0" y="734.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (14 samples, 0.24%)</title><rect x="726.4" y="723.0" width="2.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="729.4" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (5 samples, 0.09%)</title><rect x="727.4" y="707.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="730.4" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (4 samples, 0.07%)</title><rect x="728.4" y="707.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="731.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.03%)</title><rect x="729.3" y="723.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="732.3" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (30 samples, 0.52%)</title><rect x="729.9" y="723.0" width="6.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="732.9" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.29%)</title><rect x="732.5" y="707.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="735.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (17 samples, 0.29%)</title><rect x="732.5" y="691.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (15 samples, 0.26%)</title><rect x="732.7" y="675.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.7" y="686.0"></text>
</g>
<g>
<title>do_futex (12 samples, 0.21%)</title><rect x="732.7" y="659.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="735.7" y="670.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 0.12%)</title><rect x="733.3" y="643.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="736.3" y="654.0"></text>
</g>
<g>
<title>get_futex_key (3 samples, 0.05%)</title><rect x="734.0" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="737.0" y="638.0"></text>
</g>
<g>
<title>get_futex_key_refs.isra.17 (2 samples, 0.03%)</title><rect x="734.2" y="611.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="737.2" y="622.0"></text>
</g>
<g>
<title>hash_futex (2 samples, 0.03%)</title><rect x="734.8" y="643.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="737.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.05%)</title><rect x="735.2" y="659.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="738.2" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="736.0" y="723.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="739.0" y="734.0"></text>
</g>
<g>
<title>_init (3 samples, 0.05%)</title><rect x="736.6" y="723.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="739.6" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (3 samples, 0.05%)</title><rect x="737.2" y="723.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="740.2" y="734.0"></text>
</g>
<g>
<title>[unknown] (40 samples, 0.69%)</title><rect x="738.2" y="739.0" width="8.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="741.2" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (36 samples, 0.62%)</title><rect x="738.2" y="723.0" width="7.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="741.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (23 samples, 0.40%)</title><rect x="740.9" y="707.0" width="4.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="743.9" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (22 samples, 0.38%)</title><rect x="741.1" y="691.0" width="4.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="744.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (20 samples, 0.35%)</title><rect x="741.5" y="675.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="744.5" y="686.0"></text>
</g>
<g>
<title>do_futex (19 samples, 0.33%)</title><rect x="741.7" y="659.0" width="3.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="744.7" y="670.0"></text>
</g>
<g>
<title>futex_wait (18 samples, 0.31%)</title><rect x="741.9" y="643.0" width="3.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="744.9" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (17 samples, 0.29%)</title><rect x="742.1" y="627.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.1" y="638.0"></text>
</g>
<g>
<title>schedule (14 samples, 0.24%)</title><rect x="742.7" y="611.0" width="2.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="745.7" y="622.0"></text>
</g>
<g>
<title>__schedule (14 samples, 0.24%)</title><rect x="742.7" y="595.0" width="2.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="745.7" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (13 samples, 0.22%)</title><rect x="742.9" y="579.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="745.9" y="590.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (2 samples, 0.03%)</title><rect x="746.4" y="739.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="749.4" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (6 samples, 0.10%)</title><rect x="746.8" y="787.0" width="1.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="749.8" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (6 samples, 0.10%)</title><rect x="746.8" y="771.0" width="1.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="749.8" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (6 samples, 0.10%)</title><rect x="746.8" y="755.0" width="1.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="749.8" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (324 samples, 5.60%)</title><rect x="748.0" y="787.0" width="66.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="751.0" y="798.0">java/ut..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (306 samples, 5.29%)</title><rect x="751.7" y="771.0" width="62.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="754.7" y="782.0">java/u..</text>
</g>
<g>
<title>apic_timer_interrupt (7 samples, 0.12%)</title><rect x="812.7" y="755.0" width="1.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="815.7" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (7 samples, 0.12%)</title><rect x="812.7" y="739.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="815.7" y="750.0"></text>
</g>
<g>
<title>irq_exit (7 samples, 0.12%)</title><rect x="812.7" y="723.0" width="1.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="815.7" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (7 samples, 0.12%)</title><rect x="812.7" y="707.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="815.7" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (7 samples, 0.12%)</title><rect x="812.7" y="691.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="815.7" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (7 samples, 0.12%)</title><rect x="812.7" y="675.0" width="1.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="815.7" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (7 samples, 0.12%)</title><rect x="812.7" y="659.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="815.7" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.run (608 samples, 10.51%)</title><rect x="814.1" y="835.0" width="124.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="817.1" y="846.0">ru/mail/polis/s..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (608 samples, 10.51%)</title><rect x="814.1" y="819.0" width="124.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="817.1" y="830.0">ru/mail/polis/s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (249 samples, 4.31%)</title><rect x="814.1" y="803.0" width="50.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="817.1" y="814.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (244 samples, 4.22%)</title><rect x="814.6" y="787.0" width="49.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="817.6" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.12%)</title><rect x="814.6" y="771.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="817.6" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.05%)</title><rect x="815.4" y="755.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="818.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="815.6" y="739.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="818.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.03%)</title><rect x="815.6" y="723.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="818.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (237 samples, 4.10%)</title><rect x="816.0" y="771.0" width="48.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="819.0" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (236 samples, 4.08%)</title><rect x="816.2" y="755.0" width="48.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="819.2" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (234 samples, 4.05%)</title><rect x="816.4" y="739.0" width="47.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="819.4" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (234 samples, 4.05%)</title><rect x="816.4" y="723.0" width="47.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="819.4" y="734.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.07%)</title><rect x="817.4" y="707.0" width="0.8" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="820.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="818.2" y="707.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="821.2" y="718.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.10%)</title><rect x="818.2" y="691.0" width="1.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="821.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (5 samples, 0.09%)</title><rect x="818.2" y="675.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="821.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.09%)</title><rect x="818.2" y="659.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="821.2" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.03%)</title><rect x="818.6" y="643.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="821.6" y="654.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="819.5" y="707.0" width="0.4" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="822.5" y="718.0"></text>
</g>
<g>
<title>__send (217 samples, 3.75%)</title><rect x="819.9" y="707.0" width="44.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="822.9" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (212 samples, 3.67%)</title><rect x="820.9" y="691.0" width="43.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="823.9" y="702.0">entr..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.03%)</title><rect x="820.9" y="675.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="823.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (210 samples, 3.63%)</title><rect x="821.3" y="675.0" width="42.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="824.3" y="686.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (209 samples, 3.61%)</title><rect x="821.5" y="659.0" width="42.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="824.5" y="670.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (209 samples, 3.61%)</title><rect x="821.5" y="643.0" width="42.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="824.5" y="654.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (205 samples, 3.54%)</title><rect x="821.5" y="627.0" width="41.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="824.5" y="638.0">soc..</text>
</g>
<g>
<title>inet_sendmsg (197 samples, 3.41%)</title><rect x="821.7" y="611.0" width="40.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.7" y="622.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (194 samples, 3.35%)</title><rect x="822.3" y="595.0" width="39.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="825.3" y="606.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (191 samples, 3.30%)</title><rect x="822.5" y="579.0" width="39.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="825.5" y="590.0">tcp..</text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.05%)</title><rect x="823.1" y="563.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="826.1" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.21%)</title><rect x="823.7" y="563.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="826.7" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (10 samples, 0.17%)</title><rect x="824.1" y="547.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="827.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.07%)</title><rect x="824.1" y="531.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="827.1" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.07%)</title><rect x="824.1" y="515.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="827.1" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.07%)</title><rect x="825.0" y="531.0" width="0.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="828.0" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="825.8" y="531.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="828.8" y="542.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.03%)</title><rect x="826.2" y="563.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="829.2" y="574.0"></text>
</g>
<g>
<title>tcp_push (161 samples, 2.78%)</title><rect x="826.8" y="563.0" width="32.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="829.8" y="574.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (160 samples, 2.77%)</title><rect x="827.0" y="547.0" width="32.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="830.0" y="558.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (159 samples, 2.75%)</title><rect x="827.2" y="531.0" width="32.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="830.2" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (149 samples, 2.58%)</title><rect x="828.2" y="515.0" width="30.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="831.2" y="526.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (142 samples, 2.46%)</title><rect x="829.2" y="499.0" width="29.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="832.2" y="510.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (142 samples, 2.46%)</title><rect x="829.2" y="483.0" width="29.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="832.2" y="494.0">__..</text>
</g>
<g>
<title>ip_local_out (139 samples, 2.40%)</title><rect x="829.7" y="467.0" width="28.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="832.7" y="478.0">ip..</text>
</g>
<g>
<title>ip_output (139 samples, 2.40%)</title><rect x="829.7" y="451.0" width="28.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="832.7" y="462.0">ip..</text>
</g>
<g>
<title>ip_finish_output (139 samples, 2.40%)</title><rect x="829.7" y="435.0" width="28.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="832.7" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (136 samples, 2.35%)</title><rect x="830.3" y="419.0" width="27.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="833.3" y="430.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (120 samples, 2.08%)</title><rect x="830.7" y="403.0" width="24.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="833.7" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (120 samples, 2.08%)</title><rect x="830.7" y="387.0" width="24.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="833.7" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (116 samples, 2.01%)</title><rect x="831.5" y="371.0" width="23.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="834.5" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (116 samples, 2.01%)</title><rect x="831.5" y="355.0" width="23.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="834.5" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (110 samples, 1.90%)</title><rect x="832.7" y="339.0" width="22.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="835.7" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (107 samples, 1.85%)</title><rect x="833.3" y="323.0" width="21.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="836.3" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (107 samples, 1.85%)</title><rect x="833.3" y="307.0" width="21.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="836.3" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (107 samples, 1.85%)</title><rect x="833.3" y="291.0" width="21.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="836.3" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.03%)</title><rect x="833.5" y="275.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="836.5" y="286.0"></text>
</g>
<g>
<title>ip_rcv (102 samples, 1.76%)</title><rect x="833.9" y="275.0" width="20.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="836.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (102 samples, 1.76%)</title><rect x="833.9" y="259.0" width="20.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="836.9" y="270.0"></text>
</g>
<g>
<title>ip_local_deliver (101 samples, 1.75%)</title><rect x="833.9" y="243.0" width="20.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="836.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (99 samples, 1.71%)</title><rect x="834.3" y="227.0" width="20.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="837.3" y="238.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (99 samples, 1.71%)</title><rect x="834.3" y="211.0" width="20.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="837.3" y="222.0"></text>
</g>
<g>
<title>sock_put (2 samples, 0.03%)</title><rect x="834.8" y="195.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="837.8" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (94 samples, 1.63%)</title><rect x="835.4" y="195.0" width="19.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="838.4" y="206.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (87 samples, 1.50%)</title><rect x="836.8" y="179.0" width="17.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="839.8" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (85 samples, 1.47%)</title><rect x="837.2" y="163.0" width="17.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="840.2" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.05%)</title><rect x="837.2" y="147.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="840.2" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.05%)</title><rect x="837.2" y="131.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="840.2" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.03%)</title><rect x="837.4" y="115.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="840.4" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.03%)</title><rect x="837.4" y="99.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.4" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="837.4" y="83.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="840.4" y="94.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.36%)</title><rect x="838.2" y="147.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="841.2" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (15 samples, 0.26%)</title><rect x="839.4" y="131.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="842.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.10%)</title><rect x="840.5" y="115.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.5" y="126.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 0.09%)</title><rect x="840.7" y="99.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="843.7" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 0.09%)</title><rect x="840.7" y="83.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="843.7" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.03%)</title><rect x="841.3" y="67.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="844.3" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.03%)</title><rect x="841.3" y="51.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="844.3" y="62.0"></text>
</g>
<g>
<title>rb_erase (2 samples, 0.03%)</title><rect x="841.9" y="115.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="844.9" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (55 samples, 0.95%)</title><rect x="842.7" y="147.0" width="11.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="845.7" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (51 samples, 0.88%)</title><rect x="843.1" y="131.0" width="10.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="846.1" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (50 samples, 0.86%)</title><rect x="843.3" y="115.0" width="10.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="846.3" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (50 samples, 0.86%)</title><rect x="843.3" y="99.0" width="10.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.3" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (50 samples, 0.86%)</title><rect x="843.3" y="83.0" width="10.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="846.3" y="94.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.05%)</title><rect x="853.9" y="147.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="856.9" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.03%)</title><rect x="854.8" y="275.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="857.8" y="286.0"></text>
</g>
<g>
<title>dev_queue_xmit (14 samples, 0.24%)</title><rect x="855.2" y="403.0" width="2.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="858.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.24%)</title><rect x="855.2" y="387.0" width="2.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="858.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (8 samples, 0.14%)</title><rect x="855.8" y="371.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="858.8" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.10%)</title><rect x="856.0" y="355.0" width="1.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="859.0" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="856.4" y="339.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="859.4" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.03%)</title><rect x="857.6" y="371.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="860.6" y="382.0"></text>
</g>
<g>
<title>tcp_send_mss (9 samples, 0.16%)</title><rect x="859.6" y="563.0" width="1.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="862.6" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (3 samples, 0.05%)</title><rect x="859.6" y="547.0" width="0.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="862.6" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (6 samples, 0.10%)</title><rect x="860.3" y="547.0" width="1.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="863.3" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.03%)</title><rect x="860.9" y="531.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="863.9" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.03%)</title><rect x="861.5" y="579.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="864.5" y="590.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.12%)</title><rect x="861.9" y="611.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="864.9" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (6 samples, 0.10%)</title><rect x="862.1" y="595.0" width="1.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="865.1" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.09%)</title><rect x="862.3" y="579.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="865.3" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.07%)</title><rect x="862.5" y="563.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="865.5" y="574.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.05%)</title><rect x="862.7" y="547.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="865.7" y="558.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.03%)</title><rect x="862.9" y="531.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="865.9" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="863.3" y="627.0" width="0.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="866.3" y="638.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="863.3" y="611.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="866.3" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="863.3" y="595.0" width="0.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="866.3" y="606.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.05%)</title><rect x="863.5" y="579.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="866.5" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.03%)</title><rect x="864.3" y="787.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="867.3" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (359 samples, 6.21%)</title><rect x="865.0" y="803.0" width="73.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="868.0" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="865.0" y="787.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="868.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (355 samples, 6.14%)</title><rect x="865.8" y="787.0" width="72.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="868.8" y="798.0">ru/mail/..</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.07%)</title><rect x="865.8" y="771.0" width="0.8" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="868.8" y="782.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (348 samples, 6.02%)</title><rect x="866.6" y="771.0" width="71.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="869.6" y="782.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (347 samples, 6.00%)</title><rect x="866.8" y="755.0" width="70.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="869.8" y="766.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (243 samples, 4.20%)</title><rect x="867.0" y="739.0" width="49.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="870.0" y="750.0">Java_..</text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.03%)</title><rect x="868.8" y="723.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="871.8" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (232 samples, 4.01%)</title><rect x="869.2" y="723.0" width="47.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="872.2" y="734.0">rock..</text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.03%)</title><rect x="870.1" y="707.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="873.1" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.05%)</title><rect x="870.5" y="707.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="873.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.07%)</title><rect x="871.5" y="707.0" width="0.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="874.5" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.03%)</title><rect x="871.7" y="691.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="874.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (217 samples, 3.75%)</title><rect x="872.3" y="707.0" width="44.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="875.3" y="718.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (214 samples, 3.70%)</title><rect x="872.9" y="691.0" width="43.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="875.9" y="702.0">rock..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (211 samples, 3.65%)</title><rect x="873.1" y="675.0" width="43.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="876.1" y="686.0">rock..</text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="873.3" y="659.0" width="0.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="876.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (192 samples, 3.32%)</title><rect x="873.9" y="659.0" width="39.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="876.9" y="670.0">roc..</text>
</g>
<g>
<title>_init (3 samples, 0.05%)</title><rect x="874.1" y="643.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="877.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.03%)</title><rect x="875.0" y="643.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="878.0" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (181 samples, 3.13%)</title><rect x="875.4" y="643.0" width="36.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="878.4" y="654.0">roc..</text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.05%)</title><rect x="878.6" y="627.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="881.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (37 samples, 0.64%)</title><rect x="880.5" y="627.0" width="7.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="883.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (32 samples, 0.55%)</title><rect x="880.9" y="611.0" width="6.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="883.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (30 samples, 0.52%)</title><rect x="881.3" y="595.0" width="6.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="884.3" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (5 samples, 0.09%)</title><rect x="881.7" y="579.0" width="1.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="884.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (23 samples, 0.40%)</title><rect x="882.7" y="579.0" width="4.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="885.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush() (2 samples, 0.03%)</title><rect x="883.3" y="563.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="886.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.03%)</title><rect x="883.7" y="563.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="886.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (2 samples, 0.03%)</title><rect x="884.1" y="563.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="887.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="884.5" y="563.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="887.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (10 samples, 0.17%)</title><rect x="885.4" y="563.0" width="2.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="888.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) (2 samples, 0.03%)</title><rect x="885.8" y="547.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="888.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (6 samples, 0.10%)</title><rect x="886.2" y="547.0" width="1.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="889.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="887.0" y="531.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="890.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::IsLatestPersistentState(rocksdb::WriteBatch const*) (2 samples, 0.03%)</title><rect x="887.4" y="611.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="890.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (3 samples, 0.05%)</title><rect x="888.0" y="627.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="891.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.03%)</title><rect x="888.6" y="627.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="891.6" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (2 samples, 0.03%)</title><rect x="888.6" y="611.0" width="0.4" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="891.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (52 samples, 0.90%)</title><rect x="889.4" y="627.0" width="10.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="892.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (51 samples, 0.88%)</title><rect x="889.6" y="611.0" width="10.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="892.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (49 samples, 0.85%)</title><rect x="889.6" y="595.0" width="10.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="892.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (48 samples, 0.83%)</title><rect x="889.8" y="579.0" width="9.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="892.8" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (3 samples, 0.05%)</title><rect x="890.1" y="563.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="893.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.03%)</title><rect x="890.9" y="563.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="893.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (39 samples, 0.67%)</title><rect x="891.5" y="563.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="894.5" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (5 samples, 0.09%)</title><rect x="891.7" y="547.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="894.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.05%)</title><rect x="892.1" y="531.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="895.1" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (23 samples, 0.40%)</title><rect x="892.7" y="547.0" width="4.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="895.7" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (16 samples, 0.28%)</title><rect x="893.3" y="531.0" width="3.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="896.3" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (9 samples, 0.16%)</title><rect x="894.3" y="515.0" width="1.9" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="897.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.14%)</title><rect x="894.5" y="499.0" width="1.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="897.5" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="895.6" y="483.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="898.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="896.2" y="515.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="899.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (4 samples, 0.07%)</title><rect x="896.6" y="531.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="899.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.05%)</title><rect x="897.4" y="547.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="900.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (3 samples, 0.05%)</title><rect x="898.2" y="547.0" width="0.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="901.2" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (3 samples, 0.05%)</title><rect x="898.2" y="531.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="901.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (3 samples, 0.05%)</title><rect x="898.8" y="547.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="901.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="899.6" y="595.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="902.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (18 samples, 0.31%)</title><rect x="900.1" y="627.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="903.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (15 samples, 0.26%)</title><rect x="900.7" y="611.0" width="3.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="903.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (15 samples, 0.26%)</title><rect x="900.7" y="595.0" width="3.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="903.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (15 samples, 0.26%)</title><rect x="900.7" y="579.0" width="3.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="903.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (11 samples, 0.19%)</title><rect x="901.1" y="563.0" width="2.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="904.1" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.03%)</title><rect x="901.3" y="547.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="904.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (6 samples, 0.10%)</title><rect x="902.1" y="547.0" width="1.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="905.1" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.10%)</title><rect x="902.1" y="531.0" width="1.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="905.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (5 samples, 0.09%)</title><rect x="902.3" y="515.0" width="1.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="905.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.03%)</title><rect x="902.9" y="499.0" width="0.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="905.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="902.9" y="483.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="905.9" y="494.0"></text>
</g>
<g>
<title>std::_Rb_tree_insert_and_rebalance(bool, std::_Rb_tree_node_base*, std::_Rb_tree_node_base*, std::_Rb_tree_node_base&amp;) (2 samples, 0.03%)</title><rect x="903.3" y="563.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="906.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (2 samples, 0.03%)</title><rect x="903.7" y="627.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="906.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (33 samples, 0.57%)</title><rect x="904.1" y="627.0" width="6.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="907.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.05%)</title><rect x="910.9" y="627.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="913.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.05%)</title><rect x="910.9" y="611.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="913.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (3 samples, 0.05%)</title><rect x="913.1" y="659.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="916.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.12%)</title><rect x="913.7" y="659.0" width="1.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="916.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.05%)</title><rect x="913.7" y="643.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="916.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.05%)</title><rect x="914.5" y="643.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="917.5" y="654.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.03%)</title><rect x="915.4" y="659.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="918.4" y="670.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (2 samples, 0.03%)</title><rect x="915.8" y="659.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="918.8" y="670.0"></text>
</g>
<g>
<title>[unknown] (92 samples, 1.59%)</title><rect x="916.6" y="739.0" width="18.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="919.6" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (5 samples, 0.09%)</title><rect x="916.6" y="723.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="919.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.07%)</title><rect x="916.8" y="707.0" width="0.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="919.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.07%)</title><rect x="916.8" y="691.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="919.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="917.0" y="675.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="920.0" y="686.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="917.0" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="920.0" y="670.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.05%)</title><rect x="917.0" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="920.0" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="917.0" y="627.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="920.0" y="638.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.03%)</title><rect x="917.6" y="723.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="920.6" y="734.0"></text>
</g>
<g>
<title>__write (85 samples, 1.47%)</title><rect x="918.0" y="723.0" width="17.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="921.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (83 samples, 1.44%)</title><rect x="918.4" y="707.0" width="17.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="921.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (82 samples, 1.42%)</title><rect x="918.6" y="691.0" width="16.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="921.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (81 samples, 1.40%)</title><rect x="918.8" y="675.0" width="16.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="921.8" y="686.0"></text>
</g>
<g>
<title>ksys_write (81 samples, 1.40%)</title><rect x="918.8" y="659.0" width="16.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="921.8" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (2 samples, 0.03%)</title><rect x="918.8" y="643.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="921.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.03%)</title><rect x="918.8" y="627.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="921.8" y="638.0"></text>
</g>
<g>
<title>vfs_write (78 samples, 1.35%)</title><rect x="919.4" y="643.0" width="16.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="922.4" y="654.0"></text>
</g>
<g>
<title>__sb_start_write (4 samples, 0.07%)</title><rect x="919.4" y="627.0" width="0.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="922.4" y="638.0"></text>
</g>
<g>
<title>__vfs_write (64 samples, 1.11%)</title><rect x="920.3" y="627.0" width="13.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.3" y="638.0"></text>
</g>
<g>
<title>new_sync_write (64 samples, 1.11%)</title><rect x="920.3" y="611.0" width="13.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="923.3" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (64 samples, 1.11%)</title><rect x="920.3" y="595.0" width="13.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="923.3" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (61 samples, 1.05%)</title><rect x="920.5" y="579.0" width="12.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="923.5" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.03%)</title><rect x="920.5" y="563.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="923.5" y="574.0"></text>
</g>
<g>
<title>file_update_time (5 samples, 0.09%)</title><rect x="920.9" y="563.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="923.9" y="574.0"></text>
</g>
<g>
<title>generic_update_time (4 samples, 0.07%)</title><rect x="920.9" y="547.0" width="0.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="923.9" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (4 samples, 0.07%)</title><rect x="920.9" y="531.0" width="0.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="923.9" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (4 samples, 0.07%)</title><rect x="920.9" y="515.0" width="0.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="923.9" y="526.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (3 samples, 0.05%)</title><rect x="921.1" y="499.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="924.1" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.03%)</title><rect x="921.3" y="483.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="924.3" y="494.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.03%)</title><rect x="921.3" y="467.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="924.3" y="478.0"></text>
</g>
<g>
<title>generic_perform_write (54 samples, 0.93%)</title><rect x="921.9" y="563.0" width="11.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="924.9" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_begin (21 samples, 0.36%)</title><rect x="922.3" y="547.0" width="4.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="925.3" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (5 samples, 0.09%)</title><rect x="923.3" y="531.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="926.3" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (5 samples, 0.09%)</title><rect x="923.3" y="515.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="926.3" y="526.0"></text>
</g>
<g>
<title>start_this_handle (4 samples, 0.07%)</title><rect x="923.5" y="499.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="926.5" y="510.0"></text>
</g>
<g>
<title>add_transaction_credits (3 samples, 0.05%)</title><rect x="923.7" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="926.7" y="494.0"></text>
</g>
<g>
<title>ext4_nonda_switch (2 samples, 0.03%)</title><rect x="924.3" y="531.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="927.3" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (7 samples, 0.12%)</title><rect x="924.7" y="531.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="927.7" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (6 samples, 0.10%)</title><rect x="924.7" y="515.0" width="1.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="927.7" y="526.0"></text>
</g>
<g>
<title>find_get_entry (6 samples, 0.10%)</title><rect x="924.7" y="499.0" width="1.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="927.7" y="510.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.05%)</title><rect x="925.1" y="483.0" width="0.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="928.1" y="494.0"></text>
</g>
<g>
<title>wait_for_stable_page (2 samples, 0.03%)</title><rect x="926.2" y="531.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="929.2" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (29 samples, 0.50%)</title><rect x="926.6" y="547.0" width="5.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="929.6" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.03%)</title><rect x="927.0" y="531.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="930.0" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="927.0" y="515.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="930.0" y="526.0"></text>
</g>
<g>
<title>generic_write_end (23 samples, 0.40%)</title><rect x="927.8" y="531.0" width="4.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="930.8" y="542.0"></text>
</g>
<g>
<title>__generic_write_end (21 samples, 0.36%)</title><rect x="928.0" y="515.0" width="4.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.0" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (21 samples, 0.36%)</title><rect x="928.0" y="499.0" width="4.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="931.0" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (21 samples, 0.36%)</title><rect x="928.0" y="483.0" width="4.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.0" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (18 samples, 0.31%)</title><rect x="928.4" y="467.0" width="3.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="931.4" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (14 samples, 0.24%)</title><rect x="928.4" y="451.0" width="2.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="931.4" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (13 samples, 0.22%)</title><rect x="928.4" y="435.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="931.4" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (6 samples, 0.10%)</title><rect x="929.4" y="419.0" width="1.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.4" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (6 samples, 0.10%)</title><rect x="929.4" y="403.0" width="1.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="932.4" y="414.0"></text>
</g>
<g>
<title>crypto_shash_update (3 samples, 0.05%)</title><rect x="930.0" y="387.0" width="0.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="933.0" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (4 samples, 0.07%)</title><rect x="931.3" y="451.0" width="0.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="934.3" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.07%)</title><rect x="931.3" y="435.0" width="0.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="934.3" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (3 samples, 0.05%)</title><rect x="931.5" y="419.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="934.5" y="430.0"></text>
</g>
<g>
<title>__find_get_block (3 samples, 0.05%)</title><rect x="931.5" y="403.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="934.5" y="414.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (2 samples, 0.03%)</title><rect x="932.5" y="547.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="935.5" y="558.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.03%)</title><rect x="932.5" y="531.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="935.5" y="542.0"></text>
</g>
<g>
<title>rw_verify_area (10 samples, 0.17%)</title><rect x="933.3" y="627.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.3" y="638.0"></text>
</g>
<g>
<title>security_file_permission (10 samples, 0.17%)</title><rect x="933.3" y="611.0" width="2.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="936.3" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (8 samples, 0.14%)</title><rect x="933.3" y="595.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="936.3" y="606.0"></text>
</g>
<g>
<title>common_file_perm (8 samples, 0.14%)</title><rect x="933.3" y="579.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.3" y="590.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.03%)</title><rect x="934.9" y="595.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="937.9" y="606.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (6 samples, 0.10%)</title><rect x="936.0" y="739.0" width="1.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="939.0" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.10%)</title><rect x="936.0" y="723.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="939.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 0.10%)</title><rect x="936.0" y="707.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="939.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 0.10%)</title><rect x="936.0" y="691.0" width="1.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="939.0" y="702.0"></text>
</g>
<g>
<title>do_futex (6 samples, 0.10%)</title><rect x="936.0" y="675.0" width="1.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="939.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 0.10%)</title><rect x="936.0" y="659.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="939.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.07%)</title><rect x="936.4" y="643.0" width="0.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="939.4" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.07%)</title><rect x="936.4" y="627.0" width="0.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="939.4" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="936.4" y="611.0" width="0.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="939.4" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (3 samples, 0.05%)</title><rect x="937.6" y="771.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="940.6" y="782.0"></text>
</g>
<g>
<title>[NIO Worker #8 tid=874] (1,091 samples, 18.87%)</title><rect x="938.4" y="899.0" width="222.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="941.4" y="910.0">[NIO Worker #8 tid=874]</text>
</g>
<g>
<title>java/lang/Thread.run (1,088 samples, 18.81%)</title><rect x="939.0" y="883.0" width="222.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="942.0" y="894.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (1,088 samples, 18.81%)</title><rect x="939.0" y="867.0" width="222.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="942.0" y="878.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (1,088 samples, 18.81%)</title><rect x="939.0" y="851.0" width="222.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="942.0" y="862.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.03%)</title><rect x="942.7" y="835.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="945.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.interrupted (5 samples, 0.09%)</title><rect x="943.1" y="835.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="946.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Thread.isInterrupted (2 samples, 0.03%)</title><rect x="943.7" y="819.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="946.7" y="830.0"></text>
</g>
<g>
<title>JVM_IsInterrupted (2 samples, 0.03%)</title><rect x="943.7" y="803.0" width="0.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="946.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (418 samples, 7.23%)</title><rect x="944.7" y="835.0" width="85.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="947.7" y="846.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue.take (413 samples, 7.14%)</title><rect x="945.6" y="819.0" width="84.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="948.6" y="830.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.transfer (413 samples, 7.14%)</title><rect x="945.6" y="803.0" width="84.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="948.6" y="814.0">java/util/..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.awaitFulfill (102 samples, 1.76%)</title><rect x="945.8" y="787.0" width="20.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="948.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.shouldSpin (2 samples, 0.03%)</title><rect x="946.2" y="771.0" width="0.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="949.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (98 samples, 1.69%)</title><rect x="946.6" y="771.0" width="20.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="949.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (98 samples, 1.69%)</title><rect x="946.6" y="755.0" width="20.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="949.6" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (51 samples, 0.88%)</title><rect x="947.0" y="739.0" width="10.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="950.0" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (11 samples, 0.19%)</title><rect x="947.6" y="723.0" width="2.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="950.6" y="734.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (2 samples, 0.03%)</title><rect x="948.4" y="707.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="951.4" y="718.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.05%)</title><rect x="948.8" y="707.0" width="0.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="951.8" y="718.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="949.4" y="707.0" width="0.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="952.4" y="718.0"></text>
</g>
<g>
<title>Thread::is_interrupted(Thread*, bool) (2 samples, 0.03%)</title><rect x="949.8" y="723.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="952.8" y="734.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.318] (2 samples, 0.03%)</title><rect x="950.2" y="723.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="953.2" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (23 samples, 0.40%)</title><rect x="950.7" y="723.0" width="4.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="953.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (14 samples, 0.24%)</title><rect x="952.5" y="707.0" width="2.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="955.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (14 samples, 0.24%)</title><rect x="952.5" y="691.0" width="2.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="955.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 0.16%)</title><rect x="953.1" y="675.0" width="1.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.1" y="686.0"></text>
</g>
<g>
<title>do_futex (8 samples, 0.14%)</title><rect x="953.3" y="659.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="956.3" y="670.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 0.09%)</title><rect x="953.9" y="643.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.9" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="954.9" y="675.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="957.9" y="686.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.03%)</title><rect x="955.3" y="723.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="958.3" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (4 samples, 0.07%)</title><rect x="955.8" y="723.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="958.8" y="734.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (4 samples, 0.07%)</title><rect x="956.6" y="723.0" width="0.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="959.6" y="734.0"></text>
</g>
<g>
<title>[unknown] (42 samples, 0.73%)</title><rect x="957.4" y="739.0" width="8.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="960.4" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_wait (38 samples, 0.66%)</title><rect x="957.4" y="723.0" width="7.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="960.4" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (32 samples, 0.55%)</title><rect x="958.6" y="707.0" width="6.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="961.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (32 samples, 0.55%)</title><rect x="958.6" y="691.0" width="6.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="961.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (32 samples, 0.55%)</title><rect x="958.6" y="675.0" width="6.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="961.6" y="686.0"></text>
</g>
<g>
<title>do_futex (31 samples, 0.54%)</title><rect x="958.6" y="659.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="961.6" y="670.0"></text>
</g>
<g>
<title>futex_wait (28 samples, 0.48%)</title><rect x="959.2" y="643.0" width="5.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="962.2" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (24 samples, 0.42%)</title><rect x="959.2" y="627.0" width="4.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="962.2" y="638.0"></text>
</g>
<g>
<title>schedule (24 samples, 0.42%)</title><rect x="959.2" y="611.0" width="4.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="962.2" y="622.0"></text>
</g>
<g>
<title>__schedule (24 samples, 0.42%)</title><rect x="959.2" y="595.0" width="4.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="962.2" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 0.42%)</title><rect x="959.2" y="579.0" width="4.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="962.2" y="590.0"></text>
</g>
<g>
<title>futex_wait_setup (3 samples, 0.05%)</title><rect x="964.1" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="967.1" y="638.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="965.3" y="723.0" width="0.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="968.3" y="734.0"></text>
</g>
<g>
<title>java_lang_Thread::get_thread_status(oopDesc*) (2 samples, 0.03%)</title><rect x="966.2" y="739.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="969.2" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.casHead (3 samples, 0.05%)</title><rect x="966.6" y="787.0" width="0.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="969.6" y="798.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleGuards.guard_LLL_Z (3 samples, 0.05%)</title><rect x="966.6" y="771.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.6" y="782.0"></text>
</g>
<g>
<title>java/lang/invoke/VarHandleObjects$FieldInstanceReadWrite.compareAndSet (3 samples, 0.05%)</title><rect x="966.6" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack.snode (307 samples, 5.31%)</title><rect x="967.2" y="787.0" width="62.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="970.2" y="798.0">java/u..</text>
</g>
<g>
<title>java/util/concurrent/SynchronousQueue$TransferStack$SNode.&lt;init&gt; (299 samples, 5.17%)</title><rect x="968.8" y="771.0" width="61.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="971.8" y="782.0">java/u..</text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.05%)</title><rect x="1029.2" y="755.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1032.2" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="1029.2" y="739.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1032.2" y="750.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.05%)</title><rect x="1029.2" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1032.2" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.05%)</title><rect x="1029.2" y="707.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1032.2" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.05%)</title><rect x="1029.2" y="691.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1032.2" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.05%)</title><rect x="1029.2" y="675.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1032.2" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.05%)</title><rect x="1029.2" y="659.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1032.2" y="670.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runStateAtLeast (2 samples, 0.03%)</title><rect x="1030.0" y="835.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1033.0" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService$$Lambda$63/1192938459.run (639 samples, 11.05%)</title><rect x="1030.4" y="835.0" width="130.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1033.4" y="846.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.lambda$entity$0 (637 samples, 11.02%)</title><rect x="1030.8" y="819.0" width="130.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1033.8" y="830.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (261 samples, 4.51%)</title><rect x="1031.3" y="803.0" width="53.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1034.3" y="814.0">one/n..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.03%)</title><rect x="1032.3" y="787.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1035.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="1032.3" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1035.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="1032.3" y="755.0" width="0.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1035.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (251 samples, 4.34%)</title><rect x="1032.7" y="787.0" width="51.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1035.7" y="798.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (12 samples, 0.21%)</title><rect x="1032.7" y="771.0" width="2.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1035.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (2 samples, 0.03%)</title><rect x="1033.1" y="755.0" width="0.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1036.1" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (8 samples, 0.14%)</title><rect x="1033.5" y="755.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1036.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.12%)</title><rect x="1033.7" y="739.0" width="1.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1036.7" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (7 samples, 0.12%)</title><rect x="1033.7" y="723.0" width="1.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1036.7" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (239 samples, 4.13%)</title><rect x="1035.1" y="771.0" width="48.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1038.1" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (237 samples, 4.10%)</title><rect x="1035.1" y="755.0" width="48.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1038.1" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (235 samples, 4.06%)</title><rect x="1035.3" y="739.0" width="48.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1038.3" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (233 samples, 4.03%)</title><rect x="1035.7" y="723.0" width="47.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1038.7" y="734.0">one/..</text>
</g>
<g>
<title>[unknown] (11 samples, 0.19%)</title><rect x="1036.4" y="707.0" width="2.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1039.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.19%)</title><rect x="1036.4" y="691.0" width="2.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1039.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.07%)</title><rect x="1036.4" y="675.0" width="0.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1039.4" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="1036.6" y="659.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1039.6" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.05%)</title><rect x="1037.2" y="675.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1040.2" y="686.0"></text>
</g>
<g>
<title>__send (3 samples, 0.05%)</title><rect x="1037.8" y="675.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1040.8" y="686.0"></text>
</g>
<g>
<title>__send (219 samples, 3.79%)</title><rect x="1038.6" y="707.0" width="44.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1041.6" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (216 samples, 3.74%)</title><rect x="1039.2" y="691.0" width="44.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1042.2" y="702.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (215 samples, 3.72%)</title><rect x="1039.4" y="675.0" width="43.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1042.4" y="686.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (214 samples, 3.70%)</title><rect x="1039.6" y="659.0" width="43.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.6" y="670.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (212 samples, 3.67%)</title><rect x="1039.6" y="643.0" width="43.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1042.6" y="654.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (206 samples, 3.56%)</title><rect x="1040.0" y="627.0" width="42.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1043.0" y="638.0">sock..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.03%)</title><rect x="1040.0" y="611.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.0" y="622.0"></text>
</g>
<g>
<title>inet_sendmsg (203 samples, 3.51%)</title><rect x="1040.4" y="611.0" width="41.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1043.4" y="622.0">ine..</text>
</g>
<g>
<title>tcp_sendmsg (202 samples, 3.49%)</title><rect x="1040.6" y="595.0" width="41.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1043.6" y="606.0">tcp..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.03%)</title><rect x="1040.6" y="579.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1043.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.03%)</title><rect x="1040.6" y="563.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1043.6" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (2 samples, 0.03%)</title><rect x="1041.3" y="579.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1044.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (197 samples, 3.41%)</title><rect x="1041.7" y="579.0" width="40.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1044.7" y="590.0">tcp..</text>
</g>
<g>
<title>sk_stream_alloc_skb (12 samples, 0.21%)</title><rect x="1042.5" y="563.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1045.5" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (12 samples, 0.21%)</title><rect x="1042.5" y="547.0" width="2.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1045.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.03%)</title><rect x="1042.5" y="531.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1045.5" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (6 samples, 0.10%)</title><rect x="1042.9" y="531.0" width="1.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1045.9" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.03%)</title><rect x="1044.1" y="531.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1047.1" y="542.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.03%)</title><rect x="1044.5" y="531.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1047.5" y="542.0"></text>
</g>
<g>
<title>tcp_push (175 samples, 3.03%)</title><rect x="1044.9" y="563.0" width="35.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1047.9" y="574.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (175 samples, 3.03%)</title><rect x="1044.9" y="547.0" width="35.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1047.9" y="558.0">__t..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (2 samples, 0.03%)</title><rect x="1045.1" y="531.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1048.1" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (172 samples, 2.97%)</title><rect x="1045.5" y="531.0" width="35.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1048.5" y="542.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (161 samples, 2.78%)</title><rect x="1046.1" y="515.0" width="32.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1049.1" y="526.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (154 samples, 2.66%)</title><rect x="1047.2" y="499.0" width="31.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1050.2" y="510.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (153 samples, 2.65%)</title><rect x="1047.2" y="483.0" width="31.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1050.2" y="494.0">__..</text>
</g>
<g>
<title>ip_local_out (153 samples, 2.65%)</title><rect x="1047.2" y="467.0" width="31.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1050.2" y="478.0">ip..</text>
</g>
<g>
<title>ip_output (153 samples, 2.65%)</title><rect x="1047.2" y="451.0" width="31.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1050.2" y="462.0">ip..</text>
</g>
<g>
<title>ip_finish_output (153 samples, 2.65%)</title><rect x="1047.2" y="435.0" width="31.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1050.2" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (152 samples, 2.63%)</title><rect x="1047.4" y="419.0" width="31.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1050.4" y="430.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (131 samples, 2.27%)</title><rect x="1047.8" y="403.0" width="26.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1050.8" y="414.0">_..</text>
</g>
<g>
<title>do_softirq.part.21 (130 samples, 2.25%)</title><rect x="1048.0" y="387.0" width="26.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1051.0" y="398.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (128 samples, 2.21%)</title><rect x="1048.4" y="371.0" width="26.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1051.4" y="382.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (128 samples, 2.21%)</title><rect x="1048.4" y="355.0" width="26.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1051.4" y="366.0">_..</text>
</g>
<g>
<title>net_rx_action (123 samples, 2.13%)</title><rect x="1049.0" y="339.0" width="25.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1052.0" y="350.0">n..</text>
</g>
<g>
<title>process_backlog (119 samples, 2.06%)</title><rect x="1049.8" y="323.0" width="24.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1052.8" y="334.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (119 samples, 2.06%)</title><rect x="1049.8" y="307.0" width="24.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1052.8" y="318.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (117 samples, 2.02%)</title><rect x="1049.8" y="291.0" width="23.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1052.8" y="302.0">_..</text>
</g>
<g>
<title>ip_rcv (114 samples, 1.97%)</title><rect x="1050.0" y="275.0" width="23.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1053.0" y="286.0">i..</text>
</g>
<g>
<title>ip_rcv_finish (112 samples, 1.94%)</title><rect x="1050.2" y="259.0" width="22.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.2" y="270.0">i..</text>
</g>
<g>
<title>ip_local_deliver (112 samples, 1.94%)</title><rect x="1050.2" y="243.0" width="22.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1053.2" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (112 samples, 1.94%)</title><rect x="1050.2" y="227.0" width="22.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1053.2" y="238.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (112 samples, 1.94%)</title><rect x="1050.2" y="211.0" width="22.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1053.2" y="222.0">i..</text>
</g>
<g>
<title>tcp_v4_rcv (108 samples, 1.87%)</title><rect x="1051.0" y="195.0" width="22.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1054.0" y="206.0">t..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.05%)</title><rect x="1051.7" y="179.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1054.7" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.03%)</title><rect x="1052.7" y="179.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1055.7" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (97 samples, 1.68%)</title><rect x="1053.1" y="179.0" width="19.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1056.1" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (96 samples, 1.66%)</title><rect x="1053.3" y="163.0" width="19.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1056.3" y="174.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (8 samples, 0.14%)</title><rect x="1053.3" y="147.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1056.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (8 samples, 0.14%)</title><rect x="1053.3" y="131.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1056.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (8 samples, 0.14%)</title><rect x="1053.3" y="115.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1056.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (7 samples, 0.12%)</title><rect x="1053.5" y="99.0" width="1.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1056.5" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.07%)</title><rect x="1053.9" y="83.0" width="0.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1056.9" y="94.0"></text>
</g>
<g>
<title>tcp_ack (15 samples, 0.26%)</title><rect x="1055.1" y="147.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1058.1" y="158.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (6 samples, 0.10%)</title><rect x="1056.1" y="131.0" width="1.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1059.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.03%)</title><rect x="1056.8" y="115.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1059.8" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (65 samples, 1.12%)</title><rect x="1058.4" y="147.0" width="13.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1061.4" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (57 samples, 0.99%)</title><rect x="1059.2" y="131.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1062.2" y="142.0"></text>
</g>
<g>
<title>__wake_up_sync_key (53 samples, 0.92%)</title><rect x="1060.0" y="115.0" width="10.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1063.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_common_lock (53 samples, 0.92%)</title><rect x="1060.0" y="99.0" width="10.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1063.0" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (53 samples, 0.92%)</title><rect x="1060.0" y="83.0" width="10.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1063.0" y="94.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.05%)</title><rect x="1070.8" y="131.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1073.8" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (2 samples, 0.03%)</title><rect x="1071.7" y="147.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1074.7" y="158.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.03%)</title><rect x="1073.7" y="291.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1076.7" y="302.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.03%)</title><rect x="1074.1" y="339.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1077.1" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (19 samples, 0.33%)</title><rect x="1074.5" y="403.0" width="3.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1077.5" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (19 samples, 0.33%)</title><rect x="1074.5" y="387.0" width="3.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1077.5" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.03%)</title><rect x="1075.1" y="371.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1078.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.09%)</title><rect x="1075.5" y="371.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1078.5" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.09%)</title><rect x="1075.5" y="355.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1078.5" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.03%)</title><rect x="1075.7" y="339.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1078.7" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.03%)</title><rect x="1076.1" y="339.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1079.1" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.03%)</title><rect x="1076.1" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1079.1" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.03%)</title><rect x="1076.1" y="307.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1079.1" y="318.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.03%)</title><rect x="1076.6" y="371.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1079.6" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.09%)</title><rect x="1077.2" y="371.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1080.2" y="382.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.03%)</title><rect x="1079.6" y="515.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1082.6" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.07%)</title><rect x="1080.6" y="563.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1083.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.07%)</title><rect x="1080.6" y="547.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1083.6" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.07%)</title><rect x="1082.1" y="627.0" width="0.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1085.1" y="638.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.07%)</title><rect x="1082.1" y="611.0" width="0.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1085.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.07%)</title><rect x="1082.1" y="595.0" width="0.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1085.1" y="606.0"></text>
</g>
<g>
<title>__fget (4 samples, 0.07%)</title><rect x="1082.1" y="579.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1085.1" y="590.0"></text>
</g>
<g>
<title>page_fault (2 samples, 0.03%)</title><rect x="1083.5" y="755.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1086.5" y="766.0"></text>
</g>
<g>
<title>do_page_fault (2 samples, 0.03%)</title><rect x="1083.5" y="739.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1086.5" y="750.0"></text>
</g>
<g>
<title>__do_page_fault (2 samples, 0.03%)</title><rect x="1083.5" y="723.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1086.5" y="734.0"></text>
</g>
<g>
<title>handle_mm_fault (2 samples, 0.03%)</title><rect x="1083.5" y="707.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1086.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.05%)</title><rect x="1083.9" y="787.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1086.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.03%)</title><rect x="1084.1" y="771.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.1" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.03%)</title><rect x="1084.1" y="755.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1087.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/AsyncService.upsert (374 samples, 6.47%)</title><rect x="1084.5" y="803.0" width="76.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1087.5" y="814.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.03%)</title><rect x="1084.5" y="787.0" width="0.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1087.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (372 samples, 6.43%)</title><rect x="1084.9" y="787.0" width="75.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1087.9" y="798.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (368 samples, 6.36%)</title><rect x="1085.1" y="771.0" width="75.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1088.1" y="782.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (368 samples, 6.36%)</title><rect x="1085.1" y="755.0" width="75.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1088.1" y="766.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (243 samples, 4.20%)</title><rect x="1085.5" y="739.0" width="49.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1088.5" y="750.0">Java_..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="1086.5" y="723.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1089.5" y="734.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.03%)</title><rect x="1087.0" y="723.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1090.0" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (228 samples, 3.94%)</title><rect x="1088.6" y="723.0" width="46.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1091.6" y="734.0">rock..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (3 samples, 0.05%)</title><rect x="1089.0" y="707.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1092.0" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.03%)</title><rect x="1089.6" y="707.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1092.6" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (4 samples, 0.07%)</title><rect x="1090.0" y="707.0" width="0.8" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1093.0" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.03%)</title><rect x="1090.8" y="707.0" width="0.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1093.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (212 samples, 3.67%)</title><rect x="1091.2" y="707.0" width="43.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1094.2" y="718.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (212 samples, 3.67%)</title><rect x="1091.2" y="691.0" width="43.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1094.2" y="702.0">rock..</text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="1091.2" y="675.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1094.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (209 samples, 3.61%)</title><rect x="1091.6" y="675.0" width="42.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1094.6" y="686.0">rock..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.03%)</title><rect x="1091.9" y="659.0" width="0.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1094.9" y="670.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.03%)</title><rect x="1092.3" y="659.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1095.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (186 samples, 3.22%)</title><rect x="1092.7" y="659.0" width="37.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1095.7" y="670.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.03%)</title><rect x="1092.7" y="643.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1095.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (179 samples, 3.10%)</title><rect x="1093.5" y="643.0" width="36.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1096.5" y="654.0">roc..</text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.07%)</title><rect x="1096.1" y="627.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1099.1" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1096.5" y="611.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1099.5" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1096.5" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1099.5" y="606.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (2 samples, 0.03%)</title><rect x="1096.5" y="579.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1099.5" y="590.0"></text>
</g>
<g>
<title>do_sched_yield (2 samples, 0.03%)</title><rect x="1096.5" y="563.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1099.5" y="574.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.03%)</title><rect x="1096.5" y="547.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1099.5" y="558.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.03%)</title><rect x="1096.5" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1099.5" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1097.0" y="627.0" width="0.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1100.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (30 samples, 0.52%)</title><rect x="1098.2" y="627.0" width="6.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1101.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.03%)</title><rect x="1098.4" y="611.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1101.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (25 samples, 0.43%)</title><rect x="1098.8" y="611.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1101.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (24 samples, 0.42%)</title><rect x="1099.0" y="595.0" width="4.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1102.0" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.03%)</title><rect x="1099.4" y="579.0" width="0.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1102.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (19 samples, 0.33%)</title><rect x="1100.0" y="579.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1103.0" y="590.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.03%)</title><rect x="1100.4" y="563.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1103.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1101.4" y="563.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1104.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (10 samples, 0.17%)</title><rect x="1101.9" y="563.0" width="2.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1104.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (6 samples, 0.10%)</title><rect x="1102.7" y="547.0" width="1.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1105.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1103.9" y="611.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1106.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (6 samples, 0.10%)</title><rect x="1104.3" y="627.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.3" y="638.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (3 samples, 0.05%)</title><rect x="1104.5" y="611.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1107.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (59 samples, 1.02%)</title><rect x="1106.1" y="627.0" width="12.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1109.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (54 samples, 0.93%)</title><rect x="1107.2" y="611.0" width="11.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1110.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (50 samples, 0.86%)</title><rect x="1107.6" y="595.0" width="10.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1110.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (2 samples, 0.03%)</title><rect x="1107.8" y="579.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1110.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (47 samples, 0.81%)</title><rect x="1108.2" y="579.0" width="9.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1111.2" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (3 samples, 0.05%)</title><rect x="1108.4" y="563.0" width="0.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1111.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (4 samples, 0.07%)</title><rect x="1109.8" y="563.0" width="0.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1112.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (31 samples, 0.54%)</title><rect x="1110.6" y="563.0" width="6.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1113.6" y="574.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (23 samples, 0.40%)</title><rect x="1111.6" y="547.0" width="4.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1114.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (18 samples, 0.31%)</title><rect x="1112.1" y="531.0" width="3.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1115.1" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (8 samples, 0.14%)</title><rect x="1113.5" y="515.0" width="1.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1116.5" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.03%)</title><rect x="1113.5" y="499.0" width="0.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1116.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (6 samples, 0.10%)</title><rect x="1113.9" y="499.0" width="1.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1116.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.03%)</title><rect x="1114.5" y="483.0" width="0.4" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1117.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.05%)</title><rect x="1115.1" y="515.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1118.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (3 samples, 0.05%)</title><rect x="1115.7" y="531.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1118.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="1116.5" y="547.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1119.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.03%)</title><rect x="1116.5" y="531.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1119.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.03%)</title><rect x="1117.0" y="563.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1120.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.03%)</title><rect x="1117.8" y="595.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1120.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (7 samples, 0.12%)</title><rect x="1118.2" y="627.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1121.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 0.10%)</title><rect x="1118.4" y="611.0" width="1.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1121.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.10%)</title><rect x="1118.4" y="595.0" width="1.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1121.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.09%)</title><rect x="1118.6" y="579.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1121.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 0.09%)</title><rect x="1118.6" y="563.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1121.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (5 samples, 0.09%)</title><rect x="1118.6" y="547.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1121.6" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.09%)</title><rect x="1118.6" y="531.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1121.6" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (5 samples, 0.09%)</title><rect x="1118.6" y="515.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1121.6" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni14226479155412362529.so (2 samples, 0.03%)</title><rect x="1119.2" y="499.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1122.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.03%)</title><rect x="1119.2" y="483.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1122.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (41 samples, 0.71%)</title><rect x="1119.6" y="627.0" width="8.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1122.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (4 samples, 0.07%)</title><rect x="1128.0" y="627.0" width="0.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1131.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (4 samples, 0.07%)</title><rect x="1128.0" y="611.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1131.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (2 samples, 0.03%)</title><rect x="1129.0" y="627.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1132.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 0.21%)</title><rect x="1130.6" y="659.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1133.6" y="670.0"></text>
</g>
<g>
<title>_init (2 samples, 0.03%)</title><rect x="1130.6" y="643.0" width="0.4" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1133.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.03%)</title><rect x="1131.2" y="643.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1134.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.07%)</title><rect x="1131.8" y="643.0" width="0.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1134.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (2 samples, 0.03%)</title><rect x="1132.7" y="643.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1135.7" y="654.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (2 samples, 0.03%)</title><rect x="1133.5" y="659.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1136.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.03%)</title><rect x="1134.5" y="707.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1137.5" y="718.0"></text>
</g>
<g>
<title>[unknown] (106 samples, 1.83%)</title><rect x="1135.1" y="739.0" width="21.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1138.1" y="750.0">[..</text>
</g>
<g>
<title>__pthread_cond_wait (4 samples, 0.07%)</title><rect x="1135.3" y="723.0" width="0.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1138.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.05%)</title><rect x="1135.5" y="707.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1138.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.05%)</title><rect x="1135.5" y="691.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1138.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.05%)</title><rect x="1135.5" y="675.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1138.5" y="686.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.05%)</title><rect x="1135.5" y="659.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1138.5" y="670.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.05%)</title><rect x="1135.5" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1138.5" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="1135.5" y="627.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1138.5" y="638.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.05%)</title><rect x="1135.5" y="611.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1138.5" y="622.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.05%)</title><rect x="1135.5" y="595.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1138.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="1135.5" y="579.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1138.5" y="590.0"></text>
</g>
<g>
<title>__write (99 samples, 1.71%)</title><rect x="1136.3" y="723.0" width="20.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1139.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (94 samples, 1.63%)</title><rect x="1137.4" y="707.0" width="19.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.4" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (93 samples, 1.61%)</title><rect x="1137.6" y="691.0" width="18.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1140.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (89 samples, 1.54%)</title><rect x="1138.2" y="675.0" width="18.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1141.2" y="686.0"></text>
</g>
<g>
<title>ksys_write (88 samples, 1.52%)</title><rect x="1138.4" y="659.0" width="17.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1141.4" y="670.0"></text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.05%)</title><rect x="1138.8" y="643.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1141.8" y="654.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.05%)</title><rect x="1138.8" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1141.8" y="638.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.03%)</title><rect x="1139.0" y="611.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1142.0" y="622.0"></text>
</g>
<g>
<title>vfs_write (82 samples, 1.42%)</title><rect x="1139.6" y="643.0" width="16.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1142.6" y="654.0"></text>
</g>
<g>
<title>__vfs_write (72 samples, 1.25%)</title><rect x="1140.0" y="627.0" width="14.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1143.0" y="638.0"></text>
</g>
<g>
<title>new_sync_write (71 samples, 1.23%)</title><rect x="1140.2" y="611.0" width="14.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1143.2" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (70 samples, 1.21%)</title><rect x="1140.4" y="595.0" width="14.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1143.4" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (65 samples, 1.12%)</title><rect x="1140.8" y="579.0" width="13.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1143.8" y="590.0"></text>
</g>
<g>
<title>file_update_time (9 samples, 0.16%)</title><rect x="1141.6" y="563.0" width="1.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1144.6" y="574.0"></text>
</g>
<g>
<title>generic_update_time (8 samples, 0.14%)</title><rect x="1141.8" y="547.0" width="1.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1144.8" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (7 samples, 0.12%)</title><rect x="1142.0" y="531.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1145.0" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (7 samples, 0.12%)</title><rect x="1142.0" y="515.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1145.0" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.07%)</title><rect x="1142.0" y="499.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1145.0" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.07%)</title><rect x="1142.0" y="483.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1145.0" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.03%)</title><rect x="1143.1" y="499.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1146.1" y="510.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (2 samples, 0.03%)</title><rect x="1143.1" y="483.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1146.1" y="494.0"></text>
</g>
<g>
<title>ext4_do_update_inode (2 samples, 0.03%)</title><rect x="1143.1" y="467.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.1" y="478.0"></text>
</g>
<g>
<title>generic_perform_write (51 samples, 0.88%)</title><rect x="1143.5" y="563.0" width="10.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1146.5" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_begin (18 samples, 0.31%)</title><rect x="1143.5" y="547.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1146.5" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.05%)</title><rect x="1144.1" y="531.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1147.1" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.05%)</title><rect x="1144.1" y="515.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1147.1" y="526.0"></text>
</g>
<g>
<title>ext4_block_write_begin (3 samples, 0.05%)</title><rect x="1144.7" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1147.7" y="542.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (8 samples, 0.14%)</title><rect x="1145.5" y="531.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1148.5" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.12%)</title><rect x="1145.5" y="515.0" width="1.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1148.5" y="526.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.07%)</title><rect x="1145.9" y="499.0" width="0.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1148.9" y="510.0"></text>
</g>
<g>
<title>xas_load (3 samples, 0.05%)</title><rect x="1145.9" y="483.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1148.9" y="494.0"></text>
</g>
<g>
<title>xas_start (2 samples, 0.03%)</title><rect x="1146.1" y="467.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1149.1" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (31 samples, 0.54%)</title><rect x="1147.2" y="547.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1150.2" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_stop (4 samples, 0.07%)</title><rect x="1147.4" y="531.0" width="0.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1150.4" y="542.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.03%)</title><rect x="1147.8" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.8" y="526.0"></text>
</g>
<g>
<title>generic_write_end (26 samples, 0.45%)</title><rect x="1148.2" y="531.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1151.2" y="542.0"></text>
</g>
<g>
<title>__generic_write_end (24 samples, 0.42%)</title><rect x="1148.2" y="515.0" width="4.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1151.2" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (24 samples, 0.42%)</title><rect x="1148.2" y="499.0" width="4.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1151.2" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (22 samples, 0.38%)</title><rect x="1148.6" y="483.0" width="4.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1151.6" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (21 samples, 0.36%)</title><rect x="1148.8" y="467.0" width="4.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1151.8" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (13 samples, 0.22%)</title><rect x="1148.8" y="451.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1151.8" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (10 samples, 0.17%)</title><rect x="1149.2" y="435.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1152.2" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.05%)</title><rect x="1150.0" y="419.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1153.0" y="430.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (2 samples, 0.03%)</title><rect x="1150.2" y="403.0" width="0.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1153.2" y="414.0"></text>
</g>
<g>
<title>from_kgid (2 samples, 0.03%)</title><rect x="1150.6" y="419.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1153.6" y="430.0"></text>
</g>
<g>
<title>map_id_up (2 samples, 0.03%)</title><rect x="1150.6" y="403.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1153.6" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (8 samples, 0.14%)</title><rect x="1151.4" y="451.0" width="1.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1154.4" y="462.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (4 samples, 0.07%)</title><rect x="1151.4" y="435.0" width="0.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1154.4" y="446.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.03%)</title><rect x="1151.6" y="419.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1154.6" y="430.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.03%)</title><rect x="1151.6" y="403.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.6" y="414.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (3 samples, 0.05%)</title><rect x="1152.3" y="435.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1155.3" y="446.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.03%)</title><rect x="1153.1" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1156.1" y="526.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.03%)</title><rect x="1153.1" y="499.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1156.1" y="510.0"></text>
</g>
<g>
<title>ext4_write_checks (2 samples, 0.03%)</title><rect x="1154.1" y="579.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1157.1" y="590.0"></text>
</g>
<g>
<title>rw_verify_area (7 samples, 0.12%)</title><rect x="1154.9" y="627.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1157.9" y="638.0"></text>
</g>
<g>
<title>security_file_permission (6 samples, 0.10%)</title><rect x="1155.1" y="611.0" width="1.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1158.1" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (5 samples, 0.09%)</title><rect x="1155.3" y="595.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1158.3" y="606.0"></text>
</g>
<g>
<title>common_file_perm (5 samples, 0.09%)</title><rect x="1155.3" y="579.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1158.3" y="590.0"></text>
</g>
<g>
<title>__malloc (7 samples, 0.12%)</title><rect x="1156.7" y="739.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1159.7" y="750.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.03%)</title><rect x="1158.2" y="739.0" width="0.4" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1161.2" y="750.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (3 samples, 0.05%)</title><rect x="1158.8" y="739.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1161.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1159.0" y="723.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1162.0" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1159.0" y="707.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1162.0" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="1159.0" y="691.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1162.0" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.03%)</title><rect x="1159.0" y="675.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.0" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.03%)</title><rect x="1159.0" y="659.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1162.0" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.03%)</title><rect x="1159.0" y="643.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1162.0" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="1159.0" y="627.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1162.0" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.03%)</title><rect x="1159.0" y="611.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.0" y="622.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (3 samples, 0.05%)</title><rect x="1159.6" y="739.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (2 samples, 0.03%)</title><rect x="1160.2" y="771.0" width="0.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.2" y="782.0"></text>
</g>
<g>
<title>[tid=759] (6 samples, 0.10%)</title><rect x="1161.2" y="899.0" width="1.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1164.2" y="910.0"></text>
</g>
<g>
<title>start_thread (6 samples, 0.10%)</title><rect x="1161.2" y="883.0" width="1.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1164.2" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (6 samples, 0.10%)</title><rect x="1161.2" y="867.0" width="1.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1164.2" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (6 samples, 0.10%)</title><rect x="1161.2" y="851.0" width="1.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1164.2" y="862.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (6 samples, 0.10%)</title><rect x="1161.2" y="835.0" width="1.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1164.2" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (5 samples, 0.09%)</title><rect x="1161.2" y="819.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.2" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (5 samples, 0.09%)</title><rect x="1161.2" y="803.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.2" y="814.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (5 samples, 0.09%)</title><rect x="1161.2" y="787.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1164.2" y="798.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (3 samples, 0.05%)</title><rect x="1161.4" y="771.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1164.4" y="782.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (3 samples, 0.05%)</title><rect x="1161.4" y="755.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.4" y="766.0"></text>
</g>
<g>
<title>[tid=764] (109 samples, 1.88%)</title><rect x="1162.7" y="899.0" width="22.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1165.7" y="910.0">[..</text>
</g>
<g>
<title>start_thread (109 samples, 1.88%)</title><rect x="1162.7" y="883.0" width="22.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1165.7" y="894.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (109 samples, 1.88%)</title><rect x="1162.7" y="867.0" width="22.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1165.7" y="878.0">t..</text>
</g>
<g>
<title>Thread::call_run() (109 samples, 1.88%)</title><rect x="1162.7" y="851.0" width="22.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.7" y="862.0">T..</text>
</g>
<g>
<title>JavaThread::run() (109 samples, 1.88%)</title><rect x="1162.7" y="835.0" width="22.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1165.7" y="846.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (109 samples, 1.88%)</title><rect x="1162.7" y="819.0" width="22.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1165.7" y="830.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (109 samples, 1.88%)</title><rect x="1162.7" y="803.0" width="22.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1165.7" y="814.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (109 samples, 1.88%)</title><rect x="1162.7" y="787.0" width="22.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.7" y="798.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (109 samples, 1.88%)</title><rect x="1162.7" y="771.0" width="22.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1165.7" y="782.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (109 samples, 1.88%)</title><rect x="1162.7" y="755.0" width="22.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1165.7" y="766.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (55 samples, 0.95%)</title><rect x="1162.7" y="739.0" width="11.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1165.7" y="750.0"></text>
</g>
<g>
<title>Matcher::match() (9 samples, 0.16%)</title><rect x="1162.7" y="723.0" width="1.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.7" y="734.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (7 samples, 0.12%)</title><rect x="1163.1" y="707.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1166.1" y="718.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (4 samples, 0.07%)</title><rect x="1163.5" y="691.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1166.5" y="702.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (2 samples, 0.03%)</title><rect x="1163.5" y="675.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1166.5" y="686.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (5 samples, 0.09%)</title><rect x="1164.5" y="723.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1167.5" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (5 samples, 0.09%)</title><rect x="1164.5" y="707.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1167.5" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.03%)</title><rect x="1164.9" y="691.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.9" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (41 samples, 0.71%)</title><rect x="1165.5" y="723.0" width="8.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1168.5" y="734.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (5 samples, 0.09%)</title><rect x="1165.5" y="707.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1168.5" y="718.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (2 samples, 0.03%)</title><rect x="1166.1" y="691.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1169.1" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.03%)</title><rect x="1166.7" y="707.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1169.7" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (10 samples, 0.17%)</title><rect x="1167.1" y="707.0" width="2.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.1" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (2 samples, 0.03%)</title><rect x="1167.8" y="691.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1170.8" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (4 samples, 0.07%)</title><rect x="1168.2" y="691.0" width="0.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1171.2" y="702.0"></text>
</g>
<g>
<title>RegMask::Size() const (2 samples, 0.03%)</title><rect x="1168.4" y="675.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1171.4" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_virtual() (2 samples, 0.03%)</title><rect x="1169.2" y="707.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1172.2" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (4 samples, 0.07%)</title><rect x="1170.0" y="707.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1173.0" y="718.0"></text>
</g>
<g>
<title>RegMask::Size() const (3 samples, 0.05%)</title><rect x="1170.2" y="691.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1173.2" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (5 samples, 0.09%)</title><rect x="1170.8" y="707.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1173.8" y="718.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (3 samples, 0.05%)</title><rect x="1171.2" y="691.0" width="0.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1174.2" y="702.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.03%)</title><rect x="1171.8" y="707.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1174.8" y="718.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (2 samples, 0.03%)</title><rect x="1172.7" y="707.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1175.7" y="718.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (4 samples, 0.07%)</title><rect x="1173.1" y="707.0" width="0.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1176.1" y="718.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (2 samples, 0.03%)</title><rect x="1173.3" y="691.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1176.3" y="702.0"></text>
</g>
<g>
<title>Compile::Optimize() (34 samples, 0.59%)</title><rect x="1173.9" y="739.0" width="6.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1176.9" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (24 samples, 0.42%)</title><rect x="1174.3" y="723.0" width="4.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1177.3" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.07%)</title><rect x="1175.3" y="707.0" width="0.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1178.3" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.05%)</title><rect x="1175.5" y="691.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1178.5" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.03%)</title><rect x="1175.7" y="675.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1178.7" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (7 samples, 0.12%)</title><rect x="1176.3" y="707.0" width="1.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.3" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (2 samples, 0.03%)</title><rect x="1177.1" y="691.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1180.1" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (2 samples, 0.03%)</title><rect x="1177.1" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1180.1" y="686.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.09%)</title><rect x="1177.8" y="707.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.8" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (5 samples, 0.09%)</title><rect x="1177.8" y="691.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1180.8" y="702.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (5 samples, 0.09%)</title><rect x="1179.2" y="723.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1182.2" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (4 samples, 0.07%)</title><rect x="1179.2" y="707.0" width="0.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1182.2" y="718.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.03%)</title><rect x="1180.2" y="723.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1183.2" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (15 samples, 0.26%)</title><rect x="1181.2" y="739.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1184.2" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (15 samples, 0.26%)</title><rect x="1181.2" y="723.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1184.2" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (15 samples, 0.26%)</title><rect x="1181.2" y="707.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1184.2" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (15 samples, 0.26%)</title><rect x="1181.2" y="691.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1184.2" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (15 samples, 0.26%)</title><rect x="1181.2" y="675.0" width="3.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1184.2" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (13 samples, 0.22%)</title><rect x="1181.4" y="659.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1184.4" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (9 samples, 0.16%)</title><rect x="1182.0" y="643.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.0" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (9 samples, 0.16%)</title><rect x="1182.0" y="627.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (8 samples, 0.14%)</title><rect x="1182.0" y="611.0" width="1.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (8 samples, 0.14%)</title><rect x="1182.0" y="595.0" width="1.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (8 samples, 0.14%)</title><rect x="1182.0" y="579.0" width="1.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (7 samples, 0.12%)</title><rect x="1182.0" y="563.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.0" y="574.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (2 samples, 0.03%)</title><rect x="1182.0" y="547.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.0" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.07%)</title><rect x="1182.5" y="547.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.5" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.07%)</title><rect x="1182.5" y="531.0" width="0.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.07%)</title><rect x="1182.5" y="515.0" width="0.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.07%)</title><rect x="1182.5" y="499.0" width="0.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.07%)</title><rect x="1182.5" y="483.0" width="0.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.5" y="494.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1182.5" y="467.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1185.5" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.05%)</title><rect x="1182.5" y="451.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.5" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.05%)</title><rect x="1182.5" y="435.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.05%)</title><rect x="1182.5" y="419.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.05%)</title><rect x="1182.5" y="403.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1185.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.05%)</title><rect x="1182.5" y="387.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.5" y="398.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.05%)</title><rect x="1182.5" y="371.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1185.5" y="382.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1182.7" y="355.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.7" y="366.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1182.7" y="339.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.7" y="350.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.03%)</title><rect x="1182.7" y="323.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1185.7" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.03%)</title><rect x="1182.7" y="307.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.7" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.03%)</title><rect x="1182.7" y="291.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.7" y="302.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.03%)</title><rect x="1182.7" y="275.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.7" y="286.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.03%)</title><rect x="1182.7" y="259.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.7" y="270.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.03%)</title><rect x="1182.7" y="243.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.7" y="254.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (2 samples, 0.03%)</title><rect x="1184.3" y="739.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1187.3" y="750.0"></text>
</g>
<g>
<title>[tid=765] (11 samples, 0.19%)</title><rect x="1184.9" y="899.0" width="2.2" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1187.9" y="910.0"></text>
</g>
<g>
<title>start_thread (11 samples, 0.19%)</title><rect x="1184.9" y="883.0" width="2.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1187.9" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (11 samples, 0.19%)</title><rect x="1184.9" y="867.0" width="2.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1187.9" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (11 samples, 0.19%)</title><rect x="1184.9" y="851.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>JavaThread::run() (11 samples, 0.19%)</title><rect x="1184.9" y="835.0" width="2.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>JavaThread::thread_main_inner() (11 samples, 0.19%)</title><rect x="1184.9" y="819.0" width="2.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (11 samples, 0.19%)</title><rect x="1184.9" y="803.0" width="2.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1187.9" y="814.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (11 samples, 0.19%)</title><rect x="1184.9" y="787.0" width="2.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1187.9" y="798.0"></text>
</g>
<g>
<title>Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (11 samples, 0.19%)</title><rect x="1184.9" y="771.0" width="2.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1187.9" y="782.0"></text>
</g>
<g>
<title>Compilation::Compilation(AbstractCompiler*, ciEnv*, ciMethod*, int, BufferBlob*, DirectiveSet*) (10 samples, 0.17%)</title><rect x="1185.1" y="755.0" width="2.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1188.1" y="766.0"></text>
</g>
<g>
<title>Compilation::compile_method() (10 samples, 0.17%)</title><rect x="1185.1" y="739.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1188.1" y="750.0"></text>
</g>
<g>
<title>Compilation::compile_java_method() (7 samples, 0.12%)</title><rect x="1185.1" y="723.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1188.1" y="734.0"></text>
</g>
<g>
<title>Compilation::build_hir() (3 samples, 0.05%)</title><rect x="1185.1" y="707.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1188.1" y="718.0"></text>
</g>
<g>
<title>Compilation::emit_lir() (3 samples, 0.05%)</title><rect x="1185.9" y="707.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1188.9" y="718.0"></text>
</g>
<g>
<title>LinearScan::do_linear_scan() (3 samples, 0.05%)</title><rect x="1185.9" y="691.0" width="0.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1188.9" y="702.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (3 samples, 0.05%)</title><rect x="1186.5" y="723.0" width="0.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1189.5" y="734.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (3 samples, 0.05%)</title><rect x="1186.5" y="707.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.5" y="718.0"></text>
</g>
<g>
<title>nmethod::nmethod(Method*, CompilerType, int, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (2 samples, 0.03%)</title><rect x="1186.7" y="691.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1189.7" y="702.0"></text>
</g>
<g>
<title>CodeBuffer::copy_code_to(CodeBlob*) (2 samples, 0.03%)</title><rect x="1186.7" y="675.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1189.7" y="686.0"></text>
</g>
<g>
<title>[tid=768] (13 samples, 0.22%)</title><rect x="1187.3" y="899.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1190.3" y="910.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1187.3" y="883.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1190.3" y="894.0"></text>
</g>
<g>
<title>WatcherThread::~WatcherThread() (2 samples, 0.03%)</title><rect x="1187.3" y="867.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1187.3" y="851.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1190.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.03%)</title><rect x="1187.3" y="835.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1190.3" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (6 samples, 0.10%)</title><rect x="1187.8" y="883.0" width="1.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1190.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1188.6" y="867.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1191.6" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1188.6" y="851.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1191.6" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.03%)</title><rect x="1188.6" y="835.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1191.6" y="846.0"></text>
</g>
<g>
<title>start_thread (5 samples, 0.09%)</title><rect x="1189.0" y="883.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1192.0" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (5 samples, 0.09%)</title><rect x="1189.0" y="867.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1192.0" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (5 samples, 0.09%)</title><rect x="1189.0" y="851.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1192.0" y="862.0"></text>
</g>
<g>
<title>WatcherThread::run() (5 samples, 0.09%)</title><rect x="1189.0" y="835.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (4 samples, 0.07%)</title><rect x="1189.2" y="819.0" width="0.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.2" y="830.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (4 samples, 0.07%)</title><rect x="1189.2" y="803.0" width="0.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.2" y="814.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.05%)</title><rect x="1189.4" y="787.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.4" y="798.0"></text>
</g>
</g>
</svg>
