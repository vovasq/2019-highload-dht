<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (2,263 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[NIO Selector #1 tid=9318] (561 samples, 24.79%)</title><rect x="10.0" y="915.0" width="292.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="13.0" y="926.0">[NIO Selector #1 tid=9318]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (561 samples, 24.79%)</title><rect x="10.0" y="899.0" width="292.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="13.0" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (63 samples, 2.78%)</title><rect x="10.5" y="883.0" width="32.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="13.5" y="894.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (60 samples, 2.65%)</title><rect x="12.1" y="867.0" width="31.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="15.1" y="878.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.13%)</title><rect x="15.2" y="851.0" width="1.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="18.2" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="16.3" y="835.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="19.3" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="16.3" y="819.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="19.3" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="16.3" y="803.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="19.3" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="16.3" y="787.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="19.3" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="16.3" y="771.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="19.3" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="16.3" y="755.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="19.3" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="16.3" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="19.3" y="750.0"></text>
</g>
<g>
<title>[unknown] (48 samples, 2.12%)</title><rect x="16.8" y="851.0" width="25.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="19.8" y="862.0">[..</text>
</g>
<g>
<title>Klass::is_klass() const volatile (7 samples, 0.31%)</title><rect x="16.8" y="835.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="19.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.31%)</title><rect x="16.8" y="819.0" width="3.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="19.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.31%)</title><rect x="16.8" y="803.0" width="3.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="19.8" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="16.8" y="787.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="19.8" y="798.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (5 samples, 0.22%)</title><rect x="17.3" y="787.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="20.3" y="798.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="19.9" y="787.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="22.9" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="19.9" y="771.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="22.9" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="20.4" y="835.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="23.4" y="846.0"></text>
</g>
<g>
<title>epoll_wait (40 samples, 1.77%)</title><rect x="21.0" y="835.0" width="20.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="24.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 1.37%)</title><rect x="25.6" y="819.0" width="16.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="28.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (31 samples, 1.37%)</title><rect x="25.6" y="803.0" width="16.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="28.6" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (30 samples, 1.33%)</title><rect x="26.2" y="787.0" width="15.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="29.2" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (29 samples, 1.28%)</title><rect x="26.2" y="771.0" width="15.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="29.2" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="26.7" y="755.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="29.7" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="26.7" y="739.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="29.7" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="26.7" y="723.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="29.7" y="734.0"></text>
</g>
<g>
<title>ep_poll (25 samples, 1.10%)</title><rect x="27.2" y="755.0" width="13.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="30.2" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (15 samples, 0.66%)</title><rect x="28.3" y="739.0" width="7.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="31.3" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="30.9" y="723.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.9" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="30.9" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="33.9" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="30.9" y="691.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="33.9" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="30.9" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="33.9" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="30.9" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="33.9" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="30.9" y="643.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="33.9" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="30.9" y="627.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="33.9" y="638.0"></text>
</g>
<g>
<title>ep_send_events_proc (8 samples, 0.35%)</title><rect x="31.4" y="723.0" width="4.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="34.4" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (8 samples, 0.35%)</title><rect x="31.4" y="707.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="34.4" y="718.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.31%)</title><rect x="31.9" y="691.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="34.9" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (3 samples, 0.13%)</title><rect x="34.0" y="675.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="37.0" y="686.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="35.6" y="723.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="38.6" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="36.1" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="39.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (7 samples, 0.31%)</title><rect x="36.6" y="739.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="39.6" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="36.6" y="723.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="39.6" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 0.27%)</title><rect x="37.1" y="723.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="40.1" y="734.0"></text>
</g>
<g>
<title>schedule (6 samples, 0.27%)</title><rect x="37.1" y="707.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="40.1" y="718.0"></text>
</g>
<g>
<title>__schedule (6 samples, 0.27%)</title><rect x="37.1" y="691.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="40.1" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (6 samples, 0.27%)</title><rect x="37.1" y="675.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="40.1" y="686.0"></text>
</g>
<g>
<title>fput (2 samples, 0.09%)</title><rect x="40.2" y="755.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="43.2" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="41.3" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="44.3" y="782.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="41.8" y="851.0" width="1.1" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="44.8" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="42.9" y="851.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="45.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (497 samples, 21.96%)</title><rect x="43.4" y="883.0" width="259.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="46.4" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (497 samples, 21.96%)</title><rect x="43.4" y="867.0" width="259.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="46.4" y="878.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (444 samples, 19.62%)</title><rect x="43.4" y="851.0" width="231.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="46.4" y="862.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (424 samples, 18.74%)</title><rect x="43.9" y="835.0" width="221.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="46.9" y="846.0">one/nio/http/HttpSession.hand..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (424 samples, 18.74%)</title><rect x="43.9" y="819.0" width="221.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="46.9" y="830.0">one/nio/http/HttpServer.handl..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (421 samples, 18.60%)</title><rect x="44.4" y="803.0" width="219.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="47.4" y="814.0">RequestHandler0_entity.handle..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (149 samples, 6.58%)</title><rect x="44.4" y="787.0" width="77.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.4" y="798.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (145 samples, 6.41%)</title><rect x="45.5" y="771.0" width="75.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="48.5" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.35%)</title><rect x="45.5" y="755.0" width="4.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="48.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.27%)</title><rect x="46.5" y="739.0" width="3.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="49.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (3 samples, 0.13%)</title><rect x="46.5" y="723.0" width="1.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="49.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.13%)</title><rect x="48.1" y="723.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="51.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.13%)</title><rect x="48.1" y="707.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="51.1" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (137 samples, 6.05%)</title><rect x="49.6" y="755.0" width="71.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="52.6" y="766.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (135 samples, 5.97%)</title><rect x="50.7" y="739.0" width="70.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="53.7" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (135 samples, 5.97%)</title><rect x="50.7" y="723.0" width="70.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="53.7" y="734.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (135 samples, 5.97%)</title><rect x="50.7" y="707.0" width="70.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="53.7" y="718.0">one/nio/..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.13%)</title><rect x="50.7" y="691.0" width="1.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="53.7" y="702.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.13%)</title><rect x="50.7" y="675.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="53.7" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.13%)</title><rect x="50.7" y="659.0" width="1.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="53.7" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="51.2" y="643.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="54.2" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="51.7" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="54.7" y="638.0"></text>
</g>
<g>
<title>__send (132 samples, 5.83%)</title><rect x="52.2" y="691.0" width="68.9" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="55.2" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 5.70%)</title><rect x="53.8" y="675.0" width="67.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="56.8" y="686.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="53.8" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="56.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (128 samples, 5.66%)</title><rect x="54.3" y="659.0" width="66.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="57.3" y="670.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (128 samples, 5.66%)</title><rect x="54.3" y="643.0" width="66.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="57.3" y="654.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (128 samples, 5.66%)</title><rect x="54.3" y="627.0" width="66.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="57.3" y="638.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (127 samples, 5.61%)</title><rect x="54.3" y="611.0" width="66.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="57.3" y="622.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (124 samples, 5.48%)</title><rect x="54.8" y="595.0" width="64.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="57.8" y="606.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (123 samples, 5.44%)</title><rect x="55.4" y="579.0" width="64.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="58.4" y="590.0">tcp_sen..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="55.9" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="58.9" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="55.9" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="58.9" y="558.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="56.4" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="56.4" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="59.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="56.9" y="563.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.9" y="574.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="57.5" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="60.5" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (117 samples, 5.17%)</title><rect x="58.0" y="563.0" width="61.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.0" y="574.0">tcp_se..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="58.5" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="61.5" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (3 samples, 0.13%)</title><rect x="59.0" y="547.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="62.0" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (3 samples, 0.13%)</title><rect x="59.0" y="531.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="62.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.09%)</title><rect x="59.0" y="515.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="62.0" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="59.0" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.0" y="510.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="59.5" y="499.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.5" y="510.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="60.1" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="63.1" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="60.6" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="63.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (108 samples, 4.77%)</title><rect x="61.1" y="547.0" width="56.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="64.1" y="558.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (107 samples, 4.73%)</title><rect x="61.6" y="531.0" width="55.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="64.6" y="542.0">__tcp..</text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="61.6" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="64.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (106 samples, 4.68%)</title><rect x="62.1" y="515.0" width="55.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="65.1" y="526.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (98 samples, 4.33%)</title><rect x="63.7" y="499.0" width="51.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="66.7" y="510.0">__tcp..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="65.3" y="483.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="68.3" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (94 samples, 4.15%)</title><rect x="65.8" y="483.0" width="49.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="68.8" y="494.0">ip_qu..</text>
</g>
<g>
<title>__ip_queue_xmit (94 samples, 4.15%)</title><rect x="65.8" y="467.0" width="49.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="68.8" y="478.0">__ip_..</text>
</g>
<g>
<title>ip_local_out (92 samples, 4.07%)</title><rect x="66.3" y="451.0" width="48.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="69.3" y="462.0">ip_l..</text>
</g>
<g>
<title>ip_output (90 samples, 3.98%)</title><rect x="67.4" y="435.0" width="46.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="70.4" y="446.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (90 samples, 3.98%)</title><rect x="67.4" y="419.0" width="46.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.4" y="430.0">ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (90 samples, 3.98%)</title><rect x="67.4" y="403.0" width="46.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="70.4" y="414.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (80 samples, 3.54%)</title><rect x="70.5" y="387.0" width="41.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="73.5" y="398.0">__l..</text>
</g>
<g>
<title>do_softirq.part.21 (80 samples, 3.54%)</title><rect x="70.5" y="371.0" width="41.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="73.5" y="382.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (79 samples, 3.49%)</title><rect x="71.0" y="355.0" width="41.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="74.0" y="366.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (79 samples, 3.49%)</title><rect x="71.0" y="339.0" width="41.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="74.0" y="350.0">__s..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="72.1" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="75.1" y="334.0"></text>
</g>
<g>
<title>net_rx_action (76 samples, 3.36%)</title><rect x="72.6" y="323.0" width="39.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="75.6" y="334.0">net..</text>
</g>
<g>
<title>process_backlog (75 samples, 3.31%)</title><rect x="73.1" y="307.0" width="39.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="76.1" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (72 samples, 3.18%)</title><rect x="74.7" y="291.0" width="37.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="77.7" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (72 samples, 3.18%)</title><rect x="74.7" y="275.0" width="37.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="77.7" y="286.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.09%)</title><rect x="75.2" y="259.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="78.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv (68 samples, 3.00%)</title><rect x="76.2" y="259.0" width="35.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="79.2" y="270.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="76.2" y="243.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="79.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (67 samples, 2.96%)</title><rect x="76.7" y="243.0" width="35.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="79.7" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (66 samples, 2.92%)</title><rect x="77.3" y="227.0" width="34.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="80.3" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (65 samples, 2.87%)</title><rect x="77.8" y="211.0" width="33.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="80.8" y="222.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (64 samples, 2.83%)</title><rect x="77.8" y="195.0" width="33.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="80.8" y="206.0">ip..</text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="78.3" y="179.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="81.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (62 samples, 2.74%)</title><rect x="78.8" y="179.0" width="32.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="81.8" y="190.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.13%)</title><rect x="79.9" y="163.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="82.9" y="174.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="81.4" y="163.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="84.4" y="174.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="82.0" y="163.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="85.0" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="82.5" y="163.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="85.5" y="174.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.09%)</title><rect x="83.0" y="163.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="86.0" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.09%)</title><rect x="83.0" y="147.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="86.0" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (51 samples, 2.25%)</title><rect x="84.0" y="163.0" width="26.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="87.0" y="174.0">t..</text>
</g>
<g>
<title>tcp_ack (1 samples, 0.04%)</title><rect x="84.0" y="147.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="87.0" y="158.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="84.6" y="147.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="87.6" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (49 samples, 2.17%)</title><rect x="85.1" y="147.0" width="25.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="88.1" y="158.0">t..</text>
</g>
<g>
<title>tcp_ack (15 samples, 0.66%)</title><rect x="86.1" y="131.0" width="7.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="89.1" y="142.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="87.2" y="115.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.2" y="126.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="87.7" y="115.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="90.7" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.44%)</title><rect x="88.2" y="115.0" width="5.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="91.2" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.31%)</title><rect x="88.7" y="99.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="91.7" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.13%)</title><rect x="88.7" y="83.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.7" y="94.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="89.3" y="67.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.3" y="78.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="89.8" y="67.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.8" y="78.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.18%)</title><rect x="90.3" y="83.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="93.3" y="94.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.18%)</title><rect x="90.3" y="67.0" width="2.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.3" y="78.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="90.8" y="51.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="93.8" y="62.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.09%)</title><rect x="91.3" y="51.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="94.3" y="62.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.09%)</title><rect x="91.3" y="35.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="94.3" y="46.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="92.4" y="99.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="95.4" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.04%)</title><rect x="92.9" y="99.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="95.9" y="110.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="93.4" y="115.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="96.4" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (30 samples, 1.33%)</title><rect x="94.0" y="131.0" width="15.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="97.0" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (27 samples, 1.19%)</title><rect x="94.0" y="115.0" width="14.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="97.0" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (26 samples, 1.15%)</title><rect x="94.5" y="99.0" width="13.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="97.5" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (26 samples, 1.15%)</title><rect x="94.5" y="83.0" width="13.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="97.5" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (26 samples, 1.15%)</title><rect x="94.5" y="67.0" width="13.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="97.5" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.13%)</title><rect x="108.0" y="115.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="111.0" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="109.6" y="131.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="112.6" y="142.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.04%)</title><rect x="110.1" y="131.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="113.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="110.6" y="163.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="113.6" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="111.2" y="195.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="114.2" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="111.7" y="259.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="114.7" y="270.0"></text>
</g>
<g>
<title>dev_queue_xmit (4 samples, 0.18%)</title><rect x="112.2" y="387.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="115.2" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (4 samples, 0.18%)</title><rect x="112.2" y="371.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="115.2" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.09%)</title><rect x="112.7" y="355.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="115.7" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.09%)</title><rect x="112.7" y="339.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="115.7" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="113.2" y="323.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="116.2" y="334.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.04%)</title><rect x="113.8" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.8" y="366.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="114.3" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="117.3" y="462.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="114.8" y="499.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.8" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.09%)</title><rect x="115.3" y="499.0" width="1.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="118.3" y="510.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="115.3" y="483.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="118.3" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="115.9" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="118.9" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="115.9" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="118.9" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="115.9" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="118.9" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.09%)</title><rect x="116.4" y="499.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="119.4" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.13%)</title><rect x="117.4" y="547.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="120.4" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.09%)</title><rect x="117.4" y="531.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="120.4" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="118.5" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="121.5" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="119.0" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="122.0" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.09%)</title><rect x="119.5" y="595.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="122.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="120.0" y="579.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="123.0" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="120.0" y="563.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="123.0" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="120.0" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="123.0" y="558.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="120.5" y="611.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="123.5" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="120.5" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="123.5" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.09%)</title><rect x="121.1" y="771.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="124.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.09%)</title><rect x="121.1" y="755.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="124.1" y="766.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="121.1" y="739.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="124.1" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="121.6" y="739.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="124.6" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.09%)</title><rect x="122.1" y="787.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="125.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.09%)</title><rect x="122.1" y="771.0" width="1.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="125.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="122.1" y="755.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="125.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="122.6" y="755.0" width="0.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="125.6" y="766.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="122.6" y="739.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="125.6" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (270 samples, 11.93%)</title><rect x="123.2" y="787.0" width="140.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.2" y="798.0">ru/mail/polis/serv..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="123.2" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="126.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="123.2" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="126.2" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (3 samples, 0.13%)</title><rect x="123.7" y="771.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="126.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (3 samples, 0.13%)</title><rect x="123.7" y="755.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="126.7" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="123.7" y="739.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="126.7" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095293768.invoke (2 samples, 0.09%)</title><rect x="123.7" y="723.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.7" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (2 samples, 0.09%)</title><rect x="123.7" y="707.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="126.7" y="718.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (2 samples, 0.09%)</title><rect x="123.7" y="691.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.7" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="123.7" y="675.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="126.7" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="124.7" y="739.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="127.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (266 samples, 11.75%)</title><rect x="125.2" y="771.0" width="138.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="128.2" y="782.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="125.8" y="755.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="125.8" y="739.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="128.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="125.8" y="723.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="128.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="125.8" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="128.8" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (4 samples, 0.18%)</title><rect x="126.3" y="755.0" width="2.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="129.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (260 samples, 11.49%)</title><rect x="128.4" y="755.0" width="135.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="131.4" y="766.0">ru/mail/polis/dao..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (258 samples, 11.40%)</title><rect x="128.4" y="739.0" width="134.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="131.4" y="750.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (258 samples, 11.40%)</title><rect x="128.4" y="723.0" width="134.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="131.4" y="734.0">org/rocksdb/Rocks..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (193 samples, 8.53%)</title><rect x="128.4" y="707.0" width="100.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="131.4" y="718.0">Java_org_roc..</text>
</g>
<g>
<title>__malloc (5 samples, 0.22%)</title><rect x="128.9" y="691.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="131.9" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="131.5" y="691.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="134.5" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (3 samples, 0.13%)</title><rect x="132.0" y="691.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="135.0" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="133.6" y="691.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="136.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.09%)</title><rect x="134.1" y="691.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="137.1" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (180 samples, 7.95%)</title><rect x="135.1" y="691.0" width="93.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="138.1" y="702.0">rocksdb_put..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="135.7" y="675.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="138.7" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="135.7" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="138.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (170 samples, 7.51%)</title><rect x="136.2" y="675.0" width="88.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="139.2" y="686.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="136.2" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="139.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (169 samples, 7.47%)</title><rect x="136.7" y="659.0" width="88.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="139.7" y="670.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (167 samples, 7.38%)</title><rect x="136.7" y="643.0" width="87.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="139.7" y="654.0">rocksdb::D..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="136.7" y="627.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="139.7" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="137.2" y="627.0" width="0.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="140.2" y="638.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="137.8" y="627.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="140.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (153 samples, 6.76%)</title><rect x="138.3" y="627.0" width="79.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="141.3" y="638.0">rocksdb::..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="138.3" y="611.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="141.3" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="138.8" y="611.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="141.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::~ColumnFamilyHandleImpl() (2 samples, 0.09%)</title><rect x="139.3" y="611.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="142.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (145 samples, 6.41%)</title><rect x="140.4" y="611.0" width="75.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="143.4" y="622.0">rocksdb:..</text>
</g>
<g>
<title>__GI___sched_yield (5 samples, 0.22%)</title><rect x="146.6" y="595.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="149.6" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="147.7" y="579.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="150.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="147.7" y="563.0" width="1.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="150.7" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.13%)</title><rect x="147.7" y="547.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="150.7" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.13%)</title><rect x="147.7" y="531.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="150.7" y="542.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.13%)</title><rect x="147.7" y="515.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="150.7" y="526.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.13%)</title><rect x="147.7" y="499.0" width="1.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="150.7" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="149.2" y="595.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="152.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.04%)</title><rect x="149.7" y="595.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="152.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (31 samples, 1.37%)</title><rect x="150.3" y="595.0" width="16.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="153.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="151.3" y="579.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="154.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="151.3" y="563.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="154.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (26 samples, 1.15%)</title><rect x="151.8" y="579.0" width="13.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="154.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (25 samples, 1.10%)</title><rect x="151.8" y="563.0" width="13.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="154.8" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (4 samples, 0.18%)</title><rect x="152.4" y="547.0" width="2.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="155.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="154.4" y="547.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="157.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.04%)</title><rect x="155.0" y="547.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="158.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::crc32c::Extend(unsigned int, char const*, unsigned long) (2 samples, 0.09%)</title><rect x="155.5" y="547.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="158.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (16 samples, 0.71%)</title><rect x="156.5" y="547.0" width="8.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="159.5" y="558.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="156.5" y="531.0" width="0.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="159.5" y="542.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (3 samples, 0.13%)</title><rect x="157.0" y="531.0" width="1.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="160.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Flush() (1 samples, 0.04%)</title><rect x="158.6" y="531.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="161.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.04%)</title><rect x="159.1" y="531.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="162.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="159.7" y="531.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="162.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (9 samples, 0.40%)</title><rect x="160.2" y="531.0" width="4.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="163.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.04%)</title><rect x="161.2" y="515.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="164.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.04%)</title><rect x="161.7" y="515.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="164.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (5 samples, 0.22%)</title><rect x="162.3" y="515.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="165.3" y="526.0"></text>
</g>
<g>
<title>__write (1 samples, 0.04%)</title><rect x="164.3" y="499.0" width="0.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="167.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="164.9" y="563.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="167.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.09%)</title><rect x="165.4" y="579.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="168.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (2 samples, 0.09%)</title><rect x="166.4" y="595.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="169.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (3 samples, 0.13%)</title><rect x="167.5" y="595.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="170.5" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="168.0" y="579.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="171.0" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="168.5" y="579.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="171.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (51 samples, 2.25%)</title><rect x="169.0" y="595.0" width="26.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="172.0" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (50 samples, 2.21%)</title><rect x="169.6" y="579.0" width="26.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="172.6" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (45 samples, 1.99%)</title><rect x="171.1" y="563.0" width="23.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="174.1" y="574.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.04%)</title><rect x="171.1" y="547.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="174.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (44 samples, 1.94%)</title><rect x="171.6" y="547.0" width="23.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="174.6" y="558.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (2 samples, 0.09%)</title><rect x="172.2" y="531.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="175.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="173.2" y="531.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="176.2" y="542.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="173.2" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="176.2" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="173.2" y="499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="176.2" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="173.2" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="176.2" y="494.0"></text>
</g>
<g>
<title>find_vma (1 samples, 0.04%)</title><rect x="173.2" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="176.2" y="478.0"></text>
</g>
<g>
<title>vmacache_find (1 samples, 0.04%)</title><rect x="173.2" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="176.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (40 samples, 1.77%)</title><rect x="173.7" y="531.0" width="20.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="176.7" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (4 samples, 0.18%)</title><rect x="175.3" y="515.0" width="2.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="178.3" y="526.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="175.3" y="499.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="178.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.09%)</title><rect x="176.3" y="499.0" width="1.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="179.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.04%)</title><rect x="176.9" y="483.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="179.9" y="494.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="177.4" y="515.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="180.4" y="526.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="177.9" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="180.9" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="177.9" y="499.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="180.9" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="177.9" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.9" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="177.9" y="467.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="180.9" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="177.9" y="451.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.9" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="177.9" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="180.9" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="177.9" y="419.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="180.9" y="430.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (24 samples, 1.06%)</title><rect x="178.4" y="515.0" width="12.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="181.4" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (20 samples, 0.88%)</title><rect x="178.9" y="499.0" width="10.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="181.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (5 samples, 0.22%)</title><rect x="186.2" y="483.0" width="2.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="189.2" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.18%)</title><rect x="186.8" y="467.0" width="2.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="189.8" y="478.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="187.3" y="451.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="190.3" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.09%)</title><rect x="187.8" y="451.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="190.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="188.9" y="483.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="191.9" y="494.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="188.9" y="467.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="191.9" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="189.4" y="499.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="192.4" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="189.9" y="499.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="192.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.04%)</title><rect x="190.4" y="499.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="193.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.04%)</title><rect x="190.9" y="515.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="193.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.09%)</title><rect x="191.5" y="515.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="194.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (4 samples, 0.18%)</title><rect x="192.5" y="515.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="195.5" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="193.0" y="499.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="196.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::ShouldFlushNow() const (2 samples, 0.09%)</title><rect x="193.5" y="499.0" width="1.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="196.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.09%)</title><rect x="194.6" y="563.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="197.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (8 samples, 0.35%)</title><rect x="195.6" y="595.0" width="4.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="198.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (8 samples, 0.35%)</title><rect x="195.6" y="579.0" width="4.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="198.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.35%)</title><rect x="195.6" y="563.0" width="4.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="198.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (8 samples, 0.35%)</title><rect x="195.6" y="547.0" width="4.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="198.6" y="558.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="195.6" y="531.0" width="0.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="198.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.09%)</title><rect x="196.2" y="531.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="199.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 0.22%)</title><rect x="197.2" y="531.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="200.2" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (2 samples, 0.09%)</title><rect x="197.2" y="515.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="200.2" y="526.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="197.7" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="200.7" y="510.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="197.7" y="483.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="200.7" y="494.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="197.7" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="200.7" y="478.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="197.7" y="451.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.7" y="462.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="197.7" y="435.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="200.7" y="446.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge_delay (1 samples, 0.04%)</title><rect x="197.7" y="419.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="200.7" y="430.0"></text>
</g>
<g>
<title>mem_cgroup_try_charge (1 samples, 0.04%)</title><rect x="197.7" y="403.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.7" y="414.0"></text>
</g>
<g>
<title>get_mem_cgroup_from_mm (1 samples, 0.04%)</title><rect x="197.7" y="387.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="200.7" y="398.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.13%)</title><rect x="198.2" y="515.0" width="1.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="201.2" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.13%)</title><rect x="198.2" y="499.0" width="1.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="201.2" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (3 samples, 0.13%)</title><rect x="198.2" y="483.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="201.2" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="199.3" y="467.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="202.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="199.3" y="451.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="202.3" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="199.3" y="435.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="202.3" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (23 samples, 1.02%)</title><rect x="199.8" y="595.0" width="12.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="202.8" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="211.3" y="579.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="214.3" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="211.3" y="563.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="214.3" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="211.3" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="214.3" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="211.3" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="214.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.09%)</title><rect x="211.8" y="595.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="214.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.09%)</title><rect x="211.8" y="579.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="214.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="212.8" y="595.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="215.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.04%)</title><rect x="213.4" y="595.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="216.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.04%)</title><rect x="213.9" y="595.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="216.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.09%)</title><rect x="214.4" y="595.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="217.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (2 samples, 0.09%)</title><rect x="214.4" y="579.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="217.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.04%)</title><rect x="215.4" y="595.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="218.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (2 samples, 0.09%)</title><rect x="216.0" y="611.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="219.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.04%)</title><rect x="217.0" y="611.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="220.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.04%)</title><rect x="217.5" y="611.0" width="0.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="220.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.09%)</title><rect x="218.1" y="627.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="221.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.27%)</title><rect x="219.1" y="627.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="222.1" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="219.1" y="611.0" width="1.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="222.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.09%)</title><rect x="220.1" y="611.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="223.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="221.2" y="611.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="224.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.04%)</title><rect x="221.7" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="224.7" y="622.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="222.2" y="627.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="225.2" y="638.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.04%)</title><rect x="222.7" y="627.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="225.7" y="638.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="223.3" y="627.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="226.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.04%)</title><rect x="223.8" y="643.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="226.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="224.3" y="643.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="227.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (5 samples, 0.22%)</title><rect x="224.8" y="675.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="227.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="227.4" y="675.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="230.4" y="686.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.09%)</title><rect x="228.0" y="675.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="231.0" y="686.0"></text>
</g>
<g>
<title>[unknown] (59 samples, 2.61%)</title><rect x="229.0" y="707.0" width="30.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="232.0" y="718.0">[u..</text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="229.0" y="691.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="232.0" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (2 samples, 0.09%)</title><rect x="229.5" y="691.0" width="1.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="232.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="229.5" y="675.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="232.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="229.5" y="659.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="229.5" y="643.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.5" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="229.5" y="627.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.5" y="638.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.09%)</title><rect x="229.5" y="611.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="232.5" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.09%)</title><rect x="229.5" y="595.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="232.5" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.09%)</title><rect x="229.5" y="579.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.5" y="590.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.09%)</title><rect x="229.5" y="563.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="232.5" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="230.0" y="547.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="233.0" y="558.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="230.6" y="691.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="233.6" y="702.0"></text>
</g>
<g>
<title>__write (54 samples, 2.39%)</title><rect x="231.1" y="691.0" width="28.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="234.1" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (54 samples, 2.39%)</title><rect x="231.1" y="675.0" width="28.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="234.1" y="686.0">en..</text>
</g>
<g>
<title>do_syscall_64 (54 samples, 2.39%)</title><rect x="231.1" y="659.0" width="28.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="234.1" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_write (54 samples, 2.39%)</title><rect x="231.1" y="643.0" width="28.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="234.1" y="654.0">__..</text>
</g>
<g>
<title>ksys_write (54 samples, 2.39%)</title><rect x="231.1" y="627.0" width="28.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="234.1" y="638.0">ks..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="231.1" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="234.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="231.6" y="611.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="234.6" y="622.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="232.1" y="611.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="235.1" y="622.0"></text>
</g>
<g>
<title>vfs_write (51 samples, 2.25%)</title><rect x="232.7" y="611.0" width="26.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="235.7" y="622.0">v..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.04%)</title><rect x="232.7" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="235.7" y="606.0"></text>
</g>
<g>
<title>__vfs_write (44 samples, 1.94%)</title><rect x="233.2" y="595.0" width="22.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="236.2" y="606.0">_..</text>
</g>
<g>
<title>new_sync_write (44 samples, 1.94%)</title><rect x="233.2" y="579.0" width="22.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.2" y="590.0">n..</text>
</g>
<g>
<title>ext4_file_write_iter (43 samples, 1.90%)</title><rect x="233.2" y="563.0" width="22.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="236.2" y="574.0">e..</text>
</g>
<g>
<title>__generic_file_write_iter (41 samples, 1.81%)</title><rect x="234.2" y="547.0" width="21.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="237.2" y="558.0">_..</text>
</g>
<g>
<title>file_update_time (4 samples, 0.18%)</title><rect x="234.2" y="531.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="237.2" y="542.0"></text>
</g>
<g>
<title>generic_update_time (2 samples, 0.09%)</title><rect x="234.7" y="515.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="237.7" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.09%)</title><rect x="234.7" y="499.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="237.7" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.09%)</title><rect x="234.7" y="483.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="237.7" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.04%)</title><rect x="234.7" y="467.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="237.7" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.04%)</title><rect x="234.7" y="451.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="237.7" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="234.7" y="435.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="237.7" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.04%)</title><rect x="235.3" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="238.3" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.04%)</title><rect x="235.3" y="451.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="238.3" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.04%)</title><rect x="235.3" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="238.3" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.04%)</title><rect x="235.3" y="419.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="238.3" y="430.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="235.8" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="238.8" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (37 samples, 1.63%)</title><rect x="236.3" y="531.0" width="19.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="239.3" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (11 samples, 0.49%)</title><rect x="236.3" y="515.0" width="5.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="239.3" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.18%)</title><rect x="237.3" y="499.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="240.3" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.18%)</title><rect x="237.3" y="483.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="240.3" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.09%)</title><rect x="237.3" y="467.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="240.3" y="478.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="238.4" y="467.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="241.4" y="478.0"></text>
</g>
<g>
<title>start_this_handle (1 samples, 0.04%)</title><rect x="238.9" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="241.9" y="478.0"></text>
</g>
<g>
<title>add_transaction_credits (1 samples, 0.04%)</title><rect x="238.9" y="451.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="241.9" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="239.4" y="499.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="242.4" y="510.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="239.4" y="483.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="242.4" y="494.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="239.4" y="467.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="242.4" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="239.4" y="451.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="242.4" y="462.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="239.4" y="435.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="242.4" y="446.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="239.4" y="419.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="242.4" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="239.4" y="403.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="242.4" y="414.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.18%)</title><rect x="240.0" y="499.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="243.0" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (4 samples, 0.18%)</title><rect x="240.0" y="483.0" width="2.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="243.0" y="494.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.18%)</title><rect x="240.0" y="467.0" width="2.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="243.0" y="478.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.09%)</title><rect x="241.0" y="451.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="244.0" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end (20 samples, 0.88%)</title><rect x="242.0" y="515.0" width="10.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="245.0" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (2 samples, 0.09%)</title><rect x="242.6" y="499.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="245.6" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (2 samples, 0.09%)</title><rect x="242.6" y="483.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.6" y="494.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.04%)</title><rect x="242.6" y="467.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="245.6" y="478.0"></text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="242.6" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="245.6" y="462.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="243.1" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="246.1" y="478.0"></text>
</g>
<g>
<title>generic_write_end (17 samples, 0.75%)</title><rect x="243.6" y="499.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="246.6" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (16 samples, 0.71%)</title><rect x="243.6" y="483.0" width="8.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="246.6" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (15 samples, 0.66%)</title><rect x="243.6" y="467.0" width="7.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="246.6" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (13 samples, 0.57%)</title><rect x="244.1" y="451.0" width="6.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="247.1" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (13 samples, 0.57%)</title><rect x="244.1" y="435.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="247.1" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (10 samples, 0.44%)</title><rect x="244.1" y="419.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="247.1" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (10 samples, 0.44%)</title><rect x="244.1" y="403.0" width="5.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="247.1" y="414.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (4 samples, 0.18%)</title><rect x="244.1" y="387.0" width="2.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="247.1" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (3 samples, 0.13%)</title><rect x="244.6" y="371.0" width="1.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="247.6" y="382.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (5 samples, 0.22%)</title><rect x="246.2" y="387.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.2" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (4 samples, 0.18%)</title><rect x="246.7" y="371.0" width="2.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="249.7" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="247.8" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="250.8" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.04%)</title><rect x="248.3" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="251.3" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="248.3" y="339.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="251.3" y="350.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.04%)</title><rect x="248.8" y="387.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="251.8" y="398.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (3 samples, 0.13%)</title><rect x="249.3" y="419.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="252.3" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.09%)</title><rect x="249.3" y="403.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="252.3" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.04%)</title><rect x="249.3" y="387.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="252.3" y="398.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="249.3" y="371.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="252.3" y="382.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.04%)</title><rect x="249.9" y="387.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="252.9" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.04%)</title><rect x="250.4" y="403.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.4" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.04%)</title><rect x="250.4" y="387.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.4" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (1 samples, 0.04%)</title><rect x="250.4" y="371.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.4" y="382.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.04%)</title><rect x="250.9" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.9" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="250.9" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.9" y="446.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="250.9" y="419.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.9" y="430.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="250.9" y="403.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="253.9" y="414.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="250.9" y="387.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.9" y="398.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="250.9" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="253.9" y="382.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="250.9" y="355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="253.9" y="366.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="250.9" y="339.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="253.9" y="350.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.04%)</title><rect x="251.4" y="467.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="254.4" y="478.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.04%)</title><rect x="251.9" y="483.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="254.9" y="494.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (1 samples, 0.04%)</title><rect x="251.9" y="467.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="254.9" y="478.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.04%)</title><rect x="252.5" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="255.5" y="526.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (5 samples, 0.22%)</title><rect x="253.0" y="515.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="256.0" y="526.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="253.5" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="256.5" y="510.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (3 samples, 0.13%)</title><rect x="254.0" y="499.0" width="1.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="257.0" y="510.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.04%)</title><rect x="255.6" y="563.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="258.6" y="574.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.13%)</title><rect x="256.1" y="595.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="259.1" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.13%)</title><rect x="257.7" y="595.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="260.7" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="257.7" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="260.7" y="590.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.09%)</title><rect x="258.2" y="579.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="261.2" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.09%)</title><rect x="258.2" y="563.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="261.2" y="574.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.09%)</title><rect x="258.2" y="547.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="261.2" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.09%)</title><rect x="258.2" y="531.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="261.2" y="542.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="259.2" y="691.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="262.2" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.09%)</title><rect x="259.8" y="707.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="262.8" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="260.8" y="707.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="263.8" y="718.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.09%)</title><rect x="261.3" y="707.0" width="1.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="264.3" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="262.4" y="707.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="265.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (2 samples, 0.09%)</title><rect x="262.9" y="739.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="265.9" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="263.9" y="803.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="266.9" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.isEmpty (1 samples, 0.04%)</title><rect x="263.9" y="787.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="266.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="264.5" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="267.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="264.5" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="267.5" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="264.5" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="267.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="264.5" y="755.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="267.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (6 samples, 0.27%)</title><rect x="265.0" y="835.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="268.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.13%)</title><rect x="265.0" y="819.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.13%)</title><rect x="265.0" y="803.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="268.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="265.5" y="787.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="268.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="266.0" y="771.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="269.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="266.5" y="819.0" width="1.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="269.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="266.5" y="803.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="269.5" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.09%)</title><rect x="266.5" y="787.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="269.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (2 samples, 0.09%)</title><rect x="266.5" y="771.0" width="1.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="269.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.04%)</title><rect x="267.6" y="787.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="270.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.13%)</title><rect x="268.1" y="835.0" width="1.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="271.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (3 samples, 0.13%)</title><rect x="268.1" y="819.0" width="1.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="271.1" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="268.6" y="803.0" width="0.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="271.6" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (1 samples, 0.04%)</title><rect x="269.2" y="803.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="272.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.09%)</title><rect x="269.7" y="835.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="272.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.31%)</title><rect x="270.7" y="835.0" width="3.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="273.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.13%)</title><rect x="272.3" y="819.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.13%)</title><rect x="272.3" y="803.0" width="1.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="272.8" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="275.8" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="272.8" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.8" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="272.8" y="755.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="275.8" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.04%)</title><rect x="272.8" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="275.8" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="273.3" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="276.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="273.8" y="819.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="276.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="273.8" y="803.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="276.8" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="274.4" y="835.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="277.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="274.4" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="277.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (53 samples, 2.34%)</title><rect x="274.9" y="851.0" width="27.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="277.9" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (49 samples, 2.17%)</title><rect x="277.0" y="835.0" width="25.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="280.0" y="846.0">o..</text>
</g>
<g>
<title>[unknown] (15 samples, 0.66%)</title><rect x="278.0" y="819.0" width="7.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="281.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (15 samples, 0.66%)</title><rect x="278.0" y="803.0" width="7.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="281.0" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (14 samples, 0.62%)</title><rect x="278.0" y="787.0" width="7.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="281.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="278.5" y="771.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="281.5" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.09%)</title><rect x="279.1" y="771.0" width="1.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="282.1" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="280.1" y="771.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="283.1" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.22%)</title><rect x="280.6" y="771.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="283.6" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="280.6" y="755.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="283.6" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="281.1" y="755.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="284.1" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (3 samples, 0.13%)</title><rect x="281.7" y="755.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="284.7" y="766.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (4 samples, 0.18%)</title><rect x="283.2" y="771.0" width="2.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="286.2" y="782.0"></text>
</g>
<g>
<title>recv (1 samples, 0.04%)</title><rect x="285.3" y="787.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="288.3" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.09%)</title><rect x="285.8" y="819.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="288.8" y="830.0"></text>
</g>
<g>
<title>recv (30 samples, 1.33%)</title><rect x="286.9" y="819.0" width="15.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="289.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (24 samples, 1.06%)</title><rect x="290.0" y="803.0" width="12.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="293.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="290.0" y="787.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="293.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (23 samples, 1.02%)</title><rect x="290.5" y="787.0" width="12.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="293.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (23 samples, 1.02%)</title><rect x="290.5" y="771.0" width="12.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="293.5" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (22 samples, 0.97%)</title><rect x="290.5" y="755.0" width="11.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="293.5" y="766.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="290.5" y="739.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="293.5" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.80%)</title><rect x="291.1" y="739.0" width="9.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="294.1" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (12 samples, 0.53%)</title><rect x="291.1" y="723.0" width="6.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="294.1" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.53%)</title><rect x="291.1" y="707.0" width="6.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="294.1" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="291.6" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="294.6" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="291.6" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="294.6" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="291.6" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="294.6" y="670.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="292.1" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.1" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="292.1" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="295.1" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="292.6" y="691.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="295.6" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="292.6" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="295.6" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (4 samples, 0.18%)</title><rect x="293.1" y="691.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="296.1" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.13%)</title><rect x="293.1" y="675.0" width="1.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="296.1" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="293.1" y="659.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="296.1" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.09%)</title><rect x="293.7" y="659.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="296.7" y="670.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="293.7" y="643.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="296.7" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="293.7" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="296.7" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="294.2" y="643.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="297.2" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="294.2" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="297.2" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="294.7" y="675.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="297.7" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (3 samples, 0.13%)</title><rect x="295.2" y="691.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="298.2" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="296.8" y="691.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="299.8" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="296.8" y="675.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="299.8" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (6 samples, 0.27%)</title><rect x="297.3" y="723.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="300.3" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.27%)</title><rect x="297.3" y="707.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="300.3" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.27%)</title><rect x="297.3" y="691.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="300.3" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.27%)</title><rect x="297.3" y="675.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="300.3" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.09%)</title><rect x="299.4" y="659.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="302.4" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.04%)</title><rect x="299.9" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="302.9" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.13%)</title><rect x="300.4" y="739.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="303.4" y="750.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.09%)</title><rect x="300.4" y="723.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="303.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="300.4" y="707.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="303.4" y="718.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.09%)</title><rect x="300.4" y="691.0" width="1.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="303.4" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="301.5" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="304.5" y="734.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="302.0" y="755.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="305.0" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=9320] (558 samples, 24.66%)</title><rect x="302.5" y="915.0" width="291.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="305.5" y="926.0">[NIO Selector #3 tid=9320]</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.09%)</title><rect x="302.5" y="899.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="305.5" y="910.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (556 samples, 24.57%)</title><rect x="303.6" y="899.0" width="289.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="306.6" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (80 samples, 3.54%)</title><rect x="304.1" y="883.0" width="41.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="307.1" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (80 samples, 3.54%)</title><rect x="304.1" y="867.0" width="41.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="307.1" y="878.0">one..</text>
</g>
<g>
<title>[unknown] (66 samples, 2.92%)</title><rect x="308.8" y="851.0" width="34.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="311.8" y="862.0">[u..</text>
</g>
<g>
<title>Klass::is_klass() const volatile (6 samples, 0.27%)</title><rect x="308.8" y="835.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="311.8" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.27%)</title><rect x="308.8" y="819.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="311.8" y="830.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 0.27%)</title><rect x="308.8" y="803.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="311.8" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.13%)</title><rect x="308.8" y="787.0" width="1.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="311.8" y="798.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.13%)</title><rect x="310.3" y="787.0" width="1.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="313.3" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="311.4" y="771.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="314.4" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (2 samples, 0.09%)</title><rect x="311.9" y="835.0" width="1.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="314.9" y="846.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="313.0" y="835.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="316.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait (57 samples, 2.52%)</title><rect x="313.5" y="835.0" width="29.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="316.5" y="846.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (44 samples, 1.94%)</title><rect x="320.3" y="819.0" width="22.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="323.3" y="830.0">e..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.09%)</title><rect x="320.3" y="803.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="323.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (42 samples, 1.86%)</title><rect x="321.3" y="803.0" width="21.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="324.3" y="814.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (39 samples, 1.72%)</title><rect x="322.3" y="787.0" width="20.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="325.3" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (39 samples, 1.72%)</title><rect x="322.3" y="771.0" width="20.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="325.3" y="782.0"></text>
</g>
<g>
<title>ep_poll (32 samples, 1.41%)</title><rect x="322.9" y="755.0" width="16.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="325.9" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (16 samples, 0.71%)</title><rect x="324.9" y="739.0" width="8.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="327.9" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (9 samples, 0.40%)</title><rect x="328.6" y="723.0" width="4.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="331.6" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.22%)</title><rect x="329.6" y="707.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="332.6" y="718.0"></text>
</g>
<g>
<title>sock_poll (3 samples, 0.13%)</title><rect x="330.2" y="691.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="333.2" y="702.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.09%)</title><rect x="330.7" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="333.7" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="331.7" y="691.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="334.7" y="702.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.09%)</title><rect x="332.2" y="707.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="335.2" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (12 samples, 0.53%)</title><rect x="333.3" y="739.0" width="6.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="336.3" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.53%)</title><rect x="333.3" y="723.0" width="6.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="336.3" y="734.0"></text>
</g>
<g>
<title>schedule (12 samples, 0.53%)</title><rect x="333.3" y="707.0" width="6.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="336.3" y="718.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.49%)</title><rect x="333.8" y="691.0" width="5.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="336.8" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.49%)</title><rect x="333.8" y="675.0" width="5.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="336.8" y="686.0"></text>
</g>
<g>
<title>fput (6 samples, 0.27%)</title><rect x="339.5" y="755.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="342.5" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.04%)</title><rect x="342.7" y="787.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="345.7" y="798.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="343.2" y="851.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="346.2" y="862.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="343.7" y="851.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="346.7" y="862.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.13%)</title><rect x="344.2" y="851.0" width="1.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="347.2" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="345.3" y="835.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="348.3" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="345.3" y="819.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="348.3" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="345.3" y="803.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="348.3" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="345.3" y="787.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="348.3" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="345.3" y="771.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="348.3" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="345.3" y="755.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="348.3" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="345.3" y="739.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="348.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (474 samples, 20.95%)</title><rect x="345.8" y="883.0" width="247.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="348.8" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (470 samples, 20.77%)</title><rect x="347.9" y="867.0" width="245.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="350.9" y="878.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (420 samples, 18.56%)</title><rect x="348.4" y="851.0" width="219.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="351.4" y="862.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (408 samples, 18.03%)</title><rect x="348.9" y="835.0" width="212.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="351.9" y="846.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (408 samples, 18.03%)</title><rect x="348.9" y="819.0" width="212.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.9" y="830.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (406 samples, 17.94%)</title><rect x="348.9" y="803.0" width="211.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="351.9" y="814.0">RequestHandler0_entity.handl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (152 samples, 6.72%)</title><rect x="348.9" y="787.0" width="79.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="351.9" y="798.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (148 samples, 6.54%)</title><rect x="349.5" y="771.0" width="77.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="352.5" y="782.0">one/nio/h..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.22%)</title><rect x="349.5" y="755.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="352.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.13%)</title><rect x="350.5" y="739.0" width="1.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="353.5" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (2 samples, 0.09%)</title><rect x="350.5" y="723.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="353.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="351.5" y="723.0" width="0.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="354.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="351.5" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="354.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (143 samples, 6.32%)</title><rect x="352.1" y="755.0" width="74.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="355.1" y="766.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (143 samples, 6.32%)</title><rect x="352.1" y="739.0" width="74.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.1" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (140 samples, 6.19%)</title><rect x="352.1" y="723.0" width="73.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="355.1" y="734.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (140 samples, 6.19%)</title><rect x="352.1" y="707.0" width="73.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="355.1" y="718.0">one/nio/..</text>
</g>
<g>
<title>__send (137 samples, 6.05%)</title><rect x="353.6" y="691.0" width="71.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="356.6" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (133 samples, 5.88%)</title><rect x="355.7" y="675.0" width="69.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="358.7" y="686.0">entry_S..</text>
</g>
<g>
<title>do_syscall_64 (133 samples, 5.88%)</title><rect x="355.7" y="659.0" width="69.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="358.7" y="670.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (133 samples, 5.88%)</title><rect x="355.7" y="643.0" width="69.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="358.7" y="654.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (132 samples, 5.83%)</title><rect x="355.7" y="627.0" width="68.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="358.7" y="638.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (132 samples, 5.83%)</title><rect x="355.7" y="611.0" width="68.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="358.7" y="622.0">sock_se..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="355.7" y="595.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="358.7" y="606.0"></text>
</g>
<g>
<title>inet_sendmsg (129 samples, 5.70%)</title><rect x="356.2" y="595.0" width="67.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.2" y="606.0">inet_se..</text>
</g>
<g>
<title>tcp_sendmsg (129 samples, 5.70%)</title><rect x="356.2" y="579.0" width="67.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="359.2" y="590.0">tcp_sen..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="356.2" y="563.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="359.2" y="574.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="356.8" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="359.8" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="357.3" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="360.3" y="574.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.09%)</title><rect x="357.8" y="563.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="360.8" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.09%)</title><rect x="357.8" y="547.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="360.8" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.04%)</title><rect x="358.8" y="563.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="361.8" y="574.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="359.4" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="362.4" y="574.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="359.9" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="362.9" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="360.4" y="563.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="363.4" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (119 samples, 5.26%)</title><rect x="360.9" y="563.0" width="62.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="363.9" y="574.0">tcp_se..</text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.35%)</title><rect x="361.4" y="547.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="364.4" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (8 samples, 0.35%)</title><rect x="361.4" y="531.0" width="4.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="364.4" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.18%)</title><rect x="361.4" y="515.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="364.4" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (4 samples, 0.18%)</title><rect x="361.4" y="499.0" width="2.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="364.4" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="363.0" y="483.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="366.0" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.18%)</title><rect x="363.5" y="515.0" width="2.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.5" y="526.0"></text>
</g>
<g>
<title>tcp_push (107 samples, 4.73%)</title><rect x="365.6" y="547.0" width="55.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="368.6" y="558.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (107 samples, 4.73%)</title><rect x="365.6" y="531.0" width="55.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="368.6" y="542.0">__tcp..</text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="365.6" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="368.6" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (106 samples, 4.68%)</title><rect x="366.1" y="515.0" width="55.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="369.1" y="526.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (101 samples, 4.46%)</title><rect x="366.7" y="499.0" width="52.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="369.7" y="510.0">__tcp..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="369.8" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="372.8" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (93 samples, 4.11%)</title><rect x="370.3" y="483.0" width="48.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="373.3" y="494.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (92 samples, 4.07%)</title><rect x="370.3" y="467.0" width="48.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="373.3" y="478.0">__ip..</text>
</g>
<g>
<title>ip_local_out (90 samples, 3.98%)</title><rect x="370.3" y="451.0" width="46.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="373.3" y="462.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.09%)</title><rect x="370.3" y="435.0" width="1.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.3" y="446.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="370.8" y="419.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="373.8" y="430.0"></text>
</g>
<g>
<title>ip_output (88 samples, 3.89%)</title><rect x="371.4" y="435.0" width="45.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="374.4" y="446.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (88 samples, 3.89%)</title><rect x="371.4" y="419.0" width="45.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="374.4" y="430.0">ip_f..</text>
</g>
<g>
<title>ip_finish_output2 (88 samples, 3.89%)</title><rect x="371.4" y="403.0" width="45.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="374.4" y="414.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (73 samples, 3.23%)</title><rect x="371.4" y="387.0" width="38.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="374.4" y="398.0">__l..</text>
</g>
<g>
<title>do_softirq.part.21 (73 samples, 3.23%)</title><rect x="371.4" y="371.0" width="38.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="374.4" y="382.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (72 samples, 3.18%)</title><rect x="371.9" y="355.0" width="37.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="374.9" y="366.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (72 samples, 3.18%)</title><rect x="371.9" y="339.0" width="37.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="374.9" y="350.0">__s..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="372.4" y="323.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="375.4" y="334.0"></text>
</g>
<g>
<title>net_rx_action (70 samples, 3.09%)</title><rect x="372.9" y="323.0" width="36.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="375.9" y="334.0">net..</text>
</g>
<g>
<title>process_backlog (70 samples, 3.09%)</title><rect x="372.9" y="307.0" width="36.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="375.9" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (69 samples, 3.05%)</title><rect x="373.4" y="291.0" width="36.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="376.4" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="373.4" y="275.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="376.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (68 samples, 3.00%)</title><rect x="374.0" y="275.0" width="35.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="377.0" y="286.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="374.5" y="259.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="377.5" y="270.0"></text>
</g>
<g>
<title>ip_rcv (66 samples, 2.92%)</title><rect x="375.0" y="259.0" width="34.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="378.0" y="270.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (66 samples, 2.92%)</title><rect x="375.0" y="243.0" width="34.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="378.0" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (64 samples, 2.83%)</title><rect x="375.0" y="227.0" width="33.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="378.0" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (62 samples, 2.74%)</title><rect x="376.0" y="211.0" width="32.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.0" y="222.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (62 samples, 2.74%)</title><rect x="376.0" y="195.0" width="32.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="379.0" y="206.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (61 samples, 2.70%)</title><rect x="376.6" y="179.0" width="31.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="379.6" y="190.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (3 samples, 0.13%)</title><rect x="377.6" y="163.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="380.6" y="174.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="378.7" y="147.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="381.7" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="379.2" y="163.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="382.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (55 samples, 2.43%)</title><rect x="379.7" y="163.0" width="28.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="382.7" y="174.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (54 samples, 2.39%)</title><rect x="380.2" y="147.0" width="28.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="383.2" y="158.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="380.2" y="131.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="383.2" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="380.2" y="115.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="383.2" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="380.2" y="99.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="383.2" y="110.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="380.2" y="83.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="383.2" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="380.2" y="67.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="383.2" y="78.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="380.7" y="131.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="383.7" y="142.0"></text>
</g>
<g>
<title>tcp_ack (12 samples, 0.53%)</title><rect x="381.3" y="131.0" width="6.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="384.3" y="142.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="381.3" y="115.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="384.3" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (10 samples, 0.44%)</title><rect x="381.8" y="115.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="384.8" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.18%)</title><rect x="382.8" y="99.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="385.8" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.09%)</title><rect x="382.8" y="83.0" width="1.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="385.8" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="383.3" y="67.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="386.3" y="78.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="383.9" y="83.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="386.9" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.09%)</title><rect x="383.9" y="67.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="386.9" y="78.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="384.4" y="51.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="387.4" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="384.4" y="35.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="387.4" y="46.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="384.9" y="99.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="387.9" y="110.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="385.4" y="99.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="388.4" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.09%)</title><rect x="386.0" y="99.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="389.0" y="110.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="387.0" y="115.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="390.0" y="126.0"></text>
</g>
<g>
<title>tcp_check_space (4 samples, 0.18%)</title><rect x="387.5" y="131.0" width="2.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="390.5" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (35 samples, 1.55%)</title><rect x="389.6" y="131.0" width="18.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="392.6" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (34 samples, 1.50%)</title><rect x="389.6" y="115.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="392.6" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (31 samples, 1.37%)</title><rect x="391.2" y="99.0" width="16.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="394.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (31 samples, 1.37%)</title><rect x="391.2" y="83.0" width="16.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="394.2" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (31 samples, 1.37%)</title><rect x="391.2" y="67.0" width="16.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="394.2" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="407.3" y="115.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="410.3" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.04%)</title><rect x="407.9" y="131.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="410.9" y="142.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.09%)</title><rect x="408.4" y="227.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="411.4" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (15 samples, 0.66%)</title><rect x="409.4" y="387.0" width="7.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="412.4" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (14 samples, 0.62%)</title><rect x="409.4" y="371.0" width="7.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="412.4" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.22%)</title><rect x="410.5" y="355.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="413.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.22%)</title><rect x="410.5" y="339.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="413.5" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="410.5" y="323.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="413.5" y="334.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.18%)</title><rect x="411.0" y="323.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="414.0" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.18%)</title><rect x="411.0" y="307.0" width="2.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="414.0" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.18%)</title><rect x="411.0" y="291.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="414.0" y="302.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="413.1" y="355.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="416.1" y="366.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.04%)</title><rect x="413.6" y="355.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="416.6" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="414.1" y="355.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="417.1" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="414.6" y="355.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="417.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.13%)</title><rect x="415.2" y="355.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="418.2" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.09%)</title><rect x="415.7" y="339.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="418.7" y="350.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="416.7" y="371.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="419.7" y="382.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.09%)</title><rect x="417.2" y="451.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="420.2" y="462.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="418.3" y="467.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="421.3" y="478.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="418.8" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="421.8" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="418.8" y="467.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="421.8" y="478.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="419.3" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="422.3" y="510.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="419.8" y="499.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="422.8" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="420.4" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="423.4" y="510.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="420.9" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="423.9" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (3 samples, 0.13%)</title><rect x="421.4" y="547.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="424.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.13%)</title><rect x="421.4" y="531.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="424.4" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="423.0" y="563.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="426.0" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="423.5" y="595.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="426.5" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="423.5" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="426.5" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="423.5" y="563.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="426.5" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="423.5" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="426.5" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.04%)</title><rect x="424.0" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="427.0" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="424.5" y="627.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="427.5" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.13%)</title><rect x="425.1" y="723.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="428.1" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="425.1" y="707.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="428.1" y="718.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.09%)</title><rect x="425.6" y="707.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="428.6" y="718.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.09%)</title><rect x="425.6" y="691.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="428.6" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.13%)</title><rect x="426.6" y="771.0" width="1.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="429.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.13%)</title><rect x="426.6" y="755.0" width="1.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="429.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.13%)</title><rect x="426.6" y="739.0" width="1.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="429.6" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.09%)</title><rect x="427.1" y="723.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="430.1" y="734.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (2 samples, 0.09%)</title><rect x="427.1" y="707.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="430.1" y="718.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (2 samples, 0.09%)</title><rect x="427.1" y="691.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="430.1" y="702.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.09%)</title><rect x="428.2" y="787.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="431.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="428.7" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="431.7" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (252 samples, 11.14%)</title><rect x="429.2" y="787.0" width="131.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="432.2" y="798.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (4 samples, 0.18%)</title><rect x="429.8" y="771.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="432.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (4 samples, 0.18%)</title><rect x="429.8" y="755.0" width="2.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="432.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="429.8" y="739.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="432.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095293768.invoke (3 samples, 0.13%)</title><rect x="429.8" y="723.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="432.8" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="430.8" y="707.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="433.8" y="718.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.04%)</title><rect x="430.8" y="691.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="433.8" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="431.3" y="739.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="434.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (247 samples, 10.91%)</title><rect x="431.8" y="771.0" width="128.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="434.8" y="782.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.09%)</title><rect x="431.8" y="755.0" width="1.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="434.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.09%)</title><rect x="431.8" y="739.0" width="1.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="434.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="431.8" y="723.0" width="1.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="434.8" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="431.8" y="707.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="434.8" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="431.8" y="691.0" width="1.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="434.8" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.09%)</title><rect x="431.8" y="675.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="434.8" y="686.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.09%)</title><rect x="431.8" y="659.0" width="1.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="434.8" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (245 samples, 10.83%)</title><rect x="432.9" y="755.0" width="127.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="435.9" y="766.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (241 samples, 10.65%)</title><rect x="432.9" y="739.0" width="125.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="435.9" y="750.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (241 samples, 10.65%)</title><rect x="432.9" y="723.0" width="125.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="435.9" y="734.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="433.4" y="707.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="436.4" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (154 samples, 6.81%)</title><rect x="433.9" y="707.0" width="80.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="436.9" y="718.0">Java_org_..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="434.4" y="691.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="437.4" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.09%)</title><rect x="435.0" y="691.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="438.0" y="702.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="436.0" y="691.0" width="1.1" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="439.0" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="437.1" y="691.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="440.1" y="702.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="437.6" y="691.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="440.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="438.1" y="691.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="441.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="438.6" y="691.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="441.6" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (144 samples, 6.36%)</title><rect x="439.1" y="691.0" width="75.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="442.1" y="702.0">rocksdb_..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="441.2" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="444.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="441.7" y="675.0" width="0.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="444.7" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="441.7" y="659.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="444.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (137 samples, 6.05%)</title><rect x="442.3" y="675.0" width="71.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="445.3" y="686.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (136 samples, 6.01%)</title><rect x="442.8" y="659.0" width="70.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="445.8" y="670.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (134 samples, 5.92%)</title><rect x="442.8" y="643.0" width="69.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="445.8" y="654.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.04%)</title><rect x="442.8" y="627.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="445.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (119 samples, 5.26%)</title><rect x="443.3" y="627.0" width="62.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="446.3" y="638.0">rocksd..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="443.3" y="611.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="446.3" y="622.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="443.8" y="611.0" width="1.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="446.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (111 samples, 4.90%)</title><rect x="444.9" y="611.0" width="57.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="447.9" y="622.0">rocksd..</text>
</g>
<g>
<title>__GI___sched_yield (1 samples, 0.04%)</title><rect x="451.7" y="595.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="454.7" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="452.2" y="595.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="455.2" y="606.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="452.7" y="595.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="455.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="453.7" y="595.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="456.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (22 samples, 0.97%)</title><rect x="454.3" y="595.0" width="11.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="457.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (2 samples, 0.09%)</title><rect x="455.8" y="579.0" width="1.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="458.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (15 samples, 0.66%)</title><rect x="456.9" y="579.0" width="7.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="459.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (14 samples, 0.62%)</title><rect x="456.9" y="563.0" width="7.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="459.9" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (2 samples, 0.09%)</title><rect x="457.4" y="547.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="460.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (11 samples, 0.49%)</title><rect x="458.4" y="547.0" width="5.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="461.4" y="558.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="458.4" y="531.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="461.4" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="459.0" y="531.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="462.0" y="542.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="459.5" y="531.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="462.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (2 samples, 0.09%)</title><rect x="460.0" y="531.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="463.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (2 samples, 0.09%)</title><rect x="461.0" y="531.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="464.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="462.1" y="531.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="465.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (3 samples, 0.13%)</title><rect x="462.6" y="531.0" width="1.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="465.6" y="542.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="463.1" y="515.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="466.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="463.6" y="515.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="466.6" y="526.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="463.6" y="499.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="466.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="464.2" y="563.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="467.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetSequence(rocksdb::WriteBatch*, unsigned long) (1 samples, 0.04%)</title><rect x="464.7" y="579.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="467.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="465.2" y="579.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="468.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.04%)</title><rect x="465.7" y="595.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="468.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (2 samples, 0.09%)</title><rect x="466.3" y="595.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="469.3" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="466.8" y="579.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="469.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="467.3" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="470.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="467.8" y="595.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="470.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Handler::~Handler() (1 samples, 0.04%)</title><rect x="468.3" y="595.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="471.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.04%)</title><rect x="468.9" y="595.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="471.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (31 samples, 1.37%)</title><rect x="469.4" y="595.0" width="16.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="472.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="470.9" y="579.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="473.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (27 samples, 1.19%)</title><rect x="471.5" y="579.0" width="14.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="474.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (25 samples, 1.10%)</title><rect x="472.5" y="563.0" width="13.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="475.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.04%)</title><rect x="472.5" y="547.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="475.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.04%)</title><rect x="473.0" y="547.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="476.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (23 samples, 1.02%)</title><rect x="473.6" y="547.0" width="11.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="476.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (2 samples, 0.09%)</title><rect x="475.1" y="531.0" width="1.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="478.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (16 samples, 0.71%)</title><rect x="476.2" y="531.0" width="8.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="479.2" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 0.53%)</title><rect x="477.2" y="515.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="480.2" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (9 samples, 0.40%)</title><rect x="478.8" y="499.0" width="4.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="481.8" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (5 samples, 0.22%)</title><rect x="479.8" y="483.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="482.8" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="480.3" y="467.0" width="0.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="483.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.13%)</title><rect x="480.9" y="467.0" width="1.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="483.9" y="478.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (1 samples, 0.04%)</title><rect x="481.4" y="451.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="484.4" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="481.9" y="451.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="484.9" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="482.4" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="485.4" y="494.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="482.4" y="467.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="485.4" y="478.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="482.4" y="451.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="485.4" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="482.4" y="435.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="485.4" y="446.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="482.4" y="419.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="485.4" y="430.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="482.4" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="485.4" y="414.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="482.4" y="387.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="485.4" y="398.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="482.9" y="483.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="485.9" y="494.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="483.5" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="486.5" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="483.5" y="499.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.5" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="483.5" y="483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="486.5" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="483.5" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="486.5" y="478.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="483.5" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="486.5" y="462.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="483.5" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="486.5" y="446.0"></text>
</g>
<g>
<title>get_vma_policy.part.36 (1 samples, 0.04%)</title><rect x="483.5" y="419.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="486.5" y="430.0"></text>
</g>
<g>
<title>get_task_policy.part.32 (1 samples, 0.04%)</title><rect x="483.5" y="403.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="486.5" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="484.0" y="515.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="487.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="484.0" y="499.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="487.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="484.5" y="531.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="487.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="485.0" y="531.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="488.0" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (11 samples, 0.49%)</title><rect x="485.5" y="595.0" width="5.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="488.5" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="485.5" y="579.0" width="0.6" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="488.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (10 samples, 0.44%)</title><rect x="486.1" y="579.0" width="5.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="489.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (10 samples, 0.44%)</title><rect x="486.1" y="563.0" width="5.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="489.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (10 samples, 0.44%)</title><rect x="486.1" y="547.0" width="5.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="489.1" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="486.6" y="531.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="489.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.04%)</title><rect x="487.1" y="531.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="490.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (6 samples, 0.27%)</title><rect x="487.6" y="531.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="490.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (6 samples, 0.27%)</title><rect x="487.6" y="515.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="490.6" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 0.27%)</title><rect x="487.6" y="499.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="490.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (6 samples, 0.27%)</title><rect x="487.6" y="483.0" width="3.2" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="490.6" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (5 samples, 0.22%)</title><rect x="488.2" y="467.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="491.2" y="478.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="488.2" y="451.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="491.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.18%)</title><rect x="488.7" y="451.0" width="2.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="491.7" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (3 samples, 0.13%)</title><rect x="489.2" y="435.0" width="1.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="492.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.04%)</title><rect x="490.8" y="531.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="493.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (16 samples, 0.71%)</title><rect x="491.3" y="595.0" width="8.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="494.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.13%)</title><rect x="499.6" y="595.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="502.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.13%)</title><rect x="499.6" y="579.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="502.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="501.2" y="595.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="504.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.04%)</title><rect x="501.2" y="579.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="504.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::JoinBatchGroup(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="501.7" y="595.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="504.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.04%)</title><rect x="501.7" y="579.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="504.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.04%)</title><rect x="502.2" y="595.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="505.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.04%)</title><rect x="502.8" y="611.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="505.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.04%)</title><rect x="503.3" y="611.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="506.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (3 samples, 0.13%)</title><rect x="503.8" y="611.0" width="1.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="506.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.04%)</title><rect x="505.4" y="627.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="508.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (2 samples, 0.09%)</title><rect x="505.9" y="627.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="508.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 0.27%)</title><rect x="506.9" y="627.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="509.9" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="506.9" y="611.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="509.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="507.4" y="611.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="510.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (2 samples, 0.09%)</title><rect x="508.0" y="611.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="511.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (2 samples, 0.09%)</title><rect x="509.0" y="611.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="512.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="510.1" y="627.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="513.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (2 samples, 0.09%)</title><rect x="510.6" y="627.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="513.6" y="638.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.04%)</title><rect x="511.6" y="627.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="514.6" y="638.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="512.1" y="627.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="515.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.09%)</title><rect x="512.7" y="643.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="515.7" y="654.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="513.7" y="675.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="516.7" y="686.0"></text>
</g>
<g>
<title>[unknown] (80 samples, 3.54%)</title><rect x="514.2" y="707.0" width="41.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="517.2" y="718.0">[un..</text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="514.2" y="691.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="517.2" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="514.7" y="691.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="517.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="514.7" y="675.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="514.7" y="659.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="517.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="514.7" y="643.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="517.7" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="514.7" y="627.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.7" y="638.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="514.7" y="611.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="517.7" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="514.7" y="595.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.7" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="514.7" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="517.7" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="514.7" y="563.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="517.7" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="514.7" y="547.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="517.7" y="558.0"></text>
</g>
<g>
<title>__write (78 samples, 3.45%)</title><rect x="515.3" y="691.0" width="40.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="518.3" y="702.0">__w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (76 samples, 3.36%)</title><rect x="516.3" y="675.0" width="39.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="519.3" y="686.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (76 samples, 3.36%)</title><rect x="516.3" y="659.0" width="39.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="519.3" y="670.0">do_..</text>
</g>
<g>
<title>__x64_sys_write (74 samples, 3.27%)</title><rect x="517.4" y="643.0" width="38.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="520.4" y="654.0">__x..</text>
</g>
<g>
<title>ksys_write (74 samples, 3.27%)</title><rect x="517.4" y="627.0" width="38.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="520.4" y="638.0">ksy..</text>
</g>
<g>
<title>__fdget_pos (1 samples, 0.04%)</title><rect x="517.4" y="611.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="520.4" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="517.4" y="595.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="520.4" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="517.4" y="579.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="520.4" y="590.0"></text>
</g>
<g>
<title>vfs_write (73 samples, 3.23%)</title><rect x="517.9" y="611.0" width="38.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="520.9" y="622.0">vfs..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.09%)</title><rect x="518.4" y="595.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="521.4" y="606.0"></text>
</g>
<g>
<title>__vfs_write (63 samples, 2.78%)</title><rect x="519.4" y="595.0" width="32.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="522.4" y="606.0">__..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.04%)</title><rect x="519.4" y="579.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="522.4" y="590.0"></text>
</g>
<g>
<title>new_sync_write (62 samples, 2.74%)</title><rect x="520.0" y="579.0" width="32.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="523.0" y="590.0">ne..</text>
</g>
<g>
<title>ext4_file_write_iter (61 samples, 2.70%)</title><rect x="520.5" y="563.0" width="31.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="523.5" y="574.0">ex..</text>
</g>
<g>
<title>__generic_file_write_iter (59 samples, 2.61%)</title><rect x="521.5" y="547.0" width="30.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="524.5" y="558.0">__..</text>
</g>
<g>
<title>current_time (2 samples, 0.09%)</title><rect x="522.6" y="531.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="525.6" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.04%)</title><rect x="523.6" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="526.6" y="542.0"></text>
</g>
<g>
<title>file_update_time (6 samples, 0.27%)</title><rect x="524.1" y="531.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="527.1" y="542.0"></text>
</g>
<g>
<title>generic_update_time (3 samples, 0.13%)</title><rect x="525.2" y="515.0" width="1.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="528.2" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.13%)</title><rect x="525.2" y="499.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="528.2" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.09%)</title><rect x="525.7" y="483.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="528.7" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.04%)</title><rect x="525.7" y="467.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="528.7" y="478.0"></text>
</g>
<g>
<title>ext4_journal_check_start (1 samples, 0.04%)</title><rect x="525.7" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="528.7" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.04%)</title><rect x="526.2" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="529.2" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.04%)</title><rect x="526.2" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="529.2" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.04%)</title><rect x="526.2" y="435.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="529.2" y="446.0"></text>
</g>
<g>
<title>ktime_get_coarse_real_ts64 (1 samples, 0.04%)</title><rect x="526.7" y="515.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="529.7" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (48 samples, 2.12%)</title><rect x="527.3" y="531.0" width="25.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.3" y="542.0">g..</text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="527.8" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="530.8" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_begin (18 samples, 0.80%)</title><rect x="528.3" y="515.0" width="9.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="531.3" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (7 samples, 0.31%)</title><rect x="528.8" y="499.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="531.8" y="510.0"></text>
</g>
<g>
<title>ext4_journal_check_start (3 samples, 0.13%)</title><rect x="528.8" y="483.0" width="1.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="531.8" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (4 samples, 0.18%)</title><rect x="530.4" y="483.0" width="2.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="533.4" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.09%)</title><rect x="530.4" y="467.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="533.4" y="478.0"></text>
</g>
<g>
<title>start_this_handle (2 samples, 0.09%)</title><rect x="531.4" y="467.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="534.4" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.04%)</title><rect x="532.5" y="499.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="535.5" y="510.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.04%)</title><rect x="533.0" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="536.0" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (8 samples, 0.35%)</title><rect x="533.5" y="499.0" width="4.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="536.5" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (7 samples, 0.31%)</title><rect x="533.5" y="483.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="536.5" y="494.0"></text>
</g>
<g>
<title>find_get_entry (4 samples, 0.18%)</title><rect x="534.6" y="467.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="537.6" y="478.0"></text>
</g>
<g>
<title>xas_load (2 samples, 0.09%)</title><rect x="535.6" y="451.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="538.6" y="462.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="536.6" y="467.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="539.6" y="478.0"></text>
</g>
<g>
<title>wait_for_stable_page (1 samples, 0.04%)</title><rect x="537.2" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="540.2" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (24 samples, 1.06%)</title><rect x="537.7" y="515.0" width="12.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="540.7" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (3 samples, 0.13%)</title><rect x="537.7" y="499.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="540.7" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (3 samples, 0.13%)</title><rect x="537.7" y="483.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="540.7" y="494.0"></text>
</g>
<g>
<title>__wake_up (1 samples, 0.04%)</title><rect x="538.7" y="467.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="541.7" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="538.7" y="451.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="541.7" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="538.7" y="435.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="541.7" y="446.0"></text>
</g>
<g>
<title>__generic_write_end (1 samples, 0.04%)</title><rect x="539.3" y="499.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="542.3" y="510.0"></text>
</g>
<g>
<title>generic_write_end (20 samples, 0.88%)</title><rect x="539.8" y="499.0" width="10.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="542.8" y="510.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (1 samples, 0.04%)</title><rect x="539.8" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="542.8" y="494.0"></text>
</g>
<g>
<title>__generic_write_end (17 samples, 0.75%)</title><rect x="540.3" y="483.0" width="8.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="543.3" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (16 samples, 0.71%)</title><rect x="540.3" y="467.0" width="8.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="543.3" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (15 samples, 0.66%)</title><rect x="540.8" y="451.0" width="7.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="543.8" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.04%)</title><rect x="540.8" y="435.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="543.8" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (13 samples, 0.57%)</title><rect x="541.3" y="435.0" width="6.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="544.3" y="446.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (8 samples, 0.35%)</title><rect x="541.3" y="419.0" width="4.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="544.3" y="430.0"></text>
</g>
<g>
<title>__brelse (1 samples, 0.04%)</title><rect x="541.9" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="544.9" y="414.0"></text>
</g>
<g>
<title>ext4_do_update_inode (5 samples, 0.22%)</title><rect x="542.4" y="403.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="545.4" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.13%)</title><rect x="543.4" y="387.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="546.4" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (3 samples, 0.13%)</title><rect x="543.4" y="371.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="546.4" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="543.4" y="355.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="546.4" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.09%)</title><rect x="543.9" y="355.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="546.9" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (2 samples, 0.09%)</title><rect x="543.9" y="339.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="546.9" y="350.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="544.5" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="547.5" y="334.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="544.5" y="307.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="547.5" y="318.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="544.5" y="291.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="547.5" y="302.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="544.5" y="275.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="547.5" y="286.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="544.5" y="259.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="547.5" y="270.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="544.5" y="243.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="547.5" y="254.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="544.5" y="227.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="547.5" y="238.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.04%)</title><rect x="545.0" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="548.0" y="414.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.22%)</title><rect x="545.5" y="419.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="548.5" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.13%)</title><rect x="545.5" y="403.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="548.5" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.09%)</title><rect x="545.5" y="387.0" width="1.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="548.5" y="398.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.09%)</title><rect x="545.5" y="371.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="548.5" y="382.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="546.0" y="355.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="549.0" y="366.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.04%)</title><rect x="546.6" y="387.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="549.6" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (2 samples, 0.09%)</title><rect x="547.1" y="403.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="550.1" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.04%)</title><rect x="547.6" y="387.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="550.6" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.04%)</title><rect x="548.1" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="551.1" y="446.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.04%)</title><rect x="548.6" y="467.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="551.6" y="478.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.09%)</title><rect x="549.2" y="483.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="552.2" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (2 samples, 0.09%)</title><rect x="549.2" y="467.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="552.2" y="478.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (4 samples, 0.18%)</title><rect x="550.2" y="515.0" width="2.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="553.2" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (2 samples, 0.09%)</title><rect x="551.2" y="499.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="554.2" y="510.0"></text>
</g>
<g>
<title>fsnotify (3 samples, 0.13%)</title><rect x="552.3" y="595.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="555.3" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.18%)</title><rect x="553.9" y="595.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="556.9" y="606.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.13%)</title><rect x="554.4" y="579.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="557.4" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.13%)</title><rect x="554.4" y="563.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="557.4" y="574.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.13%)</title><rect x="554.4" y="547.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="557.4" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.09%)</title><rect x="554.9" y="531.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="557.9" y="542.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="555.9" y="707.0" width="0.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="558.9" y="718.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="556.5" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="559.5" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="557.0" y="707.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="560.0" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="557.0" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="560.0" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="557.0" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="560.0" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="557.0" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="560.0" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="557.0" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="560.0" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="557.0" y="627.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="560.0" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="557.0" y="611.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="560.0" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="557.0" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="560.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="557.0" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="560.0" y="590.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.09%)</title><rect x="557.5" y="707.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="560.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (1 samples, 0.04%)</title><rect x="558.5" y="739.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="561.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (3 samples, 0.13%)</title><rect x="559.1" y="739.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (3 samples, 0.13%)</title><rect x="559.1" y="723.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="562.1" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.13%)</title><rect x="559.1" y="707.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="562.1" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.13%)</title><rect x="559.1" y="691.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="562.1" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="559.6" y="675.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="562.6" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.09%)</title><rect x="559.6" y="659.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="562.6" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="560.6" y="803.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="563.6" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="561.2" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="564.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.09%)</title><rect x="561.7" y="835.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="564.7" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="561.7" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="564.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="562.2" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="565.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="562.2" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="565.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="562.2" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="565.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.04%)</title><rect x="562.2" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="565.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.27%)</title><rect x="562.7" y="835.0" width="3.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="565.7" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="562.7" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="565.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="562.7" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="565.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (5 samples, 0.22%)</title><rect x="563.2" y="819.0" width="2.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="566.2" y="830.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="565.3" y="803.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="568.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.13%)</title><rect x="565.8" y="835.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="568.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="566.9" y="819.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="569.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (49 samples, 2.17%)</title><rect x="567.4" y="851.0" width="25.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="570.4" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (49 samples, 2.17%)</title><rect x="567.4" y="835.0" width="25.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="570.4" y="846.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.04%)</title><rect x="567.9" y="819.0" width="0.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="570.9" y="830.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.80%)</title><rect x="568.5" y="819.0" width="9.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="571.5" y="830.0"></text>
</g>
<g>
<title>[unknown] (18 samples, 0.80%)</title><rect x="568.5" y="803.0" width="9.3" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="571.5" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (15 samples, 0.66%)</title><rect x="568.5" y="787.0" width="7.8" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="571.5" y="798.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="569.5" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="572.5" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="570.0" y="771.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="573.0" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.09%)</title><rect x="570.5" y="771.0" width="1.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="573.5" y="782.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="571.6" y="771.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="574.6" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.22%)</title><rect x="572.1" y="771.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="575.1" y="782.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="572.6" y="755.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="575.6" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="573.1" y="755.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="576.1" y="766.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="573.7" y="755.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="576.7" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="574.2" y="755.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="577.2" y="766.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.13%)</title><rect x="574.7" y="771.0" width="1.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="577.7" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="575.8" y="755.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="578.8" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="575.8" y="739.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="578.8" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="575.8" y="723.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="578.8" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="575.8" y="707.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="578.8" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="575.8" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.8" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="575.8" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="578.8" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="575.8" y="659.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="578.8" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="576.3" y="787.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="579.3" y="798.0"></text>
</g>
<g>
<title>recv (2 samples, 0.09%)</title><rect x="576.8" y="787.0" width="1.0" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="579.8" y="798.0"></text>
</g>
<g>
<title>recv (29 samples, 1.28%)</title><rect x="577.8" y="819.0" width="15.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="580.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (26 samples, 1.15%)</title><rect x="579.4" y="803.0" width="13.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="582.4" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 1.15%)</title><rect x="579.4" y="787.0" width="13.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="582.4" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (24 samples, 1.06%)</title><rect x="580.4" y="771.0" width="12.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="583.4" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (23 samples, 1.02%)</title><rect x="580.4" y="755.0" width="12.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="583.4" y="766.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.04%)</title><rect x="581.0" y="739.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="584.0" y="750.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="581.5" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="584.5" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (18 samples, 0.80%)</title><rect x="582.0" y="739.0" width="9.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="585.0" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (12 samples, 0.53%)</title><rect x="582.0" y="723.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="585.0" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.53%)</title><rect x="582.0" y="707.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="585.0" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="583.1" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="586.1" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="583.1" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="586.1" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="583.6" y="691.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="586.6" y="702.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="583.6" y="675.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="586.6" y="686.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="583.6" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.6" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.27%)</title><rect x="584.1" y="691.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="587.1" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (4 samples, 0.18%)</title><rect x="584.1" y="675.0" width="2.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="587.1" y="686.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="584.1" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="587.1" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (3 samples, 0.13%)</title><rect x="584.6" y="659.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="587.6" y="670.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.13%)</title><rect x="584.6" y="643.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="587.6" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="585.1" y="627.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="588.1" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="585.7" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="588.7" y="638.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.09%)</title><rect x="586.2" y="675.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="589.2" y="686.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="587.2" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="590.2" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="587.2" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="590.2" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="587.7" y="691.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="590.7" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.18%)</title><rect x="588.3" y="723.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.3" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.18%)</title><rect x="588.3" y="707.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.3" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="588.3" y="691.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="591.3" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.13%)</title><rect x="588.8" y="691.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.8" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.13%)</title><rect x="588.8" y="675.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="591.8" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.09%)</title><rect x="589.3" y="659.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="592.3" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.09%)</title><rect x="589.3" y="643.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="592.3" y="654.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.04%)</title><rect x="589.8" y="627.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="592.8" y="638.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.09%)</title><rect x="590.4" y="723.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="593.4" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.09%)</title><rect x="591.4" y="739.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="594.4" y="750.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.09%)</title><rect x="591.4" y="723.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="594.4" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="591.4" y="707.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="594.4" y="718.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.09%)</title><rect x="591.4" y="691.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="594.4" y="702.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="592.4" y="755.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="595.4" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="593.0" y="883.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="596.0" y="894.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="593.0" y="867.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="596.0" y="878.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="593.0" y="851.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="596.0" y="862.0"></text>
</g>
<g>
<title>[NIO Selector #4 tid=9321] (565 samples, 24.97%)</title><rect x="593.5" y="915.0" width="294.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="596.5" y="926.0">[NIO Selector #4 tid=9321]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="593.5" y="899.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="596.5" y="910.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="593.5" y="883.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="596.5" y="894.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="593.5" y="867.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="596.5" y="878.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="593.5" y="851.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="596.5" y="862.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="593.5" y="835.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="596.5" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="593.5" y="819.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="596.5" y="830.0"></text>
</g>
<g>
<title>G1Allocator::unsafe_max_tlab_alloc() (1 samples, 0.04%)</title><rect x="593.5" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="596.5" y="814.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (564 samples, 24.92%)</title><rect x="594.0" y="899.0" width="294.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="597.0" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.04%)</title><rect x="595.0" y="883.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="598.0" y="894.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (77 samples, 3.40%)</title><rect x="595.6" y="883.0" width="40.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="598.6" y="894.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (77 samples, 3.40%)</title><rect x="595.6" y="867.0" width="40.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="598.6" y="878.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (3 samples, 0.13%)</title><rect x="598.7" y="851.0" width="1.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="601.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (65 samples, 2.87%)</title><rect x="600.3" y="851.0" width="33.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="603.3" y="862.0">[u..</text>
</g>
<g>
<title>Klass::is_klass() const volatile (1 samples, 0.04%)</title><rect x="600.3" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="603.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.3" y="819.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="603.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="600.3" y="803.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="603.3" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="600.3" y="787.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="603.3" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.13%)</title><rect x="600.8" y="835.0" width="1.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="603.8" y="846.0"></text>
</g>
<g>
<title>epoll_wait (61 samples, 2.70%)</title><rect x="602.3" y="835.0" width="31.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="605.3" y="846.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 1.68%)</title><rect x="614.3" y="819.0" width="19.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="617.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (38 samples, 1.68%)</title><rect x="614.3" y="803.0" width="19.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="617.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (37 samples, 1.63%)</title><rect x="614.9" y="787.0" width="19.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="617.9" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (36 samples, 1.59%)</title><rect x="615.4" y="771.0" width="18.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="618.4" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="615.4" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="618.4" y="766.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="615.4" y="739.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="618.4" y="750.0"></text>
</g>
<g>
<title>ep_poll (29 samples, 1.28%)</title><rect x="615.9" y="755.0" width="15.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="618.9" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (10 samples, 0.44%)</title><rect x="618.5" y="739.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="621.5" y="750.0"></text>
</g>
<g>
<title>ep_send_events_proc (7 samples, 0.31%)</title><rect x="619.0" y="723.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="622.0" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.09%)</title><rect x="621.1" y="707.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="624.1" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.09%)</title><rect x="621.1" y="691.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="624.1" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="622.2" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="625.2" y="718.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.09%)</title><rect x="622.7" y="723.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="625.7" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="623.7" y="739.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="626.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (13 samples, 0.57%)</title><rect x="624.2" y="739.0" width="6.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="627.2" y="750.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="624.2" y="723.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="627.2" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (12 samples, 0.53%)</title><rect x="624.8" y="723.0" width="6.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="627.8" y="734.0"></text>
</g>
<g>
<title>schedule (11 samples, 0.49%)</title><rect x="625.3" y="707.0" width="5.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="628.3" y="718.0"></text>
</g>
<g>
<title>__schedule (11 samples, 0.49%)</title><rect x="625.3" y="691.0" width="5.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="628.3" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (11 samples, 0.49%)</title><rect x="625.3" y="675.0" width="5.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="628.3" y="686.0"></text>
</g>
<g>
<title>fput (6 samples, 0.27%)</title><rect x="631.0" y="755.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="634.0" y="766.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.09%)</title><rect x="634.2" y="851.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="637.2" y="862.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="635.2" y="851.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="638.2" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (484 samples, 21.39%)</title><rect x="635.7" y="883.0" width="252.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.7" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (479 samples, 21.17%)</title><rect x="638.3" y="867.0" width="249.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="641.3" y="878.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (424 samples, 18.74%)</title><rect x="638.3" y="851.0" width="221.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="641.3" y="862.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (404 samples, 17.85%)</title><rect x="638.3" y="835.0" width="210.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="641.3" y="846.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (404 samples, 17.85%)</title><rect x="638.3" y="819.0" width="210.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="641.3" y="830.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (402 samples, 17.76%)</title><rect x="638.3" y="803.0" width="209.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="641.3" y="814.0">RequestHandler0_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (146 samples, 6.45%)</title><rect x="638.8" y="787.0" width="76.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="641.8" y="798.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (145 samples, 6.41%)</title><rect x="639.4" y="771.0" width="75.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="642.4" y="782.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (4 samples, 0.18%)</title><rect x="639.4" y="755.0" width="2.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="642.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (2 samples, 0.09%)</title><rect x="640.4" y="739.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.4" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="640.4" y="723.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="643.4" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="640.4" y="707.0" width="1.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="643.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (141 samples, 6.23%)</title><rect x="641.5" y="755.0" width="73.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="644.5" y="766.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session.write (141 samples, 6.23%)</title><rect x="641.5" y="739.0" width="73.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="644.5" y="750.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (141 samples, 6.23%)</title><rect x="641.5" y="723.0" width="73.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="644.5" y="734.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (141 samples, 6.23%)</title><rect x="641.5" y="707.0" width="73.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="644.5" y="718.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="642.5" y="691.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="645.5" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.18%)</title><rect x="643.0" y="691.0" width="2.1" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="646.0" y="702.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.18%)</title><rect x="643.0" y="675.0" width="2.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="646.0" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.09%)</title><rect x="643.0" y="659.0" width="1.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="646.0" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="643.5" y="643.0" width="0.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="646.5" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="643.5" y="627.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="646.5" y="638.0"></text>
</g>
<g>
<title>__send (2 samples, 0.09%)</title><rect x="644.1" y="659.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="647.1" y="670.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="645.1" y="691.0" width="0.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="648.1" y="702.0"></text>
</g>
<g>
<title>__send (133 samples, 5.88%)</title><rect x="645.6" y="691.0" width="69.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="648.6" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (129 samples, 5.70%)</title><rect x="647.7" y="675.0" width="67.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="650.7" y="686.0">entry_S..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="647.7" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="650.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (128 samples, 5.66%)</title><rect x="648.2" y="659.0" width="66.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="651.2" y="670.0">do_sysc..</text>
</g>
<g>
<title>__x64_sys_sendto (127 samples, 5.61%)</title><rect x="648.8" y="643.0" width="66.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="651.8" y="654.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (127 samples, 5.61%)</title><rect x="648.8" y="627.0" width="66.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="651.8" y="638.0">__sys_s..</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.04%)</title><rect x="648.8" y="611.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="651.8" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (126 samples, 5.57%)</title><rect x="649.3" y="611.0" width="65.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="652.3" y="622.0">sock_se..</text>
</g>
<g>
<title>inet_sendmsg (124 samples, 5.48%)</title><rect x="649.3" y="595.0" width="64.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="652.3" y="606.0">inet_se..</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.09%)</title><rect x="649.3" y="579.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="652.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (122 samples, 5.39%)</title><rect x="650.3" y="579.0" width="63.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="653.3" y="590.0">tcp_sen..</text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.04%)</title><rect x="650.3" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="653.3" y="574.0"></text>
</g>
<g>
<title>sock_zerocopy_put (2 samples, 0.09%)</title><rect x="650.8" y="563.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="653.8" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (119 samples, 5.26%)</title><rect x="651.9" y="563.0" width="62.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.9" y="574.0">tcp_se..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.13%)</title><rect x="652.9" y="547.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="655.9" y="558.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.09%)</title><rect x="653.4" y="531.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="656.4" y="542.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="654.5" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="657.5" y="558.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="654.5" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="657.5" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (5 samples, 0.22%)</title><rect x="655.0" y="547.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="658.0" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.09%)</title><rect x="656.6" y="531.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="659.6" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.09%)</title><rect x="656.6" y="515.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="659.6" y="526.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="657.6" y="547.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="660.6" y="558.0"></text>
</g>
<g>
<title>tcp_push (105 samples, 4.64%)</title><rect x="658.1" y="547.0" width="54.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="661.1" y="558.0">tcp_p..</text>
</g>
<g>
<title>__tcp_push_pending_frames (103 samples, 4.55%)</title><rect x="658.7" y="531.0" width="53.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="661.7" y="542.0">__tcp..</text>
</g>
<g>
<title>tcp_write_xmit (103 samples, 4.55%)</title><rect x="658.7" y="515.0" width="53.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="661.7" y="526.0">tcp_w..</text>
</g>
<g>
<title>__tcp_transmit_skb (91 samples, 4.02%)</title><rect x="661.3" y="499.0" width="47.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="664.3" y="510.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (86 samples, 3.80%)</title><rect x="661.8" y="483.0" width="44.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="664.8" y="494.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (86 samples, 3.80%)</title><rect x="661.8" y="467.0" width="44.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="664.8" y="478.0">__ip..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="661.8" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="664.8" y="462.0"></text>
</g>
<g>
<title>ip_local_out (83 samples, 3.67%)</title><rect x="662.3" y="451.0" width="43.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="665.3" y="462.0">ip_l..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="662.3" y="435.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="665.3" y="446.0"></text>
</g>
<g>
<title>ip_output (82 samples, 3.62%)</title><rect x="662.8" y="435.0" width="42.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="665.8" y="446.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (80 samples, 3.54%)</title><rect x="663.9" y="419.0" width="41.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="666.9" y="430.0">ip_..</text>
</g>
<g>
<title>ip_finish_output2 (78 samples, 3.45%)</title><rect x="664.9" y="403.0" width="40.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="667.9" y="414.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (58 samples, 2.56%)</title><rect x="666.5" y="387.0" width="30.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="669.5" y="398.0">__..</text>
</g>
<g>
<title>do_softirq.part.21 (58 samples, 2.56%)</title><rect x="666.5" y="371.0" width="30.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="669.5" y="382.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 2.52%)</title><rect x="667.0" y="355.0" width="29.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="670.0" y="366.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 2.52%)</title><rect x="667.0" y="339.0" width="29.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="670.0" y="350.0">__..</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="667.5" y="323.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="670.5" y="334.0"></text>
</g>
<g>
<title>net_rx_action (55 samples, 2.43%)</title><rect x="668.0" y="323.0" width="28.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="671.0" y="334.0">ne..</text>
</g>
<g>
<title>process_backlog (55 samples, 2.43%)</title><rect x="668.0" y="307.0" width="28.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="671.0" y="318.0">pr..</text>
</g>
<g>
<title>__netif_receive_skb (53 samples, 2.34%)</title><rect x="669.1" y="291.0" width="27.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="672.1" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (53 samples, 2.34%)</title><rect x="669.1" y="275.0" width="27.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="672.1" y="286.0">_..</text>
</g>
<g>
<title>ip_rcv (53 samples, 2.34%)</title><rect x="669.1" y="259.0" width="27.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="672.1" y="270.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="669.1" y="243.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="672.1" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (51 samples, 2.25%)</title><rect x="669.6" y="243.0" width="26.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="672.6" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver (51 samples, 2.25%)</title><rect x="669.6" y="227.0" width="26.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="672.6" y="238.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (51 samples, 2.25%)</title><rect x="669.6" y="211.0" width="26.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="672.6" y="222.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (50 samples, 2.21%)</title><rect x="669.6" y="195.0" width="26.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="672.6" y="206.0">i..</text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.04%)</title><rect x="669.6" y="179.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="672.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (49 samples, 2.17%)</title><rect x="670.1" y="179.0" width="25.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="673.1" y="190.0">t..</text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.09%)</title><rect x="671.7" y="163.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="674.7" y="174.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="671.7" y="147.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="674.7" y="158.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="672.2" y="147.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="675.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (43 samples, 1.90%)</title><rect x="672.7" y="163.0" width="22.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="675.7" y="174.0">t..</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.04%)</title><rect x="672.7" y="147.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="675.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (42 samples, 1.86%)</title><rect x="673.3" y="147.0" width="21.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="676.3" y="158.0">t..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.09%)</title><rect x="673.8" y="131.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="676.8" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.09%)</title><rect x="673.8" y="115.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="676.8" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.09%)</title><rect x="673.8" y="99.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="676.8" y="110.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.09%)</title><rect x="673.8" y="83.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="676.8" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.09%)</title><rect x="673.8" y="67.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="676.8" y="78.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="674.8" y="131.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="677.8" y="142.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.40%)</title><rect x="675.3" y="131.0" width="4.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="678.3" y="142.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="676.9" y="115.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="679.9" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (5 samples, 0.22%)</title><rect x="677.4" y="115.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="680.4" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.18%)</title><rect x="677.4" y="99.0" width="2.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="680.4" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.09%)</title><rect x="677.4" y="83.0" width="1.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="680.4" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="678.0" y="67.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="681.0" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="678.0" y="51.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="681.0" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="678.5" y="83.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="681.5" y="94.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.09%)</title><rect x="678.5" y="67.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="681.5" y="78.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.04%)</title><rect x="679.5" y="99.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="682.5" y="110.0"></text>
</g>
<g>
<title>tcp_data_queue (28 samples, 1.24%)</title><rect x="680.0" y="131.0" width="14.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="683.0" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (25 samples, 1.10%)</title><rect x="681.1" y="115.0" width="13.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.1" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (25 samples, 1.10%)</title><rect x="681.1" y="99.0" width="13.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="684.1" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (25 samples, 1.10%)</title><rect x="681.1" y="83.0" width="13.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="684.1" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (25 samples, 1.10%)</title><rect x="681.1" y="67.0" width="13.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="684.1" y="78.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="694.1" y="115.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="697.1" y="126.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="694.6" y="131.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="697.6" y="142.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="694.6" y="115.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="697.6" y="126.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="695.2" y="163.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.2" y="174.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="695.7" y="195.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="698.7" y="206.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.04%)</title><rect x="696.2" y="243.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="699.2" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.75%)</title><rect x="696.7" y="387.0" width="8.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="699.7" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.75%)</title><rect x="696.7" y="371.0" width="8.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="699.7" y="382.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="698.8" y="355.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="701.8" y="366.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.40%)</title><rect x="699.3" y="355.0" width="4.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="702.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (7 samples, 0.31%)</title><rect x="699.9" y="339.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="702.9" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.09%)</title><rect x="700.4" y="323.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="703.4" y="334.0"></text>
</g>
<g>
<title>netif_rx (4 samples, 0.18%)</title><rect x="701.4" y="323.0" width="2.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="704.4" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (4 samples, 0.18%)</title><rect x="701.4" y="307.0" width="2.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="704.4" y="318.0"></text>
</g>
<g>
<title>enqueue_to_backlog (4 samples, 0.18%)</title><rect x="701.4" y="291.0" width="2.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="704.4" y="302.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="703.5" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="706.5" y="350.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="704.0" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="707.0" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="704.5" y="355.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="707.5" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="705.1" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="708.1" y="366.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.09%)</title><rect x="705.6" y="451.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="708.6" y="462.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="706.6" y="483.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="709.6" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="706.6" y="467.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="709.6" y="478.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="707.2" y="483.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="710.2" y="494.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.04%)</title><rect x="707.7" y="483.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="710.7" y="494.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="708.2" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="711.2" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="708.7" y="499.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="711.7" y="510.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="709.2" y="499.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="712.2" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="709.2" y="483.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.2" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="709.8" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="712.8" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.09%)</title><rect x="710.3" y="499.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.3" y="510.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="710.3" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="713.3" y="494.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="710.3" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.3" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="710.8" y="483.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.8" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="710.8" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.8" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="710.8" y="451.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="713.8" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="710.8" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="713.8" y="446.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="711.3" y="499.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="714.3" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="711.8" y="499.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="714.8" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="712.4" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="715.4" y="542.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="712.9" y="547.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="715.9" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="713.4" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="716.4" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.04%)</title><rect x="713.4" y="531.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="716.4" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="713.9" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="716.9" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="713.9" y="579.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="716.9" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="713.9" y="563.0" width="0.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="716.9" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="713.9" y="547.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="716.9" y="558.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.04%)</title><rect x="713.9" y="531.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="716.9" y="542.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.04%)</title><rect x="714.5" y="595.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="717.5" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (255 samples, 11.27%)</title><rect x="715.0" y="787.0" width="132.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="718.0" y="798.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (3 samples, 0.13%)</title><rect x="715.0" y="771.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="718.0" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (3 samples, 0.13%)</title><rect x="715.0" y="755.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="718.0" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (3 samples, 0.13%)</title><rect x="715.0" y="739.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="718.0" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095293768.invoke (3 samples, 0.13%)</title><rect x="715.0" y="723.0" width="1.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="718.0" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (3 samples, 0.13%)</title><rect x="715.0" y="707.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="718.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.valueOf (1 samples, 0.04%)</title><rect x="715.0" y="691.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="718.0" y="702.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="715.0" y="675.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="718.0" y="686.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="715.5" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="718.5" y="702.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="716.0" y="691.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.0" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="716.0" y="675.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (252 samples, 11.14%)</title><rect x="716.5" y="771.0" width="131.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="719.5" y="782.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.18%)</title><rect x="716.5" y="755.0" width="2.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="719.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (4 samples, 0.18%)</title><rect x="716.5" y="739.0" width="2.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="719.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.18%)</title><rect x="716.5" y="723.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.18%)</title><rect x="716.5" y="707.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="719.5" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.18%)</title><rect x="716.5" y="691.0" width="2.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="719.5" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (4 samples, 0.18%)</title><rect x="716.5" y="675.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="719.5" y="686.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (4 samples, 0.18%)</title><rect x="716.5" y="659.0" width="2.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="719.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (248 samples, 10.96%)</title><rect x="718.6" y="755.0" width="129.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="721.6" y="766.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (242 samples, 10.69%)</title><rect x="719.1" y="739.0" width="126.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="722.1" y="750.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (242 samples, 10.69%)</title><rect x="719.1" y="723.0" width="126.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="722.1" y="734.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (171 samples, 7.56%)</title><rect x="720.2" y="707.0" width="89.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="723.2" y="718.0">Java_org_r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="720.7" y="691.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="723.7" y="702.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="721.2" y="691.0" width="0.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="724.2" y="702.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="721.8" y="691.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="724.8" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.13%)</title><rect x="722.3" y="691.0" width="1.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="725.3" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="723.8" y="691.0" width="0.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="726.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="724.4" y="691.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="727.4" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (162 samples, 7.16%)</title><rect x="724.9" y="691.0" width="84.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="727.9" y="702.0">rocksdb_pu..</text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.13%)</title><rect x="725.9" y="675.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="728.9" y="686.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (2 samples, 0.09%)</title><rect x="726.4" y="659.0" width="1.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="729.4" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="727.5" y="675.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="730.5" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="727.5" y="659.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="730.5" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="728.0" y="659.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="731.0" y="670.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (152 samples, 6.72%)</title><rect x="728.5" y="675.0" width="79.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="731.5" y="686.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (151 samples, 6.67%)</title><rect x="729.1" y="659.0" width="78.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="732.1" y="670.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (150 samples, 6.63%)</title><rect x="729.1" y="643.0" width="78.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="732.1" y="654.0">rocksdb::..</text>
</g>
<g>
<title>__libc_free (3 samples, 0.13%)</title><rect x="729.1" y="627.0" width="1.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="732.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (1 samples, 0.04%)</title><rect x="730.6" y="627.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="733.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (134 samples, 5.92%)</title><rect x="731.1" y="627.0" width="69.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="734.1" y="638.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="731.1" y="611.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="734.1" y="622.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="731.7" y="611.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="734.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.09%)</title><rect x="732.7" y="611.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="735.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (126 samples, 5.57%)</title><rect x="733.7" y="611.0" width="65.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="736.7" y="622.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="737.4" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="740.4" y="606.0"></text>
</g>
<g>
<title>__GI___sched_yield (3 samples, 0.13%)</title><rect x="737.9" y="595.0" width="1.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="740.9" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.13%)</title><rect x="737.9" y="579.0" width="1.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="740.9" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.13%)</title><rect x="737.9" y="563.0" width="1.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="740.9" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (3 samples, 0.13%)</title><rect x="737.9" y="547.0" width="1.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="740.9" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (3 samples, 0.13%)</title><rect x="737.9" y="531.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="740.9" y="542.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.13%)</title><rect x="737.9" y="515.0" width="1.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="740.9" y="526.0"></text>
</g>
<g>
<title>__schedule (3 samples, 0.13%)</title><rect x="737.9" y="499.0" width="1.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="740.9" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.13%)</title><rect x="739.5" y="595.0" width="1.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="742.5" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="740.5" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="743.5" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="740.5" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="743.5" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="740.5" y="547.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="743.5" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="740.5" y="531.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="743.5" y="542.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="740.5" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="743.5" y="526.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.04%)</title><rect x="740.5" y="499.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.5" y="510.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.04%)</title><rect x="740.5" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="743.5" y="494.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.04%)</title><rect x="740.5" y="467.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="743.5" y="478.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="740.5" y="451.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="743.5" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="740.5" y="435.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="743.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="741.0" y="595.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="744.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.09%)</title><rect x="741.6" y="595.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="744.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.04%)</title><rect x="742.6" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="745.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (18 samples, 0.80%)</title><rect x="743.1" y="595.0" width="9.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="746.1" y="606.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="743.7" y="579.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="746.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="744.7" y="579.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="747.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="744.7" y="563.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="747.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (13 samples, 0.57%)</title><rect x="745.2" y="579.0" width="6.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="748.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (13 samples, 0.57%)</title><rect x="745.2" y="563.0" width="6.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="748.2" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (5 samples, 0.22%)</title><rect x="745.2" y="547.0" width="2.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="748.2" y="558.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="747.8" y="547.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="750.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.04%)</title><rect x="748.3" y="547.0" width="0.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="751.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (6 samples, 0.27%)</title><rect x="748.9" y="547.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="751.9" y="558.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="749.4" y="531.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="752.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (3 samples, 0.13%)</title><rect x="749.9" y="531.0" width="1.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="752.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.04%)</title><rect x="751.5" y="531.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="754.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="752.0" y="579.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="755.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (3 samples, 0.13%)</title><rect x="752.5" y="595.0" width="1.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="755.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="754.1" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="757.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (4 samples, 0.18%)</title><rect x="754.6" y="595.0" width="2.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="757.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (35 samples, 1.55%)</title><rect x="756.7" y="595.0" width="18.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="759.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="757.7" y="579.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="760.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (32 samples, 1.41%)</title><rect x="758.3" y="579.0" width="16.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="761.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (32 samples, 1.41%)</title><rect x="758.3" y="563.0" width="16.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="761.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.04%)</title><rect x="758.3" y="547.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="761.3" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (1 samples, 0.04%)</title><rect x="758.8" y="547.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="761.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (30 samples, 1.33%)</title><rect x="759.3" y="547.0" width="15.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="762.3" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="760.3" y="531.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="763.3" y="542.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.04%)</title><rect x="760.9" y="531.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="763.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.04%)</title><rect x="761.4" y="531.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="764.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (23 samples, 1.02%)</title><rect x="761.9" y="531.0" width="12.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="764.9" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (3 samples, 0.13%)</title><rect x="762.9" y="515.0" width="1.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="765.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (3 samples, 0.13%)</title><rect x="762.9" y="499.0" width="1.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="765.9" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (15 samples, 0.66%)</title><rect x="764.5" y="515.0" width="7.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="767.5" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (12 samples, 0.53%)</title><rect x="765.6" y="499.0" width="6.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="768.6" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (4 samples, 0.18%)</title><rect x="769.2" y="483.0" width="2.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="772.2" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="769.7" y="467.0" width="1.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="772.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="770.8" y="467.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="773.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="771.3" y="483.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="774.3" y="494.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="771.3" y="467.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="774.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.04%)</title><rect x="771.8" y="499.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="774.8" y="510.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="771.8" y="483.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="774.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.04%)</title><rect x="772.3" y="515.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="775.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.09%)</title><rect x="772.9" y="515.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="775.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="773.9" y="531.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="776.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="774.4" y="531.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="777.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (10 samples, 0.44%)</title><rect x="774.9" y="595.0" width="5.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="777.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (10 samples, 0.44%)</title><rect x="774.9" y="579.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="777.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (8 samples, 0.35%)</title><rect x="775.5" y="563.0" width="4.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="778.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (1 samples, 0.04%)</title><rect x="775.5" y="547.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="778.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::Seek(unsigned int) (1 samples, 0.04%)</title><rect x="776.0" y="547.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="779.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 0.27%)</title><rect x="776.5" y="547.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="779.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (5 samples, 0.22%)</title><rect x="776.5" y="531.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="779.5" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (5 samples, 0.22%)</title><rect x="776.5" y="515.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="779.5" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (5 samples, 0.22%)</title><rect x="776.5" y="499.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="779.5" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (4 samples, 0.18%)</title><rect x="777.0" y="483.0" width="2.1" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="780.0" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="778.6" y="467.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="781.6" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="778.6" y="451.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="781.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateOldestKeyTime() (1 samples, 0.04%)</title><rect x="779.1" y="531.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="782.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (1 samples, 0.04%)</title><rect x="779.6" y="563.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="782.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (29 samples, 1.28%)</title><rect x="780.2" y="595.0" width="15.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="783.2" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.04%)</title><rect x="794.2" y="579.0" width="0.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="797.2" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="794.2" y="563.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="797.2" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="794.2" y="547.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="797.2" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="794.2" y="531.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="797.2" y="542.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="794.2" y="515.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="797.2" y="526.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="794.2" y="499.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="797.2" y="510.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="794.8" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="797.8" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="794.8" y="563.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="797.8" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="794.8" y="547.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="797.8" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="794.8" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="797.8" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="794.8" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="797.8" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="794.8" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="797.8" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="794.8" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="797.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.09%)</title><rect x="795.3" y="595.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="798.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.09%)</title><rect x="795.3" y="579.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="798.3" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="795.8" y="563.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="798.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="796.3" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="799.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.04%)</title><rect x="796.8" y="595.0" width="0.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="799.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.04%)</title><rect x="797.4" y="595.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="800.4" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="797.4" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="800.4" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="797.4" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="800.4" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="797.4" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="800.4" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="797.4" y="531.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="800.4" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="797.4" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="800.4" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="797.4" y="499.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="800.4" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="797.4" y="483.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="800.4" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.09%)</title><rect x="797.9" y="595.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="800.9" y="606.0"></text>
</g>
<g>
<title>std::chrono::_V2::steady_clock::now() (1 samples, 0.04%)</title><rect x="798.9" y="595.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="801.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.04%)</title><rect x="799.4" y="611.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="802.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.04%)</title><rect x="800.0" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="803.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.04%)</title><rect x="800.5" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="803.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.04%)</title><rect x="801.0" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="804.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (7 samples, 0.31%)</title><rect x="801.5" y="627.0" width="3.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="804.5" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="802.1" y="611.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="805.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="803.1" y="611.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="806.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="803.6" y="611.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="806.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="804.1" y="611.0" width="0.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="807.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::SetCount(rocksdb::WriteBatch*, int) (1 samples, 0.04%)</title><rect x="804.7" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="807.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="805.2" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="808.2" y="638.0"></text>
</g>
<g>
<title>std::string::append(unsigned long, char) (1 samples, 0.04%)</title><rect x="805.7" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="808.7" y="638.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (2 samples, 0.09%)</title><rect x="806.2" y="627.0" width="1.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="809.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="807.3" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="810.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (3 samples, 0.13%)</title><rect x="807.8" y="675.0" width="1.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="810.8" y="686.0"></text>
</g>
<g>
<title>[unknown] (64 samples, 2.83%)</title><rect x="809.4" y="707.0" width="33.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="812.4" y="718.0">[u..</text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="809.4" y="691.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="812.4" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="809.9" y="691.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="812.9" y="702.0"></text>
</g>
<g>
<title>__write (61 samples, 2.70%)</title><rect x="810.4" y="691.0" width="31.8" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="813.4" y="702.0">__..</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="813.0" y="675.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="816.0" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="813.0" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="816.0" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="813.0" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="816.0" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="813.0" y="627.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="816.0" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="813.0" y="611.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="816.0" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="813.0" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="816.0" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="813.0" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="816.0" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (55 samples, 2.43%)</title><rect x="813.5" y="675.0" width="28.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="816.5" y="686.0">en..</text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.04%)</title><rect x="813.5" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="816.5" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (54 samples, 2.39%)</title><rect x="814.0" y="659.0" width="28.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="817.0" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_write (51 samples, 2.25%)</title><rect x="815.1" y="643.0" width="26.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="818.1" y="654.0">_..</text>
</g>
<g>
<title>ksys_write (51 samples, 2.25%)</title><rect x="815.1" y="627.0" width="26.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="818.1" y="638.0">k..</text>
</g>
<g>
<title>__fdget_pos (3 samples, 0.13%)</title><rect x="815.1" y="611.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="818.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="815.1" y="595.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="818.1" y="606.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.09%)</title><rect x="815.1" y="579.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="818.1" y="590.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="816.1" y="595.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="819.1" y="606.0"></text>
</g>
<g>
<title>__sb_end_write (1 samples, 0.04%)</title><rect x="816.7" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="819.7" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="817.2" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="820.2" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="817.2" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="820.2" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="817.2" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="820.2" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="817.2" y="563.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="820.2" y="574.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="817.2" y="547.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="820.2" y="558.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="817.2" y="531.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="820.2" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="817.2" y="515.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="820.2" y="526.0"></text>
</g>
<g>
<title>vfs_write (46 samples, 2.03%)</title><rect x="817.7" y="611.0" width="24.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="820.7" y="622.0">v..</text>
</g>
<g>
<title>__sb_start_write (2 samples, 0.09%)</title><rect x="817.7" y="595.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="820.7" y="606.0"></text>
</g>
<g>
<title>__vfs_write (41 samples, 1.81%)</title><rect x="818.7" y="595.0" width="21.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="821.7" y="606.0">_..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.04%)</title><rect x="818.7" y="579.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="821.7" y="590.0"></text>
</g>
<g>
<title>new_sync_write (40 samples, 1.77%)</title><rect x="819.3" y="579.0" width="20.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="822.3" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (40 samples, 1.77%)</title><rect x="819.3" y="563.0" width="20.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="822.3" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (38 samples, 1.68%)</title><rect x="819.8" y="547.0" width="19.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="822.8" y="558.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.13%)</title><rect x="820.3" y="531.0" width="1.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="823.3" y="542.0"></text>
</g>
<g>
<title>generic_update_time (3 samples, 0.13%)</title><rect x="820.3" y="515.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="823.3" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.13%)</title><rect x="820.3" y="499.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="823.3" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (3 samples, 0.13%)</title><rect x="820.3" y="483.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="823.3" y="494.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.04%)</title><rect x="820.3" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="823.3" y="478.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.04%)</title><rect x="820.3" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="823.3" y="462.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.04%)</title><rect x="820.3" y="435.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="823.3" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.04%)</title><rect x="820.8" y="467.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="823.8" y="478.0"></text>
</g>
<g>
<title>jbd2_journal_stop (1 samples, 0.04%)</title><rect x="820.8" y="451.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="823.8" y="462.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.04%)</title><rect x="820.8" y="435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="823.8" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.04%)</title><rect x="821.3" y="467.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="824.3" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.04%)</title><rect x="821.3" y="451.0" width="0.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="824.3" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.04%)</title><rect x="821.3" y="435.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.3" y="446.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.04%)</title><rect x="821.3" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.3" y="430.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.04%)</title><rect x="821.3" y="403.0" width="0.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="824.3" y="414.0"></text>
</g>
<g>
<title>generic_perform_write (34 samples, 1.50%)</title><rect x="821.9" y="531.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="824.9" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (9 samples, 0.40%)</title><rect x="821.9" y="515.0" width="4.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="824.9" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (3 samples, 0.13%)</title><rect x="821.9" y="499.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="824.9" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (3 samples, 0.13%)</title><rect x="821.9" y="483.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="824.9" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc (2 samples, 0.09%)</title><rect x="821.9" y="467.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="824.9" y="478.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="822.9" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="825.9" y="478.0"></text>
</g>
<g>
<title>ext4_block_write_begin (1 samples, 0.04%)</title><rect x="823.4" y="499.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="826.4" y="510.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.04%)</title><rect x="824.0" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="827.0" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (4 samples, 0.18%)</title><rect x="824.5" y="499.0" width="2.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="827.5" y="510.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="824.5" y="483.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="827.5" y="494.0"></text>
</g>
<g>
<title>pagecache_get_page (3 samples, 0.13%)</title><rect x="825.0" y="483.0" width="1.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="828.0" y="494.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.09%)</title><rect x="825.5" y="467.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="828.5" y="478.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.04%)</title><rect x="826.0" y="451.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="829.0" y="462.0"></text>
</g>
<g>
<title>ext4_da_write_end (24 samples, 1.06%)</title><rect x="826.6" y="515.0" width="12.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="829.6" y="526.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.04%)</title><rect x="826.6" y="499.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="829.6" y="510.0"></text>
</g>
<g>
<title>generic_write_end (23 samples, 1.02%)</title><rect x="827.1" y="499.0" width="12.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="830.1" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (21 samples, 0.93%)</title><rect x="827.1" y="483.0" width="10.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="830.1" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (21 samples, 0.93%)</title><rect x="827.1" y="467.0" width="10.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="830.1" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (21 samples, 0.93%)</title><rect x="827.1" y="451.0" width="10.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="830.1" y="462.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.04%)</title><rect x="827.1" y="435.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="830.1" y="446.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.04%)</title><rect x="827.1" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="830.1" y="430.0"></text>
</g>
<g>
<title>__ext4_journal_stop (1 samples, 0.04%)</title><rect x="827.6" y="435.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="830.6" y="446.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (19 samples, 0.84%)</title><rect x="828.1" y="435.0" width="9.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="831.1" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.04%)</title><rect x="828.6" y="419.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="831.6" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (11 samples, 0.49%)</title><rect x="829.2" y="419.0" width="5.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="832.2" y="430.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (1 samples, 0.04%)</title><rect x="829.2" y="403.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="832.2" y="414.0"></text>
</g>
<g>
<title>ext4_do_update_inode (10 samples, 0.44%)</title><rect x="829.7" y="403.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="832.7" y="414.0"></text>
</g>
<g>
<title>__ext4_handle_dirty_metadata (2 samples, 0.09%)</title><rect x="831.3" y="387.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="834.3" y="398.0"></text>
</g>
<g>
<title>jbd2_journal_dirty_metadata (1 samples, 0.04%)</title><rect x="831.8" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="834.8" y="382.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="832.3" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="835.3" y="398.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="832.8" y="387.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.8" y="398.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="832.8" y="371.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="835.8" y="382.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="832.8" y="355.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="835.8" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="832.8" y="339.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="835.8" y="350.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="832.8" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="835.8" y="334.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="832.8" y="307.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="835.8" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="832.8" y="291.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="835.8" y="302.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (3 samples, 0.13%)</title><rect x="833.3" y="387.0" width="1.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="836.3" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (3 samples, 0.13%)</title><rect x="833.3" y="371.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="836.3" y="382.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.09%)</title><rect x="833.9" y="355.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="836.9" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="834.4" y="339.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="837.4" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (6 samples, 0.27%)</title><rect x="834.9" y="419.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="837.9" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (3 samples, 0.13%)</title><rect x="834.9" y="403.0" width="1.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="837.9" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (1 samples, 0.04%)</title><rect x="835.4" y="387.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="838.4" y="398.0"></text>
</g>
<g>
<title>__find_get_block (1 samples, 0.04%)</title><rect x="835.4" y="371.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="838.4" y="382.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.04%)</title><rect x="835.9" y="387.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="838.9" y="398.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.04%)</title><rect x="836.5" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="839.5" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.04%)</title><rect x="836.5" y="387.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="839.5" y="398.0"></text>
</g>
<g>
<title>jbd2_write_access_granted.part.12 (1 samples, 0.04%)</title><rect x="836.5" y="371.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="839.5" y="382.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="836.5" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="839.5" y="366.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.04%)</title><rect x="836.5" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="839.5" y="350.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="836.5" y="323.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="839.5" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="836.5" y="307.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.5" y="318.0"></text>
</g>
<g>
<title>tasklet_hi_action (1 samples, 0.04%)</title><rect x="836.5" y="291.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="839.5" y="302.0"></text>
</g>
<g>
<title>tasklet_action_common.isra.23 (1 samples, 0.04%)</title><rect x="836.5" y="275.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="839.5" y="286.0"></text>
</g>
<g>
<title>execlists_submission_tasklet	[i915] (1 samples, 0.04%)</title><rect x="836.5" y="259.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="839.5" y="270.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="836.5" y="243.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="839.5" y="254.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.04%)</title><rect x="837.0" y="403.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="840.0" y="414.0"></text>
</g>
<g>
<title>jbd2_journal_get_write_access (1 samples, 0.04%)</title><rect x="837.5" y="403.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="840.5" y="414.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="837.5" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="840.5" y="398.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="837.5" y="371.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="840.5" y="382.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="837.5" y="355.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="840.5" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="837.5" y="339.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="840.5" y="350.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="837.5" y="323.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="840.5" y="334.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="837.5" y="307.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="840.5" y="318.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="837.5" y="291.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="840.5" y="302.0"></text>
</g>
<g>
<title>block_write_end (2 samples, 0.09%)</title><rect x="838.0" y="483.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="841.0" y="494.0"></text>
</g>
<g>
<title>__block_commit_write.isra.37 (2 samples, 0.09%)</title><rect x="838.0" y="467.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="841.0" y="478.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.04%)</title><rect x="838.6" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="841.6" y="462.0"></text>
</g>
<g>
<title>__set_page_dirty (1 samples, 0.04%)</title><rect x="838.6" y="435.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="841.6" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="838.6" y="419.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="841.6" y="430.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="839.1" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="842.1" y="526.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.04%)</title><rect x="839.6" y="547.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="842.6" y="558.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.13%)</title><rect x="840.1" y="595.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="843.1" y="606.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="840.6" y="579.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="843.6" y="590.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.04%)</title><rect x="841.2" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="844.2" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.04%)</title><rect x="841.2" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="844.2" y="574.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.04%)</title><rect x="841.2" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="844.2" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.04%)</title><rect x="841.2" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="844.2" y="542.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.04%)</title><rect x="841.7" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="844.7" y="654.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="842.2" y="691.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="845.2" y="702.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="842.7" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="845.7" y="718.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.04%)</title><rect x="843.2" y="707.0" width="0.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="846.2" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (2 samples, 0.09%)</title><rect x="843.8" y="707.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="846.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="843.8" y="691.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="846.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="843.8" y="675.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="846.8" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="843.8" y="659.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="846.8" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="843.8" y="643.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="846.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="843.8" y="627.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="846.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="843.8" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="846.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="843.8" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="846.8" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="843.8" y="579.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="846.8" y="590.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.04%)</title><rect x="844.3" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="847.3" y="638.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.04%)</title><rect x="844.8" y="707.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="847.8" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (3 samples, 0.13%)</title><rect x="845.3" y="739.0" width="1.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="848.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (2 samples, 0.09%)</title><rect x="846.9" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="849.9" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.09%)</title><rect x="846.9" y="723.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="849.9" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="846.9" y="707.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="849.9" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="846.9" y="691.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="849.9" y="702.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="846.9" y="675.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="849.9" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="846.9" y="659.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="849.9" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="847.4" y="659.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="850.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="847.9" y="803.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="850.9" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="847.9" y="787.0" width="0.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="850.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.04%)</title><rect x="848.5" y="803.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.04%)</title><rect x="848.5" y="787.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="851.5" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="848.5" y="771.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="851.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="848.5" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="851.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (7 samples, 0.31%)</title><rect x="849.0" y="835.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="852.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.09%)</title><rect x="849.0" y="819.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="852.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="849.0" y="803.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="852.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="849.5" y="787.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="852.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="849.5" y="771.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="852.5" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.22%)</title><rect x="850.0" y="819.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="853.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.22%)</title><rect x="850.0" y="803.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="853.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.13%)</title><rect x="851.1" y="787.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="854.1" y="798.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (3 samples, 0.13%)</title><rect x="851.1" y="771.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="854.1" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (7 samples, 0.31%)</title><rect x="852.6" y="835.0" width="3.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="855.6" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.09%)</title><rect x="852.6" y="819.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="855.6" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.09%)</title><rect x="852.6" y="803.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="855.6" y="814.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.04%)</title><rect x="853.7" y="819.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="856.7" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (4 samples, 0.18%)</title><rect x="854.2" y="819.0" width="2.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="857.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.09%)</title><rect x="856.3" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="859.3" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (3 samples, 0.13%)</title><rect x="857.3" y="835.0" width="1.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="860.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="857.3" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="860.3" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="857.3" y="803.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="860.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.09%)</title><rect x="857.8" y="819.0" width="1.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="860.8" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.09%)</title><rect x="857.8" y="803.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="860.8" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (2 samples, 0.09%)</title><rect x="857.8" y="787.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="860.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="858.9" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="861.9" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="858.9" y="819.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="861.9" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="859.4" y="851.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="862.4" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (54 samples, 2.39%)</title><rect x="859.9" y="851.0" width="28.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="862.9" y="862.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (53 samples, 2.34%)</title><rect x="860.5" y="835.0" width="27.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="863.5" y="846.0">o..</text>
</g>
<g>
<title>[unknown] (12 samples, 0.53%)</title><rect x="862.0" y="819.0" width="6.3" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="865.0" y="830.0"></text>
</g>
<g>
<title>[unknown] (12 samples, 0.53%)</title><rect x="862.0" y="803.0" width="6.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="865.0" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (9 samples, 0.40%)</title><rect x="862.0" y="787.0" width="4.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="865.0" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.09%)</title><rect x="862.0" y="771.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="865.0" y="782.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="863.1" y="771.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="866.1" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="863.6" y="771.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="866.6" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.22%)</title><rect x="864.1" y="771.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="867.1" y="782.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.09%)</title><rect x="865.1" y="755.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="868.1" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="866.2" y="755.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="869.2" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="866.7" y="787.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="869.7" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="867.2" y="787.0" width="0.6" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="870.2" y="798.0"></text>
</g>
<g>
<title>recv (1 samples, 0.04%)</title><rect x="867.8" y="787.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="870.8" y="798.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="868.3" y="819.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="871.3" y="830.0"></text>
</g>
<g>
<title>recv (37 samples, 1.63%)</title><rect x="868.8" y="819.0" width="19.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="871.8" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (33 samples, 1.46%)</title><rect x="870.9" y="803.0" width="17.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="873.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (33 samples, 1.46%)</title><rect x="870.9" y="787.0" width="17.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="873.9" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.04%)</title><rect x="870.9" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="873.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (32 samples, 1.41%)</title><rect x="871.4" y="771.0" width="16.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="874.4" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (31 samples, 1.37%)</title><rect x="871.4" y="755.0" width="16.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="874.4" y="766.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="871.4" y="739.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="874.4" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (24 samples, 1.06%)</title><rect x="871.9" y="739.0" width="12.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="874.9" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (20 samples, 0.88%)</title><rect x="871.9" y="723.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="874.9" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (19 samples, 0.84%)</title><rect x="872.4" y="707.0" width="10.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="875.4" y="718.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="874.0" y="691.0" width="1.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="877.0" y="702.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="874.0" y="675.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="877.0" y="686.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="874.0" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="877.0" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="874.5" y="675.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.5" y="686.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="875.1" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="878.1" y="702.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="875.6" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="878.6" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="875.6" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="878.6" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="876.1" y="691.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="879.1" y="702.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="876.1" y="675.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="879.1" y="686.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="876.1" y="659.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="879.1" y="670.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.27%)</title><rect x="876.6" y="691.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="879.6" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (6 samples, 0.27%)</title><rect x="876.6" y="675.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="879.6" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (6 samples, 0.27%)</title><rect x="876.6" y="659.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="879.6" y="670.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.09%)</title><rect x="877.1" y="643.0" width="1.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="880.1" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.09%)</title><rect x="877.1" y="627.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="880.1" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.09%)</title><rect x="878.2" y="643.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="881.2" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.09%)</title><rect x="878.2" y="627.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="881.2" y="638.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="879.2" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="882.2" y="654.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="879.7" y="691.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="882.7" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="880.3" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="883.3" y="702.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.13%)</title><rect x="880.8" y="691.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="883.8" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.13%)</title><rect x="880.8" y="675.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="883.8" y="686.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.09%)</title><rect x="881.3" y="659.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="884.3" y="670.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="881.8" y="643.0" width="0.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="884.8" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (4 samples, 0.18%)</title><rect x="882.4" y="723.0" width="2.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="885.4" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (4 samples, 0.18%)</title><rect x="882.4" y="707.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="885.4" y="718.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.18%)</title><rect x="882.4" y="691.0" width="2.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="885.4" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (4 samples, 0.18%)</title><rect x="882.4" y="675.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="885.4" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.09%)</title><rect x="883.4" y="659.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="886.4" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.09%)</title><rect x="883.4" y="643.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="886.4" y="654.0"></text>
</g>
<g>
<title>sockfd_lookup_light (6 samples, 0.27%)</title><rect x="884.4" y="739.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="887.4" y="750.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.22%)</title><rect x="884.4" y="723.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="887.4" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="884.4" y="707.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="887.4" y="718.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.18%)</title><rect x="885.0" y="707.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="888.0" y="718.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="886.5" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="889.5" y="702.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="887.0" y="723.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="890.0" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="887.6" y="755.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.6" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #6 tid=9323] (564 samples, 24.92%)</title><rect x="888.1" y="915.0" width="294.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="891.1" y="926.0">[NIO Selector #6 tid=9323]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (564 samples, 24.92%)</title><rect x="888.1" y="899.0" width="294.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="891.1" y="910.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (97 samples, 4.29%)</title><rect x="888.1" y="883.0" width="50.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="891.1" y="894.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (97 samples, 4.29%)</title><rect x="888.1" y="867.0" width="50.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="891.1" y="878.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.18%)</title><rect x="889.7" y="851.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="892.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (89 samples, 3.93%)</title><rect x="891.7" y="851.0" width="46.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="894.7" y="862.0">[unk..</text>
</g>
<g>
<title>Klass::is_klass() const volatile (8 samples, 0.35%)</title><rect x="891.7" y="835.0" width="4.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="894.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.35%)</title><rect x="891.7" y="819.0" width="4.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="894.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.35%)</title><rect x="891.7" y="803.0" width="4.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="894.7" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.09%)</title><rect x="891.7" y="787.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="894.7" y="798.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.27%)</title><rect x="892.8" y="787.0" width="3.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="895.8" y="798.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="895.4" y="771.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="898.4" y="782.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="895.9" y="835.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="898.9" y="846.0"></text>
</g>
<g>
<title>epoll_wait (80 samples, 3.54%)</title><rect x="896.4" y="835.0" width="41.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="899.4" y="846.0">epo..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (58 samples, 2.56%)</title><rect x="907.9" y="819.0" width="30.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="910.9" y="830.0">en..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="907.9" y="803.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="910.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (57 samples, 2.52%)</title><rect x="908.4" y="803.0" width="29.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="911.4" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (52 samples, 2.30%)</title><rect x="911.0" y="787.0" width="27.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="914.0" y="798.0">_..</text>
</g>
<g>
<title>do_epoll_wait (52 samples, 2.30%)</title><rect x="911.0" y="771.0" width="27.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="914.0" y="782.0">d..</text>
</g>
<g>
<title>ep_poll (42 samples, 1.86%)</title><rect x="911.6" y="755.0" width="21.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="914.6" y="766.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (17 samples, 0.75%)</title><rect x="914.2" y="739.0" width="8.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="917.2" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="916.2" y="723.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="919.2" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="916.2" y="707.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="919.2" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="916.2" y="691.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="919.2" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="916.2" y="675.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="919.2" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="916.2" y="659.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="919.2" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="916.2" y="643.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="919.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="916.2" y="627.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="919.2" y="638.0"></text>
</g>
<g>
<title>ep_send_events_proc (11 samples, 0.49%)</title><rect x="916.8" y="723.0" width="5.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="919.8" y="734.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.22%)</title><rect x="918.9" y="707.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="921.9" y="718.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.18%)</title><rect x="919.4" y="691.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="922.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="919.9" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="922.9" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.09%)</title><rect x="920.4" y="675.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="923.4" y="686.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.09%)</title><rect x="921.5" y="707.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="924.5" y="718.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="922.5" y="723.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="925.5" y="734.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="922.5" y="707.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="925.5" y="718.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="922.5" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="925.5" y="702.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="923.0" y="739.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="926.0" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.13%)</title><rect x="923.5" y="739.0" width="1.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="926.5" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (16 samples, 0.71%)</title><rect x="925.1" y="739.0" width="8.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (16 samples, 0.71%)</title><rect x="925.1" y="723.0" width="8.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="928.1" y="734.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.71%)</title><rect x="925.1" y="707.0" width="8.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="928.1" y="718.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.71%)</title><rect x="925.1" y="691.0" width="8.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="928.1" y="702.0"></text>
</g>
<g>
<title>finish_task_switch (15 samples, 0.66%)</title><rect x="925.6" y="675.0" width="7.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="928.6" y="686.0"></text>
</g>
<g>
<title>apic_timer_interrupt (3 samples, 0.13%)</title><rect x="931.9" y="659.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="934.9" y="670.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (3 samples, 0.13%)</title><rect x="931.9" y="643.0" width="1.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="934.9" y="654.0"></text>
</g>
<g>
<title>irq_exit (3 samples, 0.13%)</title><rect x="931.9" y="627.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.9" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.13%)</title><rect x="931.9" y="611.0" width="1.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="934.9" y="622.0"></text>
</g>
<g>
<title>run_rebalance_domains (3 samples, 0.13%)</title><rect x="931.9" y="595.0" width="1.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="934.9" y="606.0"></text>
</g>
<g>
<title>update_blocked_averages (3 samples, 0.13%)</title><rect x="931.9" y="579.0" width="1.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="934.9" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.13%)</title><rect x="931.9" y="563.0" width="1.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="934.9" y="574.0"></text>
</g>
<g>
<title>fput (9 samples, 0.40%)</title><rect x="933.5" y="755.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="936.5" y="766.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="938.1" y="851.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="941.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (467 samples, 20.64%)</title><rect x="938.7" y="883.0" width="243.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.7" y="894.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (460 samples, 20.33%)</title><rect x="942.3" y="867.0" width="239.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="945.3" y="878.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (418 samples, 18.47%)</title><rect x="942.3" y="851.0" width="218.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="945.3" y="862.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (396 samples, 17.50%)</title><rect x="942.3" y="835.0" width="206.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="945.3" y="846.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (394 samples, 17.41%)</title><rect x="943.4" y="819.0" width="205.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="946.4" y="830.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (389 samples, 17.19%)</title><rect x="943.4" y="803.0" width="202.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="946.4" y="814.0">RequestHandler0_entity.han..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (131 samples, 5.79%)</title><rect x="943.4" y="787.0" width="68.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.4" y="798.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (130 samples, 5.74%)</title><rect x="943.4" y="771.0" width="67.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="946.4" y="782.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 0.35%)</title><rect x="943.4" y="755.0" width="4.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="946.4" y="766.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (7 samples, 0.31%)</title><rect x="943.9" y="739.0" width="3.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="946.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.22%)</title><rect x="943.9" y="723.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="946.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="946.5" y="723.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="949.5" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="946.5" y="707.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="949.5" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (122 samples, 5.39%)</title><rect x="947.5" y="755.0" width="63.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="950.5" y="766.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/Session.write (122 samples, 5.39%)</title><rect x="947.5" y="739.0" width="63.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="950.5" y="750.0">one/nio..</text>
</g>
<g>
<title>gettimeofday (2 samples, 0.09%)</title><rect x="947.5" y="723.0" width="1.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="950.5" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (119 samples, 5.26%)</title><rect x="948.6" y="723.0" width="62.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="951.6" y="734.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (119 samples, 5.26%)</title><rect x="948.6" y="707.0" width="62.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="951.6" y="718.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="948.6" y="691.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="951.6" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.22%)</title><rect x="949.1" y="691.0" width="2.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="952.1" y="702.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.22%)</title><rect x="949.1" y="675.0" width="2.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="952.1" y="686.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.13%)</title><rect x="949.1" y="659.0" width="1.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="952.1" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="949.6" y="643.0" width="1.1" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="952.6" y="654.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="950.1" y="627.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="953.1" y="638.0"></text>
</g>
<g>
<title>__send (1 samples, 0.04%)</title><rect x="950.7" y="659.0" width="0.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="953.7" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="951.2" y="659.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="954.2" y="670.0"></text>
</g>
<g>
<title>__send (113 samples, 4.99%)</title><rect x="951.7" y="691.0" width="58.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="954.7" y="702.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (109 samples, 4.82%)</title><rect x="953.8" y="675.0" width="56.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="956.8" y="686.0">entry_..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="953.8" y="659.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="956.8" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (108 samples, 4.77%)</title><rect x="954.3" y="659.0" width="56.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="957.3" y="670.0">do_sys..</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.04%)</title><rect x="954.8" y="643.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="957.8" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (106 samples, 4.68%)</title><rect x="955.4" y="643.0" width="55.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="958.4" y="654.0">__x64..</text>
</g>
<g>
<title>__sys_sendto (106 samples, 4.68%)</title><rect x="955.4" y="627.0" width="55.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="958.4" y="638.0">__sys..</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.04%)</title><rect x="955.9" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="958.9" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (104 samples, 4.60%)</title><rect x="956.4" y="611.0" width="54.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="959.4" y="622.0">sock_..</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="956.4" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="959.4" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="956.4" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="959.4" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="956.4" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="959.4" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="956.4" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="959.4" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="956.4" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="959.4" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="956.4" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="959.4" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="956.4" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="959.4" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="956.4" y="483.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="959.4" y="494.0"></text>
</g>
<g>
<title>inet_sendmsg (103 samples, 4.55%)</title><rect x="956.9" y="595.0" width="53.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="959.9" y="606.0">inet_..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="956.9" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="959.9" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (102 samples, 4.51%)</title><rect x="957.4" y="579.0" width="53.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="960.4" y="590.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.09%)</title><rect x="957.4" y="563.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="960.4" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="958.5" y="563.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="961.5" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="959.0" y="563.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="962.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (98 samples, 4.33%)</title><rect x="959.5" y="563.0" width="51.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="962.5" y="574.0">tcp_s..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="960.0" y="547.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="963.0" y="558.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="960.0" y="531.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.0" y="542.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (4 samples, 0.18%)</title><rect x="960.6" y="547.0" width="2.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="963.6" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (4 samples, 0.18%)</title><rect x="960.6" y="531.0" width="2.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.6" y="542.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (1 samples, 0.04%)</title><rect x="960.6" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="963.6" y="526.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="960.6" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="963.6" y="510.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="960.6" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="963.6" y="494.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (3 samples, 0.13%)</title><rect x="961.1" y="515.0" width="1.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="964.1" y="526.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="962.1" y="499.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="965.1" y="510.0"></text>
</g>
<g>
<title>tcp_push (84 samples, 3.71%)</title><rect x="962.7" y="547.0" width="43.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="965.7" y="558.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (84 samples, 3.71%)</title><rect x="962.7" y="531.0" width="43.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="965.7" y="542.0">__tc..</text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="962.7" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="965.7" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (83 samples, 3.67%)</title><rect x="963.2" y="515.0" width="43.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="966.2" y="526.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (76 samples, 3.36%)</title><rect x="963.2" y="499.0" width="39.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="966.2" y="510.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (71 samples, 3.14%)</title><rect x="963.7" y="483.0" width="37.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="966.7" y="494.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (71 samples, 3.14%)</title><rect x="963.7" y="467.0" width="37.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="966.7" y="478.0">__i..</text>
</g>
<g>
<title>ip_local_out (67 samples, 2.96%)</title><rect x="964.7" y="451.0" width="35.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="967.7" y="462.0">ip..</text>
</g>
<g>
<title>ip_output (67 samples, 2.96%)</title><rect x="964.7" y="435.0" width="35.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="967.7" y="446.0">ip..</text>
</g>
<g>
<title>ip_finish_output (67 samples, 2.96%)</title><rect x="964.7" y="419.0" width="35.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="967.7" y="430.0">ip..</text>
</g>
<g>
<title>ip_finish_output2 (66 samples, 2.92%)</title><rect x="964.7" y="403.0" width="34.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="967.7" y="414.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (57 samples, 2.52%)</title><rect x="965.3" y="387.0" width="29.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.3" y="398.0">__..</text>
</g>
<g>
<title>do_softirq.part.21 (57 samples, 2.52%)</title><rect x="965.3" y="371.0" width="29.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="968.3" y="382.0">do..</text>
</g>
<g>
<title>do_softirq_own_stack (57 samples, 2.52%)</title><rect x="965.3" y="355.0" width="29.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="968.3" y="366.0">do..</text>
</g>
<g>
<title>__softirqentry_text_start (57 samples, 2.52%)</title><rect x="965.3" y="339.0" width="29.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.3" y="350.0">__..</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="967.3" y="323.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="970.3" y="334.0"></text>
</g>
<g>
<title>net_rx_action (52 samples, 2.30%)</title><rect x="967.9" y="323.0" width="27.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="970.9" y="334.0">n..</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.09%)</title><rect x="968.4" y="307.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="971.4" y="318.0"></text>
</g>
<g>
<title>process_backlog (49 samples, 2.17%)</title><rect x="969.4" y="307.0" width="25.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="972.4" y="318.0">p..</text>
</g>
<g>
<title>__netif_receive_skb (49 samples, 2.17%)</title><rect x="969.4" y="291.0" width="25.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="972.4" y="302.0">_..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (49 samples, 2.17%)</title><rect x="969.4" y="275.0" width="25.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="972.4" y="286.0">_..</text>
</g>
<g>
<title>ip_rcv (49 samples, 2.17%)</title><rect x="969.4" y="259.0" width="25.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="972.4" y="270.0">i..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="969.4" y="243.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="972.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (47 samples, 2.08%)</title><rect x="970.0" y="243.0" width="24.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="973.0" y="254.0">i..</text>
</g>
<g>
<title>ip_local_deliver (47 samples, 2.08%)</title><rect x="970.0" y="227.0" width="24.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="973.0" y="238.0">i..</text>
</g>
<g>
<title>ip_local_deliver_finish (45 samples, 1.99%)</title><rect x="971.0" y="211.0" width="23.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="974.0" y="222.0">i..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (45 samples, 1.99%)</title><rect x="971.0" y="195.0" width="23.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="974.0" y="206.0">i..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="971.5" y="179.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="974.5" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="972.0" y="179.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="975.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (42 samples, 1.86%)</title><rect x="972.6" y="179.0" width="21.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="975.6" y="190.0">t..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="973.6" y="163.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="976.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (38 samples, 1.68%)</title><rect x="974.1" y="163.0" width="19.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="977.1" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (38 samples, 1.68%)</title><rect x="974.1" y="147.0" width="19.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="977.1" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="974.6" y="131.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="977.6" y="142.0"></text>
</g>
<g>
<title>tcp_ack (10 samples, 0.44%)</title><rect x="975.2" y="131.0" width="5.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="978.2" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.35%)</title><rect x="975.7" y="115.0" width="4.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.7" y="126.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.27%)</title><rect x="976.2" y="99.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="979.2" y="110.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.13%)</title><rect x="976.2" y="83.0" width="1.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="979.2" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.09%)</title><rect x="976.7" y="67.0" width="1.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="979.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="977.3" y="51.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="980.3" y="62.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="977.8" y="83.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="980.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="977.8" y="67.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="980.8" y="78.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="978.3" y="67.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="981.3" y="78.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="978.8" y="83.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="981.8" y="94.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="979.3" y="99.0" width="0.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="982.3" y="110.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="979.9" y="115.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="982.9" y="126.0"></text>
</g>
<g>
<title>tcp_data_queue (24 samples, 1.06%)</title><rect x="980.4" y="131.0" width="12.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="983.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (23 samples, 1.02%)</title><rect x="980.9" y="115.0" width="12.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="983.9" y="126.0"></text>
</g>
<g>
<title>__wake_up_sync_key (21 samples, 0.93%)</title><rect x="981.9" y="99.0" width="11.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="984.9" y="110.0"></text>
</g>
<g>
<title>__wake_up_common_lock (21 samples, 0.93%)</title><rect x="981.9" y="83.0" width="11.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="984.9" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (21 samples, 0.93%)</title><rect x="981.9" y="67.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="984.9" y="78.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.09%)</title><rect x="992.9" y="131.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="995.9" y="142.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.09%)</title><rect x="992.9" y="115.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="995.9" y="126.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.09%)</title><rect x="992.9" y="99.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="995.9" y="110.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="993.9" y="163.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="996.9" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.04%)</title><rect x="993.9" y="147.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="996.9" y="158.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.04%)</title><rect x="994.5" y="243.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="997.5" y="254.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 0.35%)</title><rect x="995.0" y="387.0" width="4.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="998.0" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 0.35%)</title><rect x="995.0" y="371.0" width="4.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="998.0" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (5 samples, 0.22%)</title><rect x="995.5" y="355.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="998.5" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.13%)</title><rect x="996.0" y="339.0" width="1.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="999.0" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="996.5" y="323.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="999.5" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="997.1" y="323.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1000.1" y="334.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="997.6" y="339.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1000.6" y="350.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="998.1" y="355.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1001.1" y="366.0"></text>
</g>
<g>
<title>validate_xmit_skb (1 samples, 0.04%)</title><rect x="998.6" y="355.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1001.6" y="366.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="998.6" y="339.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1001.6" y="350.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="999.2" y="403.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1002.2" y="414.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.09%)</title><rect x="999.7" y="451.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1002.7" y="462.0"></text>
</g>
<g>
<title>skb_clone (3 samples, 0.13%)</title><rect x="1000.7" y="483.0" width="1.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1003.7" y="494.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.09%)</title><rect x="1000.7" y="467.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1003.7" y="478.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1001.8" y="467.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1004.8" y="478.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1001.8" y="451.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.8" y="462.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1001.8" y="435.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1004.8" y="446.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1001.8" y="419.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1004.8" y="430.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1001.8" y="403.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1004.8" y="414.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1001.8" y="387.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1004.8" y="398.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1001.8" y="371.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1004.8" y="382.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="1002.3" y="483.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1005.3" y="494.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="1002.3" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1005.3" y="478.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="1002.8" y="499.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1005.8" y="510.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.09%)</title><rect x="1003.3" y="499.0" width="1.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1006.3" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1003.8" y="483.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1006.8" y="494.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="1004.4" y="499.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1007.4" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="1004.9" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1007.9" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="1004.9" y="483.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1007.9" y="494.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="1004.9" y="467.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1007.9" y="478.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="1004.9" y="451.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1007.9" y="462.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="1005.4" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1008.4" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="1005.9" y="499.0" width="0.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1008.9" y="510.0"></text>
</g>
<g>
<title>tcp_send_mss (8 samples, 0.35%)</title><rect x="1006.5" y="547.0" width="4.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1009.5" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1006.5" y="531.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1009.5" y="542.0"></text>
</g>
<g>
<title>tcp_current_mss (7 samples, 0.31%)</title><rect x="1007.0" y="531.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1010.0" y="542.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1009.6" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1012.6" y="526.0"></text>
</g>
<g>
<title>tcp_established_options (1 samples, 0.04%)</title><rect x="1010.1" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1013.1" y="526.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="1010.6" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1013.6" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1010.6" y="707.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1013.6" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1011.1" y="771.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1014.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1011.1" y="755.0" width="0.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1014.1" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1011.1" y="739.0" width="0.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1014.1" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (6 samples, 0.27%)</title><rect x="1011.7" y="787.0" width="3.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1014.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.04%)</title><rect x="1012.7" y="771.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1015.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="1012.7" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1015.7" y="766.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="1012.7" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1015.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1012.7" y="723.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1015.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1013.2" y="771.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1016.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1013.2" y="755.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1016.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.09%)</title><rect x="1013.8" y="771.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1016.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1014.3" y="755.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.3" y="766.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1014.3" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1017.3" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1014.3" y="723.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1017.3" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (252 samples, 11.14%)</title><rect x="1014.8" y="787.0" width="131.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.8" y="798.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="1014.8" y="771.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1017.8" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="1014.8" y="755.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1017.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1014.8" y="739.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1017.8" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1014.8" y="723.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1017.8" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1014.8" y="707.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1017.8" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="1014.8" y="691.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1017.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="1014.8" y="675.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1017.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (2 samples, 0.09%)</title><rect x="1015.3" y="771.0" width="1.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1018.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (2 samples, 0.09%)</title><rect x="1015.3" y="755.0" width="1.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1018.3" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (2 samples, 0.09%)</title><rect x="1015.3" y="739.0" width="1.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1018.3" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095293768.invoke (2 samples, 0.09%)</title><rect x="1015.3" y="723.0" width="1.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1018.3" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="1015.8" y="707.0" width="0.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1018.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="1015.8" y="691.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1018.8" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="1015.8" y="675.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1018.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (249 samples, 11.00%)</title><rect x="1016.4" y="771.0" width="129.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1019.4" y="782.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.09%)</title><rect x="1016.4" y="755.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1019.4" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.09%)</title><rect x="1016.4" y="739.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1019.4" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1016.9" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1019.9" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1016.9" y="707.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1019.9" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1016.9" y="691.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1019.9" y="702.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1016.9" y="675.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1019.9" y="686.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.04%)</title><rect x="1016.9" y="659.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1019.9" y="670.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1017.4" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1020.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (246 samples, 10.87%)</title><rect x="1017.9" y="755.0" width="128.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1020.9" y="766.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (241 samples, 10.65%)</title><rect x="1017.9" y="739.0" width="125.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1020.9" y="750.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (241 samples, 10.65%)</title><rect x="1017.9" y="723.0" width="125.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1020.9" y="734.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="1019.5" y="707.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1022.5" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (170 samples, 7.51%)</title><rect x="1020.0" y="707.0" width="88.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1023.0" y="718.0">Java_org_r..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="1021.6" y="691.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1024.6" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1021.6" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1024.6" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1021.6" y="659.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1024.6" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1021.6" y="643.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1024.6" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1021.6" y="627.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1024.6" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1021.6" y="611.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1024.6" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1021.6" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1024.6" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1021.6" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1024.6" y="590.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="1022.1" y="691.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1025.1" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.09%)</title><rect x="1022.6" y="691.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1025.6" y="702.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="1023.7" y="691.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1026.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.09%)</title><rect x="1024.2" y="691.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1027.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.09%)</title><rect x="1025.2" y="691.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1028.2" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (158 samples, 6.98%)</title><rect x="1026.3" y="691.0" width="82.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1029.3" y="702.0">rocksdb_p..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="1026.8" y="675.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1029.8" y="686.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.09%)</title><rect x="1027.3" y="675.0" width="1.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1030.3" y="686.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="1027.3" y="659.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1030.3" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="1027.8" y="659.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1030.8" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="1028.4" y="675.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1031.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (152 samples, 6.72%)</title><rect x="1028.9" y="675.0" width="79.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1031.9" y="686.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (151 samples, 6.67%)</title><rect x="1029.4" y="659.0" width="78.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1032.4" y="670.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (149 samples, 6.58%)</title><rect x="1029.4" y="643.0" width="77.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1032.4" y="654.0">rocksdb::..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="1029.4" y="627.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1032.4" y="638.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="1029.9" y="627.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1032.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::GetID() const (2 samples, 0.09%)</title><rect x="1030.4" y="627.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1033.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (138 samples, 6.10%)</title><rect x="1031.5" y="627.0" width="71.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1034.5" y="638.0">rocksdb:..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="1031.5" y="611.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1034.5" y="622.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1032.5" y="611.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1035.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (127 samples, 5.61%)</title><rect x="1033.0" y="611.0" width="66.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1036.0" y="622.0">rocksdb..</text>
</g>
<g>
<title>__GI___sched_yield (4 samples, 0.18%)</title><rect x="1036.2" y="595.0" width="2.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1039.2" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1037.7" y="579.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1040.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1037.7" y="563.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1040.7" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.04%)</title><rect x="1037.7" y="547.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1040.7" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.04%)</title><rect x="1037.7" y="531.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1040.7" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1037.7" y="515.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1040.7" y="526.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1037.7" y="499.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1040.7" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="1038.3" y="595.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1041.3" y="606.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="1039.3" y="595.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1042.3" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1040.3" y="595.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.3" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1040.3" y="579.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.3" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1040.3" y="563.0" width="0.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1043.3" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1040.3" y="547.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1043.3" y="558.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1040.3" y="531.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1043.3" y="542.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1040.3" y="515.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1043.3" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1040.3" y="499.0" width="0.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1043.3" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1040.9" y="595.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1043.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::MergeBatch(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::WriteBatch*, unsigned long*, rocksdb::WriteBatch**) (1 samples, 0.04%)</title><rect x="1041.4" y="595.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1044.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (2 samples, 0.09%)</title><rect x="1041.9" y="595.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1044.9" y="606.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1042.4" y="579.0" width="0.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1045.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (18 samples, 0.80%)</title><rect x="1043.0" y="595.0" width="9.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1046.0" y="606.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1043.0" y="579.0" width="0.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1046.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (16 samples, 0.71%)</title><rect x="1043.5" y="579.0" width="8.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1046.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (15 samples, 0.66%)</title><rect x="1044.0" y="563.0" width="7.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1047.0" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (4 samples, 0.18%)</title><rect x="1044.5" y="547.0" width="2.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1047.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (10 samples, 0.44%)</title><rect x="1046.6" y="547.0" width="5.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1049.6" y="558.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="1047.1" y="531.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1050.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::use_direct_io() const (1 samples, 0.04%)</title><rect x="1047.6" y="531.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1050.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFile::PrepareWrite(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1048.2" y="531.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1051.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1048.7" y="531.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1051.7" y="542.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (5 samples, 0.22%)</title><rect x="1049.2" y="531.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1052.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::GetPerfLevel() (1 samples, 0.04%)</title><rect x="1049.2" y="515.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1052.2" y="526.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (4 samples, 0.18%)</title><rect x="1049.7" y="515.0" width="2.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1052.7" y="526.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1050.8" y="499.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1053.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::Append(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1051.3" y="499.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1054.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1051.8" y="579.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1054.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.04%)</title><rect x="1052.3" y="595.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.3" y="606.0"></text>
</g>
<g>
<title>__pthread_mutex_lock (1 samples, 0.04%)</title><rect x="1052.3" y="579.0" width="0.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1055.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (47 samples, 2.08%)</title><rect x="1052.9" y="595.0" width="24.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1055.9" y="606.0">r..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1054.4" y="579.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1057.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (43 samples, 1.90%)</title><rect x="1054.9" y="579.0" width="22.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1057.9" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (38 samples, 1.68%)</title><rect x="1056.0" y="563.0" width="19.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1059.0" y="574.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::GetMemTable() const (2 samples, 0.09%)</title><rect x="1056.0" y="547.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1059.0" y="558.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1056.5" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1059.5" y="542.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1056.5" y="515.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1059.5" y="526.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1056.5" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1059.5" y="510.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1056.5" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1059.5" y="494.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="1056.5" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1059.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyMemTablesImpl::current() (1 samples, 0.04%)</title><rect x="1057.0" y="547.0" width="0.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1060.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (35 samples, 1.55%)</title><rect x="1057.6" y="547.0" width="18.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1060.6" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="1058.6" y="531.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1061.6" y="542.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="1059.1" y="531.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1062.1" y="542.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="1059.1" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1062.1" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1059.1" y="499.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1062.1" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1059.1" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1062.1" y="494.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.04%)</title><rect x="1059.6" y="531.0" width="0.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1062.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.04%)</title><rect x="1060.2" y="531.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1063.2" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (29 samples, 1.28%)</title><rect x="1060.7" y="531.0" width="15.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1063.7" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1062.2" y="515.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1065.2" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1062.2" y="499.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1065.2" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1062.2" y="483.0" width="0.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1065.2" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1062.2" y="467.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1065.2" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1062.2" y="451.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1065.2" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1062.2" y="435.0" width="0.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1065.2" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1062.2" y="419.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1065.2" y="430.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (20 samples, 0.88%)</title><rect x="1062.8" y="515.0" width="10.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1065.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (16 samples, 0.71%)</title><rect x="1064.9" y="499.0" width="8.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1067.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (11 samples, 0.49%)</title><rect x="1066.9" y="483.0" width="5.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1069.9" y="494.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="1068.0" y="467.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1071.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 0.31%)</title><rect x="1069.0" y="467.0" width="3.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1072.0" y="478.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="1070.1" y="451.0" width="0.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1073.1" y="462.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.09%)</title><rect x="1070.6" y="451.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1073.6" y="462.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.09%)</title><rect x="1071.6" y="451.0" width="1.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1074.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1072.7" y="483.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1075.7" y="494.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="1073.2" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1076.2" y="526.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1073.2" y="499.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1076.2" y="510.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1073.2" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1076.2" y="494.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1073.2" y="467.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1076.2" y="478.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1073.2" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1076.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (2 samples, 0.09%)</title><rect x="1073.7" y="515.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1076.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (2 samples, 0.09%)</title><rect x="1074.8" y="515.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1077.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="1075.3" y="499.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1078.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="1075.8" y="563.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1078.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::ReadRecordFromWriteBatch(rocksdb::Slice*, char*, unsigned int*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*, rocksdb::Slice*) (2 samples, 0.09%)</title><rect x="1076.3" y="563.0" width="1.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1079.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool) (7 samples, 0.31%)</title><rect x="1077.4" y="595.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1080.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::UpdateFlushState() (1 samples, 0.04%)</title><rect x="1077.4" y="579.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1080.4" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="1077.4" y="563.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1080.4" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (5 samples, 0.22%)</title><rect x="1077.9" y="579.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1080.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (5 samples, 0.22%)</title><rect x="1077.9" y="563.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1080.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (5 samples, 0.22%)</title><rect x="1077.9" y="547.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1080.9" y="558.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="1077.9" y="531.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1080.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.04%)</title><rect x="1078.4" y="531.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1081.4" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*) (3 samples, 0.13%)</title><rect x="1078.9" y="531.0" width="1.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1081.9" y="542.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.13%)</title><rect x="1078.9" y="515.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1081.9" y="526.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.13%)</title><rect x="1078.9" y="499.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1081.9" y="510.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (3 samples, 0.13%)</title><rect x="1078.9" y="483.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1081.9" y="494.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="1080.0" y="467.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1083.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1080.0" y="451.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1083.0" y="462.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1080.0" y="435.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1083.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.04%)</title><rect x="1080.5" y="579.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1083.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (27 samples, 1.19%)</title><rect x="1081.0" y="595.0" width="14.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1084.0" y="606.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.09%)</title><rect x="1094.1" y="579.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1097.1" y="590.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="1094.1" y="563.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1097.1" y="574.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="1094.1" y="547.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1097.1" y="558.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="1094.1" y="531.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1097.1" y="542.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="1094.1" y="515.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1097.1" y="526.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.09%)</title><rect x="1094.1" y="499.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1097.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (5 samples, 0.22%)</title><rect x="1095.1" y="595.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 0.22%)</title><rect x="1095.1" y="579.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1098.1" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) (1 samples, 0.04%)</title><rect x="1097.7" y="595.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1100.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.09%)</title><rect x="1098.2" y="595.0" width="1.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1101.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteStatusCheck(rocksdb::Status const&amp;) (3 samples, 0.13%)</title><rect x="1099.3" y="611.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1102.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.04%)</title><rect x="1100.8" y="611.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1103.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1101.4" y="611.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1104.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.09%)</title><rect x="1101.9" y="611.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1104.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.04%)</title><rect x="1102.9" y="611.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1105.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetColumnFamilyID(rocksdb::ColumnFamilyHandle*) (1 samples, 0.04%)</title><rect x="1103.4" y="627.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1106.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.18%)</title><rect x="1104.0" y="627.0" width="2.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1107.0" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1104.0" y="611.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1107.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (3 samples, 0.13%)</title><rect x="1104.5" y="611.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1107.5" y="622.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="1106.0" y="627.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1109.0" y="638.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.04%)</title><rect x="1106.6" y="627.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1109.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.09%)</title><rect x="1107.1" y="643.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1110.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.04%)</title><rect x="1108.1" y="675.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1111.1" y="686.0"></text>
</g>
<g>
<title>[unknown] (61 samples, 2.70%)</title><rect x="1108.7" y="707.0" width="31.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1111.7" y="718.0">[u..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="1108.7" y="691.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1111.7" y="702.0"></text>
</g>
<g>
<title>__pthread_cleanup_push (1 samples, 0.04%)</title><rect x="1109.2" y="691.0" width="0.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1112.2" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_wait (1 samples, 0.04%)</title><rect x="1109.7" y="691.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1112.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1109.7" y="675.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1112.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1109.7" y="659.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1112.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1109.7" y="643.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1112.7" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1109.7" y="627.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1112.7" y="638.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="1109.7" y="611.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1112.7" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="1109.7" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1112.7" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1109.7" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1112.7" y="590.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1109.7" y="563.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1112.7" y="574.0"></text>
</g>
<g>
<title>__write (57 samples, 2.52%)</title><rect x="1110.2" y="691.0" width="29.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1113.2" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (53 samples, 2.34%)</title><rect x="1112.3" y="675.0" width="27.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1115.3" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (53 samples, 2.34%)</title><rect x="1112.3" y="659.0" width="27.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1115.3" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_write (52 samples, 2.30%)</title><rect x="1112.8" y="643.0" width="27.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.8" y="654.0">_..</text>
</g>
<g>
<title>ksys_write (52 samples, 2.30%)</title><rect x="1112.8" y="627.0" width="27.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1115.8" y="638.0">k..</text>
</g>
<g>
<title>__fdget_pos (5 samples, 0.22%)</title><rect x="1112.8" y="611.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1115.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.18%)</title><rect x="1112.8" y="595.0" width="2.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1115.8" y="606.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.13%)</title><rect x="1113.3" y="579.0" width="1.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1116.3" y="590.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="1114.9" y="595.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1117.9" y="606.0"></text>
</g>
<g>
<title>vfs_write (47 samples, 2.08%)</title><rect x="1115.4" y="611.0" width="24.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1118.4" y="622.0">v..</text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.04%)</title><rect x="1115.4" y="595.0" width="0.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1118.4" y="606.0"></text>
</g>
<g>
<title>__vfs_write (41 samples, 1.81%)</title><rect x="1116.0" y="595.0" width="21.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1119.0" y="606.0">_..</text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.04%)</title><rect x="1116.0" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1119.0" y="590.0"></text>
</g>
<g>
<title>new_sync_write (40 samples, 1.77%)</title><rect x="1116.5" y="579.0" width="20.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1119.5" y="590.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.04%)</title><rect x="1116.5" y="563.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1119.5" y="574.0"></text>
</g>
<g>
<title>ext4_file_write_iter (38 samples, 1.68%)</title><rect x="1117.0" y="563.0" width="19.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1120.0" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (37 samples, 1.63%)</title><rect x="1117.0" y="547.0" width="19.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.0" y="558.0"></text>
</g>
<g>
<title>file_update_time (3 samples, 0.13%)</title><rect x="1117.0" y="531.0" width="1.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1120.0" y="542.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.04%)</title><rect x="1117.5" y="515.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1120.5" y="526.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.04%)</title><rect x="1117.5" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1120.5" y="510.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.04%)</title><rect x="1117.5" y="483.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1120.5" y="494.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.04%)</title><rect x="1117.5" y="467.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1120.5" y="478.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.04%)</title><rect x="1117.5" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1120.5" y="462.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.04%)</title><rect x="1117.5" y="435.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1120.5" y="446.0"></text>
</g>
<g>
<title>timespec64_trunc (1 samples, 0.04%)</title><rect x="1118.0" y="515.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1121.0" y="526.0"></text>
</g>
<g>
<title>generic_perform_write (34 samples, 1.50%)</title><rect x="1118.6" y="531.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1121.6" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (9 samples, 0.40%)</title><rect x="1119.1" y="515.0" width="4.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1122.1" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (4 samples, 0.18%)</title><rect x="1119.6" y="499.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1122.6" y="510.0"></text>
</g>
<g>
<title>ext4_journal_check_start (2 samples, 0.09%)</title><rect x="1119.6" y="483.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1122.6" y="494.0"></text>
</g>
<g>
<title>jbd2__journal_start (2 samples, 0.09%)</title><rect x="1120.6" y="483.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1123.6" y="494.0"></text>
</g>
<g>
<title>ext4_nonda_switch (1 samples, 0.04%)</title><rect x="1121.7" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1124.7" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (3 samples, 0.13%)</title><rect x="1122.2" y="499.0" width="1.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1125.2" y="510.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.04%)</title><rect x="1122.2" y="483.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1125.2" y="494.0"></text>
</g>
<g>
<title>pagecache_get_page (2 samples, 0.09%)</title><rect x="1122.7" y="483.0" width="1.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1125.7" y="494.0"></text>
</g>
<g>
<title>find_get_entry (2 samples, 0.09%)</title><rect x="1122.7" y="467.0" width="1.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1125.7" y="478.0"></text>
</g>
<g>
<title>ext4_da_write_end (22 samples, 0.97%)</title><rect x="1123.8" y="515.0" width="11.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1126.8" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_stop (5 samples, 0.22%)</title><rect x="1124.8" y="499.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1127.8" y="510.0"></text>
</g>
<g>
<title>jbd2_journal_stop (5 samples, 0.22%)</title><rect x="1124.8" y="483.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1127.8" y="494.0"></text>
</g>
<g>
<title>__wake_up (2 samples, 0.09%)</title><rect x="1125.9" y="467.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1128.9" y="478.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.09%)</title><rect x="1125.9" y="451.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1128.9" y="462.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1126.4" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1129.4" y="446.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="1126.9" y="467.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1129.9" y="478.0"></text>
</g>
<g>
<title>generic_write_end (15 samples, 0.66%)</title><rect x="1127.4" y="499.0" width="7.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1130.4" y="510.0"></text>
</g>
<g>
<title>__generic_write_end (14 samples, 0.62%)</title><rect x="1127.4" y="483.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1130.4" y="494.0"></text>
</g>
<g>
<title>__mark_inode_dirty (13 samples, 0.57%)</title><rect x="1127.4" y="467.0" width="6.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1130.4" y="478.0"></text>
</g>
<g>
<title>ext4_dirty_inode (13 samples, 0.57%)</title><rect x="1127.4" y="451.0" width="6.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1130.4" y="462.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (13 samples, 0.57%)</title><rect x="1127.4" y="435.0" width="6.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1130.4" y="446.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.04%)</title><rect x="1127.4" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1130.4" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.04%)</title><rect x="1127.9" y="419.0" width="0.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1130.9" y="430.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (6 samples, 0.27%)</title><rect x="1128.5" y="419.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1131.5" y="430.0"></text>
</g>
<g>
<title>ext4_do_update_inode (6 samples, 0.27%)</title><rect x="1128.5" y="403.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1131.5" y="414.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (4 samples, 0.18%)</title><rect x="1129.5" y="387.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1132.5" y="398.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.63 (4 samples, 0.18%)</title><rect x="1129.5" y="371.0" width="2.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1132.5" y="382.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="1130.0" y="355.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1133.0" y="366.0"></text>
</g>
<g>
<title>crypto_shash_update (2 samples, 0.09%)</title><rect x="1130.6" y="355.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1133.6" y="366.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.04%)</title><rect x="1131.1" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1134.1" y="350.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (5 samples, 0.22%)</title><rect x="1131.6" y="419.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1134.6" y="430.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.09%)</title><rect x="1131.6" y="403.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1134.6" y="414.0"></text>
</g>
<g>
<title>__getblk_gfp (2 samples, 0.09%)</title><rect x="1131.6" y="387.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1134.6" y="398.0"></text>
</g>
<g>
<title>__find_get_block (2 samples, 0.09%)</title><rect x="1131.6" y="371.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1134.6" y="382.0"></text>
</g>
<g>
<title>mark_page_accessed (1 samples, 0.04%)</title><rect x="1132.1" y="355.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1135.1" y="366.0"></text>
</g>
<g>
<title>__ext4_journal_get_write_access (1 samples, 0.04%)</title><rect x="1132.6" y="403.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1135.6" y="414.0"></text>
</g>
<g>
<title>ext4_inode_table (2 samples, 0.09%)</title><rect x="1133.2" y="403.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1136.2" y="414.0"></text>
</g>
<g>
<title>unlock_page (1 samples, 0.04%)</title><rect x="1134.2" y="467.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1137.2" y="478.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.04%)</title><rect x="1134.7" y="483.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1137.7" y="494.0"></text>
</g>
<g>
<title>mark_buffer_dirty (1 samples, 0.04%)</title><rect x="1134.7" y="467.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1137.7" y="478.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.04%)</title><rect x="1135.2" y="515.0" width="0.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1138.2" y="526.0"></text>
</g>
<g>
<title>copy_user_generic_unrolled (1 samples, 0.04%)</title><rect x="1135.2" y="499.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1138.2" y="510.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.04%)</title><rect x="1135.8" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1138.8" y="526.0"></text>
</g>
<g>
<title>ext4_write_checks (1 samples, 0.04%)</title><rect x="1136.3" y="547.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1139.3" y="558.0"></text>
</g>
<g>
<title>generic_write_checks (1 samples, 0.04%)</title><rect x="1136.3" y="531.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1139.3" y="542.0"></text>
</g>
<g>
<title>generic_write_check_limits (1 samples, 0.04%)</title><rect x="1136.3" y="515.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1139.3" y="526.0"></text>
</g>
<g>
<title>up_write (1 samples, 0.04%)</title><rect x="1136.8" y="563.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1139.8" y="574.0"></text>
</g>
<g>
<title>fsnotify (1 samples, 0.04%)</title><rect x="1137.3" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1140.3" y="606.0"></text>
</g>
<g>
<title>rw_verify_area (4 samples, 0.18%)</title><rect x="1137.9" y="595.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1140.9" y="606.0"></text>
</g>
<g>
<title>security_file_permission (3 samples, 0.13%)</title><rect x="1138.4" y="579.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1141.4" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (3 samples, 0.13%)</title><rect x="1138.4" y="563.0" width="1.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1141.4" y="574.0"></text>
</g>
<g>
<title>common_file_perm (3 samples, 0.13%)</title><rect x="1138.4" y="547.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1141.4" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (3 samples, 0.13%)</title><rect x="1138.4" y="531.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1141.4" y="542.0"></text>
</g>
<g>
<title>aa_label_is_subset (1 samples, 0.04%)</title><rect x="1139.4" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1142.4" y="526.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="1139.9" y="691.0" width="0.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1142.9" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.09%)</title><rect x="1140.5" y="707.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1143.5" y="718.0"></text>
</g>
<g>
<title>pthread_cond_signal@@GLIBC_2.3.2 (1 samples, 0.04%)</title><rect x="1141.5" y="707.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1144.5" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1141.5" y="691.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1144.5" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1141.5" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1144.5" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1141.5" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1144.5" y="670.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1141.5" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.5" y="654.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1141.5" y="627.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1144.5" y="638.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="1141.5" y="611.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1144.5" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1141.5" y="595.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1144.5" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1141.5" y="579.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1144.5" y="590.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="1142.0" y="707.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1145.0" y="718.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (2 samples, 0.09%)</title><rect x="1142.5" y="707.0" width="1.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1145.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (5 samples, 0.22%)</title><rect x="1143.6" y="739.0" width="2.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1146.6" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1145.2" y="723.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1148.2" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1145.2" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1148.2" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1145.2" y="691.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1148.2" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1145.2" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.2" y="686.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1145.2" y="659.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1148.2" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1145.2" y="643.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.2" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1145.2" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.2" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (1 samples, 0.04%)</title><rect x="1145.7" y="723.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1148.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1146.2" y="803.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1149.2" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="1146.7" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1149.7" y="814.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="1146.7" y="787.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1149.7" y="798.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (3 samples, 0.13%)</title><rect x="1147.2" y="803.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1150.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.09%)</title><rect x="1147.8" y="787.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1150.8" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (2 samples, 0.09%)</title><rect x="1147.8" y="771.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1150.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.09%)</title><rect x="1147.8" y="755.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1150.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.22%)</title><rect x="1148.8" y="835.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1151.8" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.13%)</title><rect x="1148.8" y="819.0" width="1.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1151.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="1149.3" y="803.0" width="1.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1152.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="1149.3" y="787.0" width="1.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1152.3" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.09%)</title><rect x="1149.3" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1152.3" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.04%)</title><rect x="1149.8" y="755.0" width="0.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1152.8" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.09%)</title><rect x="1150.4" y="819.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1153.4" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.09%)</title><rect x="1150.4" y="803.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1153.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1150.9" y="787.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1153.9" y="798.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.04%)</title><rect x="1150.9" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1153.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (5 samples, 0.22%)</title><rect x="1151.4" y="835.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1154.4" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (4 samples, 0.18%)</title><rect x="1151.9" y="819.0" width="2.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1154.9" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (1 samples, 0.04%)</title><rect x="1153.0" y="803.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1156.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (1 samples, 0.04%)</title><rect x="1153.5" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1156.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.09%)</title><rect x="1154.0" y="835.0" width="1.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1157.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (7 samples, 0.31%)</title><rect x="1155.1" y="835.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1158.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.18%)</title><rect x="1155.1" y="819.0" width="2.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1158.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 0.18%)</title><rect x="1155.1" y="803.0" width="2.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1158.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (3 samples, 0.13%)</title><rect x="1155.1" y="787.0" width="1.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1158.1" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="1156.1" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1159.1" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="1156.1" y="755.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1159.1" y="766.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.04%)</title><rect x="1156.1" y="739.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1159.1" y="750.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1156.6" y="787.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1159.6" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1156.6" y="771.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1159.6" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1157.1" y="819.0" width="0.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1160.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1157.1" y="803.0" width="0.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1160.1" y="814.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="1157.1" y="787.0" width="0.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1160.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="1157.7" y="819.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1160.7" y="830.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="1158.2" y="819.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1161.2" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="1158.7" y="835.0" width="1.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1161.7" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="1158.7" y="819.0" width="1.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1161.7" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1159.2" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1162.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.04%)</title><rect x="1159.2" y="787.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1162.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.04%)</title><rect x="1159.8" y="803.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1162.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (42 samples, 1.86%)</title><rect x="1160.3" y="851.0" width="21.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1163.3" y="862.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (41 samples, 1.81%)</title><rect x="1160.8" y="835.0" width="21.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1163.8" y="846.0">o..</text>
</g>
<g>
<title>[unknown] (10 samples, 0.44%)</title><rect x="1162.4" y="819.0" width="5.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1165.4" y="830.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.44%)</title><rect x="1162.4" y="803.0" width="5.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1165.4" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (8 samples, 0.35%)</title><rect x="1162.4" y="787.0" width="4.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1165.4" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="1163.4" y="771.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1166.4" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (5 samples, 0.22%)</title><rect x="1163.9" y="771.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1166.9" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="1165.5" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1168.5" y="766.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="1166.0" y="755.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1169.0" y="766.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="1166.5" y="787.0" width="0.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1169.5" y="798.0"></text>
</g>
<g>
<title>recv (1 samples, 0.04%)</title><rect x="1167.1" y="787.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1170.1" y="798.0"></text>
</g>
<g>
<title>recv (28 samples, 1.24%)</title><rect x="1167.6" y="819.0" width="14.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1170.6" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (27 samples, 1.19%)</title><rect x="1168.1" y="803.0" width="14.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1171.1" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="1168.1" y="787.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1171.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (26 samples, 1.15%)</title><rect x="1168.6" y="787.0" width="13.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1171.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (24 samples, 1.06%)</title><rect x="1169.7" y="771.0" width="12.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1172.7" y="782.0"></text>
</g>
<g>
<title>__sys_recvfrom (24 samples, 1.06%)</title><rect x="1169.7" y="755.0" width="12.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1172.7" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (22 samples, 0.97%)</title><rect x="1169.7" y="739.0" width="11.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1172.7" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (13 samples, 0.57%)</title><rect x="1169.7" y="723.0" width="6.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1172.7" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (13 samples, 0.57%)</title><rect x="1169.7" y="707.0" width="6.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1172.7" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.31%)</title><rect x="1171.7" y="691.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1174.7" y="702.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.31%)</title><rect x="1171.7" y="675.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1174.7" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (7 samples, 0.31%)</title><rect x="1171.7" y="659.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1174.7" y="670.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.18%)</title><rect x="1171.7" y="643.0" width="2.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1174.7" y="654.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="1172.3" y="627.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1175.3" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.09%)</title><rect x="1172.8" y="627.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1175.8" y="638.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1173.8" y="643.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1176.8" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.09%)</title><rect x="1174.4" y="643.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1177.4" y="654.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.09%)</title><rect x="1174.4" y="627.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.4" y="638.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="1175.4" y="691.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1178.4" y="702.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="1175.9" y="691.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1178.9" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (8 samples, 0.35%)</title><rect x="1176.4" y="723.0" width="4.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1179.4" y="734.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (8 samples, 0.35%)</title><rect x="1176.4" y="707.0" width="4.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1179.4" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="1176.4" y="691.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1179.4" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.31%)</title><rect x="1177.0" y="691.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1180.0" y="702.0"></text>
</g>
<g>
<title>aa_sk_perm (7 samples, 0.31%)</title><rect x="1177.0" y="675.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1180.0" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.09%)</title><rect x="1179.6" y="659.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1182.6" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.09%)</title><rect x="1179.6" y="643.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1182.6" y="654.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.04%)</title><rect x="1180.6" y="723.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1183.6" y="734.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.09%)</title><rect x="1181.1" y="739.0" width="1.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1184.1" y="750.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.09%)</title><rect x="1181.1" y="723.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1184.1" y="734.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="1181.1" y="707.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1184.1" y="718.0"></text>
</g>
<g>
<title>[tid=9281] (1 samples, 0.04%)</title><rect x="1182.2" y="915.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1185.2" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1182.2" y="899.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1185.2" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1182.2" y="883.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1185.2" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1182.2" y="867.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1185.2" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1182.2" y="851.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1185.2" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1182.2" y="835.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.2" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1182.2" y="819.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.2" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="1182.2" y="803.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1185.2" y="814.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.04%)</title><rect x="1182.2" y="787.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.2" y="798.0"></text>
</g>
<g>
<title>[tid=9285] (1 samples, 0.04%)</title><rect x="1182.7" y="915.0" width="0.5" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1185.7" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1182.7" y="899.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1185.7" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1182.7" y="883.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1185.7" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1182.7" y="867.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1185.7" y="878.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (1 samples, 0.04%)</title><rect x="1182.7" y="851.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.7" y="862.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (1 samples, 0.04%)</title><rect x="1182.7" y="835.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.7" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.04%)</title><rect x="1182.7" y="819.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.7" y="830.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1182.7" y="803.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.7" y="814.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.04%)</title><rect x="1182.7" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.7" y="798.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.04%)</title><rect x="1182.7" y="771.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.7" y="782.0"></text>
</g>
<g>
<title>G1Policy::predict_yg_surv_rate(int, SurvRateGroup*) const (1 samples, 0.04%)</title><rect x="1182.7" y="755.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1185.7" y="766.0"></text>
</g>
<g>
<title>[tid=9286] (1 samples, 0.04%)</title><rect x="1183.2" y="915.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1186.2" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="1183.2" y="899.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1186.2" y="910.0"></text>
</g>
<g>
<title>[tid=9294] (5 samples, 0.22%)</title><rect x="1183.7" y="915.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1186.7" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.09%)</title><rect x="1183.7" y="899.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1186.7" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="1183.7" y="883.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1186.7" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="1183.7" y="867.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.7" y="878.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="1183.7" y="851.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1186.7" y="862.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="1183.7" y="835.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1186.7" y="846.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.09%)</title><rect x="1183.7" y="819.0" width="1.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1186.7" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.09%)</title><rect x="1183.7" y="803.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1186.7" y="814.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.09%)</title><rect x="1183.7" y="787.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1186.7" y="798.0"></text>
</g>
<g>
<title>__schedule (2 samples, 0.09%)</title><rect x="1183.7" y="771.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1186.7" y="782.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.09%)</title><rect x="1183.7" y="755.0" width="1.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1186.7" y="766.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="1184.8" y="899.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1187.8" y="910.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1185.3" y="899.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1188.3" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1185.3" y="883.0" width="1.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1188.3" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1185.3" y="867.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1188.3" y="878.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.09%)</title><rect x="1185.3" y="851.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1188.3" y="862.0"></text>
</g>
<g>
<title>PeriodicTask::real_time_tick(int) (2 samples, 0.09%)</title><rect x="1185.3" y="835.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1188.3" y="846.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="1185.3" y="819.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1188.3" y="830.0"></text>
</g>
<g>
<title>update_get_addr (1 samples, 0.04%)</title><rect x="1185.3" y="803.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1188.3" y="814.0"></text>
</g>
<g>
<title>StatSamplerTask::task() (1 samples, 0.04%)</title><rect x="1185.8" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1188.8" y="830.0"></text>
</g>
<g>
<title>[tid=9354] (1 samples, 0.04%)</title><rect x="1186.3" y="915.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1189.3" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1186.3" y="899.0" width="0.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1189.3" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1186.3" y="883.0" width="0.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1189.3" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1186.3" y="867.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1189.3" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1186.3" y="851.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.3" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1186.3" y="835.0" width="0.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1189.3" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1186.3" y="819.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1189.3" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.04%)</title><rect x="1186.3" y="803.0" width="0.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.3" y="814.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.04%)</title><rect x="1186.3" y="787.0" width="0.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1189.3" y="798.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.04%)</title><rect x="1186.3" y="771.0" width="0.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.3" y="782.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.04%)</title><rect x="1186.3" y="755.0" width="0.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.3" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.04%)</title><rect x="1186.3" y="739.0" width="0.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1189.3" y="750.0"></text>
</g>
<g>
<title>[tid=9355] (1 samples, 0.04%)</title><rect x="1186.9" y="915.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1189.9" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1186.9" y="899.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1189.9" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1186.9" y="883.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1189.9" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1186.9" y="867.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1189.9" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1186.9" y="851.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.9" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1186.9" y="835.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.9" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1186.9" y="819.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1189.9" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="1186.9" y="803.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1189.9" y="814.0"></text>
</g>
<g>
<title>[tid=9356] (1 samples, 0.04%)</title><rect x="1187.4" y="915.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1190.4" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1187.4" y="899.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1190.4" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1187.4" y="883.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.4" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1187.4" y="867.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1190.4" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1187.4" y="851.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1190.4" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1187.4" y="835.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1190.4" y="846.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1187.4" y="819.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.04%)</title><rect x="1187.4" y="803.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1190.4" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1187.4" y="787.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1190.4" y="798.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.04%)</title><rect x="1187.4" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.04%)</title><rect x="1187.4" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.04%)</title><rect x="1187.4" y="739.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>[tid=9357] (1 samples, 0.04%)</title><rect x="1187.9" y="915.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1190.9" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1187.9" y="899.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1190.9" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1187.9" y="883.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1190.9" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1187.9" y="867.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.9" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1187.9" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1190.9" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1187.9" y="835.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.9" y="846.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1187.9" y="819.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1190.9" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.04%)</title><rect x="1187.9" y="803.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="814.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1187.9" y="787.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1190.9" y="798.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.04%)</title><rect x="1187.9" y="771.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.9" y="782.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::do_code_blob(CodeBlob*) (1 samples, 0.04%)</title><rect x="1187.9" y="755.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1190.9" y="766.0"></text>
</g>
<g>
<title>nmethod::oops_do(OopClosure*, bool) (1 samples, 0.04%)</title><rect x="1187.9" y="739.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.9" y="750.0"></text>
</g>
<g>
<title>G1CodeBlobClosure::HeapRegionGatheringOopClosure::do_oop(oopDesc**) (1 samples, 0.04%)</title><rect x="1187.9" y="723.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1190.9" y="734.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue_partially() (1 samples, 0.04%)</title><rect x="1187.9" y="707.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.9" y="718.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.04%)</title><rect x="1187.9" y="691.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1190.9" y="702.0"></text>
</g>
<g>
<title>G1PLABAllocator::allocate_direct_or_new_plab(InCSetState, unsigned long, bool*) (1 samples, 0.04%)</title><rect x="1187.9" y="675.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1190.9" y="686.0"></text>
</g>
<g>
<title>[tid=9358] (1 samples, 0.04%)</title><rect x="1188.4" y="915.0" width="0.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1191.4" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1188.4" y="899.0" width="0.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1191.4" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1188.4" y="883.0" width="0.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1191.4" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1188.4" y="867.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.4" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1188.4" y="851.0" width="0.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1191.4" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1188.4" y="835.0" width="0.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1191.4" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1188.4" y="819.0" width="0.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.4" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="1188.4" y="803.0" width="0.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.4" y="814.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.04%)</title><rect x="1188.4" y="787.0" width="0.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1191.4" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.04%)</title><rect x="1188.4" y="771.0" width="0.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1191.4" y="782.0"></text>
</g>
<g>
<title>[tid=9359] (1 samples, 0.04%)</title><rect x="1189.0" y="915.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1192.0" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1189.0" y="899.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1192.0" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1189.0" y="883.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1192.0" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1189.0" y="867.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.0" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1189.0" y="851.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1192.0" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1189.0" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1189.0" y="819.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1192.0" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="1189.0" y="803.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.04%)</title><rect x="1189.0" y="787.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.0" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.04%)</title><rect x="1189.0" y="771.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.0" y="782.0"></text>
</g>
<g>
<title>[tid=9360] (1 samples, 0.04%)</title><rect x="1189.5" y="915.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1192.5" y="926.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1189.5" y="899.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1192.5" y="910.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1189.5" y="883.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1192.5" y="894.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1189.5" y="867.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1192.5" y="878.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1189.5" y="851.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1189.5" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1189.5" y="819.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.04%)</title><rect x="1189.5" y="803.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1192.5" y="814.0"></text>
</g>
<g>
<title>void G1ParScanThreadState::do_oop_evac&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.04%)</title><rect x="1189.5" y="787.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1192.5" y="798.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.04%)</title><rect x="1189.5" y="771.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1192.5" y="782.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceRefKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1189.5" y="755.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.5" y="766.0"></text>
</g>
</g>
</svg>
