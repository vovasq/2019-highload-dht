<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1318" onload="init(evt)" viewBox="0 0 1200 1318" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1301"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1301"> </text>
<g id="frames">
<g>
<title>all (2,459 samples, 100.00%)</title><rect x="10.0" y="1267.0" width="1180.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="13.0" y="1278.0">all</text>
</g>
<g>
<title>[NIO Selector #3 tid=32057] (665 samples, 27.04%)</title><rect x="10.0" y="1251.0" width="319.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="13.0" y="1262.0">[NIO Selector #3 tid=32057]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="10.0" y="1235.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="13.0" y="1246.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (664 samples, 27.00%)</title><rect x="10.5" y="1235.0" width="318.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.5" y="1246.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.37%)</title><rect x="10.5" y="1219.0" width="4.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.5" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (9 samples, 0.37%)</title><rect x="10.5" y="1203.0" width="4.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="13.5" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.08%)</title><rect x="13.8" y="1187.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="16.8" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (130 samples, 5.29%)</title><rect x="14.8" y="1219.0" width="62.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="17.8" y="1230.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (129 samples, 5.25%)</title><rect x="15.3" y="1203.0" width="61.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="18.3" y="1214.0">one/ni..</text>
</g>
<g>
<title>[unknown] (114 samples, 4.64%)</title><rect x="18.6" y="1187.0" width="54.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="21.6" y="1198.0">[unkn..</text>
</g>
<g>
<title>Klass::is_klass() const volatile (8 samples, 0.33%)</title><rect x="18.6" y="1171.0" width="3.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="21.6" y="1182.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.33%)</title><rect x="18.6" y="1155.0" width="3.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="21.6" y="1166.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.33%)</title><rect x="18.6" y="1139.0" width="3.9" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="21.6" y="1150.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="18.6" y="1123.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="21.6" y="1134.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.12%)</title><rect x="19.1" y="1123.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="22.1" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.16%)</title><rect x="20.6" y="1123.0" width="1.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="23.6" y="1134.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="21.5" y="1107.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="24.5" y="1118.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (3 samples, 0.12%)</title><rect x="22.5" y="1171.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="25.5" y="1182.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="23.9" y="1171.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="26.9" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (102 samples, 4.15%)</title><rect x="24.4" y="1171.0" width="48.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="27.4" y="1182.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (81 samples, 3.29%)</title><rect x="34.5" y="1155.0" width="38.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="37.5" y="1166.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (81 samples, 3.29%)</title><rect x="34.5" y="1139.0" width="38.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="37.5" y="1150.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (76 samples, 3.09%)</title><rect x="36.9" y="1123.0" width="36.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="39.9" y="1134.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (75 samples, 3.05%)</title><rect x="36.9" y="1107.0" width="36.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="39.9" y="1118.0">do_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="39.3" y="1091.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="42.3" y="1102.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="39.3" y="1075.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="42.3" y="1086.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="39.3" y="1059.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="42.3" y="1070.0"></text>
</g>
<g>
<title>ep_poll (59 samples, 2.40%)</title><rect x="39.8" y="1091.0" width="28.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="42.8" y="1102.0">ep..</text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.04%)</title><rect x="44.6" y="1075.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="47.6" y="1086.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (19 samples, 0.77%)</title><rect x="45.0" y="1075.0" width="9.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.0" y="1086.0"></text>
</g>
<g>
<title>ep_send_events_proc (10 samples, 0.41%)</title><rect x="48.4" y="1059.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="51.4" y="1070.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (5 samples, 0.20%)</title><rect x="50.3" y="1043.0" width="2.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="53.3" y="1054.0"></text>
</g>
<g>
<title>sock_poll (4 samples, 0.16%)</title><rect x="50.3" y="1027.0" width="1.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.3" y="1038.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="51.7" y="1011.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="54.7" y="1022.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="52.2" y="1027.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="55.2" y="1038.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="52.7" y="1043.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="55.7" y="1054.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.08%)</title><rect x="53.2" y="1059.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="56.2" y="1070.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.08%)</title><rect x="54.1" y="1075.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="57.1" y="1086.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (27 samples, 1.10%)</title><rect x="55.1" y="1075.0" width="13.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="58.1" y="1086.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 1.10%)</title><rect x="55.1" y="1059.0" width="13.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="58.1" y="1070.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="55.6" y="1043.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="58.6" y="1054.0"></text>
</g>
<g>
<title>schedule (25 samples, 1.02%)</title><rect x="56.1" y="1043.0" width="12.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.1" y="1054.0"></text>
</g>
<g>
<title>__schedule (24 samples, 0.98%)</title><rect x="56.5" y="1027.0" width="11.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="59.5" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (24 samples, 0.98%)</title><rect x="56.5" y="1011.0" width="11.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="59.5" y="1022.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="67.6" y="995.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="70.6" y="1006.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="67.6" y="979.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="70.6" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="67.6" y="963.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="70.6" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="67.6" y="947.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="70.6" y="958.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="67.6" y="931.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="70.6" y="942.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="67.6" y="915.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="70.6" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="67.6" y="899.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="70.6" y="910.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.04%)</title><rect x="68.1" y="1091.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="71.1" y="1102.0"></text>
</g>
<g>
<title>fput (9 samples, 0.37%)</title><rect x="68.5" y="1091.0" width="4.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="71.5" y="1102.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="72.9" y="1107.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="75.9" y="1118.0"></text>
</g>
<g>
<title>_init (3 samples, 0.12%)</title><rect x="73.3" y="1187.0" width="1.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="76.3" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (4 samples, 0.16%)</title><rect x="74.8" y="1187.0" width="1.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="77.8" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="76.7" y="1187.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="79.7" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (525 samples, 21.35%)</title><rect x="77.2" y="1219.0" width="251.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="80.2" y="1230.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (521 samples, 21.19%)</title><rect x="77.7" y="1203.0" width="250.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="80.7" y="1214.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (449 samples, 18.26%)</title><rect x="79.1" y="1187.0" width="215.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="82.1" y="1198.0">one/nio/http/HttpSession.pro..</text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="81.0" y="1171.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="84.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (423 samples, 17.20%)</title><rect x="81.5" y="1171.0" width="203.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="84.5" y="1182.0">one/nio/http/HttpSession.h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (423 samples, 17.20%)</title><rect x="81.5" y="1155.0" width="203.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.5" y="1166.0">one/nio/http/HttpServer.ha..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (410 samples, 16.67%)</title><rect x="81.5" y="1139.0" width="196.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="84.5" y="1150.0">RequestHandler1_entity.han..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (234 samples, 9.52%)</title><rect x="81.5" y="1123.0" width="112.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="84.5" y="1134.0">one/nio/http/H..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (2 samples, 0.08%)</title><rect x="82.5" y="1107.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="85.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="82.5" y="1091.0" width="0.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="85.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="82.5" y="1075.0" width="0.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="85.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (2 samples, 0.08%)</title><rect x="82.5" y="1059.0" width="0.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="85.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (227 samples, 9.23%)</title><rect x="83.4" y="1107.0" width="109.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="86.4" y="1118.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (10 samples, 0.41%)</title><rect x="83.4" y="1091.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="86.4" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="84.9" y="1075.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="87.9" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.20%)</title><rect x="85.8" y="1075.0" width="2.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="88.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="86.3" y="1059.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="89.3" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.12%)</title><rect x="86.8" y="1059.0" width="1.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.12%)</title><rect x="86.8" y="1043.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="89.8" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (217 samples, 8.82%)</title><rect x="88.2" y="1091.0" width="104.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="91.2" y="1102.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session.write (217 samples, 8.82%)</title><rect x="88.2" y="1075.0" width="104.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="91.2" y="1086.0">one/nio/net/..</text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="88.2" y="1059.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="91.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (215 samples, 8.74%)</title><rect x="89.2" y="1059.0" width="103.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="92.2" y="1070.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (215 samples, 8.74%)</title><rect x="89.2" y="1043.0" width="103.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="92.2" y="1054.0">one/nio/net/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="89.7" y="1027.0" width="0.4" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="92.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.16%)</title><rect x="90.1" y="1027.0" width="2.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="93.1" y="1038.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.16%)</title><rect x="90.1" y="1011.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="93.1" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (3 samples, 0.12%)</title><rect x="90.1" y="995.0" width="1.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="93.1" y="1006.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="90.6" y="979.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="93.6" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="90.6" y="963.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="93.6" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="90.6" y="947.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="93.6" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="90.6" y="931.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="93.6" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="90.6" y="915.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="93.6" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="90.6" y="899.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="93.6" y="910.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="90.6" y="883.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="93.6" y="894.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="90.6" y="867.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="93.6" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="90.6" y="851.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="93.6" y="862.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="91.1" y="979.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.1" y="990.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="91.6" y="995.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="94.6" y="1006.0"></text>
</g>
<g>
<title>__send (209 samples, 8.50%)</title><rect x="92.1" y="1027.0" width="100.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="95.1" y="1038.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (207 samples, 8.42%)</title><rect x="93.0" y="1011.0" width="99.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="96.0" y="1022.0">entry_SYSCAL..</text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.08%)</title><rect x="93.0" y="995.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="96.0" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (205 samples, 8.34%)</title><rect x="94.0" y="995.0" width="98.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="97.0" y="1006.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (203 samples, 8.26%)</title><rect x="94.9" y="979.0" width="97.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="97.9" y="990.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (202 samples, 8.21%)</title><rect x="94.9" y="963.0" width="97.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.9" y="974.0">__sys_sendto</text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.04%)</title><rect x="95.4" y="947.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="98.4" y="958.0"></text>
</g>
<g>
<title>sock_sendmsg (198 samples, 8.05%)</title><rect x="95.9" y="947.0" width="95.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="98.9" y="958.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.08%)</title><rect x="96.4" y="931.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="99.4" y="942.0"></text>
</g>
<g>
<title>inet_sendmsg (189 samples, 7.69%)</title><rect x="97.3" y="931.0" width="90.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="100.3" y="942.0">inet_sendmsg</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="97.3" y="915.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="100.3" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="97.3" y="899.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="100.3" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="97.3" y="883.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="100.3" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="97.3" y="867.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="100.3" y="878.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="97.3" y="851.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="100.3" y="862.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="97.3" y="835.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="100.3" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="97.3" y="819.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="100.3" y="830.0"></text>
</g>
<g>
<title>tcp_sendmsg (188 samples, 7.65%)</title><rect x="97.8" y="915.0" width="90.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="100.8" y="926.0">tcp_sendmsg</text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="97.8" y="899.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="100.8" y="910.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="98.3" y="899.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.3" y="910.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="98.8" y="899.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="101.8" y="910.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="98.8" y="883.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="101.8" y="894.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.04%)</title><rect x="99.3" y="899.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="102.3" y="910.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="99.7" y="899.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="102.7" y="910.0"></text>
</g>
<g>
<title>tcp_send_mss (1 samples, 0.04%)</title><rect x="100.2" y="899.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="103.2" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (180 samples, 7.32%)</title><rect x="100.7" y="899.0" width="86.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.7" y="910.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="103.1" y="883.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.1" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="103.1" y="867.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="106.1" y="878.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="103.6" y="883.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="106.6" y="894.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="103.6" y="867.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.6" y="878.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="103.6" y="851.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="106.6" y="862.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="103.6" y="835.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="106.6" y="846.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="103.6" y="819.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="106.6" y="830.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="103.6" y="803.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="106.6" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="103.6" y="787.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="106.6" y="798.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (17 samples, 0.69%)</title><rect x="104.1" y="883.0" width="8.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="107.1" y="894.0"></text>
</g>
<g>
<title>__alloc_skb (16 samples, 0.65%)</title><rect x="104.1" y="867.0" width="7.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.1" y="878.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (7 samples, 0.28%)</title><rect x="105.5" y="851.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="108.5" y="862.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (6 samples, 0.24%)</title><rect x="106.0" y="835.0" width="2.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="109.0" y="846.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="108.4" y="819.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="111.4" y="830.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.08%)</title><rect x="108.9" y="851.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="111.9" y="862.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.12%)</title><rect x="109.8" y="851.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="112.8" y="862.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="111.3" y="851.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="114.3" y="862.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="111.7" y="867.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="114.7" y="878.0"></text>
</g>
<g>
<title>skb_entail (3 samples, 0.12%)</title><rect x="112.2" y="883.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="115.2" y="894.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="113.2" y="867.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="116.2" y="878.0"></text>
</g>
<g>
<title>tcp_push (150 samples, 6.10%)</title><rect x="113.7" y="883.0" width="71.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="116.7" y="894.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (150 samples, 6.10%)</title><rect x="113.7" y="867.0" width="71.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="116.7" y="878.0">__tcp_pu..</text>
</g>
<g>
<title>tcp_write_xmit (150 samples, 6.10%)</title><rect x="113.7" y="851.0" width="71.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="116.7" y="862.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (144 samples, 5.86%)</title><rect x="114.1" y="835.0" width="69.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="117.1" y="846.0">__tcp_t..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="117.0" y="819.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="120.0" y="830.0"></text>
</g>
<g>
<title>ip_queue_xmit (136 samples, 5.53%)</title><rect x="117.5" y="819.0" width="65.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="120.5" y="830.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (135 samples, 5.49%)</title><rect x="117.5" y="803.0" width="64.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="120.5" y="814.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (134 samples, 5.45%)</title><rect x="117.5" y="787.0" width="64.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="120.5" y="798.0">ip_loca..</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.04%)</title><rect x="117.5" y="771.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="120.5" y="782.0"></text>
</g>
<g>
<title>ip_output (133 samples, 5.41%)</title><rect x="118.0" y="771.0" width="63.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="121.0" y="782.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="118.5" y="755.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="121.5" y="766.0"></text>
</g>
<g>
<title>ip_finish_output (131 samples, 5.33%)</title><rect x="118.9" y="755.0" width="62.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="121.9" y="766.0">ip_fin..</text>
</g>
<g>
<title>ip_finish_output2 (129 samples, 5.25%)</title><rect x="119.9" y="739.0" width="61.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="122.9" y="750.0">ip_fin..</text>
</g>
<g>
<title>__local_bh_enable_ip (106 samples, 4.31%)</title><rect x="121.8" y="723.0" width="50.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="124.8" y="734.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.21 (105 samples, 4.27%)</title><rect x="122.3" y="707.0" width="50.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="125.3" y="718.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (104 samples, 4.23%)</title><rect x="122.8" y="691.0" width="49.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="125.8" y="702.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (103 samples, 4.19%)</title><rect x="122.8" y="675.0" width="49.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="125.8" y="686.0">__sof..</text>
</g>
<g>
<title>net_rx_action (98 samples, 3.99%)</title><rect x="124.7" y="659.0" width="47.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="127.7" y="670.0">net_..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="125.6" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="128.6" y="654.0"></text>
</g>
<g>
<title>process_backlog (95 samples, 3.86%)</title><rect x="126.1" y="643.0" width="45.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="129.1" y="654.0">proc..</text>
</g>
<g>
<title>__netif_receive_skb (95 samples, 3.86%)</title><rect x="126.1" y="627.0" width="45.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="129.1" y="638.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (94 samples, 3.82%)</title><rect x="126.6" y="611.0" width="45.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="129.6" y="622.0">__ne..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.16%)</title><rect x="126.6" y="595.0" width="1.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="129.6" y="606.0"></text>
</g>
<g>
<title>ip_rcv (89 samples, 3.62%)</title><rect x="128.5" y="595.0" width="42.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="131.5" y="606.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (88 samples, 3.58%)</title><rect x="128.5" y="579.0" width="42.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="131.5" y="590.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (88 samples, 3.58%)</title><rect x="128.5" y="563.0" width="42.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="131.5" y="574.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (87 samples, 3.54%)</title><rect x="129.0" y="547.0" width="41.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.0" y="558.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (87 samples, 3.54%)</title><rect x="129.0" y="531.0" width="41.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="132.0" y="542.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (86 samples, 3.50%)</title><rect x="129.5" y="515.0" width="41.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="132.5" y="526.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.16%)</title><rect x="131.4" y="499.0" width="1.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="134.4" y="510.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="132.8" y="483.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="135.8" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="133.3" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="136.3" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (77 samples, 3.13%)</title><rect x="133.8" y="499.0" width="37.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="136.8" y="510.0">tcp..</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.04%)</title><rect x="133.8" y="483.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="136.8" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (75 samples, 3.05%)</title><rect x="134.3" y="483.0" width="36.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="137.3" y="494.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="136.2" y="467.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="139.2" y="478.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="136.2" y="451.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="139.2" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="136.7" y="435.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="139.7" y="446.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="136.7" y="419.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="139.7" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="136.7" y="403.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="139.7" y="414.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (2 samples, 0.08%)</title><rect x="137.2" y="467.0" width="0.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="140.2" y="478.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="138.1" y="467.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="141.1" y="478.0"></text>
</g>
<g>
<title>tcp_ack (9 samples, 0.37%)</title><rect x="138.6" y="467.0" width="4.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="141.6" y="478.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.33%)</title><rect x="139.1" y="451.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="142.1" y="462.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.24%)</title><rect x="140.0" y="435.0" width="2.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="143.0" y="446.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="140.0" y="419.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="143.0" y="430.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="140.0" y="403.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="143.0" y="414.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="140.5" y="419.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="143.5" y="430.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.16%)</title><rect x="141.0" y="419.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="144.0" y="430.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.16%)</title><rect x="141.0" y="403.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="144.0" y="414.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="142.4" y="387.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="145.4" y="398.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="142.4" y="371.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="145.4" y="382.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="142.9" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="145.9" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (51 samples, 2.07%)</title><rect x="143.4" y="467.0" width="24.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="146.4" y="478.0">t..</text>
</g>
<g>
<title>sock_def_readable (47 samples, 1.91%)</title><rect x="143.9" y="451.0" width="22.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="146.9" y="462.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (46 samples, 1.87%)</title><rect x="144.4" y="435.0" width="22.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="147.4" y="446.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (46 samples, 1.87%)</title><rect x="144.4" y="419.0" width="22.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="147.4" y="430.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (46 samples, 1.87%)</title><rect x="144.4" y="403.0" width="22.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="147.4" y="414.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (3 samples, 0.12%)</title><rect x="166.4" y="451.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="169.4" y="462.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="167.9" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="170.9" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="168.4" y="467.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="171.4" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="168.8" y="467.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="171.8" y="478.0"></text>
</g>
<g>
<title>tcp_urg (2 samples, 0.08%)</title><rect x="169.3" y="467.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="172.3" y="478.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.04%)</title><rect x="170.3" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="173.3" y="494.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.04%)</title><rect x="170.8" y="579.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="173.8" y="590.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="171.2" y="595.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="174.2" y="606.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="171.7" y="659.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="174.7" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="171.7" y="643.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="174.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="171.7" y="627.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="174.7" y="638.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="172.2" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="175.2" y="686.0"></text>
</g>
<g>
<title>dev_queue_xmit (18 samples, 0.73%)</title><rect x="172.7" y="723.0" width="8.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="175.7" y="734.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.73%)</title><rect x="172.7" y="707.0" width="8.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="175.7" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="173.2" y="691.0" width="0.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="176.2" y="702.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.41%)</title><rect x="173.6" y="691.0" width="4.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="176.6" y="702.0"></text>
</g>
<g>
<title>loopback_xmit (9 samples, 0.37%)</title><rect x="173.6" y="675.0" width="4.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="176.6" y="686.0"></text>
</g>
<g>
<title>eth_type_trans (4 samples, 0.16%)</title><rect x="174.1" y="659.0" width="1.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="177.1" y="670.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.12%)</title><rect x="176.0" y="659.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="179.0" y="670.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.12%)</title><rect x="176.0" y="643.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="179.0" y="654.0"></text>
</g>
<g>
<title>enqueue_to_backlog (3 samples, 0.12%)</title><rect x="176.0" y="627.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="179.0" y="638.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="177.5" y="659.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="180.5" y="670.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.04%)</title><rect x="177.5" y="643.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="180.5" y="654.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="178.0" y="675.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="181.0" y="686.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="178.4" y="691.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="181.4" y="702.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.16%)</title><rect x="178.9" y="691.0" width="1.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="181.9" y="702.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="179.4" y="675.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="182.4" y="686.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.08%)</title><rect x="179.9" y="675.0" width="0.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="182.9" y="686.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="180.8" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="183.8" y="702.0"></text>
</g>
<g>
<title>do_softirq.part.21 (1 samples, 0.04%)</title><rect x="181.3" y="723.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="184.3" y="734.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="181.8" y="787.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="184.8" y="798.0"></text>
</g>
<g>
<title>ip_copy_addrs (1 samples, 0.04%)</title><rect x="182.3" y="803.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="185.3" y="814.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="182.8" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="185.8" y="830.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="182.8" y="803.0" width="0.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="185.8" y="814.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="183.2" y="835.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.2" y="846.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="183.7" y="835.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="186.7" y="846.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="184.2" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="187.2" y="846.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="184.7" y="835.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="187.7" y="846.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="185.2" y="835.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="188.2" y="846.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.08%)</title><rect x="185.6" y="883.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="188.6" y="894.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="185.6" y="867.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="188.6" y="878.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="186.6" y="883.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="189.6" y="894.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.08%)</title><rect x="187.1" y="899.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="190.1" y="910.0"></text>
</g>
<g>
<title>security_socket_sendmsg (6 samples, 0.24%)</title><rect x="188.0" y="931.0" width="2.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="191.0" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.08%)</title><rect x="188.0" y="915.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="191.0" y="926.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.16%)</title><rect x="189.0" y="915.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="192.0" y="926.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.16%)</title><rect x="189.0" y="899.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="192.0" y="910.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.08%)</title><rect x="190.0" y="883.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="193.0" y="894.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="190.9" y="947.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="193.9" y="958.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="190.9" y="931.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="193.9" y="942.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="190.9" y="915.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.9" y="926.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="191.4" y="899.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="194.4" y="910.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="191.9" y="963.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="194.9" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="192.4" y="1107.0" width="0.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="195.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="192.8" y="1091.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="195.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="192.8" y="1075.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="195.8" y="1086.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="192.8" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="195.8" y="1070.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="192.8" y="1043.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="195.8" y="1054.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="192.8" y="1027.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="195.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.04%)</title><rect x="193.3" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="196.3" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.16%)</title><rect x="193.8" y="1123.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="196.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="193.8" y="1107.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="196.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="193.8" y="1091.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="196.8" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (3 samples, 0.12%)</title><rect x="194.3" y="1107.0" width="1.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="197.3" y="1118.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.12%)</title><rect x="194.3" y="1091.0" width="1.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="197.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (172 samples, 6.99%)</title><rect x="195.7" y="1123.0" width="82.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="198.7" y="1134.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="195.7" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="198.7" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="195.7" y="1091.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="198.7" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="195.7" y="1075.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="198.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="195.7" y="1059.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="198.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="195.7" y="1043.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="198.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (165 samples, 6.71%)</title><rect x="196.2" y="1107.0" width="79.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="199.2" y="1118.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (160 samples, 6.51%)</title><rect x="196.7" y="1091.0" width="76.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="199.7" y="1102.0">ru/mail/..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="196.7" y="1075.0" width="0.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="199.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="196.7" y="1059.0" width="0.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="199.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="196.7" y="1043.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="199.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="196.7" y="1027.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.7" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="196.7" y="1011.0" width="0.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="199.7" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (2 samples, 0.08%)</title><rect x="196.7" y="995.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="199.7" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (155 samples, 6.30%)</title><rect x="197.6" y="1075.0" width="74.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="200.6" y="1086.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (155 samples, 6.30%)</title><rect x="197.6" y="1059.0" width="74.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="200.6" y="1070.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (144 samples, 5.86%)</title><rect x="198.6" y="1043.0" width="69.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="201.6" y="1054.0">Java_or..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (3 samples, 0.12%)</title><rect x="199.5" y="1027.0" width="1.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="202.5" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="201.0" y="1027.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="204.0" y="1038.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.12%)</title><rect x="201.5" y="1027.0" width="1.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="204.5" y="1038.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.08%)</title><rect x="202.9" y="1027.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="205.9" y="1038.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="203.9" y="1027.0" width="0.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="206.9" y="1038.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="204.3" y="1027.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="207.3" y="1038.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.08%)</title><rect x="205.3" y="1027.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="208.3" y="1038.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.04%)</title><rect x="206.3" y="1027.0" width="0.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="209.3" y="1038.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.08%)</title><rect x="206.7" y="1027.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="209.7" y="1038.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.08%)</title><rect x="207.7" y="1027.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="210.7" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="208.7" y="1027.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="211.7" y="1038.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="209.1" y="1027.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="212.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (119 samples, 4.84%)</title><rect x="209.6" y="1027.0" width="57.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="212.6" y="1038.0">rocksd..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="209.6" y="1011.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="212.6" y="1022.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="210.1" y="1011.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="213.1" y="1022.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="210.6" y="995.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="213.6" y="1006.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.04%)</title><rect x="211.1" y="1011.0" width="0.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="214.1" y="1022.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="211.5" y="1011.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="214.5" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (85 samples, 3.46%)</title><rect x="212.0" y="1011.0" width="40.8" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="215.0" y="1022.0">roc..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (3 samples, 0.12%)</title><rect x="213.0" y="995.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="216.0" y="1006.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="213.9" y="979.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="216.9" y="990.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="213.9" y="963.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.9" y="974.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="213.9" y="947.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.9" y="958.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="213.9" y="931.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.9" y="942.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="213.9" y="915.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.9" y="926.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="213.9" y="899.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="216.9" y="910.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="213.9" y="883.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="216.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (80 samples, 3.25%)</title><rect x="214.4" y="995.0" width="38.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="217.4" y="1006.0">roc..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="214.9" y="979.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="217.9" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (76 samples, 3.09%)</title><rect x="215.4" y="979.0" width="36.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="218.4" y="990.0">roc..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="215.4" y="963.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="218.4" y="974.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="215.9" y="963.0" width="0.9" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="218.9" y="974.0"></text>
</g>
<g>
<title>_init (3 samples, 0.12%)</title><rect x="216.8" y="963.0" width="1.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="219.8" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (2 samples, 0.08%)</title><rect x="218.3" y="963.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="221.3" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (65 samples, 2.64%)</title><rect x="219.2" y="963.0" width="31.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="222.2" y="974.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (1 samples, 0.04%)</title><rect x="222.1" y="947.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="225.1" y="958.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="222.6" y="947.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="225.6" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.08%)</title><rect x="223.1" y="947.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="226.1" y="958.0"></text>
</g>
<g>
<title>_init (3 samples, 0.12%)</title><rect x="224.0" y="947.0" width="1.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="227.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (7 samples, 0.28%)</title><rect x="225.5" y="947.0" width="3.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="228.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (4 samples, 0.16%)</title><rect x="225.5" y="931.0" width="1.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="228.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.12%)</title><rect x="227.4" y="931.0" width="1.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="230.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.12%)</title><rect x="227.4" y="915.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="230.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="228.8" y="947.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="231.8" y="958.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="228.8" y="931.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="231.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="228.8" y="915.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="231.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="229.3" y="931.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="232.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.12%)</title><rect x="229.8" y="947.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="232.8" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (38 samples, 1.55%)</title><rect x="231.2" y="947.0" width="18.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="234.2" y="958.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (34 samples, 1.38%)</title><rect x="232.2" y="931.0" width="16.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="235.2" y="942.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (1 samples, 0.04%)</title><rect x="232.2" y="915.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="235.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (29 samples, 1.18%)</title><rect x="232.7" y="915.0" width="13.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="235.7" y="926.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (1 samples, 0.04%)</title><rect x="238.9" y="899.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="241.9" y="910.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="239.4" y="899.0" width="0.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="242.4" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="240.3" y="899.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="243.3" y="910.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="240.8" y="899.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="243.8" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 0.45%)</title><rect x="241.3" y="899.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="244.3" y="910.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (1 samples, 0.04%)</title><rect x="244.7" y="883.0" width="0.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="247.7" y="894.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (2 samples, 0.08%)</title><rect x="245.1" y="883.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="248.1" y="894.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="246.1" y="883.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="249.1" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.08%)</title><rect x="246.6" y="915.0" width="0.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="249.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.04%)</title><rect x="247.5" y="915.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="250.5" y="926.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="248.0" y="915.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="251.0" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="248.5" y="931.0" width="0.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="251.5" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="249.0" y="931.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="252.0" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="249.0" y="915.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="252.0" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="249.0" y="899.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="252.0" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="249.0" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="252.0" y="894.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="249.0" y="867.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="252.0" y="878.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="249.0" y="851.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="252.0" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="249.0" y="835.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="252.0" y="846.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="249.5" y="947.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="252.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="249.9" y="947.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="252.9" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="249.9" y="931.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="252.9" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="249.9" y="915.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="252.9" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="249.9" y="899.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="252.9" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="249.9" y="883.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="252.9" y="894.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="249.9" y="867.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="252.9" y="878.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="249.9" y="851.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="252.9" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="249.9" y="835.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="252.9" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="250.4" y="963.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="253.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (1 samples, 0.04%)</title><rect x="250.9" y="963.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="253.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="251.4" y="963.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="254.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (2 samples, 0.08%)</title><rect x="251.9" y="979.0" width="0.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="254.9" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.04%)</title><rect x="252.8" y="1011.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="255.8" y="1022.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (27 samples, 1.10%)</title><rect x="253.3" y="1011.0" width="13.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="256.3" y="1022.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="253.3" y="995.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="256.3" y="1006.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="253.8" y="995.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="256.8" y="1006.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.08%)</title><rect x="254.3" y="995.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="257.3" y="1006.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.12%)</title><rect x="255.2" y="995.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="258.2" y="1006.0"></text>
</g>
<g>
<title>jni_NewByteArray (20 samples, 0.81%)</title><rect x="256.7" y="995.0" width="9.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="259.7" y="1006.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.04%)</title><rect x="257.1" y="979.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="260.1" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.12%)</title><rect x="257.6" y="979.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="260.6" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="259.1" y="979.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="262.1" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (14 samples, 0.57%)</title><rect x="259.5" y="979.0" width="6.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="262.5" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (11 samples, 0.45%)</title><rect x="260.0" y="963.0" width="5.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="263.0" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (10 samples, 0.41%)</title><rect x="260.0" y="947.0" width="4.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="263.0" y="958.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="260.0" y="931.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="263.0" y="942.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.08%)</title><rect x="260.5" y="931.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="263.5" y="942.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (7 samples, 0.28%)</title><rect x="261.5" y="931.0" width="3.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="264.5" y="942.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="264.8" y="947.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="267.8" y="958.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="264.8" y="931.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="267.8" y="942.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="264.8" y="915.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="267.8" y="926.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="264.8" y="899.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="267.8" y="910.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="264.8" y="883.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="267.8" y="894.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="264.8" y="867.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="267.8" y="878.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="264.8" y="851.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="267.8" y="862.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="264.8" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="267.8" y="846.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.08%)</title><rect x="265.3" y="963.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="268.3" y="974.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="266.3" y="1011.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="269.3" y="1022.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (2 samples, 0.08%)</title><rect x="266.7" y="1027.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="269.7" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="267.7" y="1043.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="270.7" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="267.7" y="1027.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="270.7" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="267.7" y="1011.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="270.7" y="1022.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="268.2" y="1043.0" width="0.4" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="271.2" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="268.6" y="1043.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="271.6" y="1054.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="269.1" y="1043.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="272.1" y="1054.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="269.1" y="1027.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.1" y="1038.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="269.1" y="1011.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="272.1" y="1022.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="269.1" y="995.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="272.1" y="1006.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="269.1" y="979.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="272.1" y="990.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="269.1" y="963.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="272.1" y="974.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="269.1" y="947.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="272.1" y="958.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="269.1" y="931.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="272.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.08%)</title><rect x="269.6" y="1043.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="272.6" y="1054.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.08%)</title><rect x="270.6" y="1043.0" width="0.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="273.6" y="1054.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="271.5" y="1043.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="274.5" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (3 samples, 0.12%)</title><rect x="272.0" y="1075.0" width="1.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="275.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (1 samples, 0.04%)</title><rect x="273.0" y="1059.0" width="0.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (4 samples, 0.16%)</title><rect x="273.4" y="1091.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="276.4" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.16%)</title><rect x="273.4" y="1075.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="273.4" y="1059.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.4" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="273.4" y="1043.0" width="2.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="276.4" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="273.4" y="1027.0" width="2.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="276.4" y="1038.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="273.4" y="1011.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="276.4" y="1022.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="273.4" y="995.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="276.4" y="1006.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="273.4" y="979.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="276.4" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="273.4" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="276.4" y="974.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="273.4" y="947.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.4" y="958.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="273.4" y="931.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="276.4" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="273.4" y="915.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="276.4" y="926.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.12%)</title><rect x="273.9" y="1011.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="276.9" y="1022.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.12%)</title><rect x="273.9" y="995.0" width="1.5" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="276.9" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (6 samples, 0.24%)</title><rect x="275.4" y="1107.0" width="2.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="278.4" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="275.8" y="1091.0" width="1.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="278.8" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="275.8" y="1075.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="278.8" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="276.3" y="1059.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="279.3" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.08%)</title><rect x="276.3" y="1043.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="279.3" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="277.3" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="280.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (1 samples, 0.04%)</title><rect x="277.8" y="1091.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="280.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (10 samples, 0.41%)</title><rect x="278.2" y="1139.0" width="4.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="281.2" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (2 samples, 0.08%)</title><rect x="282.1" y="1123.0" width="0.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="285.1" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (2 samples, 0.08%)</title><rect x="283.0" y="1139.0" width="1.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="286.0" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.08%)</title><rect x="283.0" y="1123.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="286.0" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.04%)</title><rect x="283.0" y="1107.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="286.0" y="1118.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="283.0" y="1091.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="286.0" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="283.5" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="286.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="283.5" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="286.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="284.0" y="1139.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="287.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="284.0" y="1123.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="287.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="284.0" y="1107.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="284.0" y="1091.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="287.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (16 samples, 0.65%)</title><rect x="284.5" y="1171.0" width="7.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="287.5" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 0.37%)</title><rect x="285.0" y="1155.0" width="4.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="288.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (3 samples, 0.12%)</title><rect x="286.9" y="1139.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="289.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="287.4" y="1123.0" width="0.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="287.8" y="1107.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="290.8" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="288.3" y="1139.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="291.3" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.24%)</title><rect x="289.3" y="1155.0" width="2.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="292.3" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.24%)</title><rect x="289.3" y="1139.0" width="2.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="292.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="291.7" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="294.7" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.04%)</title><rect x="291.7" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="294.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.04%)</title><rect x="291.7" y="1091.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.7" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="292.2" y="1171.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="295.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (1 samples, 0.04%)</title><rect x="292.2" y="1155.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="295.2" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="292.6" y="1171.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="295.6" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="293.1" y="1171.0" width="1.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="296.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="293.1" y="1155.0" width="1.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.1" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.12%)</title><rect x="293.1" y="1139.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="296.1" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="293.1" y="1123.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="296.1" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="293.1" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="296.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (2 samples, 0.08%)</title><rect x="293.6" y="1123.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="296.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (2 samples, 0.08%)</title><rect x="293.6" y="1107.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="296.6" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="294.1" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="297.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (69 samples, 2.81%)</title><rect x="294.6" y="1187.0" width="33.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="297.6" y="1198.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (68 samples, 2.77%)</title><rect x="295.0" y="1171.0" width="32.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="298.0" y="1182.0">on..</text>
</g>
<g>
<title>[unknown] (19 samples, 0.77%)</title><rect x="297.4" y="1155.0" width="9.2" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="300.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (19 samples, 0.77%)</title><rect x="297.4" y="1139.0" width="9.2" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="300.4" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (16 samples, 0.65%)</title><rect x="297.4" y="1123.0" width="7.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="300.4" y="1134.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (4 samples, 0.16%)</title><rect x="297.4" y="1107.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="300.4" y="1118.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.08%)</title><rect x="299.4" y="1107.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="302.4" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="300.3" y="1107.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="303.3" y="1118.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="300.8" y="1107.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="303.8" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 0.28%)</title><rect x="301.3" y="1107.0" width="3.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="304.3" y="1118.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="301.3" y="1091.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="304.3" y="1102.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.08%)</title><rect x="301.8" y="1091.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="304.8" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.08%)</title><rect x="302.7" y="1091.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="305.7" y="1102.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="303.7" y="1091.0" width="0.9" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="306.7" y="1102.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="304.6" y="1107.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="307.6" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="305.1" y="1123.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="308.1" y="1134.0"></text>
</g>
<g>
<title>recv (2 samples, 0.08%)</title><rect x="305.6" y="1123.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="308.6" y="1134.0"></text>
</g>
<g>
<title>recv (44 samples, 1.79%)</title><rect x="306.6" y="1155.0" width="21.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="309.6" y="1166.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.67%)</title><rect x="308.0" y="1139.0" width="19.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="311.0" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.04%)</title><rect x="308.0" y="1123.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="311.0" y="1134.0"></text>
</g>
<g>
<title>do_syscall_64 (40 samples, 1.63%)</title><rect x="308.5" y="1123.0" width="19.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="311.5" y="1134.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (38 samples, 1.55%)</title><rect x="309.4" y="1107.0" width="18.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="312.4" y="1118.0"></text>
</g>
<g>
<title>__sys_recvfrom (36 samples, 1.46%)</title><rect x="309.4" y="1091.0" width="17.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="312.4" y="1102.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.04%)</title><rect x="309.4" y="1075.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="312.4" y="1086.0"></text>
</g>
<g>
<title>sock_recvmsg (32 samples, 1.30%)</title><rect x="309.9" y="1075.0" width="15.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="312.9" y="1086.0"></text>
</g>
<g>
<title>inet_recvmsg (26 samples, 1.06%)</title><rect x="309.9" y="1059.0" width="12.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="312.9" y="1070.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="310.4" y="1043.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.4" y="1054.0"></text>
</g>
<g>
<title>tcp_recvmsg (24 samples, 0.98%)</title><rect x="310.9" y="1043.0" width="11.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="313.9" y="1054.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.12%)</title><rect x="312.3" y="1027.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="315.3" y="1038.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="312.3" y="1011.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="315.3" y="1022.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.08%)</title><rect x="312.8" y="1011.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="315.8" y="1022.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="312.8" y="995.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="315.8" y="1006.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="313.3" y="995.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="316.3" y="1006.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="313.8" y="1027.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="316.8" y="1038.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (10 samples, 0.41%)</title><rect x="314.2" y="1027.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="317.2" y="1038.0"></text>
</g>
<g>
<title>__skb_datagram_iter (9 samples, 0.37%)</title><rect x="314.7" y="1011.0" width="4.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="317.7" y="1022.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="314.7" y="995.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="317.7" y="1006.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.33%)</title><rect x="315.2" y="995.0" width="3.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="318.2" y="1006.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="315.2" y="979.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="318.2" y="990.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="315.7" y="979.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="318.7" y="990.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="315.7" y="963.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="318.7" y="974.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="316.2" y="963.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="319.2" y="974.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.20%)</title><rect x="316.6" y="979.0" width="2.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="319.6" y="990.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.20%)</title><rect x="316.6" y="963.0" width="2.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="319.6" y="974.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.08%)</title><rect x="319.0" y="1027.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="322.0" y="1038.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (4 samples, 0.16%)</title><rect x="320.0" y="1027.0" width="1.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="323.0" y="1038.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.12%)</title><rect x="320.5" y="1011.0" width="1.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="323.5" y="1022.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="320.5" y="995.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="323.5" y="1006.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="320.5" y="979.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="323.5" y="990.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.08%)</title><rect x="321.0" y="995.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="324.0" y="1006.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="321.9" y="1027.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="324.9" y="1038.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.20%)</title><rect x="322.4" y="1059.0" width="2.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="325.4" y="1070.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.20%)</title><rect x="322.4" y="1043.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="325.4" y="1054.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.20%)</title><rect x="322.4" y="1027.0" width="2.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="325.4" y="1038.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.20%)</title><rect x="322.4" y="1011.0" width="2.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="325.4" y="1022.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (5 samples, 0.20%)</title><rect x="322.4" y="995.0" width="2.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="325.4" y="1006.0"></text>
</g>
<g>
<title>aa_check_perms (1 samples, 0.04%)</title><rect x="323.4" y="979.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="326.4" y="990.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.08%)</title><rect x="323.8" y="979.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="326.8" y="990.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.04%)</title><rect x="324.8" y="1059.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="327.8" y="1070.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.12%)</title><rect x="325.3" y="1075.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="328.3" y="1086.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="325.8" y="1059.0" width="0.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="328.8" y="1070.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="325.8" y="1043.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="328.8" y="1054.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="326.2" y="1027.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="329.2" y="1038.0"></text>
</g>
<g>
<title>import_single_range (2 samples, 0.08%)</title><rect x="326.7" y="1091.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="329.7" y="1102.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.12%)</title><rect x="327.7" y="1203.0" width="1.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="330.7" y="1214.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="327.7" y="1187.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="330.7" y="1198.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.08%)</title><rect x="328.2" y="1187.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="331.2" y="1198.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="328.2" y="1171.0" width="0.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="331.2" y="1182.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=32059] (1,059 samples, 43.07%)</title><rect x="329.1" y="1251.0" width="508.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="332.1" y="1262.0">[NIO Selector #5 tid=32059]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="329.1" y="1235.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="332.1" y="1246.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.08%)</title><rect x="329.6" y="1235.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="332.6" y="1246.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="330.1" y="1219.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="333.1" y="1230.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="330.1" y="1203.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="333.1" y="1214.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,056 samples, 42.94%)</title><rect x="330.6" y="1235.0" width="506.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="333.6" y="1246.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (15 samples, 0.61%)</title><rect x="330.6" y="1219.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.6" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (15 samples, 0.61%)</title><rect x="330.6" y="1203.0" width="7.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="333.6" y="1214.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="337.3" y="1187.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="340.3" y="1198.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="337.3" y="1171.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="340.3" y="1182.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="337.3" y="1155.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="340.3" y="1166.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="337.3" y="1139.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="340.3" y="1150.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="337.3" y="1123.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="340.3" y="1134.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="337.3" y="1107.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="340.3" y="1118.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="337.3" y="1091.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="340.3" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (160 samples, 6.51%)</title><rect x="337.8" y="1219.0" width="76.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="340.8" y="1230.0">one/nio/..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (3 samples, 0.12%)</title><rect x="340.6" y="1203.0" width="1.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="343.6" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.findNext (2 samples, 0.08%)</title><rect x="341.1" y="1187.0" width="1.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="344.1" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (151 samples, 6.14%)</title><rect x="342.1" y="1203.0" width="72.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="345.1" y="1214.0">one/nio/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.20%)</title><rect x="344.0" y="1187.0" width="2.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="347.0" y="1198.0"></text>
</g>
<g>
<title>[unknown] (132 samples, 5.37%)</title><rect x="346.4" y="1187.0" width="63.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="349.4" y="1198.0">[unknown]</text>
</g>
<g>
<title>Klass::is_klass() const volatile (4 samples, 0.16%)</title><rect x="346.4" y="1171.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="349.4" y="1182.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.16%)</title><rect x="346.4" y="1155.0" width="1.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="349.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.16%)</title><rect x="346.4" y="1139.0" width="1.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="349.4" y="1150.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.12%)</title><rect x="346.4" y="1123.0" width="1.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="349.4" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="347.8" y="1123.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="350.8" y="1134.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="347.8" y="1107.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="350.8" y="1118.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="348.3" y="1171.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="351.3" y="1182.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="348.3" y="1155.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="351.3" y="1166.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="348.8" y="1155.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="351.8" y="1166.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (1 samples, 0.04%)</title><rect x="349.3" y="1171.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="352.3" y="1182.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="349.3" y="1155.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="352.3" y="1166.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="349.3" y="1139.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="352.3" y="1150.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="349.3" y="1123.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="352.3" y="1134.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="349.3" y="1107.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="352.3" y="1118.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="349.3" y="1091.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="352.3" y="1102.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="349.3" y="1075.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="352.3" y="1086.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="349.3" y="1059.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="352.3" y="1070.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="349.7" y="1171.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="352.7" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (124 samples, 5.04%)</title><rect x="350.2" y="1171.0" width="59.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="353.2" y="1182.0">epoll_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (93 samples, 3.78%)</title><rect x="365.1" y="1155.0" width="44.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="368.1" y="1166.0">entr..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="365.1" y="1139.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="368.1" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (92 samples, 3.74%)</title><rect x="365.6" y="1139.0" width="44.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="368.6" y="1150.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (84 samples, 3.42%)</title><rect x="368.5" y="1123.0" width="40.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="371.5" y="1134.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (83 samples, 3.38%)</title><rect x="368.5" y="1107.0" width="39.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.5" y="1118.0">do_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="368.5" y="1091.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="371.5" y="1102.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="368.5" y="1075.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="371.5" y="1086.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="368.5" y="1059.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="371.5" y="1070.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="368.9" y="1091.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="371.9" y="1102.0"></text>
</g>
<g>
<title>ep_poll (77 samples, 3.13%)</title><rect x="369.9" y="1091.0" width="37.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="372.9" y="1102.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (36 samples, 1.46%)</title><rect x="374.7" y="1075.0" width="17.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="377.7" y="1086.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="380.0" y="1059.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="383.0" y="1070.0"></text>
</g>
<g>
<title>ep_send_events_proc (22 samples, 0.89%)</title><rect x="380.5" y="1059.0" width="10.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="383.5" y="1070.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (12 samples, 0.49%)</title><rect x="384.3" y="1043.0" width="5.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="387.3" y="1054.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rcx (1 samples, 0.04%)</title><rect x="385.7" y="1027.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="388.7" y="1038.0"></text>
</g>
<g>
<title>sock_poll (8 samples, 0.33%)</title><rect x="386.2" y="1027.0" width="3.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="389.2" y="1038.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="387.7" y="1011.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="390.7" y="1022.0"></text>
</g>
<g>
<title>tcp_poll (3 samples, 0.12%)</title><rect x="388.1" y="1011.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="391.1" y="1022.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="389.6" y="1011.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="392.6" y="1022.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.08%)</title><rect x="390.1" y="1043.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="393.1" y="1054.0"></text>
</g>
<g>
<title>mutex_lock (2 samples, 0.08%)</title><rect x="391.0" y="1059.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="394.0" y="1070.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="392.0" y="1075.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="395.0" y="1086.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.08%)</title><rect x="392.5" y="1075.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="395.5" y="1086.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (28 samples, 1.14%)</title><rect x="393.4" y="1075.0" width="13.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="396.4" y="1086.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="393.4" y="1059.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="396.4" y="1070.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (27 samples, 1.10%)</title><rect x="393.9" y="1059.0" width="13.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="396.9" y="1070.0"></text>
</g>
<g>
<title>schedule (25 samples, 1.02%)</title><rect x="394.9" y="1043.0" width="12.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="397.9" y="1054.0"></text>
</g>
<g>
<title>__schedule (25 samples, 1.02%)</title><rect x="394.9" y="1027.0" width="12.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="397.9" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (25 samples, 1.02%)</title><rect x="394.9" y="1011.0" width="12.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="397.9" y="1022.0"></text>
</g>
<g>
<title>fput (3 samples, 0.12%)</title><rect x="406.9" y="1091.0" width="1.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="409.9" y="1102.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="408.3" y="1107.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="411.3" y="1118.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.08%)</title><rect x="408.8" y="1123.0" width="0.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="411.8" y="1134.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="409.7" y="1187.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="412.7" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (6 samples, 0.24%)</title><rect x="410.7" y="1187.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="413.7" y="1198.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.08%)</title><rect x="413.6" y="1187.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="416.6" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (881 samples, 35.83%)</title><rect x="414.5" y="1219.0" width="422.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="417.5" y="1230.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (880 samples, 35.79%)</title><rect x="414.5" y="1203.0" width="422.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="417.5" y="1214.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (763 samples, 31.03%)</title><rect x="415.0" y="1187.0" width="366.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="418.0" y="1198.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (724 samples, 29.44%)</title><rect x="417.4" y="1171.0" width="347.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="420.4" y="1182.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (724 samples, 29.44%)</title><rect x="417.4" y="1155.0" width="347.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="420.4" y="1166.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (713 samples, 29.00%)</title><rect x="417.4" y="1139.0" width="342.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="420.4" y="1150.0">RequestHandler1_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (413 samples, 16.80%)</title><rect x="417.4" y="1123.0" width="198.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="420.4" y="1134.0">one/nio/http/HttpSession.s..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.04%)</title><rect x="418.4" y="1107.0" width="0.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="421.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="418.4" y="1091.0" width="0.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="421.4" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="418.4" y="1075.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="421.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (406 samples, 16.51%)</title><rect x="418.8" y="1107.0" width="194.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="421.8" y="1118.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.45%)</title><rect x="418.8" y="1091.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="421.8" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="419.8" y="1075.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="422.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="420.8" y="1075.0" width="0.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="423.8" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.24%)</title><rect x="421.2" y="1075.0" width="2.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="424.2" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (5 samples, 0.20%)</title><rect x="421.2" y="1059.0" width="2.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="424.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="423.6" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="423.6" y="1043.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="426.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.04%)</title><rect x="423.6" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="426.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="423.6" y="1011.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="426.6" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (395 samples, 16.06%)</title><rect x="424.1" y="1091.0" width="189.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="427.1" y="1102.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (395 samples, 16.06%)</title><rect x="424.1" y="1075.0" width="189.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="427.1" y="1086.0">one/nio/net/Session.write</text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="424.1" y="1059.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="427.1" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="424.1" y="1043.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="427.1" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="425.1" y="1059.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="428.1" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.08%)</title><rect x="425.6" y="1059.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="428.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (390 samples, 15.86%)</title><rect x="426.5" y="1059.0" width="187.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="429.5" y="1070.0">one/nio/net/Session$Arra..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (389 samples, 15.82%)</title><rect x="427.0" y="1043.0" width="186.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="430.0" y="1054.0">one/nio/net/NativeSocket..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="429.9" y="1027.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="432.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.45%)</title><rect x="430.8" y="1027.0" width="5.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="433.8" y="1038.0"></text>
</g>
<g>
<title>[unknown] (11 samples, 0.45%)</title><rect x="430.8" y="1011.0" width="5.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="433.8" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (8 samples, 0.33%)</title><rect x="430.8" y="995.0" width="3.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="433.8" y="1006.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="433.2" y="979.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="436.2" y="990.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="433.7" y="979.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="436.7" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="433.7" y="963.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="436.7" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="434.2" y="963.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="437.2" y="974.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="434.7" y="995.0" width="0.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="437.7" y="1006.0"></text>
</g>
<g>
<title>__send (2 samples, 0.08%)</title><rect x="435.2" y="995.0" width="0.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="438.2" y="1006.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.08%)</title><rect x="436.1" y="1027.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="439.1" y="1038.0"></text>
</g>
<g>
<title>__send (368 samples, 14.97%)</title><rect x="437.1" y="1027.0" width="176.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="440.1" y="1038.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (363 samples, 14.76%)</title><rect x="439.5" y="1011.0" width="174.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="442.5" y="1022.0">entry_SYSCALL_64_after..</text>
</g>
<g>
<title>do_syscall_64 (363 samples, 14.76%)</title><rect x="439.5" y="995.0" width="174.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="442.5" y="1006.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.04%)</title><rect x="441.4" y="979.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="444.4" y="990.0"></text>
</g>
<g>
<title>__x64_sys_sendto (358 samples, 14.56%)</title><rect x="441.9" y="979.0" width="171.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="444.9" y="990.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (355 samples, 14.44%)</title><rect x="441.9" y="963.0" width="170.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="444.9" y="974.0">__sys_sendto</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="442.8" y="947.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="445.8" y="958.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.04%)</title><rect x="443.3" y="947.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="446.3" y="958.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="443.8" y="947.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="446.8" y="958.0"></text>
</g>
<g>
<title>sock_sendmsg (348 samples, 14.15%)</title><rect x="444.3" y="947.0" width="167.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="447.3" y="958.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="444.3" y="931.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="447.3" y="942.0"></text>
</g>
<g>
<title>inet_sendmsg (340 samples, 13.83%)</title><rect x="444.8" y="931.0" width="163.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="447.8" y="942.0">inet_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="444.8" y="915.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="447.8" y="926.0"></text>
</g>
<g>
<title>tcp_sendmsg (339 samples, 13.79%)</title><rect x="445.2" y="915.0" width="162.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="448.2" y="926.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="445.7" y="899.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="448.7" y="910.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="446.2" y="899.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="449.2" y="910.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="446.2" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="449.2" y="894.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="446.7" y="899.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="449.7" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (334 samples, 13.58%)</title><rect x="447.2" y="899.0" width="160.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="450.2" y="910.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="448.6" y="883.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="451.6" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="449.1" y="867.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="452.1" y="878.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.08%)</title><rect x="449.6" y="883.0" width="0.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="452.6" y="894.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.12%)</title><rect x="450.5" y="883.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="453.5" y="894.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.08%)</title><rect x="450.5" y="867.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="453.5" y="878.0"></text>
</g>
<g>
<title>iov_iter_advance (1 samples, 0.04%)</title><rect x="451.5" y="867.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.5" y="878.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (16 samples, 0.65%)</title><rect x="452.0" y="883.0" width="7.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="455.0" y="894.0"></text>
</g>
<g>
<title>__alloc_skb (15 samples, 0.61%)</title><rect x="452.4" y="867.0" width="7.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="455.4" y="878.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (4 samples, 0.16%)</title><rect x="452.9" y="851.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="455.9" y="862.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.12%)</title><rect x="452.9" y="835.0" width="1.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.9" y="846.0"></text>
</g>
<g>
<title>should_failslab (1 samples, 0.04%)</title><rect x="454.4" y="835.0" width="0.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="457.4" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (2 samples, 0.08%)</title><rect x="454.8" y="851.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="457.8" y="862.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (2 samples, 0.08%)</title><rect x="454.8" y="835.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="457.8" y="846.0"></text>
</g>
<g>
<title>irq_exit (2 samples, 0.08%)</title><rect x="454.8" y="819.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="457.8" y="830.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.08%)</title><rect x="454.8" y="803.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="457.8" y="814.0"></text>
</g>
<g>
<title>run_rebalance_domains (2 samples, 0.08%)</title><rect x="454.8" y="787.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="457.8" y="798.0"></text>
</g>
<g>
<title>update_blocked_averages (2 samples, 0.08%)</title><rect x="454.8" y="771.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="457.8" y="782.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="454.8" y="755.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="457.8" y="766.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (7 samples, 0.28%)</title><rect x="455.8" y="851.0" width="3.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="458.8" y="862.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.04%)</title><rect x="458.2" y="835.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="461.2" y="846.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="458.7" y="835.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="461.7" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="458.7" y="819.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="461.7" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="458.7" y="803.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="461.7" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="458.7" y="787.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="461.7" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="458.7" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="461.7" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="458.7" y="755.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="461.7" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="458.7" y="739.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="461.7" y="750.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.04%)</title><rect x="459.2" y="851.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="462.2" y="862.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.08%)</title><rect x="459.6" y="883.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="462.6" y="894.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="460.6" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="463.6" y="894.0"></text>
</g>
<g>
<title>tcp_push (297 samples, 12.08%)</title><rect x="461.1" y="883.0" width="142.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="464.1" y="894.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (296 samples, 12.04%)</title><rect x="461.6" y="867.0" width="142.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="464.6" y="878.0">__tcp_push_pending..</text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (2 samples, 0.08%)</title><rect x="461.6" y="851.0" width="0.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="464.6" y="862.0"></text>
</g>
<g>
<title>tcp_write_xmit (294 samples, 11.96%)</title><rect x="462.5" y="851.0" width="141.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="465.5" y="862.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (273 samples, 11.10%)</title><rect x="464.9" y="835.0" width="131.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="467.9" y="846.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__tcp_select_window (2 samples, 0.08%)</title><rect x="466.8" y="819.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="469.8" y="830.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (2 samples, 0.08%)</title><rect x="467.8" y="819.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="470.8" y="830.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="468.8" y="819.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="471.8" y="830.0"></text>
</g>
<g>
<title>ip_queue_xmit (261 samples, 10.61%)</title><rect x="469.2" y="819.0" width="125.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="472.2" y="830.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (258 samples, 10.49%)</title><rect x="469.7" y="803.0" width="123.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="472.7" y="814.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (257 samples, 10.45%)</title><rect x="469.7" y="787.0" width="123.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="472.7" y="798.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.08%)</title><rect x="470.7" y="771.0" width="0.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="473.7" y="782.0"></text>
</g>
<g>
<title>ip_send_check (2 samples, 0.08%)</title><rect x="470.7" y="755.0" width="0.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="473.7" y="766.0"></text>
</g>
<g>
<title>ip_output (253 samples, 10.29%)</title><rect x="471.6" y="771.0" width="121.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="474.6" y="782.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (251 samples, 10.21%)</title><rect x="472.6" y="755.0" width="120.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.6" y="766.0">ip_finish_output</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="474.5" y="739.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.5" y="750.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="474.5" y="723.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="477.5" y="734.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="474.5" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="477.5" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="474.5" y="691.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="477.5" y="702.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="474.5" y="675.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="477.5" y="686.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="474.5" y="659.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="477.5" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="474.5" y="643.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="477.5" y="654.0"></text>
</g>
<g>
<title>ip_finish_output2 (246 samples, 10.00%)</title><rect x="475.0" y="739.0" width="118.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="478.0" y="750.0">ip_finish_outp..</text>
</g>
<g>
<title>__local_bh_enable_ip (210 samples, 8.54%)</title><rect x="477.9" y="723.0" width="100.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="480.9" y="734.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.21 (208 samples, 8.46%)</title><rect x="478.8" y="707.0" width="99.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="481.8" y="718.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (207 samples, 8.42%)</title><rect x="479.3" y="691.0" width="99.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="482.3" y="702.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (204 samples, 8.30%)</title><rect x="479.3" y="675.0" width="97.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="482.3" y="686.0">__softirqen..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="482.2" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="485.2" y="670.0"></text>
</g>
<g>
<title>net_rx_action (196 samples, 7.97%)</title><rect x="482.7" y="659.0" width="94.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="485.7" y="670.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.04%)</title><rect x="483.6" y="643.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="486.6" y="654.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.04%)</title><rect x="484.1" y="643.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.1" y="654.0"></text>
</g>
<g>
<title>process_backlog (192 samples, 7.81%)</title><rect x="484.6" y="643.0" width="92.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="487.6" y="654.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb (185 samples, 7.52%)</title><rect x="488.0" y="627.0" width="88.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="491.0" y="638.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="488.0" y="611.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="491.0" y="622.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (181 samples, 7.36%)</title><rect x="488.4" y="611.0" width="86.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="491.4" y="622.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (7 samples, 0.28%)</title><rect x="488.4" y="595.0" width="3.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="491.4" y="606.0"></text>
</g>
<g>
<title>ip_rcv (173 samples, 7.04%)</title><rect x="491.8" y="595.0" width="83.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="494.8" y="606.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.04%)</title><rect x="491.8" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="494.8" y="590.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="492.3" y="579.0" width="0.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="495.3" y="590.0"></text>
</g>
<g>
<title>ip_rcv_finish (171 samples, 6.95%)</title><rect x="492.7" y="579.0" width="82.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="495.7" y="590.0">ip_rcv_fi..</text>
</g>
<g>
<title>ip_local_deliver (169 samples, 6.87%)</title><rect x="493.2" y="563.0" width="81.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="496.2" y="574.0">ip_local_..</text>
</g>
<g>
<title>ip_local_deliver_finish (167 samples, 6.79%)</title><rect x="493.2" y="547.0" width="80.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="496.2" y="558.0">ip_local_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (166 samples, 6.75%)</title><rect x="493.2" y="531.0" width="79.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="496.2" y="542.0">ip_protoc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.04%)</title><rect x="496.6" y="515.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="499.6" y="526.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="497.1" y="515.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="500.1" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (157 samples, 6.38%)</title><rect x="497.5" y="515.0" width="75.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="500.5" y="526.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (10 samples, 0.41%)</title><rect x="501.9" y="499.0" width="4.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="504.9" y="510.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="506.2" y="483.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="509.2" y="494.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="506.7" y="499.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="509.7" y="510.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.12%)</title><rect x="507.1" y="499.0" width="1.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="510.1" y="510.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (1 samples, 0.04%)</title><rect x="507.1" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.1" y="494.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (2 samples, 0.08%)</title><rect x="507.6" y="483.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="510.6" y="494.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.04%)</title><rect x="508.6" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="511.6" y="510.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.08%)</title><rect x="509.1" y="499.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="512.1" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (130 samples, 5.29%)</title><rect x="510.0" y="499.0" width="62.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="513.0" y="510.0">tcp_v4..</text>
</g>
<g>
<title>tcp_rcv_established (129 samples, 5.25%)</title><rect x="510.0" y="483.0" width="61.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="513.0" y="494.0">tcp_rc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="511.0" y="467.0" width="0.9" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.0" y="478.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="511.0" y="451.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="514.0" y="462.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="511.0" y="435.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="514.0" y="446.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="511.5" y="435.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="514.5" y="446.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="511.5" y="419.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="514.5" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="511.5" y="403.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="514.5" y="414.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.04%)</title><rect x="511.9" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="514.9" y="478.0"></text>
</g>
<g>
<title>tcp_ack (37 samples, 1.50%)</title><rect x="512.4" y="467.0" width="17.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="515.4" y="478.0"></text>
</g>
<g>
<title>bictcp_acked (4 samples, 0.16%)</title><rect x="516.7" y="451.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="519.7" y="462.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.04%)</title><rect x="518.7" y="451.0" width="0.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="521.7" y="462.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (20 samples, 0.81%)</title><rect x="519.1" y="451.0" width="9.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="522.1" y="462.0"></text>
</g>
<g>
<title>__kfree_skb (10 samples, 0.41%)</title><rect x="522.0" y="435.0" width="4.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="525.0" y="446.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.12%)</title><rect x="522.0" y="419.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.0" y="430.0"></text>
</g>
<g>
<title>kmem_cache_free (3 samples, 0.12%)</title><rect x="522.0" y="403.0" width="1.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="525.0" y="414.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.08%)</title><rect x="522.5" y="387.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="525.5" y="398.0"></text>
</g>
<g>
<title>skb_release_all (7 samples, 0.28%)</title><rect x="523.5" y="419.0" width="3.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="526.5" y="430.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.08%)</title><rect x="523.9" y="403.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.9" y="414.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.16%)</title><rect x="524.9" y="403.0" width="1.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="527.9" y="414.0"></text>
</g>
<g>
<title>skb_free_head (4 samples, 0.16%)</title><rect x="524.9" y="387.0" width="1.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="527.9" y="398.0"></text>
</g>
<g>
<title>kfree (4 samples, 0.16%)</title><rect x="524.9" y="371.0" width="1.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="527.9" y="382.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="526.8" y="435.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="529.8" y="446.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="527.3" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="530.3" y="446.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (2 samples, 0.08%)</title><rect x="527.8" y="435.0" width="0.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="530.8" y="446.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="528.7" y="451.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="531.7" y="462.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.08%)</title><rect x="529.2" y="451.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="532.2" y="462.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.08%)</title><rect x="530.2" y="467.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="533.2" y="478.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.04%)</title><rect x="531.1" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="534.1" y="478.0"></text>
</g>
<g>
<title>tcp_data_queue (78 samples, 3.17%)</title><rect x="531.6" y="467.0" width="37.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="534.6" y="478.0">tcp..</text>
</g>
<g>
<title>sock_def_readable (71 samples, 2.89%)</title><rect x="532.6" y="451.0" width="34.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="535.6" y="462.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (68 samples, 2.77%)</title><rect x="534.0" y="435.0" width="32.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="537.0" y="446.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (68 samples, 2.77%)</title><rect x="534.0" y="419.0" width="32.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="537.0" y="430.0">__..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (67 samples, 2.72%)</title><rect x="534.5" y="403.0" width="32.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="537.5" y="414.0">_r..</text>
</g>
<g>
<title>tcp_event_data_recv (4 samples, 0.16%)</title><rect x="566.6" y="451.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="569.6" y="462.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="568.6" y="451.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="571.6" y="462.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="569.0" y="467.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="572.0" y="478.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="569.0" y="451.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="572.0" y="462.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.08%)</title><rect x="569.5" y="467.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="572.5" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="570.5" y="467.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="573.5" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="571.0" y="467.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="574.0" y="478.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="571.4" y="467.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="574.4" y="478.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.04%)</title><rect x="571.9" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="574.9" y="494.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="572.4" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="575.4" y="510.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="572.9" y="531.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="575.9" y="542.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.08%)</title><rect x="573.4" y="547.0" width="0.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="576.4" y="558.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.04%)</title><rect x="574.3" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="577.3" y="574.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="574.8" y="595.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="577.8" y="606.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.12%)</title><rect x="575.3" y="611.0" width="1.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="578.3" y="622.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="576.7" y="659.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="579.7" y="670.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="576.7" y="643.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="579.7" y="654.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="576.7" y="627.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="579.7" y="638.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.12%)</title><rect x="577.2" y="675.0" width="1.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="580.2" y="686.0"></text>
</g>
<g>
<title>dev_queue_xmit (30 samples, 1.22%)</title><rect x="578.6" y="723.0" width="14.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.6" y="734.0"></text>
</g>
<g>
<title>__dev_queue_xmit (30 samples, 1.22%)</title><rect x="578.6" y="707.0" width="14.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="581.6" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="583.0" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="586.0" y="702.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (14 samples, 0.57%)</title><rect x="583.4" y="691.0" width="6.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="586.4" y="702.0"></text>
</g>
<g>
<title>loopback_xmit (10 samples, 0.41%)</title><rect x="584.4" y="675.0" width="4.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="587.4" y="686.0"></text>
</g>
<g>
<title>eth_type_trans (6 samples, 0.24%)</title><rect x="585.8" y="659.0" width="2.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="588.8" y="670.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.04%)</title><rect x="588.7" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="591.7" y="670.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="589.2" y="675.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="592.2" y="686.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="589.7" y="675.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="592.7" y="686.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="590.2" y="691.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="593.2" y="702.0"></text>
</g>
<g>
<title>validate_xmit_skb (4 samples, 0.16%)</title><rect x="590.6" y="691.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="593.6" y="702.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.08%)</title><rect x="591.6" y="675.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="594.6" y="686.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="592.6" y="691.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="595.6" y="702.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="593.0" y="787.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="596.0" y="798.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="593.5" y="803.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="596.5" y="814.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="594.0" y="803.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="597.0" y="814.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="594.5" y="819.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="597.5" y="830.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="594.5" y="803.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="597.5" y="814.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="594.5" y="787.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="597.5" y="798.0"></text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.04%)</title><rect x="595.0" y="819.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="598.0" y="830.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="595.4" y="819.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="598.4" y="830.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="595.4" y="803.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="598.4" y="814.0"></text>
</g>
<g>
<title>ktime_get (4 samples, 0.16%)</title><rect x="595.9" y="835.0" width="1.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="598.9" y="846.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="597.4" y="819.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="600.4" y="830.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.08%)</title><rect x="597.8" y="835.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="600.8" y="846.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="598.8" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="601.8" y="846.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (6 samples, 0.24%)</title><rect x="599.3" y="835.0" width="2.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="602.3" y="846.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (2 samples, 0.08%)</title><rect x="599.8" y="819.0" width="0.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="602.8" y="830.0"></text>
</g>
<g>
<title>rb_insert_color (1 samples, 0.04%)</title><rect x="600.2" y="803.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="603.2" y="814.0"></text>
</g>
<g>
<title>tcp_rearm_rto (3 samples, 0.12%)</title><rect x="600.7" y="819.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="603.7" y="830.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.12%)</title><rect x="600.7" y="803.0" width="1.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="603.7" y="814.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.12%)</title><rect x="600.7" y="787.0" width="1.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="603.7" y="798.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="600.7" y="771.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="603.7" y="782.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.04%)</title><rect x="601.7" y="771.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="604.7" y="782.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.08%)</title><rect x="602.2" y="835.0" width="0.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="605.2" y="846.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="602.6" y="819.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="605.6" y="830.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="602.6" y="803.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="605.6" y="814.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="603.1" y="835.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="606.1" y="846.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.24%)</title><rect x="603.6" y="883.0" width="2.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="606.6" y="894.0"></text>
</g>
<g>
<title>ipv4_mtu (4 samples, 0.16%)</title><rect x="603.6" y="867.0" width="1.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="606.6" y="878.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="605.5" y="867.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="608.5" y="878.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="606.0" y="851.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="609.0" y="862.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (2 samples, 0.08%)</title><rect x="606.5" y="883.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="609.5" y="894.0"></text>
</g>
<g>
<title>tcp_tx_timestamp (1 samples, 0.04%)</title><rect x="607.4" y="899.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="610.4" y="910.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.20%)</title><rect x="607.9" y="931.0" width="2.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="610.9" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="608.4" y="915.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="611.4" y="926.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (3 samples, 0.12%)</title><rect x="608.9" y="915.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="611.9" y="926.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.12%)</title><rect x="608.9" y="899.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="611.9" y="910.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.12%)</title><rect x="608.9" y="883.0" width="1.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="611.9" y="894.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 0.08%)</title><rect x="609.4" y="867.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="612.4" y="878.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.08%)</title><rect x="609.4" y="851.0" width="0.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="612.4" y="862.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.08%)</title><rect x="610.3" y="931.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="613.3" y="942.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.08%)</title><rect x="611.3" y="947.0" width="0.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="614.3" y="958.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.08%)</title><rect x="611.3" y="931.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="614.3" y="942.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="611.3" y="915.0" width="0.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="614.3" y="926.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="611.8" y="899.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="614.8" y="910.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="612.2" y="963.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="615.2" y="974.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="612.7" y="963.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="615.7" y="974.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="613.2" y="963.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="616.2" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.16%)</title><rect x="613.7" y="1107.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="616.7" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="615.1" y="1091.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (10 samples, 0.41%)</title><rect x="615.6" y="1123.0" width="4.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="618.6" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="615.6" y="1107.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="618.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="615.6" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="618.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (4 samples, 0.16%)</title><rect x="616.1" y="1107.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="619.1" y="1118.0"></text>
</g>
<g>
<title>jbyte_arraycopy (3 samples, 0.12%)</title><rect x="616.1" y="1091.0" width="1.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="619.1" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="617.5" y="1091.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="620.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.16%)</title><rect x="618.0" y="1107.0" width="1.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="621.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="618.0" y="1091.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="621.0" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="618.0" y="1075.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="621.0" y="1086.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.12%)</title><rect x="618.5" y="1091.0" width="1.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="621.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="618.5" y="1075.0" width="0.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="621.5" y="1086.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="619.4" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="622.4" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="619.9" y="1107.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="622.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (290 samples, 11.79%)</title><rect x="620.4" y="1123.0" width="139.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="623.4" y="1134.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (278 samples, 11.31%)</title><rect x="620.9" y="1107.0" width="133.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="623.9" y="1118.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="622.3" y="1091.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.3" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (268 samples, 10.90%)</title><rect x="622.8" y="1091.0" width="128.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="625.8" y="1102.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="622.8" y="1075.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="625.8" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="622.8" y="1059.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="625.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="622.8" y="1043.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="622.8" y="1027.0" width="1.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="625.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="622.8" y="1011.0" width="1.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="625.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (3 samples, 0.12%)</title><rect x="622.8" y="995.0" width="1.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="625.8" y="1006.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="623.8" y="979.0" width="0.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="626.8" y="990.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.04%)</title><rect x="623.8" y="963.0" width="0.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="626.8" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (258 samples, 10.49%)</title><rect x="624.2" y="1075.0" width="123.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="627.2" y="1086.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (258 samples, 10.49%)</title><rect x="624.2" y="1059.0" width="123.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="627.2" y="1070.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="625.2" y="1043.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="628.2" y="1054.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (240 samples, 9.76%)</title><rect x="625.7" y="1043.0" width="115.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="628.7" y="1054.0">Java_org_rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (7 samples, 0.28%)</title><rect x="626.6" y="1027.0" width="3.4" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="629.6" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="630.0" y="1027.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="633.0" y="1038.0"></text>
</g>
<g>
<title>__libc_free (3 samples, 0.12%)</title><rect x="630.5" y="1027.0" width="1.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="633.5" y="1038.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.20%)</title><rect x="631.9" y="1027.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="634.9" y="1038.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="634.3" y="1027.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="637.3" y="1038.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="635.3" y="1027.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="638.3" y="1038.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="636.2" y="1027.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="639.2" y="1038.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.04%)</title><rect x="636.7" y="1027.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="639.7" y="1038.0"></text>
</g>
<g>
<title>operator new(unsigned long) (2 samples, 0.08%)</title><rect x="637.2" y="1027.0" width="0.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="640.2" y="1038.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="638.1" y="1027.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="641.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="638.6" y="1027.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="641.6" y="1038.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (3 samples, 0.12%)</title><rect x="639.1" y="1027.0" width="1.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="642.1" y="1038.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (200 samples, 8.13%)</title><rect x="640.5" y="1027.0" width="96.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="643.5" y="1038.0">rocksdb_get..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="642.5" y="1011.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="645.5" y="1022.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="642.9" y="1011.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="645.9" y="1022.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.12%)</title><rect x="643.4" y="1011.0" width="1.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="646.4" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (5 samples, 0.20%)</title><rect x="644.9" y="1011.0" width="2.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="647.9" y="1022.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="645.8" y="995.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="648.8" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (2 samples, 0.08%)</title><rect x="646.3" y="995.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="649.3" y="1006.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="647.3" y="1011.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="650.3" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="648.2" y="1011.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="651.2" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (147 samples, 5.98%)</title><rect x="648.7" y="1011.0" width="70.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="651.7" y="1022.0">rocksdb:..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (5 samples, 0.20%)</title><rect x="648.7" y="995.0" width="2.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="651.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="651.1" y="995.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="654.1" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (140 samples, 5.69%)</title><rect x="651.6" y="995.0" width="67.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="654.6" y="1006.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (138 samples, 5.61%)</title><rect x="652.1" y="979.0" width="66.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="655.1" y="990.0">rocksdb..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="652.1" y="963.0" width="0.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="655.1" y="974.0"></text>
</g>
<g>
<title>_init (4 samples, 0.16%)</title><rect x="653.0" y="963.0" width="1.9" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="656.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (2 samples, 0.08%)</title><rect x="654.9" y="963.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="657.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (6 samples, 0.24%)</title><rect x="655.9" y="963.0" width="2.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="658.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (116 samples, 4.72%)</title><rect x="658.8" y="963.0" width="55.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="661.8" y="974.0">rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (2 samples, 0.08%)</title><rect x="663.1" y="947.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="666.1" y="958.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.16%)</title><rect x="664.1" y="947.0" width="1.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="667.1" y="958.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (1 samples, 0.04%)</title><rect x="666.0" y="947.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="669.0" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.20%)</title><rect x="666.5" y="947.0" width="2.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="669.5" y="958.0"></text>
</g>
<g>
<title>_init (3 samples, 0.12%)</title><rect x="668.9" y="947.0" width="1.4" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="671.9" y="958.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (10 samples, 0.41%)</title><rect x="670.3" y="947.0" width="4.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="673.3" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.08%)</title><rect x="671.3" y="931.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="674.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.12%)</title><rect x="672.2" y="931.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="675.2" y="942.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="672.7" y="915.0" width="0.5" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="675.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="673.2" y="915.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="676.2" y="926.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (3 samples, 0.12%)</title><rect x="673.7" y="931.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="676.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (3 samples, 0.12%)</title><rect x="673.7" y="915.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="676.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="675.1" y="947.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="678.1" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.12%)</title><rect x="675.6" y="947.0" width="1.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="678.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="675.6" y="931.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="678.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (2 samples, 0.08%)</title><rect x="675.6" y="915.0" width="0.9" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="678.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="676.5" y="931.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="679.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (3 samples, 0.12%)</title><rect x="677.0" y="947.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="680.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (69 samples, 2.81%)</title><rect x="678.5" y="947.0" width="33.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="681.5" y="958.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (63 samples, 2.56%)</title><rect x="679.4" y="931.0" width="30.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="682.4" y="942.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (5 samples, 0.20%)</title><rect x="680.9" y="915.0" width="2.4" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="683.9" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="683.3" y="915.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="686.3" y="926.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (48 samples, 1.95%)</title><rect x="683.7" y="915.0" width="23.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="686.7" y="926.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (3 samples, 0.12%)</title><rect x="696.2" y="899.0" width="1.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="699.2" y="910.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.12%)</title><rect x="697.7" y="899.0" width="1.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="700.7" y="910.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="699.1" y="899.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="702.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (14 samples, 0.57%)</title><rect x="700.1" y="899.0" width="6.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="703.1" y="910.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (1 samples, 0.04%)</title><rect x="703.9" y="883.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="706.9" y="894.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="704.4" y="883.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="707.4" y="894.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (4 samples, 0.16%)</title><rect x="704.9" y="883.0" width="1.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="707.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (2 samples, 0.08%)</title><rect x="706.8" y="915.0" width="0.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="709.8" y="926.0"></text>
</g>
<g>
<title>std::string::_M_replace_safe(unsigned long, unsigned long, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="707.7" y="915.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="710.7" y="926.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (3 samples, 0.12%)</title><rect x="708.2" y="915.0" width="1.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="711.2" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="709.7" y="931.0" width="0.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="712.7" y="942.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.04%)</title><rect x="710.1" y="931.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="713.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (2 samples, 0.08%)</title><rect x="710.6" y="931.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="713.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.08%)</title><rect x="711.6" y="947.0" width="0.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="714.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (4 samples, 0.16%)</title><rect x="712.5" y="947.0" width="1.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="715.5" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="714.4" y="963.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="717.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="714.9" y="963.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="717.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.08%)</title><rect x="715.4" y="963.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="718.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.04%)</title><rect x="716.4" y="963.0" width="0.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="719.4" y="974.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.08%)</title><rect x="716.8" y="963.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="719.8" y="974.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="717.8" y="963.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="720.8" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="718.3" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="721.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (1 samples, 0.04%)</title><rect x="718.8" y="995.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="721.8" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (2 samples, 0.08%)</title><rect x="719.2" y="1011.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="722.2" y="1022.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (32 samples, 1.30%)</title><rect x="720.2" y="1011.0" width="15.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="723.2" y="1022.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="720.2" y="995.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="723.2" y="1006.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (3 samples, 0.12%)</title><rect x="720.7" y="995.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="723.7" y="1006.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.08%)</title><rect x="722.1" y="995.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="725.1" y="1006.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="723.1" y="995.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="726.1" y="1006.0"></text>
</g>
<g>
<title>jni_NewByteArray (22 samples, 0.89%)</title><rect x="723.6" y="995.0" width="10.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="726.6" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.16%)</title><rect x="724.0" y="979.0" width="2.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="727.0" y="990.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="726.0" y="979.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="729.0" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (16 samples, 0.65%)</title><rect x="726.4" y="979.0" width="7.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="729.4" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (10 samples, 0.41%)</title><rect x="727.4" y="963.0" width="4.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="730.4" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (8 samples, 0.33%)</title><rect x="727.4" y="947.0" width="3.8" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="730.4" y="958.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="728.4" y="931.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="731.4" y="942.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.12%)</title><rect x="728.8" y="931.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="731.8" y="942.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.08%)</title><rect x="730.3" y="931.0" width="0.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="733.3" y="942.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="731.2" y="947.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="734.2" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="731.7" y="947.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="734.7" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 0.16%)</title><rect x="732.2" y="963.0" width="1.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="735.2" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.12%)</title><rect x="734.1" y="995.0" width="1.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="737.1" y="1006.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="734.6" y="979.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="737.6" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="735.1" y="979.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="738.1" y="990.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="735.6" y="1011.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="738.6" y="1022.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="736.0" y="1011.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="739.0" y="1022.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (7 samples, 0.28%)</title><rect x="736.5" y="1027.0" width="3.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="739.5" y="1038.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (2 samples, 0.08%)</title><rect x="739.9" y="1027.0" width="0.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="742.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="740.8" y="1043.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="743.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="740.8" y="1027.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="743.8" y="1038.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="740.8" y="1011.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="743.8" y="1022.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="741.3" y="1043.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="744.3" y="1054.0"></text>
</g>
<g>
<title>__malloc (4 samples, 0.16%)</title><rect x="741.8" y="1043.0" width="1.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="744.8" y="1054.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.08%)</title><rect x="743.7" y="1043.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="746.7" y="1054.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (2 samples, 0.08%)</title><rect x="744.7" y="1043.0" width="0.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="747.7" y="1054.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="745.6" y="1043.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="748.6" y="1054.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (4 samples, 0.16%)</title><rect x="746.1" y="1043.0" width="1.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="749.1" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (7 samples, 0.28%)</title><rect x="748.0" y="1075.0" width="3.4" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="751.0" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (2 samples, 0.08%)</title><rect x="750.4" y="1059.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="753.4" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="750.9" y="1043.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="753.9" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="750.9" y="1027.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="753.9" y="1038.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="750.9" y="1011.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="753.9" y="1022.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (6 samples, 0.24%)</title><rect x="751.4" y="1091.0" width="2.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="754.4" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (4 samples, 0.16%)</title><rect x="752.4" y="1075.0" width="1.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="755.4" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="752.8" y="1059.0" width="1.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="755.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="752.8" y="1043.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="755.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="752.8" y="1027.0" width="1.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="755.8" y="1038.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.08%)</title><rect x="753.3" y="1011.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="756.3" y="1022.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.08%)</title><rect x="753.3" y="995.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="756.3" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (11 samples, 0.45%)</title><rect x="754.3" y="1107.0" width="5.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.3" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.28%)</title><rect x="754.8" y="1091.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.8" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (7 samples, 0.28%)</title><rect x="754.8" y="1075.0" width="3.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="757.8" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (5 samples, 0.20%)</title><rect x="755.7" y="1059.0" width="2.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="758.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (5 samples, 0.20%)</title><rect x="755.7" y="1043.0" width="2.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="758.7" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="758.1" y="1091.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="761.1" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (2 samples, 0.08%)</title><rect x="758.6" y="1091.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="761.6" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (2 samples, 0.08%)</title><rect x="758.6" y="1075.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="761.6" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.08%)</title><rect x="758.6" y="1059.0" width="1.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="761.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (4 samples, 0.16%)</title><rect x="759.6" y="1139.0" width="1.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="762.6" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.04%)</title><rect x="761.0" y="1123.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="764.0" y="1134.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (5 samples, 0.20%)</title><rect x="761.5" y="1139.0" width="2.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="764.5" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (5 samples, 0.20%)</title><rect x="761.5" y="1123.0" width="2.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="764.5" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.16%)</title><rect x="761.5" y="1107.0" width="1.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="764.5" y="1118.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="762.4" y="1091.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="765.4" y="1102.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="763.4" y="1107.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="766.4" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="763.4" y="1091.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="766.4" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (2 samples, 0.08%)</title><rect x="763.9" y="1139.0" width="0.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="766.9" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.08%)</title><rect x="763.9" y="1123.0" width="0.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="766.9" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="763.9" y="1107.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="766.9" y="1118.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (1 samples, 0.04%)</title><rect x="764.4" y="1107.0" width="0.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="767.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (21 samples, 0.85%)</title><rect x="764.8" y="1171.0" width="10.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="767.8" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 0.41%)</title><rect x="765.3" y="1155.0" width="4.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="768.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="767.7" y="1139.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="770.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="768.2" y="1123.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="771.2" y="1134.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.12%)</title><rect x="768.7" y="1139.0" width="1.4" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="771.7" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 0.41%)</title><rect x="770.1" y="1155.0" width="4.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="773.1" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (9 samples, 0.37%)</title><rect x="770.6" y="1139.0" width="4.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="773.6" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="774.4" y="1123.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="777.4" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="774.4" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="777.4" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.04%)</title><rect x="774.9" y="1171.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="777.9" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (2 samples, 0.08%)</title><rect x="775.4" y="1171.0" width="1.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.4" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="775.9" y="1155.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="778.9" y="1166.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.16%)</title><rect x="776.4" y="1171.0" width="1.9" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="779.4" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.08%)</title><rect x="777.3" y="1155.0" width="1.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="780.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.08%)</title><rect x="777.3" y="1139.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="780.3" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="777.8" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="780.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="777.8" y="1107.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="780.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="777.8" y="1091.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="780.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.24%)</title><rect x="778.3" y="1171.0" width="2.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.24%)</title><rect x="778.3" y="1155.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="781.3" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.20%)</title><rect x="778.8" y="1139.0" width="2.4" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="781.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="778.8" y="1123.0" width="0.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="781.8" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="778.8" y="1107.0" width="0.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="781.8" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (4 samples, 0.16%)</title><rect x="779.2" y="1123.0" width="2.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="782.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (4 samples, 0.16%)</title><rect x="779.2" y="1107.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="782.2" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (2 samples, 0.08%)</title><rect x="780.2" y="1091.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="783.2" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (116 samples, 4.72%)</title><rect x="781.2" y="1187.0" width="55.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="784.2" y="1198.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (116 samples, 4.72%)</title><rect x="781.2" y="1171.0" width="55.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="784.2" y="1182.0">one/n..</text>
</g>
<g>
<title>[unknown] (32 samples, 1.30%)</title><rect x="784.5" y="1155.0" width="15.4" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="787.5" y="1166.0"></text>
</g>
<g>
<title>/snap/intellij-idea-ultimate/173/jbr/lib/server/libjvm.so (1 samples, 0.04%)</title><rect x="784.5" y="1139.0" width="0.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="787.5" y="1150.0"></text>
</g>
<g>
<title>vsnprintf (1 samples, 0.04%)</title><rect x="784.5" y="1123.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="787.5" y="1134.0"></text>
</g>
<g>
<title>vfprintf (1 samples, 0.04%)</title><rect x="784.5" y="1107.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="787.5" y="1118.0"></text>
</g>
<g>
<title>[unknown] (31 samples, 1.26%)</title><rect x="785.0" y="1139.0" width="14.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="788.0" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (20 samples, 0.81%)</title><rect x="785.0" y="1123.0" width="9.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="788.0" y="1134.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (3 samples, 0.12%)</title><rect x="785.5" y="1107.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="788.5" y="1118.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (3 samples, 0.12%)</title><rect x="786.9" y="1107.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="789.9" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="788.3" y="1107.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="791.3" y="1118.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.08%)</title><rect x="788.8" y="1107.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="791.8" y="1118.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.33%)</title><rect x="789.8" y="1107.0" width="3.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="792.8" y="1118.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="790.7" y="1091.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="793.7" y="1102.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="791.2" y="1091.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="794.2" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.08%)</title><rect x="791.7" y="1091.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="794.7" y="1102.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.08%)</title><rect x="792.7" y="1091.0" width="0.9" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="795.7" y="1102.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.08%)</title><rect x="793.6" y="1107.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="796.6" y="1118.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (3 samples, 0.12%)</title><rect x="794.6" y="1123.0" width="1.4" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="797.6" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.12%)</title><rect x="796.0" y="1123.0" width="1.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="799.0" y="1134.0"></text>
</g>
<g>
<title>recv (5 samples, 0.20%)</title><rect x="797.5" y="1123.0" width="2.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="800.5" y="1134.0"></text>
</g>
<g>
<title>recv (77 samples, 3.13%)</title><rect x="799.9" y="1155.0" width="36.9" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="802.9" y="1166.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (60 samples, 2.44%)</title><rect x="808.0" y="1139.0" width="28.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="811.0" y="1150.0">en..</text>
</g>
<g>
<title>do_syscall_64 (60 samples, 2.44%)</title><rect x="808.0" y="1123.0" width="28.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="811.0" y="1134.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (56 samples, 2.28%)</title><rect x="809.9" y="1107.0" width="26.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="812.9" y="1118.0">_..</text>
</g>
<g>
<title>__sys_recvfrom (56 samples, 2.28%)</title><rect x="809.9" y="1091.0" width="26.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="812.9" y="1102.0">_..</text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="810.4" y="1075.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="813.4" y="1086.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="810.4" y="1059.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="813.4" y="1070.0"></text>
</g>
<g>
<title>inet_recvmsg (1 samples, 0.04%)</title><rect x="810.9" y="1075.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="813.9" y="1086.0"></text>
</g>
<g>
<title>sock_recvmsg (50 samples, 2.03%)</title><rect x="811.4" y="1075.0" width="24.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="814.4" y="1086.0">s..</text>
</g>
<g>
<title>inet_recvmsg (36 samples, 1.46%)</title><rect x="811.9" y="1059.0" width="17.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="814.9" y="1070.0"></text>
</g>
<g>
<title>tcp_recvmsg (35 samples, 1.42%)</title><rect x="812.3" y="1043.0" width="16.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.3" y="1054.0"></text>
</g>
<g>
<title>__kfree_skb (7 samples, 0.28%)</title><rect x="818.1" y="1027.0" width="3.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="821.1" y="1038.0"></text>
</g>
<g>
<title>kfree_skbmem (3 samples, 0.12%)</title><rect x="818.1" y="1011.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="821.1" y="1022.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.12%)</title><rect x="819.5" y="1011.0" width="1.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="822.5" y="1022.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="819.5" y="995.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="822.5" y="1006.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="820.0" y="995.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="823.0" y="1006.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.04%)</title><rect x="820.5" y="995.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="823.5" y="1006.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="821.0" y="1011.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="824.0" y="1022.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="821.5" y="1027.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="824.5" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (2 samples, 0.08%)</title><rect x="821.9" y="1027.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="824.9" y="1038.0"></text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.08%)</title><rect x="822.9" y="1027.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="825.9" y="1038.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.08%)</title><rect x="822.9" y="1011.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="825.9" y="1022.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (9 samples, 0.37%)</title><rect x="823.9" y="1027.0" width="4.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="826.9" y="1038.0"></text>
</g>
<g>
<title>__skb_datagram_iter (8 samples, 0.33%)</title><rect x="823.9" y="1011.0" width="3.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="826.9" y="1022.0"></text>
</g>
<g>
<title>simple_copy_to_iter (8 samples, 0.33%)</title><rect x="823.9" y="995.0" width="3.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="826.9" y="1006.0"></text>
</g>
<g>
<title>__check_object_size (2 samples, 0.08%)</title><rect x="823.9" y="979.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="826.9" y="990.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="824.3" y="963.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="827.3" y="974.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="824.8" y="979.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="827.8" y="990.0"></text>
</g>
<g>
<title>_copy_to_iter (5 samples, 0.20%)</title><rect x="825.3" y="979.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="828.3" y="990.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (5 samples, 0.20%)</title><rect x="825.3" y="963.0" width="2.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="828.3" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="827.2" y="947.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="830.2" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="827.2" y="931.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="830.2" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="827.2" y="915.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="830.2" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="827.2" y="899.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="830.2" y="910.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="827.2" y="883.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="830.2" y="894.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="827.2" y="867.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="830.2" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="827.2" y="851.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="830.2" y="862.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="827.7" y="1011.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="830.7" y="1022.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="828.2" y="1027.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="831.2" y="1038.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="828.2" y="1011.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="831.2" y="1022.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="828.7" y="1027.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="831.7" y="1038.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.49%)</title><rect x="829.1" y="1059.0" width="5.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="832.1" y="1070.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (12 samples, 0.49%)</title><rect x="829.1" y="1043.0" width="5.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="832.1" y="1054.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (12 samples, 0.49%)</title><rect x="829.1" y="1027.0" width="5.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="832.1" y="1038.0"></text>
</g>
<g>
<title>aa_sk_perm (12 samples, 0.49%)</title><rect x="829.1" y="1011.0" width="5.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="832.1" y="1022.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (6 samples, 0.24%)</title><rect x="832.0" y="995.0" width="2.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="835.0" y="1006.0"></text>
</g>
<g>
<title>aa_profile_af_perm (5 samples, 0.20%)</title><rect x="832.5" y="979.0" width="2.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="835.5" y="990.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.04%)</title><rect x="834.9" y="1059.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="837.9" y="1070.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.12%)</title><rect x="835.4" y="1075.0" width="1.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="838.4" y="1086.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="835.4" y="1059.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="838.4" y="1070.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="835.4" y="1043.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="838.4" y="1054.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="835.4" y="1027.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="838.4" y="1038.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.08%)</title><rect x="835.9" y="1059.0" width="0.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="838.9" y="1070.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="836.8" y="1203.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="839.8" y="1214.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="836.8" y="1187.0" width="0.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="839.8" y="1198.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="836.8" y="1171.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="839.8" y="1182.0"></text>
</g>
<g>
<title>[NIO Selector #7 tid=32061] (667 samples, 27.12%)</title><rect x="837.3" y="1251.0" width="320.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="840.3" y="1262.0">[NIO Selector #7 tid=32061]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="837.3" y="1235.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="840.3" y="1246.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="837.3" y="1219.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="840.3" y="1230.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="837.3" y="1203.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="840.3" y="1214.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="837.3" y="1187.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="840.3" y="1198.0"></text>
</g>
<g>
<title>JfrAllocationTracer::JfrAllocationTracer(HeapWord*, unsigned long, Thread*) (1 samples, 0.04%)</title><rect x="837.3" y="1171.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="840.3" y="1182.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.08%)</title><rect x="837.8" y="1235.0" width="0.9" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="840.8" y="1246.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.08%)</title><rect x="837.8" y="1219.0" width="0.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="840.8" y="1230.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.08%)</title><rect x="837.8" y="1203.0" width="0.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="840.8" y="1214.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (664 samples, 27.00%)</title><rect x="838.7" y="1235.0" width="318.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="841.7" y="1246.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.12%)</title><rect x="839.7" y="1219.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="842.7" y="1230.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (3 samples, 0.12%)</title><rect x="839.7" y="1203.0" width="1.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="842.7" y="1214.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (143 samples, 5.82%)</title><rect x="841.1" y="1219.0" width="68.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="844.1" y="1230.0">one/nio..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (143 samples, 5.82%)</title><rect x="841.1" y="1203.0" width="68.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="844.1" y="1214.0">one/nio..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (5 samples, 0.20%)</title><rect x="843.5" y="1187.0" width="2.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="846.5" y="1198.0"></text>
</g>
<g>
<title>[unknown] (128 samples, 5.21%)</title><rect x="845.9" y="1187.0" width="61.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="848.9" y="1198.0">[unkno..</text>
</g>
<g>
<title>Klass::is_klass() const volatile (5 samples, 0.20%)</title><rect x="845.9" y="1171.0" width="2.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="848.9" y="1182.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.20%)</title><rect x="845.9" y="1155.0" width="2.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="848.9" y="1166.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.20%)</title><rect x="845.9" y="1139.0" width="2.4" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="848.9" y="1150.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (3 samples, 0.12%)</title><rect x="845.9" y="1123.0" width="1.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="848.9" y="1134.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.08%)</title><rect x="847.4" y="1123.0" width="0.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="850.4" y="1134.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.08%)</title><rect x="847.4" y="1107.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="850.4" y="1118.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="848.3" y="1171.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="851.3" y="1182.0"></text>
</g>
<g>
<title>epoll_wait (122 samples, 4.96%)</title><rect x="848.8" y="1171.0" width="58.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="851.8" y="1182.0">epoll_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (87 samples, 3.54%)</title><rect x="865.6" y="1155.0" width="41.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="868.6" y="1166.0">ent..</text>
</g>
<g>
<title>do_syscall_64 (87 samples, 3.54%)</title><rect x="865.6" y="1139.0" width="41.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="868.6" y="1150.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (87 samples, 3.54%)</title><rect x="865.6" y="1123.0" width="41.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="868.6" y="1134.0">__x..</text>
</g>
<g>
<title>do_epoll_wait (84 samples, 3.42%)</title><rect x="865.6" y="1107.0" width="40.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="868.6" y="1118.0">do_..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="868.0" y="1091.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="871.0" y="1102.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="868.0" y="1075.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="871.0" y="1086.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="868.0" y="1059.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="871.0" y="1070.0"></text>
</g>
<g>
<title>ep_poll (74 samples, 3.01%)</title><rect x="868.5" y="1091.0" width="35.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="871.5" y="1102.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (35 samples, 1.42%)</title><rect x="869.4" y="1075.0" width="16.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="872.4" y="1086.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.69%)</title><rect x="877.6" y="1059.0" width="8.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="880.6" y="1070.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (12 samples, 0.49%)</title><rect x="879.5" y="1043.0" width="5.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="882.5" y="1054.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rcx (1 samples, 0.04%)</title><rect x="881.0" y="1027.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="884.0" y="1038.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="881.0" y="1011.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="884.0" y="1022.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="881.0" y="995.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="884.0" y="1006.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="881.0" y="979.0" width="0.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="884.0" y="990.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="881.0" y="963.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.0" y="974.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="881.0" y="947.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="884.0" y="958.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="881.0" y="931.0" width="0.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="884.0" y="942.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="881.0" y="915.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="884.0" y="926.0"></text>
</g>
<g>
<title>sock_poll (7 samples, 0.28%)</title><rect x="881.4" y="1027.0" width="3.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="884.4" y="1038.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.08%)</title><rect x="881.9" y="1011.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="884.9" y="1022.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (4 samples, 0.16%)</title><rect x="882.9" y="1011.0" width="1.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="885.9" y="1022.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="884.8" y="1027.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="887.8" y="1038.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="885.3" y="1043.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="888.3" y="1054.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="885.8" y="1059.0" width="0.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="888.8" y="1070.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.04%)</title><rect x="886.2" y="1075.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="889.2" y="1086.0"></text>
</g>
<g>
<title>mutex_unlock (3 samples, 0.12%)</title><rect x="886.7" y="1075.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="889.7" y="1086.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (33 samples, 1.34%)</title><rect x="888.2" y="1075.0" width="15.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="891.2" y="1086.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (33 samples, 1.34%)</title><rect x="888.2" y="1059.0" width="15.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="891.2" y="1070.0"></text>
</g>
<g>
<title>schedule (31 samples, 1.26%)</title><rect x="889.1" y="1043.0" width="14.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="892.1" y="1054.0"></text>
</g>
<g>
<title>__schedule (31 samples, 1.26%)</title><rect x="889.1" y="1027.0" width="14.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="892.1" y="1038.0"></text>
</g>
<g>
<title>finish_task_switch (31 samples, 1.26%)</title><rect x="889.1" y="1011.0" width="14.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="892.1" y="1022.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="903.5" y="995.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="906.5" y="1006.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="903.5" y="979.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="906.5" y="990.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="903.5" y="963.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="906.5" y="974.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="903.5" y="947.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="906.5" y="958.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="903.5" y="931.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="906.5" y="942.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="903.5" y="915.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="906.5" y="926.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="903.5" y="899.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="906.5" y="910.0"></text>
</g>
<g>
<title>fput (4 samples, 0.16%)</title><rect x="904.0" y="1091.0" width="1.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="907.0" y="1102.0"></text>
</g>
<g>
<title>fput (3 samples, 0.12%)</title><rect x="905.9" y="1107.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="908.9" y="1118.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="907.4" y="1187.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="910.4" y="1198.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.12%)</title><rect x="908.3" y="1187.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="911.3" y="1198.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (516 samples, 20.98%)</title><rect x="909.8" y="1219.0" width="247.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="912.8" y="1230.0">one/nio/net/Session.process</text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="910.2" y="1203.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="913.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="910.2" y="1187.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="913.2" y="1198.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="910.2" y="1171.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="913.2" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (514 samples, 20.90%)</title><rect x="910.7" y="1203.0" width="246.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="913.7" y="1214.0">one/nio/http/HttpSession.processR..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (460 samples, 18.71%)</title><rect x="911.2" y="1187.0" width="220.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="914.2" y="1198.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (440 samples, 17.89%)</title><rect x="913.1" y="1171.0" width="211.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="916.1" y="1182.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (439 samples, 17.85%)</title><rect x="913.6" y="1155.0" width="210.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="916.6" y="1166.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler1_entity.handleRequest (429 samples, 17.45%)</title><rect x="913.6" y="1139.0" width="205.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="916.6" y="1150.0">RequestHandler1_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (228 samples, 9.27%)</title><rect x="913.6" y="1123.0" width="109.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="916.6" y="1134.0">one/nio/http/..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (3 samples, 0.12%)</title><rect x="914.6" y="1107.0" width="1.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="917.6" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.12%)</title><rect x="914.6" y="1091.0" width="1.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="917.6" y="1102.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (3 samples, 0.12%)</title><rect x="914.6" y="1075.0" width="1.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="917.6" y="1086.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="915.5" y="1059.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="918.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (222 samples, 9.03%)</title><rect x="916.0" y="1107.0" width="106.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="919.0" y="1118.0">one/nio/http/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (7 samples, 0.28%)</title><rect x="916.0" y="1091.0" width="3.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="919.0" y="1102.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="916.0" y="1075.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="919.0" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (6 samples, 0.24%)</title><rect x="916.5" y="1075.0" width="2.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="919.5" y="1086.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.04%)</title><rect x="917.0" y="1059.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="920.0" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="917.0" y="1043.0" width="0.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="920.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.ensureCapacity (1 samples, 0.04%)</title><rect x="917.4" y="1059.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="920.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="917.9" y="1059.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="920.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.08%)</title><rect x="918.4" y="1059.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="921.4" y="1070.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.08%)</title><rect x="918.4" y="1043.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="921.4" y="1054.0"></text>
</g>
<g>
<title>java/lang/String.charAt (2 samples, 0.08%)</title><rect x="918.4" y="1027.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="921.4" y="1038.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (2 samples, 0.08%)</title><rect x="918.4" y="1011.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="921.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (215 samples, 8.74%)</title><rect x="919.4" y="1091.0" width="103.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="922.4" y="1102.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session.write (215 samples, 8.74%)</title><rect x="919.4" y="1075.0" width="103.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="922.4" y="1086.0">one/nio/net/..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="919.4" y="1059.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="922.4" y="1070.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="919.8" y="1059.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="922.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (213 samples, 8.66%)</title><rect x="920.3" y="1059.0" width="102.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.3" y="1070.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (213 samples, 8.66%)</title><rect x="920.3" y="1043.0" width="102.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="923.3" y="1054.0">one/nio/net/..</text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="921.3" y="1027.0" width="1.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="924.3" y="1038.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.12%)</title><rect x="921.3" y="1011.0" width="1.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="924.3" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (2 samples, 0.08%)</title><rect x="921.3" y="995.0" width="0.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="924.3" y="1006.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.08%)</title><rect x="921.3" y="979.0" width="0.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="924.3" y="990.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="921.3" y="963.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="924.3" y="974.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="921.8" y="963.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="924.8" y="974.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="922.2" y="995.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="925.2" y="1006.0"></text>
</g>
<g>
<title>__send (208 samples, 8.46%)</title><rect x="922.7" y="1027.0" width="99.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="925.7" y="1038.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (196 samples, 7.97%)</title><rect x="928.5" y="1011.0" width="94.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="931.5" y="1022.0">entry_SYSCA..</text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.12%)</title><rect x="928.5" y="995.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="931.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (193 samples, 7.85%)</title><rect x="929.9" y="995.0" width="92.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="932.9" y="1006.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (191 samples, 7.77%)</title><rect x="930.9" y="979.0" width="91.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="933.9" y="990.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (190 samples, 7.73%)</title><rect x="930.9" y="963.0" width="91.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="933.9" y="974.0">__sys_sendto</text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="931.8" y="947.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="934.8" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="931.8" y="931.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="934.8" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="931.8" y="915.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="934.8" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="931.8" y="899.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="934.8" y="910.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="931.8" y="883.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="934.8" y="894.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="931.8" y="867.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="934.8" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="931.8" y="851.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="934.8" y="862.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="932.3" y="947.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="935.3" y="958.0"></text>
</g>
<g>
<title>sock_sendmsg (185 samples, 7.52%)</title><rect x="932.8" y="947.0" width="88.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="935.8" y="958.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="932.8" y="931.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="935.8" y="942.0"></text>
</g>
<g>
<title>inet_sendmsg (179 samples, 7.28%)</title><rect x="933.3" y="931.0" width="85.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="936.3" y="942.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (178 samples, 7.24%)</title><rect x="933.7" y="915.0" width="85.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="936.7" y="926.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="933.7" y="899.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.7" y="910.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="934.2" y="899.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="937.2" y="910.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (176 samples, 7.16%)</title><rect x="934.7" y="899.0" width="84.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="937.7" y="910.0">tcp_sendms..</text>
</g>
<g>
<title>__check_object_size (3 samples, 0.12%)</title><rect x="935.2" y="883.0" width="1.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="938.2" y="894.0"></text>
</g>
<g>
<title>__virt_addr_valid (3 samples, 0.12%)</title><rect x="935.2" y="867.0" width="1.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.2" y="878.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (8 samples, 0.33%)</title><rect x="936.6" y="883.0" width="3.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="939.6" y="894.0"></text>
</g>
<g>
<title>__alloc_skb (7 samples, 0.28%)</title><rect x="937.1" y="867.0" width="3.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="940.1" y="878.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (3 samples, 0.12%)</title><rect x="937.1" y="851.0" width="1.4" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="940.1" y="862.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (3 samples, 0.12%)</title><rect x="937.1" y="835.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="940.1" y="846.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="938.1" y="819.0" width="0.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="941.1" y="830.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.16%)</title><rect x="938.5" y="851.0" width="2.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="941.5" y="862.0"></text>
</g>
<g>
<title>tcp_push (159 samples, 6.47%)</title><rect x="940.5" y="883.0" width="76.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="943.5" y="894.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (158 samples, 6.43%)</title><rect x="940.9" y="867.0" width="75.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="943.9" y="878.0">__tcp_pu..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="940.9" y="851.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="943.9" y="862.0"></text>
</g>
<g>
<title>tcp_write_xmit (157 samples, 6.38%)</title><rect x="941.4" y="851.0" width="75.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="944.4" y="862.0">tcp_writ..</text>
</g>
<g>
<title>__tcp_transmit_skb (150 samples, 6.10%)</title><rect x="942.9" y="835.0" width="71.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="945.9" y="846.0">__tcp_tr..</text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="945.7" y="819.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="948.7" y="830.0"></text>
</g>
<g>
<title>ip_queue_xmit (142 samples, 5.77%)</title><rect x="946.2" y="819.0" width="68.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="949.2" y="830.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (142 samples, 5.77%)</title><rect x="946.2" y="803.0" width="68.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="949.2" y="814.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (138 samples, 5.61%)</title><rect x="947.7" y="787.0" width="66.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="950.7" y="798.0">ip_loca..</text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.04%)</title><rect x="947.7" y="771.0" width="0.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="950.7" y="782.0"></text>
</g>
<g>
<title>ip_output (137 samples, 5.57%)</title><rect x="948.1" y="771.0" width="65.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="951.1" y="782.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (136 samples, 5.53%)</title><rect x="948.6" y="755.0" width="65.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="951.6" y="766.0">ip_fini..</text>
</g>
<g>
<title>ip_finish_output2 (133 samples, 5.41%)</title><rect x="949.6" y="739.0" width="63.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="952.6" y="750.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (114 samples, 4.64%)</title><rect x="950.5" y="723.0" width="54.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="953.5" y="734.0">__loc..</text>
</g>
<g>
<title>do_softirq.part.21 (114 samples, 4.64%)</title><rect x="950.5" y="707.0" width="54.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="953.5" y="718.0">do_so..</text>
</g>
<g>
<title>do_softirq_own_stack (112 samples, 4.55%)</title><rect x="951.5" y="691.0" width="53.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="954.5" y="702.0">do_so..</text>
</g>
<g>
<title>__softirqentry_text_start (112 samples, 4.55%)</title><rect x="951.5" y="675.0" width="53.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="954.5" y="686.0">__sof..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="953.4" y="659.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="956.4" y="670.0"></text>
</g>
<g>
<title>net_rx_action (107 samples, 4.35%)</title><rect x="953.9" y="659.0" width="51.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.9" y="670.0">net_r..</text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.04%)</title><rect x="953.9" y="643.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="956.9" y="654.0"></text>
</g>
<g>
<title>process_backlog (106 samples, 4.31%)</title><rect x="954.4" y="643.0" width="50.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="957.4" y="654.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (106 samples, 4.31%)</title><rect x="954.4" y="627.0" width="50.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="957.4" y="638.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (105 samples, 4.27%)</title><rect x="954.9" y="611.0" width="50.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="957.9" y="622.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.08%)</title><rect x="954.9" y="595.0" width="0.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="957.9" y="606.0"></text>
</g>
<g>
<title>ip_rcv (100 samples, 4.07%)</title><rect x="955.8" y="595.0" width="48.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="958.8" y="606.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="956.3" y="579.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="959.3" y="590.0"></text>
</g>
<g>
<title>ip_rcv_finish (98 samples, 3.99%)</title><rect x="956.8" y="579.0" width="47.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="959.8" y="590.0">ip_r..</text>
</g>
<g>
<title>ip_local_deliver (97 samples, 3.94%)</title><rect x="957.3" y="563.0" width="46.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="960.3" y="574.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (95 samples, 3.86%)</title><rect x="958.2" y="547.0" width="45.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="961.2" y="558.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (94 samples, 3.82%)</title><rect x="958.2" y="531.0" width="45.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="961.2" y="542.0">ip_p..</text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.04%)</title><rect x="958.7" y="515.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="961.7" y="526.0"></text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="959.2" y="515.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.2" y="526.0"></text>
</g>
<g>
<title>tcp_v4_rcv (91 samples, 3.70%)</title><rect x="959.7" y="515.0" width="43.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="962.7" y="526.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (7 samples, 0.28%)</title><rect x="961.6" y="499.0" width="3.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="964.6" y="510.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="964.9" y="499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="967.9" y="510.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="965.4" y="499.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="968.4" y="510.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (76 samples, 3.09%)</title><rect x="965.9" y="499.0" width="36.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="968.9" y="510.0">tcp..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="965.9" y="483.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="968.9" y="494.0"></text>
</g>
<g>
<title>tcp_rcv_established (75 samples, 3.05%)</title><rect x="966.4" y="483.0" width="36.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="969.4" y="494.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (2 samples, 0.08%)</title><rect x="967.3" y="467.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="970.3" y="478.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (2 samples, 0.08%)</title><rect x="967.3" y="451.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="970.3" y="462.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.08%)</title><rect x="967.3" y="435.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="970.3" y="446.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.08%)</title><rect x="967.3" y="419.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="970.3" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.08%)</title><rect x="967.3" y="403.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="970.3" y="414.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="968.3" y="467.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="971.3" y="478.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="968.8" y="467.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="971.8" y="478.0"></text>
</g>
<g>
<title>tcp_ack (14 samples, 0.57%)</title><rect x="969.3" y="467.0" width="6.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="972.3" y="478.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.04%)</title><rect x="970.7" y="451.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="973.7" y="462.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (7 samples, 0.28%)</title><rect x="971.2" y="451.0" width="3.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="974.2" y="462.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.12%)</title><rect x="971.7" y="435.0" width="1.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="974.7" y="446.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.12%)</title><rect x="971.7" y="419.0" width="1.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="974.7" y="430.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="971.7" y="403.0" width="0.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="974.7" y="414.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.08%)</title><rect x="972.1" y="403.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="975.1" y="414.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.08%)</title><rect x="972.1" y="387.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="975.1" y="398.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.08%)</title><rect x="972.1" y="371.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="975.1" y="382.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="972.6" y="355.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="975.6" y="366.0"></text>
</g>
<g>
<title>rb_erase (3 samples, 0.12%)</title><rect x="973.1" y="435.0" width="1.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="976.1" y="446.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="974.5" y="451.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="977.5" y="462.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="975.0" y="451.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="978.0" y="462.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="975.5" y="451.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="978.5" y="462.0"></text>
</g>
<g>
<title>tcp_data_queue (50 samples, 2.03%)</title><rect x="976.0" y="467.0" width="24.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="979.0" y="478.0">t..</text>
</g>
<g>
<title>sock_def_readable (47 samples, 1.91%)</title><rect x="977.4" y="451.0" width="22.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="980.4" y="462.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (46 samples, 1.87%)</title><rect x="977.9" y="435.0" width="22.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="980.9" y="446.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (46 samples, 1.87%)</title><rect x="977.9" y="419.0" width="22.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="980.9" y="430.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (46 samples, 1.87%)</title><rect x="977.9" y="403.0" width="22.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="980.9" y="414.0">_..</text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="1000.0" y="467.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1003.0" y="478.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1000.0" y="451.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1003.0" y="462.0"></text>
</g>
<g>
<title>tcp_queue_rcv (2 samples, 0.08%)</title><rect x="1000.5" y="467.0" width="0.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1003.5" y="478.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="1001.4" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1004.4" y="478.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="1001.9" y="467.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1004.9" y="478.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="1002.4" y="499.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1005.4" y="510.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="1002.9" y="499.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1005.9" y="510.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="1003.3" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1006.3" y="542.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="1003.8" y="595.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1006.8" y="606.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.08%)</title><rect x="1004.3" y="595.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1007.3" y="606.0"></text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.69%)</title><rect x="1005.3" y="723.0" width="8.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1008.3" y="734.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.69%)</title><rect x="1005.3" y="707.0" width="8.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1008.3" y="718.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (3 samples, 0.12%)</title><rect x="1007.2" y="691.0" width="1.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1010.2" y="702.0"></text>
</g>
<g>
<title>loopback_xmit (3 samples, 0.12%)</title><rect x="1007.2" y="675.0" width="1.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1010.2" y="686.0"></text>
</g>
<g>
<title>netif_rx (3 samples, 0.12%)</title><rect x="1007.2" y="659.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1010.2" y="670.0"></text>
</g>
<g>
<title>netif_rx_internal (3 samples, 0.12%)</title><rect x="1007.2" y="643.0" width="1.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1010.2" y="654.0"></text>
</g>
<g>
<title>enqueue_to_backlog (2 samples, 0.08%)</title><rect x="1007.6" y="627.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1010.6" y="638.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="1008.6" y="691.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1011.6" y="702.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.04%)</title><rect x="1009.1" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.1" y="702.0"></text>
</g>
<g>
<title>validate_xmit_skb (6 samples, 0.24%)</title><rect x="1009.6" y="691.0" width="2.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1012.6" y="702.0"></text>
</g>
<g>
<title>netif_skb_features (4 samples, 0.16%)</title><rect x="1010.0" y="675.0" width="2.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1013.0" y="686.0"></text>
</g>
<g>
<title>skb_network_protocol (2 samples, 0.08%)</title><rect x="1011.0" y="659.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1014.0" y="670.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="1012.0" y="675.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1015.0" y="686.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (2 samples, 0.08%)</title><rect x="1012.4" y="691.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1015.4" y="702.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="1013.4" y="739.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1016.4" y="750.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="1013.9" y="787.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1016.9" y="798.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="1014.4" y="819.0" width="0.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1017.4" y="830.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="1014.4" y="803.0" width="0.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1017.4" y="814.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="1014.8" y="835.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1017.8" y="846.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="1015.3" y="835.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1018.3" y="846.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.08%)</title><rect x="1015.8" y="835.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1018.8" y="846.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="1016.8" y="883.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1019.8" y="894.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.16%)</title><rect x="1017.2" y="883.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1020.2" y="894.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.08%)</title><rect x="1018.2" y="867.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1021.2" y="878.0"></text>
</g>
<g>
<title>security_socket_sendmsg (5 samples, 0.20%)</title><rect x="1019.2" y="931.0" width="2.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1022.2" y="942.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="1019.2" y="915.0" width="0.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1022.2" y="926.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (4 samples, 0.16%)</title><rect x="1019.6" y="915.0" width="2.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1022.6" y="926.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (4 samples, 0.16%)</title><rect x="1019.6" y="899.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1022.6" y="910.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.12%)</title><rect x="1020.1" y="883.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1023.1" y="894.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.04%)</title><rect x="1021.1" y="867.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1024.1" y="878.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.04%)</title><rect x="1021.1" y="851.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1024.1" y="862.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="1021.6" y="947.0" width="0.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1024.6" y="958.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="1021.6" y="931.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1024.6" y="942.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="1021.6" y="915.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1024.6" y="926.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="1021.6" y="899.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1024.6" y="910.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="1022.0" y="963.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1025.0" y="974.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="1022.5" y="1107.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1025.5" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.08%)</title><rect x="1023.0" y="1123.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1026.0" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1023.5" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1026.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1023.5" y="1091.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1026.5" y="1102.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1023.5" y="1075.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1026.5" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (199 samples, 8.09%)</title><rect x="1024.0" y="1123.0" width="95.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1027.0" y="1134.0">ru/mail/pol..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="1024.0" y="1107.0" width="1.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1027.0" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="1024.0" y="1091.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1027.0" y="1102.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1024.0" y="1075.0" width="1.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1027.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1024.0" y="1059.0" width="1.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1027.0" y="1070.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (192 samples, 7.81%)</title><rect x="1025.4" y="1107.0" width="92.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1028.4" y="1118.0">ru/mail/pol..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (182 samples, 7.40%)</title><rect x="1026.8" y="1091.0" width="87.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1029.8" y="1102.0">ru/mail/po..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="1026.8" y="1075.0" width="1.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1029.8" y="1086.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (3 samples, 0.12%)</title><rect x="1026.8" y="1059.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1029.8" y="1070.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1026.8" y="1043.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1029.8" y="1054.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1026.8" y="1027.0" width="1.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1029.8" y="1038.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1026.8" y="1011.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1029.8" y="1022.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (2 samples, 0.08%)</title><rect x="1027.3" y="995.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1030.3" y="1006.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (178 samples, 7.24%)</title><rect x="1028.3" y="1075.0" width="85.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1031.3" y="1086.0">org/rocksd..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (178 samples, 7.24%)</title><rect x="1028.3" y="1059.0" width="85.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1031.3" y="1070.0">org/rocksd..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (167 samples, 6.79%)</title><rect x="1028.3" y="1043.0" width="80.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1031.3" y="1054.0">Java_org_..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (2 samples, 0.08%)</title><rect x="1028.3" y="1027.0" width="0.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1031.3" y="1038.0"></text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (2 samples, 0.08%)</title><rect x="1029.2" y="1027.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1032.2" y="1038.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.08%)</title><rect x="1030.2" y="1027.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1033.2" y="1038.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.08%)</title><rect x="1031.2" y="1027.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1034.2" y="1038.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="1032.1" y="1027.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1035.1" y="1038.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="1033.1" y="1027.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1036.1" y="1038.0"></text>
</g>
<g>
<title>operator delete[](void*) (2 samples, 0.08%)</title><rect x="1033.6" y="1027.0" width="0.9" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="1036.6" y="1038.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.04%)</title><rect x="1034.5" y="1027.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1037.5" y="1038.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.08%)</title><rect x="1035.0" y="1027.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1038.0" y="1038.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.04%)</title><rect x="1036.0" y="1027.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1039.0" y="1038.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="1036.4" y="1027.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1039.4" y="1038.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (147 samples, 5.98%)</title><rect x="1036.9" y="1027.0" width="70.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1039.9" y="1038.0">rocksdb_..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="1038.4" y="1011.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.4" y="1022.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.08%)</title><rect x="1038.8" y="1011.0" width="1.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1041.8" y="1022.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="1039.8" y="1011.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1042.8" y="1022.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="1039.8" y="995.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1042.8" y="1006.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="1039.8" y="979.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1042.8" y="990.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.08%)</title><rect x="1040.3" y="1011.0" width="0.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1043.3" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="1041.2" y="1011.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1044.2" y="1022.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (123 samples, 5.00%)</title><rect x="1041.7" y="1011.0" width="59.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1044.7" y="1022.0">rocksd..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.08%)</title><rect x="1041.7" y="995.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1044.7" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (117 samples, 4.76%)</title><rect x="1042.7" y="995.0" width="56.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1045.7" y="1006.0">rocksd..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (115 samples, 4.68%)</title><rect x="1043.2" y="979.0" width="55.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1046.2" y="990.0">rocks..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="1043.2" y="963.0" width="0.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1046.2" y="974.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1043.6" y="947.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1046.6" y="958.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1043.6" y="931.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1046.6" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1043.6" y="915.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1046.6" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1043.6" y="899.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1046.6" y="910.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1043.6" y="883.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1046.6" y="894.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1043.6" y="867.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1046.6" y="878.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1043.6" y="851.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1046.6" y="862.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1044.1" y="963.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1047.1" y="974.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="1044.6" y="963.0" width="1.0" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="1047.6" y="974.0"></text>
</g>
<g>
<title>ret_from_intr (1 samples, 0.04%)</title><rect x="1045.1" y="947.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1048.1" y="958.0"></text>
</g>
<g>
<title>do_IRQ (1 samples, 0.04%)</title><rect x="1045.1" y="931.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1048.1" y="942.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1045.1" y="915.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1048.1" y="926.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1045.1" y="899.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1048.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.04%)</title><rect x="1045.6" y="963.0" width="0.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1048.6" y="974.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="1046.0" y="963.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1049.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (4 samples, 0.16%)</title><rect x="1046.5" y="963.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1049.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (97 samples, 3.94%)</title><rect x="1048.4" y="963.0" width="46.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1051.4" y="974.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.08%)</title><rect x="1051.3" y="947.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1054.3" y="958.0"></text>
</g>
<g>
<title>__memcpy_sse2_unaligned_erms (1 samples, 0.04%)</title><rect x="1052.3" y="947.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1055.3" y="958.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.08%)</title><rect x="1052.8" y="947.0" width="0.9" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1055.8" y="958.0"></text>
</g>
<g>
<title>__tls_get_addr (3 samples, 0.12%)</title><rect x="1053.7" y="947.0" width="1.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1056.7" y="958.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (10 samples, 0.41%)</title><rect x="1055.2" y="947.0" width="4.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1058.2" y="958.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1056.1" y="931.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1059.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (3 samples, 0.12%)</title><rect x="1056.6" y="931.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1059.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (3 samples, 0.12%)</title><rect x="1058.0" y="931.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1061.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="1059.5" y="931.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1062.5" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.04%)</title><rect x="1059.5" y="915.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1062.5" y="926.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1060.0" y="947.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1063.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (6 samples, 0.24%)</title><rect x="1060.4" y="947.0" width="2.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1063.4" y="958.0"></text>
</g>
<g>
<title>_init (2 samples, 0.08%)</title><rect x="1060.4" y="931.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1063.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.08%)</title><rect x="1061.4" y="931.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1064.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.08%)</title><rect x="1061.4" y="915.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1064.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="1062.4" y="931.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1065.4" y="942.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="1062.8" y="931.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1065.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.08%)</title><rect x="1063.3" y="947.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1066.3" y="958.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="1064.3" y="947.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1067.3" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (54 samples, 2.20%)</title><rect x="1064.8" y="947.0" width="25.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1067.8" y="958.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (47 samples, 1.91%)</title><rect x="1065.7" y="931.0" width="22.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1068.7" y="942.0">/..</text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (6 samples, 0.24%)</title><rect x="1065.7" y="915.0" width="2.9" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1068.7" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1068.1" y="899.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1071.1" y="910.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1068.6" y="915.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1071.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (34 samples, 1.38%)</title><rect x="1069.1" y="915.0" width="16.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1072.1" y="926.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni8549639859006768035.so (1 samples, 0.04%)</title><rect x="1078.7" y="899.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1081.7" y="910.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1079.2" y="899.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1082.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (12 samples, 0.49%)</title><rect x="1079.6" y="899.0" width="5.8" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1082.6" y="910.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (7 samples, 0.28%)</title><rect x="1081.5" y="883.0" width="3.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1084.5" y="894.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1084.9" y="883.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1087.9" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1085.4" y="915.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1088.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::UnPackSequenceAndType(unsigned long, unsigned long*, rocksdb::ValueType*) (1 samples, 0.04%)</title><rect x="1085.9" y="915.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1088.9" y="926.0"></text>
</g>
<g>
<title>std::string::assign(char const*, unsigned long) (4 samples, 0.16%)</title><rect x="1086.3" y="915.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1089.3" y="926.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1088.3" y="931.0" width="0.4" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1091.3" y="942.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (4 samples, 0.16%)</title><rect x="1088.7" y="931.0" width="2.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1091.7" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1090.2" y="915.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1093.2" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1090.2" y="899.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1093.2" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1090.2" y="883.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1093.2" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1090.2" y="867.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1093.2" y="878.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.08%)</title><rect x="1090.7" y="947.0" width="0.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1093.7" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (5 samples, 0.20%)</title><rect x="1091.6" y="947.0" width="2.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1094.6" y="958.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.08%)</title><rect x="1094.0" y="947.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1097.0" y="958.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="1095.0" y="963.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1098.0" y="974.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (3 samples, 0.12%)</title><rect x="1095.5" y="963.0" width="1.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1098.5" y="974.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (3 samples, 0.12%)</title><rect x="1096.9" y="963.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1099.9" y="974.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="1098.3" y="979.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1101.3" y="990.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (4 samples, 0.16%)</title><rect x="1098.8" y="995.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1101.8" y="1006.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.04%)</title><rect x="1100.7" y="1011.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1103.7" y="1022.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (13 samples, 0.53%)</title><rect x="1101.2" y="1011.0" width="6.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1104.2" y="1022.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.04%)</title><rect x="1101.2" y="995.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1104.2" y="1006.0"></text>
</g>
<g>
<title>jni_NewByteArray (11 samples, 0.45%)</title><rect x="1101.7" y="995.0" width="5.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1104.7" y="1006.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.08%)</title><rect x="1101.7" y="979.0" width="1.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1104.7" y="990.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 0.37%)</title><rect x="1102.7" y="979.0" width="4.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1105.7" y="990.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 0.28%)</title><rect x="1103.1" y="963.0" width="3.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1106.1" y="974.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (6 samples, 0.24%)</title><rect x="1103.1" y="947.0" width="2.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1106.1" y="958.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1103.1" y="931.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1106.1" y="942.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.04%)</title><rect x="1103.6" y="931.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1106.6" y="942.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.08%)</title><rect x="1104.1" y="931.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1107.1" y="942.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1104.6" y="915.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.6" y="926.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1104.6" y="899.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1107.6" y="910.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1104.6" y="883.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1107.6" y="894.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1104.6" y="867.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1107.6" y="878.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1104.6" y="851.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1107.6" y="862.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1104.6" y="835.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1107.6" y="846.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1104.6" y="819.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1107.6" y="830.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (2 samples, 0.08%)</title><rect x="1105.1" y="931.0" width="0.9" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1108.1" y="942.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="1106.0" y="947.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1109.0" y="958.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="1106.5" y="963.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1109.5" y="974.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1107.0" y="995.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1110.0" y="1006.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="1107.0" y="979.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1110.0" y="990.0"></text>
</g>
<g>
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string(std::string const&amp;) (1 samples, 0.04%)</title><rect x="1107.5" y="1027.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1110.5" y="1038.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_destroy(std::allocator&lt;char&gt; const&amp;) (1 samples, 0.04%)</title><rect x="1107.9" y="1027.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1110.9" y="1038.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1108.4" y="1043.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1111.4" y="1054.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1108.4" y="1027.0" width="0.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1111.4" y="1038.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1108.4" y="1011.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1111.4" y="1022.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="1108.9" y="1043.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1111.9" y="1054.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1109.4" y="1043.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1112.4" y="1054.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.16%)</title><rect x="1109.9" y="1043.0" width="1.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1112.9" y="1054.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="1111.8" y="1043.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1114.8" y="1054.0"></text>
</g>
<g>
<title>std::string::_M_mutate(unsigned long, unsigned long, unsigned long) (1 samples, 0.04%)</title><rect x="1112.3" y="1043.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1115.3" y="1054.0"></text>
</g>
<g>
<title>std::string::_Rep::_S_create(unsigned long, unsigned long, std::allocator&lt;char&gt; const&amp;) (2 samples, 0.08%)</title><rect x="1112.7" y="1043.0" width="1.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1115.7" y="1054.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (1 samples, 0.04%)</title><rect x="1113.7" y="1075.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1116.7" y="1086.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (7 samples, 0.28%)</title><rect x="1114.2" y="1091.0" width="3.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.2" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.04%)</title><rect x="1114.7" y="1075.0" width="0.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1117.7" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.04%)</title><rect x="1114.7" y="1059.0" width="0.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1117.7" y="1070.0"></text>
</g>
<g>
<title>java/nio/Buffer.checkBounds (1 samples, 0.04%)</title><rect x="1114.7" y="1043.0" width="0.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1117.7" y="1054.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (5 samples, 0.20%)</title><rect x="1115.1" y="1075.0" width="2.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1118.1" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1115.6" y="1059.0" width="1.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1118.6" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1115.6" y="1043.0" width="1.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1118.6" y="1054.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1115.6" y="1027.0" width="1.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1118.6" y="1038.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.12%)</title><rect x="1116.1" y="1011.0" width="1.4" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1119.1" y="1022.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (3 samples, 0.12%)</title><rect x="1116.1" y="995.0" width="1.4" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1119.1" y="1006.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (4 samples, 0.16%)</title><rect x="1117.5" y="1107.0" width="2.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1120.5" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.08%)</title><rect x="1117.5" y="1091.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1120.5" y="1102.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="1118.0" y="1075.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1121.0" y="1086.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1118.0" y="1059.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1121.0" y="1070.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1118.0" y="1043.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1121.0" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1118.5" y="1091.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1121.5" y="1102.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (1 samples, 0.04%)</title><rect x="1119.0" y="1091.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1122.0" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (5 samples, 0.20%)</title><rect x="1119.5" y="1139.0" width="2.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1122.5" y="1150.0"></text>
</g>
<g>
<title>java/nio/ByteOrder.nativeOrder (1 samples, 0.04%)</title><rect x="1121.4" y="1123.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1124.4" y="1134.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1121.4" y="1107.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1124.4" y="1118.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1121.4" y="1091.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.4" y="1102.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1121.4" y="1075.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1124.4" y="1086.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1121.4" y="1059.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1124.4" y="1070.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1121.4" y="1043.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1124.4" y="1054.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1121.4" y="1027.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1124.4" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1121.4" y="1011.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1124.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.16%)</title><rect x="1121.9" y="1139.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1124.9" y="1150.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.16%)</title><rect x="1121.9" y="1123.0" width="1.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1124.9" y="1134.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.16%)</title><rect x="1121.9" y="1107.0" width="1.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1124.9" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.04%)</title><rect x="1122.3" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1125.3" y="1102.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.08%)</title><rect x="1122.8" y="1091.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1125.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="1123.8" y="1139.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1126.8" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1123.8" y="1123.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1126.8" y="1134.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1123.8" y="1107.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1126.8" y="1118.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="1123.8" y="1091.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1126.8" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.33%)</title><rect x="1124.3" y="1171.0" width="3.8" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1127.3" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1124.7" y="1155.0" width="2.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1127.7" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="1125.2" y="1139.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1128.2" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.08%)</title><rect x="1125.2" y="1123.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1128.2" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="1125.2" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1128.2" y="1118.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="1125.7" y="1107.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1128.7" y="1118.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1126.2" y="1139.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1129.2" y="1150.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="1126.7" y="1155.0" width="1.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1129.7" y="1166.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.12%)</title><rect x="1126.7" y="1139.0" width="1.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1129.7" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.08%)</title><rect x="1127.1" y="1123.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1130.1" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (2 samples, 0.08%)</title><rect x="1127.1" y="1107.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.1" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (2 samples, 0.08%)</title><rect x="1127.1" y="1091.0" width="1.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1130.1" y="1102.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.08%)</title><rect x="1128.1" y="1171.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1131.1" y="1182.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.08%)</title><rect x="1129.1" y="1171.0" width="0.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1132.1" y="1182.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="1129.5" y="1155.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1132.5" y="1166.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="1129.5" y="1139.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1132.5" y="1150.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1129.5" y="1123.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1132.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1129.5" y="1107.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1132.5" y="1118.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="1129.5" y="1091.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1132.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.16%)</title><rect x="1130.0" y="1171.0" width="1.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1133.0" y="1182.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (4 samples, 0.16%)</title><rect x="1130.0" y="1155.0" width="1.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1133.0" y="1166.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.16%)</title><rect x="1130.0" y="1139.0" width="1.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1133.0" y="1150.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1130.0" y="1123.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1133.0" y="1134.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1130.0" y="1107.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1133.0" y="1118.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (3 samples, 0.12%)</title><rect x="1130.5" y="1123.0" width="1.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1133.5" y="1134.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (2 samples, 0.08%)</title><rect x="1131.0" y="1107.0" width="0.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1134.0" y="1118.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="1131.5" y="1091.0" width="0.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.5" y="1102.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (53 samples, 2.16%)</title><rect x="1131.9" y="1187.0" width="25.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1134.9" y="1198.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (53 samples, 2.16%)</title><rect x="1131.9" y="1171.0" width="25.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1134.9" y="1182.0">o..</text>
</g>
<g>
<title>[unknown] (17 samples, 0.69%)</title><rect x="1132.4" y="1155.0" width="8.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1135.4" y="1166.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 0.69%)</title><rect x="1132.4" y="1139.0" width="8.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1135.4" y="1150.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (11 samples, 0.45%)</title><rect x="1132.4" y="1123.0" width="5.3" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1135.4" y="1134.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="1132.4" y="1107.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1135.4" y="1118.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="1132.9" y="1107.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1135.9" y="1118.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 0.16%)</title><rect x="1133.4" y="1107.0" width="1.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1136.4" y="1118.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1134.8" y="1091.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1137.8" y="1102.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1134.8" y="1075.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1137.8" y="1086.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1134.8" y="1059.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1137.8" y="1070.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1134.8" y="1043.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1137.8" y="1054.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1134.8" y="1027.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1137.8" y="1038.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1134.8" y="1011.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1137.8" y="1022.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1134.8" y="995.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1137.8" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.16%)</title><rect x="1135.3" y="1107.0" width="1.9" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1138.3" y="1118.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="1135.8" y="1091.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1138.8" y="1102.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="1136.3" y="1091.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1139.3" y="1102.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="1136.7" y="1091.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1139.7" y="1102.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="1137.2" y="1107.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1140.2" y="1118.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="1137.7" y="1123.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1140.7" y="1134.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.08%)</title><rect x="1138.2" y="1123.0" width="0.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1141.2" y="1134.0"></text>
</g>
<g>
<title>recv (3 samples, 0.12%)</title><rect x="1139.1" y="1123.0" width="1.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1142.1" y="1134.0"></text>
</g>
<g>
<title>recv (35 samples, 1.42%)</title><rect x="1140.6" y="1155.0" width="16.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1143.6" y="1166.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (29 samples, 1.18%)</title><rect x="1143.5" y="1139.0" width="13.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1146.5" y="1150.0"></text>
</g>
<g>
<title>do_syscall_64 (29 samples, 1.18%)</title><rect x="1143.5" y="1123.0" width="13.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1146.5" y="1134.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.04%)</title><rect x="1143.5" y="1107.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.5" y="1118.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (28 samples, 1.14%)</title><rect x="1143.9" y="1107.0" width="13.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1146.9" y="1118.0"></text>
</g>
<g>
<title>__sys_recvfrom (28 samples, 1.14%)</title><rect x="1143.9" y="1091.0" width="13.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1146.9" y="1102.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="1143.9" y="1075.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1146.9" y="1086.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="1144.4" y="1075.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1147.4" y="1086.0"></text>
</g>
<g>
<title>sock_recvmsg (22 samples, 0.89%)</title><rect x="1144.9" y="1075.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1147.9" y="1086.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.08%)</title><rect x="1144.9" y="1059.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1147.9" y="1070.0"></text>
</g>
<g>
<title>inet_recvmsg (13 samples, 0.53%)</title><rect x="1145.9" y="1059.0" width="6.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1148.9" y="1070.0"></text>
</g>
<g>
<title>tcp_recvmsg (12 samples, 0.49%)</title><rect x="1146.3" y="1043.0" width="5.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1149.3" y="1054.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="1147.8" y="1027.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1150.8" y="1038.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.04%)</title><rect x="1147.8" y="1011.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1150.8" y="1022.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="1147.8" y="995.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1150.8" y="1006.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1148.3" y="1027.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1151.3" y="1038.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.04%)</title><rect x="1148.7" y="1027.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1151.7" y="1038.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="1149.2" y="1027.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1152.2" y="1038.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="1149.2" y="1011.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1152.2" y="1022.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.12%)</title><rect x="1149.7" y="1027.0" width="1.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1152.7" y="1038.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.08%)</title><rect x="1149.7" y="1011.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1152.7" y="1022.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.08%)</title><rect x="1149.7" y="995.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1152.7" y="1006.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1150.2" y="979.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1153.2" y="990.0"></text>
</g>
<g>
<title>__check_heap_object (1 samples, 0.04%)</title><rect x="1150.2" y="963.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1153.2" y="974.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.04%)</title><rect x="1150.7" y="1011.0" width="0.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1153.7" y="1022.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (2 samples, 0.08%)</title><rect x="1151.1" y="1027.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.1" y="1038.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1151.6" y="1011.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1154.6" y="1022.0"></text>
</g>
<g>
<title>security_socket_recvmsg (5 samples, 0.20%)</title><rect x="1152.1" y="1059.0" width="2.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1155.1" y="1070.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (5 samples, 0.20%)</title><rect x="1152.1" y="1043.0" width="2.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1155.1" y="1054.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (5 samples, 0.20%)</title><rect x="1152.1" y="1027.0" width="2.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.1" y="1038.0"></text>
</g>
<g>
<title>aa_sk_perm (5 samples, 0.20%)</title><rect x="1152.1" y="1011.0" width="2.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1155.1" y="1022.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.12%)</title><rect x="1153.1" y="995.0" width="1.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1156.1" y="1006.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.08%)</title><rect x="1153.5" y="979.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1156.5" y="990.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.08%)</title><rect x="1154.5" y="1059.0" width="0.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1157.5" y="1070.0"></text>
</g>
<g>
<title>sockfd_lookup_light (4 samples, 0.16%)</title><rect x="1155.4" y="1075.0" width="2.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1158.4" y="1086.0"></text>
</g>
<g>
<title>__fdget (4 samples, 0.16%)</title><rect x="1155.4" y="1059.0" width="2.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1158.4" y="1070.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.16%)</title><rect x="1155.4" y="1043.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.4" y="1054.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.12%)</title><rect x="1155.9" y="1027.0" width="1.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1158.9" y="1038.0"></text>
</g>
<g>
<title>[tid=32017] (1 samples, 0.04%)</title><rect x="1157.4" y="1251.0" width="0.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1160.4" y="1262.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1157.4" y="1235.0" width="0.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1160.4" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1157.4" y="1219.0" width="0.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1160.4" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1157.4" y="1203.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1160.4" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1157.4" y="1187.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1160.4" y="1198.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1157.4" y="1171.0" width="0.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1160.4" y="1182.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1157.4" y="1155.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1160.4" y="1166.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1157.4" y="1139.0" width="0.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1160.4" y="1150.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1157.4" y="1123.0" width="0.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1160.4" y="1134.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1157.4" y="1107.0" width="0.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.4" y="1118.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1157.4" y="1091.0" width="0.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1160.4" y="1102.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="1157.4" y="1075.0" width="0.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1160.4" y="1086.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1157.4" y="1059.0" width="0.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1160.4" y="1070.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1157.4" y="1043.0" width="0.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1160.4" y="1054.0"></text>
</g>
<g>
<title>[tid=32021] (3 samples, 0.12%)</title><rect x="1157.8" y="1251.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1160.8" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="1157.8" y="1235.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1160.8" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1157.8" y="1219.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1160.8" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1157.8" y="1203.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1160.8" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1157.8" y="1187.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1160.8" y="1198.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1157.8" y="1171.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1160.8" y="1182.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="1157.8" y="1155.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1160.8" y="1166.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="1157.8" y="1139.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1160.8" y="1150.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1157.8" y="1123.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1160.8" y="1134.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1157.8" y="1107.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1160.8" y="1118.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1157.8" y="1091.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1160.8" y="1102.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.08%)</title><rect x="1158.3" y="1235.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1161.3" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.08%)</title><rect x="1158.3" y="1219.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1161.3" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.08%)</title><rect x="1158.3" y="1203.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1161.3" y="1214.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.08%)</title><rect x="1158.3" y="1187.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1161.3" y="1198.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.08%)</title><rect x="1158.3" y="1171.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1161.3" y="1182.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (1 samples, 0.04%)</title><rect x="1158.3" y="1155.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.3" y="1166.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1158.3" y="1139.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1161.3" y="1150.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.04%)</title><rect x="1158.3" y="1123.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1161.3" y="1134.0"></text>
</g>
<g>
<title>Monitor::ILock(Thread*) (1 samples, 0.04%)</title><rect x="1158.3" y="1107.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1161.3" y="1118.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1158.8" y="1155.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1161.8" y="1166.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1158.8" y="1139.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1161.8" y="1150.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.04%)</title><rect x="1158.8" y="1123.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1161.8" y="1134.0"></text>
</g>
<g>
<title>[tid=32022] (1 samples, 0.04%)</title><rect x="1159.3" y="1251.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1162.3" y="1262.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1159.3" y="1235.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1162.3" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1159.3" y="1219.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1162.3" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1159.3" y="1203.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.3" y="1214.0"></text>
</g>
<g>
<title>VMThread::run() (1 samples, 0.04%)</title><rect x="1159.3" y="1187.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.3" y="1198.0"></text>
</g>
<g>
<title>VMThread::loop() (1 samples, 0.04%)</title><rect x="1159.3" y="1171.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1162.3" y="1182.0"></text>
</g>
<g>
<title>SafepointSynchronize::begin() (1 samples, 0.04%)</title><rect x="1159.3" y="1155.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1162.3" y="1166.0"></text>
</g>
<g>
<title>SafepointSynchronize::do_cleanup_tasks() (1 samples, 0.04%)</title><rect x="1159.3" y="1139.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.3" y="1150.0"></text>
</g>
<g>
<title>WorkGang::run_task(AbstractGangTask*) (1 samples, 0.04%)</title><rect x="1159.3" y="1123.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1162.3" y="1134.0"></text>
</g>
<g>
<title>SemaphoreGangTaskDispatcher::coordinator_execute_on_workers(AbstractGangTask*, unsigned int) (1 samples, 0.04%)</title><rect x="1159.3" y="1107.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1162.3" y="1118.0"></text>
</g>
<g>
<title>sem_post@@GLIBC_2.2.5 (1 samples, 0.04%)</title><rect x="1159.3" y="1091.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1162.3" y="1102.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1159.3" y="1075.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1162.3" y="1086.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1159.3" y="1059.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1162.3" y="1070.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1159.3" y="1043.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.3" y="1054.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1159.3" y="1027.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.3" y="1038.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.04%)</title><rect x="1159.3" y="1011.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1162.3" y="1022.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.04%)</title><rect x="1159.3" y="995.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1162.3" y="1006.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="1159.3" y="979.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1162.3" y="990.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1159.3" y="963.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1162.3" y="974.0"></text>
</g>
<g>
<title>[tid=32026] (52 samples, 2.11%)</title><rect x="1159.8" y="1251.0" width="24.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1162.8" y="1262.0">[..</text>
</g>
<g>
<title>start_thread (52 samples, 2.11%)</title><rect x="1159.8" y="1235.0" width="24.9" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1162.8" y="1246.0">s..</text>
</g>
<g>
<title>thread_native_entry(Thread*) (52 samples, 2.11%)</title><rect x="1159.8" y="1219.0" width="24.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1162.8" y="1230.0">t..</text>
</g>
<g>
<title>Thread::call_run() (52 samples, 2.11%)</title><rect x="1159.8" y="1203.0" width="24.9" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.8" y="1214.0">T..</text>
</g>
<g>
<title>JavaThread::run() (52 samples, 2.11%)</title><rect x="1159.8" y="1187.0" width="24.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1162.8" y="1198.0">J..</text>
</g>
<g>
<title>JavaThread::thread_main_inner() (52 samples, 2.11%)</title><rect x="1159.8" y="1171.0" width="24.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1162.8" y="1182.0">J..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (52 samples, 2.11%)</title><rect x="1159.8" y="1155.0" width="24.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1162.8" y="1166.0">C..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (52 samples, 2.11%)</title><rect x="1159.8" y="1139.0" width="24.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1162.8" y="1150.0">C..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (52 samples, 2.11%)</title><rect x="1159.8" y="1123.0" width="24.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1162.8" y="1134.0">C..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (52 samples, 2.11%)</title><rect x="1159.8" y="1107.0" width="24.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1162.8" y="1118.0">C..</text>
</g>
<g>
<title>Compile::Code_Gen() (34 samples, 1.38%)</title><rect x="1159.8" y="1091.0" width="16.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1162.8" y="1102.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.04%)</title><rect x="1159.8" y="1075.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1162.8" y="1086.0"></text>
</g>
<g>
<title>CallStaticJavaDirectNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.04%)</title><rect x="1159.8" y="1059.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1162.8" y="1070.0"></text>
</g>
<g>
<title>CompiledStaticCall::emit_to_interp_stub(CodeBuffer&amp;, unsigned char*) (1 samples, 0.04%)</title><rect x="1159.8" y="1043.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1162.8" y="1054.0"></text>
</g>
<g>
<title>MacroAssembler::mov_metadata(RegisterImpl*, Metadata*) (1 samples, 0.04%)</title><rect x="1159.8" y="1027.0" width="0.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1162.8" y="1038.0"></text>
</g>
<g>
<title>Assembler::mov_literal64(RegisterImpl*, long, RelocationHolder const&amp;) (1 samples, 0.04%)</title><rect x="1159.8" y="1011.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1162.8" y="1022.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="1159.8" y="995.0" width="0.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1162.8" y="1006.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1159.8" y="979.0" width="0.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1162.8" y="990.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1159.8" y="963.0" width="0.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1162.8" y="974.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1159.8" y="947.0" width="0.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1162.8" y="958.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1159.8" y="931.0" width="0.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1162.8" y="942.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (1 samples, 0.04%)</title><rect x="1159.8" y="915.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1162.8" y="926.0"></text>
</g>
<g>
<title>Compile::valid_bundle_info(Node const*) (1 samples, 0.04%)</title><rect x="1160.2" y="1075.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1163.2" y="1086.0"></text>
</g>
<g>
<title>Matcher::match() (4 samples, 0.16%)</title><rect x="1160.7" y="1075.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1163.7" y="1086.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (4 samples, 0.16%)</title><rect x="1160.7" y="1059.0" width="1.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1163.7" y="1070.0"></text>
</g>
<g>
<title>Arena::contains(void const*) const (1 samples, 0.04%)</title><rect x="1161.2" y="1043.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.2" y="1054.0"></text>
</g>
<g>
<title>Matcher::match_sfpt(SafePointNode*) (1 samples, 0.04%)</title><rect x="1161.7" y="1043.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.7" y="1054.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.04%)</title><rect x="1161.7" y="1027.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1164.7" y="1038.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.04%)</title><rect x="1161.7" y="1011.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1164.7" y="1022.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.04%)</title><rect x="1162.2" y="1043.0" width="0.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.2" y="1054.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.04%)</title><rect x="1162.2" y="1027.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1165.2" y="1038.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node const*) (1 samples, 0.04%)</title><rect x="1162.2" y="1011.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1165.2" y="1022.0"></text>
</g>
<g>
<title>State::DFA(int, Node const*) (1 samples, 0.04%)</title><rect x="1162.2" y="995.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1165.2" y="1006.0"></text>
</g>
<g>
<title>State::_sub_Op_AddP(Node const*) (1 samples, 0.04%)</title><rect x="1162.2" y="979.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1165.2" y="990.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (3 samples, 0.12%)</title><rect x="1162.6" y="1075.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1165.6" y="1086.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (3 samples, 0.12%)</title><rect x="1162.6" y="1059.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1165.6" y="1070.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.04%)</title><rect x="1162.6" y="1043.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1165.6" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::init(unsigned int) (1 samples, 0.04%)</title><rect x="1163.1" y="1043.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1166.1" y="1054.0"></text>
</g>
<g>
<title>IndexSet::initialize(unsigned int) (1 samples, 0.04%)</title><rect x="1163.1" y="1027.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1166.1" y="1038.0"></text>
</g>
<g>
<title>Arena::grow(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1163.1" y="1011.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1166.1" y="1022.0"></text>
</g>
<g>
<title>ChunkPool::allocate(unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.04%)</title><rect x="1163.1" y="995.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1166.1" y="1006.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.04%)</title><rect x="1163.6" y="1043.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1166.6" y="1054.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.04%)</title><rect x="1163.6" y="1027.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1166.6" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (25 samples, 1.02%)</title><rect x="1164.1" y="1075.0" width="12.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1167.1" y="1086.0"></text>
</g>
<g>
<title>Node::cisc_operand() const (1 samples, 0.04%)</title><rect x="1164.1" y="1059.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1167.1" y="1070.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.04%)</title><rect x="1164.6" y="1059.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1167.6" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.04%)</title><rect x="1165.0" y="1059.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1168.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.04%)</title><rect x="1165.0" y="1043.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1168.0" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1165.0" y="1027.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1168.0" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.12%)</title><rect x="1165.5" y="1059.0" width="1.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1168.5" y="1070.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.08%)</title><rect x="1165.5" y="1043.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1168.5" y="1054.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.04%)</title><rect x="1166.5" y="1043.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1169.5" y="1054.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1166.5" y="1027.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1169.5" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.08%)</title><rect x="1167.0" y="1059.0" width="0.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1170.0" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (5 samples, 0.20%)</title><rect x="1167.9" y="1059.0" width="2.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1170.9" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (5 samples, 0.20%)</title><rect x="1167.9" y="1043.0" width="2.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1170.9" y="1054.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.04%)</title><rect x="1169.4" y="1027.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1172.4" y="1038.0"></text>
</g>
<g>
<title>_dl_update_slotinfo (1 samples, 0.04%)</title><rect x="1169.4" y="1011.0" width="0.4" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1172.4" y="1022.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.04%)</title><rect x="1169.8" y="1027.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1172.8" y="1038.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.178] (1 samples, 0.04%)</title><rect x="1170.3" y="1059.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1173.3" y="1070.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.04%)</title><rect x="1170.3" y="1043.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1173.3" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.179] (1 samples, 0.04%)</title><rect x="1170.8" y="1059.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1173.8" y="1070.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.04%)</title><rect x="1170.8" y="1043.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1173.8" y="1054.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (4 samples, 0.16%)</title><rect x="1171.3" y="1059.0" width="1.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1174.3" y="1070.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.04%)</title><rect x="1172.7" y="1043.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1175.7" y="1054.0"></text>
</g>
<g>
<title>PhaseCoalesce::coalesce_driver() (2 samples, 0.08%)</title><rect x="1173.2" y="1059.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1176.2" y="1070.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::coalesce(Block*) (1 samples, 0.04%)</title><rect x="1173.7" y="1043.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1176.7" y="1054.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::copy_copy(Node*, Node*, Block*, unsigned int) (1 samples, 0.04%)</title><rect x="1173.7" y="1027.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1176.7" y="1038.0"></text>
</g>
<g>
<title>PhaseConservativeCoalesce::update_ifg(unsigned int, unsigned int, IndexSet*, IndexSet*) (1 samples, 0.04%)</title><rect x="1173.7" y="1011.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1176.7" y="1022.0"></text>
</g>
<g>
<title>IndexSet::alloc_block_containing(unsigned int) (1 samples, 0.04%)</title><rect x="1173.7" y="995.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1176.7" y="1006.0"></text>
</g>
<g>
<title>PhaseIFG::Compute_Effective_Degree() (1 samples, 0.04%)</title><rect x="1174.2" y="1059.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1177.2" y="1070.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (2 samples, 0.08%)</title><rect x="1174.6" y="1059.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1177.6" y="1070.0"></text>
</g>
<g>
<title>RegMask::is_bound_pair() const (1 samples, 0.04%)</title><rect x="1175.6" y="1059.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1178.6" y="1070.0"></text>
</g>
<g>
<title>Compile::Optimize() (13 samples, 0.53%)</title><rect x="1176.1" y="1091.0" width="6.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1179.1" y="1102.0"></text>
</g>
<g>
<title>ConnectionGraph::do_analysis(Compile*, PhaseIterGVN*) (1 samples, 0.04%)</title><rect x="1176.1" y="1075.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1179.1" y="1086.0"></text>
</g>
<g>
<title>ConnectionGraph::compute_escape() (1 samples, 0.04%)</title><rect x="1176.1" y="1059.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1179.1" y="1070.0"></text>
</g>
<g>
<title>ConnectionGraph::split_unique_types(GrowableArray&lt;Node*&gt;&amp;, GrowableArray&lt;ArrayCopyNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="1043.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.1" y="1054.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="1027.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1179.1" y="1038.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="1011.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.1" y="1022.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="995.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1179.1" y="1006.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="979.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1179.1" y="990.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="963.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1179.1" y="974.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="947.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1179.1" y="958.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="931.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1179.1" y="942.0"></text>
</g>
<g>
<title>ConnectionGraph::find_inst_mem(Node*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="915.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1179.1" y="926.0"></text>
</g>
<g>
<title>ConnectionGraph::split_memory_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="899.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1179.1" y="910.0"></text>
</g>
<g>
<title>ConnectionGraph::create_split_phi(PhiNode*, int, GrowableArray&lt;PhiNode*&gt;&amp;, bool&amp;) (1 samples, 0.04%)</title><rect x="1176.1" y="883.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1179.1" y="894.0"></text>
</g>
<g>
<title>MulLNode::bottom_type() const (1 samples, 0.04%)</title><rect x="1176.6" y="1075.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1179.6" y="1086.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.04%)</title><rect x="1177.0" y="1075.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.0" y="1086.0"></text>
</g>
<g>
<title>Type::cleanup_speculative() const (1 samples, 0.04%)</title><rect x="1177.0" y="1059.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1180.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(bool, bool, bool) (8 samples, 0.33%)</title><rect x="1177.5" y="1075.0" width="3.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.5" y="1086.0"></text>
</g>
<g>
<title>PhaseIdealLoop::Dominators() (1 samples, 0.04%)</title><rect x="1177.5" y="1059.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1180.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.04%)</title><rect x="1178.0" y="1059.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1181.0" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::set_early_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1178.0" y="1043.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1181.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_early_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1178.0" y="1027.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.0" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.04%)</title><rect x="1178.0" y="1011.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1181.0" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (4 samples, 0.16%)</title><rect x="1178.5" y="1059.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1181.5" y="1070.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (3 samples, 0.12%)</title><rect x="1179.0" y="1043.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.0" y="1054.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (2 samples, 0.08%)</title><rect x="1179.0" y="1027.0" width="0.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1182.0" y="1038.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.04%)</title><rect x="1179.0" y="1011.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1182.0" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.04%)</title><rect x="1179.0" y="995.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1182.0" y="1006.0"></text>
</g>
<g>
<title>PhaseIdealLoop::idom_no_update(unsigned int) const (1 samples, 0.04%)</title><rect x="1179.0" y="979.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1182.0" y="990.0"></text>
</g>
<g>
<title>PhaseIdealLoop::is_dominator(Node*, Node*) (1 samples, 0.04%)</title><rect x="1179.4" y="1011.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1182.4" y="1022.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_loop(Node*) const (1 samples, 0.04%)</title><rect x="1179.9" y="1027.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1182.9" y="1038.0"></text>
</g>
<g>
<title>PhiNode::pinned() const (1 samples, 0.04%)</title><rect x="1180.4" y="1059.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1183.4" y="1070.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.04%)</title><rect x="1180.9" y="1059.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1183.9" y="1070.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.08%)</title><rect x="1181.4" y="1075.0" width="0.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1184.4" y="1086.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.08%)</title><rect x="1181.4" y="1059.0" width="0.9" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1184.4" y="1070.0"></text>
</g>
<g>
<title>ConstraintCastNode::Identity(PhaseGVN*) (1 samples, 0.04%)</title><rect x="1181.4" y="1043.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1184.4" y="1054.0"></text>
</g>
<g>
<title>ConstraintCastNode::dominating_cast(PhaseGVN*, PhaseTransform*) const (1 samples, 0.04%)</title><rect x="1181.4" y="1027.0" width="0.4" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1184.4" y="1038.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1181.8" y="1043.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1184.8" y="1054.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.04%)</title><rect x="1181.8" y="1027.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.8" y="1038.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.16%)</title><rect x="1182.3" y="1091.0" width="1.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.3" y="1102.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.16%)</title><rect x="1182.3" y="1075.0" width="1.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.3" y="1086.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.16%)</title><rect x="1182.3" y="1059.0" width="1.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.3" y="1070.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.16%)</title><rect x="1182.3" y="1043.0" width="1.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.3" y="1054.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.16%)</title><rect x="1182.3" y="1027.0" width="1.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.3" y="1038.0"></text>
</g>
<g>
<title>Parse::do_call() (4 samples, 0.16%)</title><rect x="1182.3" y="1011.0" width="1.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.3" y="1022.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.04%)</title><rect x="1182.3" y="995.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.3" y="1006.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.04%)</title><rect x="1182.3" y="979.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1185.3" y="990.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.04%)</title><rect x="1182.3" y="963.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.3" y="974.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.04%)</title><rect x="1182.3" y="947.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1185.3" y="958.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.04%)</title><rect x="1182.3" y="931.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.3" y="942.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.04%)</title><rect x="1182.3" y="915.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.3" y="926.0"></text>
</g>
<g>
<title>ciBytecodeStream::reset_to_bci(int) (1 samples, 0.04%)</title><rect x="1182.3" y="899.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.3" y="910.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.12%)</title><rect x="1182.8" y="995.0" width="1.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1185.8" y="1006.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.12%)</title><rect x="1182.8" y="979.0" width="1.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1185.8" y="990.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.12%)</title><rect x="1182.8" y="963.0" width="1.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1185.8" y="974.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.12%)</title><rect x="1182.8" y="947.0" width="1.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1185.8" y="958.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.12%)</title><rect x="1182.8" y="931.0" width="1.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1185.8" y="942.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.12%)</title><rect x="1182.8" y="915.0" width="1.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.8" y="926.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.12%)</title><rect x="1182.8" y="899.0" width="1.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1185.8" y="910.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.12%)</title><rect x="1182.8" y="883.0" width="1.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.8" y="894.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.12%)</title><rect x="1182.8" y="867.0" width="1.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1185.8" y="878.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.12%)</title><rect x="1182.8" y="851.0" width="1.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1185.8" y="862.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.12%)</title><rect x="1182.8" y="835.0" width="1.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.8" y="846.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.12%)</title><rect x="1182.8" y="819.0" width="1.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.8" y="830.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.08%)</title><rect x="1182.8" y="803.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.8" y="814.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.08%)</title><rect x="1182.8" y="787.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1185.8" y="798.0"></text>
</g>
<g>
<title>Parse::create_entry_map() (1 samples, 0.04%)</title><rect x="1182.8" y="771.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1185.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.3" y="771.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.3" y="782.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.3" y="755.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.3" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.3" y="739.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1186.3" y="750.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1183.3" y="723.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.3" y="734.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.3" y="707.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1186.3" y="718.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1183.3" y="691.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1186.3" y="702.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.3" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.3" y="686.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.3" y="659.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.3" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.3" y="643.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.3" y="654.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1183.3" y="627.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.3" y="638.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.3" y="611.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.3" y="622.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1183.3" y="595.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1186.3" y="606.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.3" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.3" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.3" y="563.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.3" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.3" y="547.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.3" y="558.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1183.3" y="531.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.3" y="542.0"></text>
</g>
<g>
<title>GraphKit::round_double_arguments(ciMethod*) (1 samples, 0.04%)</title><rect x="1183.3" y="515.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.3" y="526.0"></text>
</g>
<g>
<title>TypeFunc::make(ciMethod*) (1 samples, 0.04%)</title><rect x="1183.3" y="499.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.3" y="510.0"></text>
</g>
<g>
<title>TypeOopPtr::cleanup_speculative() const (1 samples, 0.04%)</title><rect x="1183.3" y="483.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.3" y="494.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.8" y="803.0" width="0.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1186.8" y="814.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.8" y="787.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.8" y="798.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1183.8" y="771.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="782.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.8" y="755.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.8" y="766.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.8" y="739.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="750.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.8" y="723.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="734.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1183.8" y="707.0" width="0.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1186.8" y="718.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.8" y="691.0" width="0.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1186.8" y="702.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1183.8" y="675.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="686.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.8" y="659.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="670.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.8" y="643.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.8" y="654.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.8" y="627.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.8" y="638.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1183.8" y="611.0" width="0.4" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1186.8" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.8" y="595.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1186.8" y="606.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1183.8" y="579.0" width="0.4" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.8" y="590.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.8" y="563.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.8" y="574.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.8" y="547.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.8" y="558.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.8" y="531.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.8" y="542.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1183.8" y="515.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="526.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.8" y="499.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.8" y="510.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1183.8" y="483.0" width="0.4" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1186.8" y="494.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.8" y="467.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.8" y="478.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.8" y="451.0" width="0.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1186.8" y="462.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.8" y="435.0" width="0.4" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.8" y="446.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1183.8" y="419.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.8" y="430.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.8" y="403.0" width="0.4" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1186.8" y="414.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.8" y="387.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.8" y="398.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1183.8" y="371.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1186.8" y="382.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.8" y="355.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1186.8" y="366.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.8" y="339.0" width="0.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.8" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.8" y="323.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.8" y="334.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.04%)</title><rect x="1183.8" y="307.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.8" y="318.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.04%)</title><rect x="1183.8" y="291.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.8" y="302.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.04%)</title><rect x="1183.8" y="275.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.8" y="286.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.04%)</title><rect x="1183.8" y="259.0" width="0.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1186.8" y="270.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.04%)</title><rect x="1183.8" y="243.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.04%)</title><rect x="1183.8" y="227.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.8" y="238.0"></text>
</g>
<g>
<title>Parse::do_field_access(bool, bool) (1 samples, 0.04%)</title><rect x="1183.8" y="211.0" width="0.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1186.8" y="222.0"></text>
</g>
<g>
<title>Parse::do_get_xxx(Node*, ciField*, bool) (1 samples, 0.04%)</title><rect x="1183.8" y="195.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.8" y="206.0"></text>
</g>
<g>
<title>GraphKit::access_load_at(Node*, Node*, TypePtr const*, Type const*, BasicType, unsigned long) (1 samples, 0.04%)</title><rect x="1183.8" y="179.0" width="0.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.8" y="190.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1183.8" y="163.0" width="0.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1186.8" y="174.0"></text>
</g>
<g>
<title>G1BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1183.8" y="147.0" width="0.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1186.8" y="158.0"></text>
</g>
<g>
<title>BarrierSetC2::load_at_resolved(C2Access&amp;, Type const*) const (1 samples, 0.04%)</title><rect x="1183.8" y="131.0" width="0.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1186.8" y="142.0"></text>
</g>
<g>
<title>GraphKit::make_load(Node*, Node*, Type const*, BasicType, int, MemNode::MemOrd, LoadNode::ControlDependency, bool, bool, bool) (1 samples, 0.04%)</title><rect x="1183.8" y="115.0" width="0.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1186.8" y="126.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.04%)</title><rect x="1183.8" y="99.0" width="0.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.8" y="110.0"></text>
</g>
<g>
<title>LoadNode::Ideal(PhaseGVN*, bool) (1 samples, 0.04%)</title><rect x="1183.8" y="83.0" width="0.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1186.8" y="94.0"></text>
</g>
<g>
<title>MemNode::find_previous_store(PhaseTransform*) (1 samples, 0.04%)</title><rect x="1183.8" y="67.0" width="0.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1186.8" y="78.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) (1 samples, 0.04%)</title><rect x="1183.8" y="51.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.8" y="62.0"></text>
</g>
<g>
<title>Node::dominates(Node*, Node_List&amp;) (1 samples, 0.04%)</title><rect x="1183.8" y="35.0" width="0.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1186.8" y="46.0"></text>
</g>
<g>
<title>PhaseRemoveUseless::PhaseRemoveUseless(PhaseGVN*, Unique_Node_List*, Phase::PhaseNumber) (1 samples, 0.04%)</title><rect x="1184.2" y="1091.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1187.2" y="1102.0"></text>
</g>
<g>
<title>Compile::remove_useless_nodes(Unique_Node_List&amp;) (1 samples, 0.04%)</title><rect x="1184.2" y="1075.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.2" y="1086.0"></text>
</g>
<g>
<title>[tid=32027] (1 samples, 0.04%)</title><rect x="1184.7" y="1251.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1187.7" y="1262.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.04%)</title><rect x="1184.7" y="1235.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1187.7" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1184.7" y="1219.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1187.7" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1184.7" y="1203.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1187.7" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1184.7" y="1187.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1187.7" y="1198.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1184.7" y="1171.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1187.7" y="1182.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="1184.7" y="1155.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1187.7" y="1166.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1184.7" y="1139.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1187.7" y="1150.0"></text>
</g>
<g>
<title>[tid=32030] (6 samples, 0.24%)</title><rect x="1185.2" y="1251.0" width="2.9" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1188.2" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1185.2" y="1235.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.2" y="1246.0"></text>
</g>
<g>
<title>WatcherThread::~WatcherThread() (1 samples, 0.04%)</title><rect x="1185.2" y="1219.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1188.2" y="1230.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1185.2" y="1203.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1188.2" y="1214.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1185.2" y="1187.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1188.2" y="1198.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1185.2" y="1171.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1188.2" y="1182.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.08%)</title><rect x="1185.7" y="1235.0" width="0.9" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1188.7" y="1246.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.08%)</title><rect x="1185.7" y="1219.0" width="0.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1188.7" y="1230.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.08%)</title><rect x="1185.7" y="1203.0" width="0.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1188.7" y="1214.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.08%)</title><rect x="1185.7" y="1187.0" width="0.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1188.7" y="1198.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.08%)</title><rect x="1185.7" y="1171.0" width="0.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1188.7" y="1182.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="1185.7" y="1155.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1188.7" y="1166.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="1185.7" y="1139.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1188.7" y="1150.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1185.7" y="1123.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1188.7" y="1134.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1185.7" y="1107.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1188.7" y="1118.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1185.7" y="1091.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1188.7" y="1102.0"></text>
</g>
<g>
<title>hrtimer_init (1 samples, 0.04%)</title><rect x="1186.2" y="1155.0" width="0.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1189.2" y="1166.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.12%)</title><rect x="1186.6" y="1235.0" width="1.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1189.6" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.12%)</title><rect x="1186.6" y="1219.0" width="1.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1189.6" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.12%)</title><rect x="1186.6" y="1203.0" width="1.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.6" y="1214.0"></text>
</g>
<g>
<title>WatcherThread::run() (3 samples, 0.12%)</title><rect x="1186.6" y="1187.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1189.6" y="1198.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (3 samples, 0.12%)</title><rect x="1186.6" y="1171.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1189.6" y="1182.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (3 samples, 0.12%)</title><rect x="1186.6" y="1155.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.6" y="1166.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (3 samples, 0.12%)</title><rect x="1186.6" y="1139.0" width="1.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1189.6" y="1150.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.08%)</title><rect x="1186.6" y="1123.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1189.6" y="1134.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1187.1" y="1107.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1190.1" y="1118.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1187.1" y="1091.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1190.1" y="1102.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (1 samples, 0.04%)</title><rect x="1187.6" y="1123.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1190.6" y="1134.0"></text>
</g>
<g>
<title>[tid=32116] (1 samples, 0.04%)</title><rect x="1188.1" y="1251.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1191.1" y="1262.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1188.1" y="1235.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1191.1" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1188.1" y="1219.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1191.1" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1188.1" y="1203.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1191.1" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1188.1" y="1187.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.1" y="1198.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1188.1" y="1171.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1191.1" y="1182.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1188.1" y="1155.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1191.1" y="1166.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1188.1" y="1139.0" width="0.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1191.1" y="1150.0"></text>
</g>
<g>
<title>[tid=32117] (1 samples, 0.04%)</title><rect x="1188.6" y="1251.0" width="0.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1191.6" y="1262.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1188.6" y="1235.0" width="0.4" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1191.6" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1188.6" y="1219.0" width="0.4" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1191.6" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1188.6" y="1203.0" width="0.4" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.6" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1188.6" y="1187.0" width="0.4" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.6" y="1198.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1188.6" y="1171.0" width="0.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1191.6" y="1182.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1188.6" y="1155.0" width="0.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1191.6" y="1166.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1188.6" y="1139.0" width="0.4" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1191.6" y="1150.0"></text>
</g>
<g>
<title>[tid=32118] (1 samples, 0.04%)</title><rect x="1189.0" y="1251.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1192.0" y="1262.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.04%)</title><rect x="1189.0" y="1235.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1192.0" y="1246.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.04%)</title><rect x="1189.0" y="1219.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1192.0" y="1230.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.04%)</title><rect x="1189.0" y="1203.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1192.0" y="1214.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.04%)</title><rect x="1189.0" y="1187.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1192.0" y="1198.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1189.0" y="1171.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1192.0" y="1182.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1189.0" y="1155.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1192.0" y="1166.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1189.0" y="1139.0" width="0.5" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="1192.0" y="1150.0"></text>
</g>
<g>
<title>[tid=32120] (1 samples, 0.04%)</title><rect x="1189.5" y="1251.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1192.5" y="1262.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1189.5" y="1235.0" width="0.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1192.5" y="1246.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.04%)</title><rect x="1189.5" y="1219.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1192.5" y="1230.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1189.5" y="1203.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1192.5" y="1214.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1189.5" y="1187.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1192.5" y="1198.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1189.5" y="1171.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1192.5" y="1182.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1189.5" y="1155.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1192.5" y="1166.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.04%)</title><rect x="1189.5" y="1139.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1192.5" y="1150.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="1189.5" y="1123.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1192.5" y="1134.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="1189.5" y="1107.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1192.5" y="1118.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="1189.5" y="1091.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1192.5" y="1102.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.04%)</title><rect x="1189.5" y="1075.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1192.5" y="1086.0"></text>
</g>
</g>
</svg>
