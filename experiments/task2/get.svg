<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (2,332 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=9317] (636 samples, 27.27%)</title><rect x="10.0" y="931.0" width="321.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="942.0">[NIO Selector #0 tid=9317]</text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="10.0" y="915.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (635 samples, 27.23%)</title><rect x="10.5" y="915.0" width="321.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="13.5" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.5" y="899.0" width="0.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="14.5" y="910.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="11.5" y="883.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="14.5" y="894.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="11.5" y="867.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="14.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (112 samples, 4.80%)</title><rect x="12.0" y="899.0" width="56.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="15.0" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (108 samples, 4.63%)</title><rect x="14.0" y="883.0" width="54.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="17.0" y="894.0">one/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.17%)</title><rect x="14.6" y="867.0" width="2.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="17.6" y="878.0"></text>
</g>
<g>
<title>[unknown] (99 samples, 4.25%)</title><rect x="16.6" y="867.0" width="50.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="19.6" y="878.0">[unkn..</text>
</g>
<g>
<title>Klass::is_klass() const volatile (4 samples, 0.17%)</title><rect x="16.6" y="851.0" width="2.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="19.6" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.17%)</title><rect x="16.6" y="835.0" width="2.0" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="19.6" y="846.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.17%)</title><rect x="16.6" y="819.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="19.6" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.09%)</title><rect x="16.6" y="803.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="19.6" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (1 samples, 0.04%)</title><rect x="17.6" y="803.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="20.6" y="814.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="18.1" y="803.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="21.1" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (7 samples, 0.30%)</title><rect x="18.6" y="851.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="21.6" y="862.0"></text>
</g>
<g>
<title>epoll_wait (88 samples, 3.77%)</title><rect x="22.1" y="851.0" width="44.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="25.1" y="862.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (64 samples, 2.74%)</title><rect x="34.3" y="835.0" width="32.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="37.3" y="846.0">en..</text>
</g>
<g>
<title>do_syscall_64 (64 samples, 2.74%)</title><rect x="34.3" y="819.0" width="32.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="37.3" y="830.0">do..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (62 samples, 2.66%)</title><rect x="34.8" y="803.0" width="31.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="37.8" y="814.0">__..</text>
</g>
<g>
<title>do_epoll_wait (59 samples, 2.53%)</title><rect x="34.8" y="787.0" width="29.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="37.8" y="798.0">do..</text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="36.8" y="771.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="39.8" y="782.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="36.8" y="755.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="39.8" y="766.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="36.8" y="739.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="39.8" y="750.0"></text>
</g>
<g>
<title>ep_poll (48 samples, 2.06%)</title><rect x="37.3" y="771.0" width="24.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="40.3" y="782.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (22 samples, 0.94%)</title><rect x="39.9" y="755.0" width="11.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="42.9" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (17 samples, 0.73%)</title><rect x="41.9" y="739.0" width="8.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="44.9" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (9 samples, 0.39%)</title><rect x="44.9" y="723.0" width="4.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="47.9" y="734.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rcx (1 samples, 0.04%)</title><rect x="45.4" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="48.4" y="718.0"></text>
</g>
<g>
<title>sock_poll (6 samples, 0.26%)</title><rect x="45.9" y="707.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.9" y="718.0"></text>
</g>
<g>
<title>tcp_poll (2 samples, 0.09%)</title><rect x="47.4" y="691.0" width="1.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.4" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="48.5" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="51.5" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="49.0" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="52.0" y="718.0"></text>
</g>
<g>
<title>sock_poll (2 samples, 0.09%)</title><rect x="49.5" y="723.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="52.5" y="734.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.04%)</title><rect x="50.5" y="739.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="53.5" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="51.0" y="755.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="54.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (20 samples, 0.86%)</title><rect x="51.5" y="755.0" width="10.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="54.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (19 samples, 0.81%)</title><rect x="52.0" y="739.0" width="9.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="55.0" y="750.0"></text>
</g>
<g>
<title>schedule (17 samples, 0.73%)</title><rect x="53.0" y="723.0" width="8.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="56.0" y="734.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.69%)</title><rect x="53.5" y="707.0" width="8.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="56.5" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (16 samples, 0.69%)</title><rect x="53.5" y="691.0" width="8.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="56.5" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="61.1" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="64.1" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="61.1" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="64.1" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="61.1" y="643.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="64.1" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="61.1" y="627.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="64.1" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="61.1" y="611.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="64.1" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="61.1" y="595.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="64.1" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="61.1" y="579.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="64.1" y="590.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.04%)</title><rect x="61.6" y="771.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="64.6" y="782.0"></text>
</g>
<g>
<title>fput (5 samples, 0.21%)</title><rect x="62.1" y="771.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="65.1" y="782.0"></text>
</g>
<g>
<title>fput (3 samples, 0.13%)</title><rect x="64.6" y="787.0" width="1.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="67.6" y="798.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.04%)</title><rect x="66.2" y="803.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.2" y="814.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="66.7" y="867.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="69.7" y="878.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.09%)</title><rect x="67.2" y="867.0" width="1.0" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="70.2" y="878.0"></text>
</g>
<g>
<title>epoll_wait (1 samples, 0.04%)</title><rect x="68.2" y="867.0" width="0.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="71.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (519 samples, 22.26%)</title><rect x="68.7" y="899.0" width="262.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="71.7" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (519 samples, 22.26%)</title><rect x="68.7" y="883.0" width="262.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="71.7" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (443 samples, 19.00%)</title><rect x="68.7" y="867.0" width="224.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="71.7" y="878.0">one/nio/http/HttpSession.proce..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (425 samples, 18.22%)</title><rect x="70.2" y="851.0" width="215.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="73.2" y="862.0">one/nio/http/HttpSession.han..</text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="70.2" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="73.2" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (424 samples, 18.18%)</title><rect x="70.7" y="835.0" width="214.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="73.7" y="846.0">one/nio/http/HttpServer.hand..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (419 samples, 17.97%)</title><rect x="70.7" y="819.0" width="212.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="73.7" y="830.0">RequestHandler0_entity.handl..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (268 samples, 11.49%)</title><rect x="70.7" y="803.0" width="135.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="73.7" y="814.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (263 samples, 11.28%)</title><rect x="71.7" y="787.0" width="133.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="74.7" y="798.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (5 samples, 0.21%)</title><rect x="71.7" y="771.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="74.7" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (3 samples, 0.13%)</title><rect x="72.7" y="755.0" width="1.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="75.7" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.04%)</title><rect x="72.7" y="739.0" width="0.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="75.7" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="72.7" y="723.0" width="0.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="75.7" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="73.3" y="739.0" width="1.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="76.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (2 samples, 0.09%)</title><rect x="73.3" y="723.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="76.3" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (258 samples, 11.06%)</title><rect x="74.3" y="771.0" width="130.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="77.3" y="782.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/Session.write (254 samples, 10.89%)</title><rect x="76.3" y="755.0" width="128.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="79.3" y="766.0">one/nio/net/Sess..</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="76.3" y="739.0" width="0.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="79.3" y="750.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.09%)</title><rect x="76.8" y="739.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="79.8" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (250 samples, 10.72%)</title><rect x="77.8" y="739.0" width="126.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="80.8" y="750.0">one/nio/net/Sess..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (250 samples, 10.72%)</title><rect x="77.8" y="723.0" width="126.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="80.8" y="734.0">one/nio/net/Nati..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="79.3" y="707.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="82.3" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.34%)</title><rect x="79.8" y="707.0" width="4.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="82.8" y="718.0"></text>
</g>
<g>
<title>[unknown] (8 samples, 0.34%)</title><rect x="79.8" y="691.0" width="4.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="82.8" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.17%)</title><rect x="79.8" y="675.0" width="2.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="82.8" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="80.8" y="659.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="83.8" y="670.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="81.3" y="643.0" width="0.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="84.3" y="654.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (2 samples, 0.09%)</title><rect x="81.9" y="675.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="84.9" y="686.0"></text>
</g>
<g>
<title>__send (2 samples, 0.09%)</title><rect x="82.9" y="675.0" width="1.0" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="85.9" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.09%)</title><rect x="83.9" y="707.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="86.9" y="718.0"></text>
</g>
<g>
<title>__send (236 samples, 10.12%)</title><rect x="84.9" y="707.0" width="119.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="87.9" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (232 samples, 9.95%)</title><rect x="86.9" y="691.0" width="117.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="89.9" y="702.0">entry_SYSCALL_..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="86.9" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="89.9" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (231 samples, 9.91%)</title><rect x="87.4" y="675.0" width="116.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.4" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (228 samples, 9.78%)</title><rect x="88.9" y="659.0" width="115.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="91.9" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (228 samples, 9.78%)</title><rect x="88.9" y="643.0" width="115.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="91.9" y="654.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (227 samples, 9.73%)</title><rect x="88.9" y="627.0" width="114.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="91.9" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (225 samples, 9.65%)</title><rect x="88.9" y="611.0" width="113.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.9" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (224 samples, 9.61%)</title><rect x="88.9" y="595.0" width="113.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="91.9" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="88.9" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="91.9" y="590.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.09%)</title><rect x="89.4" y="579.0" width="1.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="92.4" y="590.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="89.4" y="563.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.4" y="574.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="89.9" y="563.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="92.9" y="574.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="90.5" y="579.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="93.5" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (219 samples, 9.39%)</title><rect x="91.0" y="579.0" width="110.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="94.0" y="590.0">tcp_sendmsg_l..</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.09%)</title><rect x="93.0" y="563.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="96.0" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="93.5" y="547.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="96.5" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (2 samples, 0.09%)</title><rect x="94.0" y="563.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="97.0" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.09%)</title><rect x="94.0" y="547.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="97.0" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 0.64%)</title><rect x="95.0" y="563.0" width="7.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="98.0" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (13 samples, 0.56%)</title><rect x="95.5" y="547.0" width="6.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="98.5" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (5 samples, 0.21%)</title><rect x="96.0" y="531.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="99.0" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (5 samples, 0.21%)</title><rect x="96.0" y="515.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="99.0" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.17%)</title><rect x="98.6" y="531.0" width="2.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="101.6" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="100.1" y="515.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="103.1" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="100.1" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="103.1" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="100.1" y="483.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="103.1" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="100.1" y="467.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="103.1" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="100.1" y="451.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="103.1" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="100.1" y="435.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="103.1" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="100.1" y="419.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="103.1" y="430.0"></text>
</g>
<g>
<title>ksize (3 samples, 0.13%)</title><rect x="100.6" y="531.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="103.6" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="102.1" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="105.1" y="558.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="102.1" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="105.1" y="542.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="102.1" y="515.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="105.1" y="526.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="102.1" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="105.1" y="510.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="102.1" y="483.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="105.1" y="494.0"></text>
</g>
<g>
<title>call_timer_fn (1 samples, 0.04%)</title><rect x="102.1" y="467.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="105.1" y="478.0"></text>
</g>
<g>
<title>process_timeout (1 samples, 0.04%)</title><rect x="102.1" y="451.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="105.1" y="462.0"></text>
</g>
<g>
<title>wake_up_process (1 samples, 0.04%)</title><rect x="102.1" y="435.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.1" y="446.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.04%)</title><rect x="102.1" y="419.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="105.1" y="430.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="102.1" y="403.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="105.1" y="414.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.09%)</title><rect x="102.6" y="563.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="105.6" y="574.0"></text>
</g>
<g>
<title>tcp_push (190 samples, 8.15%)</title><rect x="103.6" y="563.0" width="96.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="106.6" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (189 samples, 8.10%)</title><rect x="103.6" y="547.0" width="95.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="106.6" y="558.0">__tcp_push_..</text>
</g>
<g>
<title>tcp_write_xmit (187 samples, 8.02%)</title><rect x="104.6" y="531.0" width="94.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="107.6" y="542.0">tcp_write_x..</text>
</g>
<g>
<title>__tcp_transmit_skb (168 samples, 7.20%)</title><rect x="108.7" y="515.0" width="85.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="111.7" y="526.0">__tcp_tran..</text>
</g>
<g>
<title>ip_queue_xmit (157 samples, 6.73%)</title><rect x="112.7" y="499.0" width="79.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="115.7" y="510.0">ip_queue_..</text>
</g>
<g>
<title>__ip_queue_xmit (156 samples, 6.69%)</title><rect x="112.7" y="483.0" width="79.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="115.7" y="494.0">__ip_queu..</text>
</g>
<g>
<title>ip_local_out (153 samples, 6.56%)</title><rect x="113.2" y="467.0" width="77.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="116.2" y="478.0">ip_local_..</text>
</g>
<g>
<title>ip_output (153 samples, 6.56%)</title><rect x="113.2" y="451.0" width="77.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="116.2" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="114.2" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="117.2" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (150 samples, 6.43%)</title><rect x="114.7" y="435.0" width="75.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="117.7" y="446.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.09%)</title><rect x="116.3" y="419.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="119.3" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (145 samples, 6.22%)</title><rect x="117.3" y="419.0" width="73.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="120.3" y="430.0">ip_finis..</text>
</g>
<g>
<title>__local_bh_enable_ip (123 samples, 5.27%)</title><rect x="118.8" y="403.0" width="62.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="121.8" y="414.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.21 (123 samples, 5.27%)</title><rect x="118.8" y="387.0" width="62.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="121.8" y="398.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (121 samples, 5.19%)</title><rect x="119.8" y="371.0" width="61.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.8" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (121 samples, 5.19%)</title><rect x="119.8" y="355.0" width="61.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="122.8" y="366.0">__soft..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.09%)</title><rect x="121.3" y="339.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="124.3" y="350.0"></text>
</g>
<g>
<title>net_rx_action (115 samples, 4.93%)</title><rect x="122.3" y="339.0" width="58.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="125.3" y="350.0">net_rx..</text>
</g>
<g>
<title>process_backlog (113 samples, 4.85%)</title><rect x="123.3" y="323.0" width="57.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="126.3" y="334.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (111 samples, 4.76%)</title><rect x="124.4" y="307.0" width="56.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="127.4" y="318.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (111 samples, 4.76%)</title><rect x="124.4" y="291.0" width="56.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="127.4" y="302.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_core (4 samples, 0.17%)</title><rect x="124.4" y="275.0" width="2.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="127.4" y="286.0"></text>
</g>
<g>
<title>ip_rcv (106 samples, 4.55%)</title><rect x="126.4" y="275.0" width="53.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="129.4" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.09%)</title><rect x="126.4" y="259.0" width="1.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="129.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="127.4" y="259.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="130.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (103 samples, 4.42%)</title><rect x="127.9" y="259.0" width="52.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="130.9" y="270.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (103 samples, 4.42%)</title><rect x="127.9" y="243.0" width="52.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="130.9" y="254.0">ip_lo..</text>
</g>
<g>
<title>ip_local_deliver_finish (103 samples, 4.42%)</title><rect x="127.9" y="227.0" width="52.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="130.9" y="238.0">ip_lo..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (103 samples, 4.42%)</title><rect x="127.9" y="211.0" width="52.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="130.9" y="222.0">ip_pr..</text>
</g>
<g>
<title>tcp_v4_rcv (102 samples, 4.37%)</title><rect x="128.4" y="195.0" width="51.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="131.4" y="206.0">tcp_v..</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.17%)</title><rect x="129.4" y="179.0" width="2.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="132.4" y="190.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="131.4" y="179.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="134.4" y="190.0"></text>
</g>
<g>
<title>inet_ehashfn (1 samples, 0.04%)</title><rect x="131.9" y="179.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="134.9" y="190.0"></text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="132.5" y="179.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="135.5" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (3 samples, 0.13%)</title><rect x="133.0" y="179.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="136.0" y="190.0"></text>
</g>
<g>
<title>apparmor_socket_sock_rcv_skb (2 samples, 0.09%)</title><rect x="133.5" y="163.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="136.5" y="174.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (1 samples, 0.04%)</title><rect x="134.5" y="179.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="137.5" y="190.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.04%)</title><rect x="135.0" y="179.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="138.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (86 samples, 3.69%)</title><rect x="135.5" y="179.0" width="43.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="138.5" y="190.0">tcp_..</text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.04%)</title><rect x="135.5" y="163.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="138.5" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (84 samples, 3.60%)</title><rect x="136.0" y="163.0" width="42.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="139.0" y="174.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (6 samples, 0.26%)</title><rect x="137.0" y="147.0" width="3.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="140.0" y="158.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="137.0" y="131.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.0" y="142.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.21%)</title><rect x="137.5" y="131.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.5" y="142.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="137.5" y="115.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="140.5" y="126.0"></text>
</g>
<g>
<title>sk_reset_timer (4 samples, 0.17%)</title><rect x="138.0" y="115.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="141.0" y="126.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.13%)</title><rect x="138.5" y="99.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="141.5" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (3 samples, 0.13%)</title><rect x="138.5" y="83.0" width="1.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="141.5" y="94.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="140.0" y="147.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="143.0" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.09%)</title><rect x="140.5" y="147.0" width="1.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="143.5" y="158.0"></text>
</g>
<g>
<title>tcp_ack (24 samples, 1.03%)</title><rect x="141.6" y="147.0" width="12.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="144.6" y="158.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="145.1" y="131.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="148.1" y="142.0"></text>
</g>
<g>
<title>rb_next (1 samples, 0.04%)</title><rect x="145.6" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.6" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (11 samples, 0.47%)</title><rect x="146.1" y="131.0" width="5.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="149.1" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.17%)</title><rect x="149.2" y="115.0" width="2.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="152.2" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.09%)</title><rect x="149.2" y="99.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="152.2" y="110.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="149.2" y="83.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="152.2" y="94.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="149.7" y="83.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="152.7" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="150.2" y="99.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="153.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.09%)</title><rect x="150.2" y="83.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="153.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (1 samples, 0.04%)</title><rect x="150.7" y="67.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="153.7" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="150.7" y="51.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="153.7" y="62.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="151.2" y="115.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="154.2" y="126.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="151.7" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="154.7" y="142.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (1 samples, 0.04%)</title><rect x="152.2" y="131.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="155.2" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.09%)</title><rect x="152.7" y="131.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="155.7" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (48 samples, 2.06%)</title><rect x="153.7" y="147.0" width="24.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="156.7" y="158.0">t..</text>
</g>
<g>
<title>sock_def_readable (42 samples, 1.80%)</title><rect x="155.7" y="131.0" width="21.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="158.7" y="142.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (42 samples, 1.80%)</title><rect x="155.7" y="115.0" width="21.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="158.7" y="126.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (42 samples, 1.80%)</title><rect x="155.7" y="99.0" width="21.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="158.7" y="110.0">_..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (42 samples, 1.80%)</title><rect x="155.7" y="83.0" width="21.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="158.7" y="94.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="177.0" y="131.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="180.0" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.04%)</title><rect x="177.5" y="131.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="180.5" y="142.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="178.0" y="147.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="181.0" y="158.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.04%)</title><rect x="178.5" y="163.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="181.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="179.0" y="179.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="182.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.04%)</title><rect x="179.5" y="179.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="182.5" y="190.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="180.0" y="275.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="183.0" y="286.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="180.5" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="183.5" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (19 samples, 0.81%)</title><rect x="181.0" y="403.0" width="9.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="184.0" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (18 samples, 0.77%)</title><rect x="181.0" y="387.0" width="9.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="184.0" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (9 samples, 0.39%)</title><rect x="182.5" y="371.0" width="4.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="185.5" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (5 samples, 0.21%)</title><rect x="183.1" y="355.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="186.1" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="183.1" y="339.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="186.1" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="183.6" y="339.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="186.6" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="183.6" y="323.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="186.6" y="334.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.09%)</title><rect x="184.1" y="339.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="187.1" y="350.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="185.1" y="339.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="188.1" y="350.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.04%)</title><rect x="185.1" y="323.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="188.1" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="185.6" y="355.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="188.6" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.09%)</title><rect x="186.1" y="355.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="189.1" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (2 samples, 0.09%)</title><rect x="187.1" y="371.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="190.1" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.13%)</title><rect x="188.1" y="371.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="191.1" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.09%)</title><rect x="188.6" y="355.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="191.6" y="366.0"></text>
</g>
<g>
<title>validate_xmit_xfrm (1 samples, 0.04%)</title><rect x="189.6" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="192.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.04%)</title><rect x="190.1" y="387.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="193.1" y="398.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.09%)</title><rect x="190.6" y="467.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="193.6" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="191.7" y="483.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="194.7" y="494.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="192.2" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="195.2" y="510.0"></text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="192.2" y="483.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="195.2" y="494.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="192.7" y="499.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="195.7" y="510.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="193.2" y="499.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="196.2" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="193.2" y="483.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="196.2" y="494.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="193.7" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="196.7" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="194.2" y="515.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="197.2" y="526.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.09%)</title><rect x="194.7" y="515.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="197.7" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="195.2" y="499.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="198.2" y="510.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="195.7" y="515.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="198.7" y="526.0"></text>
</g>
<g>
<title>skb_push (1 samples, 0.04%)</title><rect x="196.2" y="515.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="199.2" y="526.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="196.7" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="199.7" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.09%)</title><rect x="197.2" y="515.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="200.2" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.09%)</title><rect x="197.2" y="499.0" width="1.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="200.2" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="197.7" y="483.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="200.7" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="197.7" y="467.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="200.7" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="198.2" y="515.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="201.2" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="198.2" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="201.2" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="198.7" y="515.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="201.7" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (1 samples, 0.04%)</title><rect x="199.2" y="547.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="202.2" y="558.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.17%)</title><rect x="199.8" y="563.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="202.8" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.13%)</title><rect x="200.3" y="547.0" width="1.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="203.3" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="201.3" y="531.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="204.3" y="542.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="201.8" y="579.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="204.8" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (1 samples, 0.04%)</title><rect x="202.3" y="595.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="205.3" y="606.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.09%)</title><rect x="202.8" y="611.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="205.8" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="203.3" y="595.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="206.3" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="203.3" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="206.3" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="203.3" y="563.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="206.3" y="574.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="203.3" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="206.3" y="558.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="203.3" y="531.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="206.3" y="542.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="203.8" y="627.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="206.8" y="638.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="203.8" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="206.8" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="203.8" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="206.8" y="606.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="203.8" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="206.8" y="590.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="204.3" y="739.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="207.3" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="204.3" y="723.0" width="0.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="207.3" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="204.3" y="707.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="207.3" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (2 samples, 0.09%)</title><rect x="204.8" y="787.0" width="1.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="207.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.09%)</title><rect x="204.8" y="771.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="207.8" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.09%)</title><rect x="204.8" y="755.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="207.8" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="205.3" y="739.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="208.3" y="750.0"></text>
</g>
<g>
<title>one/nio/server/Server.incRequestsProcessed (1 samples, 0.04%)</title><rect x="205.8" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="208.8" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicLong.incrementAndGet (1 samples, 0.04%)</title><rect x="205.8" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="208.8" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (4 samples, 0.17%)</title><rect x="206.3" y="803.0" width="2.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="209.3" y="814.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.09%)</title><rect x="206.3" y="787.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="209.3" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="206.3" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="209.3" y="782.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="206.3" y="755.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="209.3" y="766.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="206.3" y="739.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="209.3" y="750.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="206.3" y="723.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="209.3" y="734.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="206.3" y="707.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="209.3" y="718.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="206.3" y="691.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="209.3" y="702.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="206.3" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="209.3" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="206.3" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="209.3" y="670.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="206.8" y="771.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="209.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (2 samples, 0.09%)</title><rect x="207.3" y="787.0" width="1.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="210.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="207.3" y="771.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="210.3" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="207.3" y="755.0" width="1.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="210.3" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (2 samples, 0.09%)</title><rect x="207.3" y="739.0" width="1.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="210.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (147 samples, 6.30%)</title><rect x="208.4" y="803.0" width="74.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="211.4" y="814.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (144 samples, 6.17%)</title><rect x="209.4" y="787.0" width="72.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="212.4" y="798.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (144 samples, 6.17%)</title><rect x="209.4" y="771.0" width="72.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="212.4" y="782.0">ru/mail/..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (7 samples, 0.30%)</title><rect x="209.4" y="755.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="212.4" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095293768.invoke (7 samples, 0.30%)</title><rect x="209.4" y="739.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="212.4" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.17%)</title><rect x="210.9" y="723.0" width="2.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="213.9" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.13%)</title><rect x="211.4" y="707.0" width="1.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="214.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (11 samples, 0.47%)</title><rect x="212.9" y="755.0" width="5.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.9" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (10 samples, 0.43%)</title><rect x="212.9" y="739.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="215.9" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (10 samples, 0.43%)</title><rect x="212.9" y="723.0" width="5.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="215.9" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (2 samples, 0.09%)</title><rect x="214.9" y="707.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="217.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (2 samples, 0.09%)</title><rect x="214.9" y="691.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="217.9" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (1 samples, 0.04%)</title><rect x="215.9" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="218.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="215.9" y="691.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="218.9" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="215.9" y="675.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="218.9" y="686.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="216.4" y="707.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="219.4" y="718.0"></text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="216.4" y="691.0" width="0.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="219.4" y="702.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="217.0" y="707.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="220.0" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="217.5" y="707.0" width="0.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="220.5" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (1 samples, 0.04%)</title><rect x="218.0" y="739.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="221.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="218.0" y="723.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="218.0" y="707.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="218.0" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="221.0" y="702.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.04%)</title><rect x="218.0" y="675.0" width="0.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="221.0" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (123 samples, 5.27%)</title><rect x="218.5" y="755.0" width="62.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="221.5" y="766.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (123 samples, 5.27%)</title><rect x="218.5" y="739.0" width="62.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="221.5" y="750.0">org/ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (118 samples, 5.06%)</title><rect x="218.5" y="723.0" width="59.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="221.5" y="734.0">Java_o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="221.0" y="707.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="224.0" y="718.0"></text>
</g>
<g>
<title>__malloc (5 samples, 0.21%)</title><rect x="221.5" y="707.0" width="2.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="224.5" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.13%)</title><rect x="224.0" y="707.0" width="1.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="227.0" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="225.6" y="707.0" width="0.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="228.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.09%)</title><rect x="226.1" y="707.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="229.1" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (101 samples, 4.33%)</title><rect x="227.1" y="707.0" width="51.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="230.1" y="718.0">rocks..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="227.6" y="691.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="230.6" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="228.1" y="691.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="231.1" y="702.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.09%)</title><rect x="228.6" y="691.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="231.6" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (5 samples, 0.21%)</title><rect x="229.6" y="691.0" width="2.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="232.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (91 samples, 3.90%)</title><rect x="232.1" y="691.0" width="46.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="235.1" y="702.0">rock..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (2 samples, 0.09%)</title><rect x="232.6" y="675.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="235.6" y="686.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="233.1" y="659.0" width="0.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="236.1" y="670.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="233.1" y="643.0" width="0.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="236.1" y="654.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="233.1" y="627.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="236.1" y="638.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="233.1" y="611.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="236.1" y="622.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="233.1" y="595.0" width="0.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="236.1" y="606.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="233.1" y="579.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="236.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="233.1" y="563.0" width="0.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="236.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="233.7" y="675.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="236.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (87 samples, 3.73%)</title><rect x="234.2" y="675.0" width="44.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="237.2" y="686.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (84 samples, 3.60%)</title><rect x="235.2" y="659.0" width="42.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="238.2" y="670.0">rock..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.09%)</title><rect x="235.2" y="643.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="238.2" y="654.0"></text>
</g>
<g>
<title>_init (4 samples, 0.17%)</title><rect x="236.2" y="643.0" width="2.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="239.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.04%)</title><rect x="238.2" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="241.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="238.7" y="643.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="241.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (74 samples, 3.17%)</title><rect x="239.2" y="643.0" width="37.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="242.2" y="654.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (3 samples, 0.13%)</title><rect x="243.8" y="627.0" width="1.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="246.8" y="638.0"></text>
</g>
<g>
<title>_init (6 samples, 0.26%)</title><rect x="245.3" y="627.0" width="3.0" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="248.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.13%)</title><rect x="248.3" y="627.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="251.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="248.8" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="251.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="249.3" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="252.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (3 samples, 0.13%)</title><rect x="249.8" y="627.0" width="1.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="252.8" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="250.9" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="253.9" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="250.9" y="595.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.9" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="250.9" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="253.9" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="250.9" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.9" y="574.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="250.9" y="547.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.9" y="558.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="250.9" y="531.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="253.9" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="250.9" y="515.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="253.9" y="526.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="251.4" y="627.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="254.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="251.4" y="611.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="254.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (2 samples, 0.09%)</title><rect x="251.9" y="627.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="254.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="252.9" y="627.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="255.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (31 samples, 1.33%)</title><rect x="253.9" y="627.0" width="15.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="256.9" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (30 samples, 1.29%)</title><rect x="253.9" y="611.0" width="15.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="256.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (29 samples, 1.24%)</title><rect x="254.4" y="595.0" width="14.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="257.4" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (3 samples, 0.13%)</title><rect x="262.5" y="579.0" width="1.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="265.5" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="264.0" y="579.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="267.0" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="264.5" y="579.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="267.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 0.34%)</title><rect x="265.0" y="579.0" width="4.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="268.0" y="590.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (4 samples, 0.17%)</title><rect x="266.5" y="563.0" width="2.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="269.5" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="268.6" y="563.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="271.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="269.1" y="611.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="272.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="269.6" y="627.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="272.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="269.6" y="611.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="272.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (2 samples, 0.09%)</title><rect x="270.6" y="627.0" width="1.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="273.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (3 samples, 0.13%)</title><rect x="271.6" y="627.0" width="1.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="274.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (7 samples, 0.30%)</title><rect x="273.1" y="627.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="276.1" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="274.6" y="611.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="277.6" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="274.6" y="595.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="277.6" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="274.6" y="579.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="277.6" y="590.0"></text>
</g>
<g>
<title>run_timer_softirq (1 samples, 0.04%)</title><rect x="274.6" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="277.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="275.1" y="611.0" width="1.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="278.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="276.2" y="611.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="279.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="276.7" y="643.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="279.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="277.2" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="280.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="277.7" y="659.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="280.7" y="670.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="278.2" y="723.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="281.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (1 samples, 0.04%)</title><rect x="278.7" y="723.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="281.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.13%)</title><rect x="279.2" y="723.0" width="1.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="282.2" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/CustomNoSuchElementException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="280.7" y="755.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="283.7" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (2 samples, 0.09%)</title><rect x="281.2" y="755.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="284.2" y="766.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="281.7" y="739.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="284.7" y="750.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="281.7" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="284.7" y="734.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="281.7" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="284.7" y="718.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="281.7" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.7" y="702.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="281.7" y="675.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="284.7" y="686.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="281.7" y="659.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="284.7" y="670.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="281.7" y="643.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="284.7" y="654.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (1 samples, 0.04%)</title><rect x="282.2" y="787.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="285.2" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (1 samples, 0.04%)</title><rect x="282.2" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="285.2" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (1 samples, 0.04%)</title><rect x="282.2" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="285.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.04%)</title><rect x="282.7" y="819.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="285.7" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="282.7" y="803.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="285.7" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 0.17%)</title><rect x="283.2" y="819.0" width="2.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.2" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (4 samples, 0.17%)</title><rect x="283.2" y="803.0" width="2.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="286.2" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (2 samples, 0.09%)</title><rect x="283.2" y="787.0" width="1.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="286.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (2 samples, 0.09%)</title><rect x="283.2" y="771.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (2 samples, 0.09%)</title><rect x="283.2" y="755.0" width="1.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="286.2" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (2 samples, 0.09%)</title><rect x="283.2" y="739.0" width="1.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="286.2" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="284.3" y="787.0" width="1.0" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="287.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (5 samples, 0.21%)</title><rect x="285.3" y="851.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="288.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (2 samples, 0.09%)</title><rect x="285.3" y="835.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="288.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="285.8" y="819.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="288.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="285.8" y="803.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="288.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="285.8" y="787.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="288.8" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="286.3" y="835.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="289.3" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="286.3" y="819.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="289.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="286.8" y="803.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="289.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.04%)</title><rect x="286.8" y="787.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="289.8" y="798.0"></text>
</g>
<g>
<title>java/lang/String.checkBoundsOffCount (1 samples, 0.04%)</title><rect x="287.3" y="803.0" width="0.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="290.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (3 samples, 0.13%)</title><rect x="287.8" y="851.0" width="1.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="290.8" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (3 samples, 0.13%)</title><rect x="287.8" y="835.0" width="1.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="290.8" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="288.3" y="819.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="291.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="288.8" y="819.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="291.8" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="289.3" y="851.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="292.3" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 0.21%)</title><rect x="289.8" y="851.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="292.8" y="862.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="290.3" y="835.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="293.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.09%)</title><rect x="290.8" y="835.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.8" y="846.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (2 samples, 0.09%)</title><rect x="290.8" y="819.0" width="1.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="293.8" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="291.3" y="803.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="294.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="291.8" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="294.8" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="292.3" y="851.0" width="0.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="295.3" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="292.3" y="835.0" width="0.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="295.3" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="292.3" y="819.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="295.3" y="830.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (1 samples, 0.04%)</title><rect x="292.3" y="803.0" width="0.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="295.3" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.04%)</title><rect x="292.9" y="867.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="295.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (75 samples, 3.22%)</title><rect x="293.4" y="867.0" width="37.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="296.4" y="878.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (71 samples, 3.04%)</title><rect x="295.4" y="851.0" width="35.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="298.4" y="862.0">one..</text>
</g>
<g>
<title>[unknown] (23 samples, 0.99%)</title><rect x="297.4" y="835.0" width="11.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="300.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (23 samples, 0.99%)</title><rect x="297.4" y="819.0" width="11.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="300.4" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (18 samples, 0.77%)</title><rect x="297.4" y="803.0" width="9.1" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="300.4" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="298.4" y="787.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="301.4" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="298.9" y="787.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="301.9" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="299.4" y="787.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="302.4" y="798.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="299.9" y="787.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="302.9" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (9 samples, 0.39%)</title><rect x="300.4" y="787.0" width="4.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="303.4" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="301.0" y="771.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="304.0" y="782.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (3 samples, 0.13%)</title><rect x="301.5" y="771.0" width="1.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="304.5" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="303.0" y="771.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="306.0" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (1 samples, 0.04%)</title><rect x="303.5" y="771.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="306.5" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.09%)</title><rect x="304.0" y="771.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="307.0" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.13%)</title><rect x="305.0" y="787.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="308.0" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="306.5" y="803.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="309.5" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 0.17%)</title><rect x="307.0" y="803.0" width="2.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="310.0" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="309.0" y="835.0" width="0.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="312.0" y="846.0"></text>
</g>
<g>
<title>recv (43 samples, 1.84%)</title><rect x="309.6" y="835.0" width="21.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="312.6" y="846.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (41 samples, 1.76%)</title><rect x="310.6" y="819.0" width="20.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="313.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.09%)</title><rect x="310.6" y="803.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="313.6" y="814.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="311.1" y="787.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="314.1" y="798.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="311.1" y="771.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="314.1" y="782.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="311.1" y="755.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="314.1" y="766.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="311.1" y="739.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="314.1" y="750.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="311.1" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="314.1" y="734.0"></text>
</g>
<g>
<title>rebalance_domains (1 samples, 0.04%)</title><rect x="311.1" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="314.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (39 samples, 1.67%)</title><rect x="311.6" y="803.0" width="19.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="314.6" y="814.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.09%)</title><rect x="312.6" y="787.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="315.6" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (35 samples, 1.50%)</title><rect x="313.6" y="787.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="316.6" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (33 samples, 1.42%)</title><rect x="313.6" y="771.0" width="16.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="316.6" y="782.0"></text>
</g>
<g>
<title>iov_iter_init (1 samples, 0.04%)</title><rect x="314.1" y="755.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="317.1" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (28 samples, 1.20%)</title><rect x="314.6" y="755.0" width="14.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="317.6" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.04%)</title><rect x="314.6" y="739.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="317.6" y="750.0"></text>
</g>
<g>
<title>inet_recvmsg (20 samples, 0.86%)</title><rect x="315.1" y="739.0" width="10.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="318.1" y="750.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.04%)</title><rect x="315.6" y="723.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="318.6" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (18 samples, 0.77%)</title><rect x="316.1" y="723.0" width="9.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="319.1" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (4 samples, 0.17%)</title><rect x="317.7" y="707.0" width="2.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="320.7" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="317.7" y="691.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="320.7" y="702.0"></text>
</g>
<g>
<title>skb_release_all (3 samples, 0.13%)</title><rect x="318.2" y="691.0" width="1.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="321.2" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="318.2" y="675.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="321.2" y="686.0"></text>
</g>
<g>
<title>sock_rfree (2 samples, 0.09%)</title><rect x="318.7" y="675.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="321.7" y="686.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="319.7" y="707.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="322.7" y="718.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="319.7" y="691.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="322.7" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="320.2" y="707.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="323.2" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="320.2" y="691.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="323.2" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (7 samples, 0.30%)</title><rect x="320.7" y="707.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="323.7" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (7 samples, 0.30%)</title><rect x="320.7" y="691.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="323.7" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.21%)</title><rect x="321.7" y="675.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="324.7" y="686.0"></text>
</g>
<g>
<title>__check_object_size (3 samples, 0.13%)</title><rect x="321.7" y="659.0" width="1.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="324.7" y="670.0"></text>
</g>
<g>
<title>__check_heap_object (2 samples, 0.09%)</title><rect x="321.7" y="643.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="324.7" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="322.7" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="325.7" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.09%)</title><rect x="323.2" y="659.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="326.2" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (2 samples, 0.09%)</title><rect x="323.2" y="643.0" width="1.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="326.2" y="654.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.09%)</title><rect x="324.2" y="707.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="327.2" y="718.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="324.7" y="691.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="327.7" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (7 samples, 0.30%)</title><rect x="325.2" y="739.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="328.2" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (6 samples, 0.26%)</title><rect x="325.7" y="723.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="328.7" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (6 samples, 0.26%)</title><rect x="325.7" y="707.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="328.7" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.26%)</title><rect x="325.7" y="691.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="328.7" y="702.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (3 samples, 0.13%)</title><rect x="327.3" y="675.0" width="1.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="330.3" y="686.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.04%)</title><rect x="327.3" y="659.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="330.3" y="670.0"></text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 0.09%)</title><rect x="327.8" y="659.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="330.8" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.13%)</title><rect x="328.8" y="755.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="331.8" y="766.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.09%)</title><rect x="328.8" y="739.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="331.8" y="750.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="328.8" y="723.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="331.8" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="329.3" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="332.3" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="329.8" y="739.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="332.8" y="750.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="330.3" y="771.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="333.3" y="782.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.04%)</title><rect x="330.8" y="771.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="333.8" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.04%)</title><rect x="331.3" y="899.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="334.3" y="910.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.04%)</title><rect x="331.3" y="883.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="334.3" y="894.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="331.3" y="867.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="334.3" y="878.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=9320] (633 samples, 27.14%)</title><rect x="331.8" y="931.0" width="320.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="334.8" y="942.0">[NIO Selector #3 tid=9320]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (633 samples, 27.14%)</title><rect x="331.8" y="915.0" width="320.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="334.8" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (116 samples, 4.97%)</title><rect x="332.8" y="899.0" width="58.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="335.8" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (116 samples, 4.97%)</title><rect x="332.8" y="883.0" width="58.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="335.8" y="894.0">one/ni..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (4 samples, 0.17%)</title><rect x="336.4" y="867.0" width="2.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="339.4" y="878.0"></text>
</g>
<g>
<title>[unknown] (101 samples, 4.33%)</title><rect x="338.4" y="867.0" width="51.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="341.4" y="878.0">[unkn..</text>
</g>
<g>
<title>Klass::is_klass() const volatile (5 samples, 0.21%)</title><rect x="338.4" y="851.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="341.4" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.21%)</title><rect x="338.4" y="835.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="341.4" y="846.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.21%)</title><rect x="338.4" y="819.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="341.4" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="338.4" y="803.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="341.4" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (2 samples, 0.09%)</title><rect x="338.9" y="803.0" width="1.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="341.9" y="814.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.09%)</title><rect x="339.9" y="803.0" width="1.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="342.9" y="814.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="340.4" y="787.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="343.4" y="798.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.17%)</title><rect x="340.9" y="851.0" width="2.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="343.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (92 samples, 3.95%)</title><rect x="343.0" y="851.0" width="46.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="346.0" y="862.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (72 samples, 3.09%)</title><rect x="353.1" y="835.0" width="36.4" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="356.1" y="846.0">ent..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="353.1" y="819.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="356.1" y="830.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="353.6" y="819.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="356.6" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (70 samples, 3.00%)</title><rect x="354.1" y="819.0" width="35.4" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="357.1" y="830.0">do_..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (65 samples, 2.79%)</title><rect x="356.6" y="803.0" width="32.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="359.6" y="814.0">__..</text>
</g>
<g>
<title>do_epoll_wait (64 samples, 2.74%)</title><rect x="356.6" y="787.0" width="32.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="359.6" y="798.0">do..</text>
</g>
<g>
<title>ep_poll (57 samples, 2.44%)</title><rect x="356.6" y="771.0" width="28.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="359.6" y="782.0">ep..</text>
</g>
<g>
<title>_raw_spin_lock_irq (1 samples, 0.04%)</title><rect x="359.6" y="755.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="362.6" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (27 samples, 1.16%)</title><rect x="360.2" y="755.0" width="13.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="363.2" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (16 samples, 0.69%)</title><rect x="365.2" y="739.0" width="8.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="368.2" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (13 samples, 0.56%)</title><rect x="366.2" y="723.0" width="6.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="369.2" y="734.0"></text>
</g>
<g>
<title>sock_poll (11 samples, 0.47%)</title><rect x="366.7" y="707.0" width="5.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="369.7" y="718.0"></text>
</g>
<g>
<title>tcp_poll (8 samples, 0.34%)</title><rect x="368.3" y="691.0" width="4.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="371.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="372.3" y="707.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="375.3" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="372.8" y="723.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.8" y="734.0"></text>
</g>
<g>
<title>mutex_unlock (1 samples, 0.04%)</title><rect x="373.3" y="739.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="376.3" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.09%)</title><rect x="373.8" y="755.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="376.8" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (21 samples, 0.90%)</title><rect x="374.8" y="755.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="377.8" y="766.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.04%)</title><rect x="374.8" y="739.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="377.8" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (20 samples, 0.86%)</title><rect x="375.3" y="739.0" width="10.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="378.3" y="750.0"></text>
</g>
<g>
<title>schedule (16 samples, 0.69%)</title><rect x="377.4" y="723.0" width="8.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="380.4" y="734.0"></text>
</g>
<g>
<title>__schedule (16 samples, 0.69%)</title><rect x="377.4" y="707.0" width="8.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="380.4" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (14 samples, 0.60%)</title><rect x="378.4" y="691.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="381.4" y="702.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.04%)</title><rect x="385.5" y="771.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="388.5" y="782.0"></text>
</g>
<g>
<title>fput (6 samples, 0.26%)</title><rect x="386.0" y="771.0" width="3.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="389.0" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="389.0" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="392.0" y="798.0"></text>
</g>
<g>
<title>clock_gettime (2 samples, 0.09%)</title><rect x="389.5" y="867.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="392.5" y="878.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.09%)</title><rect x="390.5" y="867.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="393.5" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (515 samples, 22.08%)</title><rect x="391.5" y="899.0" width="260.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="394.5" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (514 samples, 22.04%)</title><rect x="392.0" y="883.0" width="260.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="395.0" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (441 samples, 18.91%)</title><rect x="392.0" y="867.0" width="223.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="395.0" y="878.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (413 samples, 17.71%)</title><rect x="394.1" y="851.0" width="208.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="397.1" y="862.0">one/nio/http/HttpSession.ha..</text>
</g>
<g>
<title>java/lang/String.coder (1 samples, 0.04%)</title><rect x="394.1" y="835.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="397.1" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (409 samples, 17.54%)</title><rect x="394.6" y="835.0" width="206.9" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="397.6" y="846.0">one/nio/http/HttpServer.han..</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (406 samples, 17.41%)</title><rect x="394.6" y="819.0" width="205.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="397.6" y="830.0">RequestHandler0_entity.hand..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (242 samples, 10.38%)</title><rect x="394.6" y="803.0" width="122.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="397.6" y="814.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (240 samples, 10.29%)</title><rect x="395.1" y="787.0" width="121.4" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="398.1" y="798.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 0.26%)</title><rect x="395.1" y="771.0" width="3.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="398.1" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (5 samples, 0.21%)</title><rect x="395.6" y="755.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="398.6" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 0.17%)</title><rect x="395.6" y="739.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="398.6" y="750.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="397.1" y="723.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="400.1" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="397.6" y="739.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="400.6" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (1 samples, 0.04%)</title><rect x="397.6" y="723.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="400.6" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (234 samples, 10.03%)</title><rect x="398.1" y="771.0" width="118.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="401.1" y="782.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session.write (234 samples, 10.03%)</title><rect x="398.1" y="755.0" width="118.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="401.1" y="766.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (232 samples, 9.95%)</title><rect x="398.1" y="739.0" width="117.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="401.1" y="750.0">one/nio/net/Se..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (232 samples, 9.95%)</title><rect x="398.1" y="723.0" width="117.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="401.1" y="734.0">one/nio/net/Na..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="400.1" y="707.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="403.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.21%)</title><rect x="400.6" y="707.0" width="2.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="403.6" y="718.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 0.21%)</title><rect x="400.6" y="691.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="403.6" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (4 samples, 0.17%)</title><rect x="400.6" y="675.0" width="2.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="403.6" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (3 samples, 0.13%)</title><rect x="401.1" y="659.0" width="1.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="404.1" y="670.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="401.6" y="643.0" width="0.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="404.6" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="402.2" y="643.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="405.2" y="654.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="402.7" y="675.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="405.7" y="686.0"></text>
</g>
<g>
<title>__send (222 samples, 9.52%)</title><rect x="403.2" y="707.0" width="112.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="406.2" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (218 samples, 9.35%)</title><rect x="405.2" y="691.0" width="110.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="408.2" y="702.0">entry_SYSCALL..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="405.2" y="675.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="408.2" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (217 samples, 9.31%)</title><rect x="405.7" y="675.0" width="109.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="408.7" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (214 samples, 9.18%)</title><rect x="407.2" y="659.0" width="108.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="410.2" y="670.0">__x64_sys_sen..</text>
</g>
<g>
<title>__sys_sendto (214 samples, 9.18%)</title><rect x="407.2" y="643.0" width="108.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="410.2" y="654.0">__sys_sendto</text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="407.7" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="410.7" y="638.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="408.2" y="627.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="411.2" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (211 samples, 9.05%)</title><rect x="408.7" y="627.0" width="106.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="411.7" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (210 samples, 9.01%)</title><rect x="408.7" y="611.0" width="106.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="411.7" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>release_sock (2 samples, 0.09%)</title><rect x="408.7" y="595.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="411.7" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (208 samples, 8.92%)</title><rect x="409.7" y="595.0" width="105.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="412.7" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (2 samples, 0.09%)</title><rect x="409.7" y="579.0" width="1.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="412.7" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="410.2" y="563.0" width="0.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="413.2" y="574.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.04%)</title><rect x="410.8" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="413.8" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="410.8" y="563.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="413.8" y="574.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="411.3" y="579.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="414.3" y="590.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="411.8" y="579.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="414.8" y="590.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="412.3" y="579.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="415.3" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (202 samples, 8.66%)</title><rect x="412.8" y="579.0" width="102.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="415.8" y="590.0">tcp_sendmsg_..</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="414.8" y="563.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="417.8" y="574.0"></text>
</g>
<g>
<title>_copy_from_iter_full (3 samples, 0.13%)</title><rect x="415.3" y="563.0" width="1.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="418.3" y="574.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (1 samples, 0.04%)</title><rect x="416.3" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="419.3" y="558.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.04%)</title><rect x="416.8" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="419.8" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (7 samples, 0.30%)</title><rect x="417.3" y="563.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.3" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (6 samples, 0.26%)</title><rect x="417.8" y="547.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="420.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.09%)</title><rect x="417.8" y="531.0" width="1.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="420.8" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.04%)</title><rect x="417.8" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="420.8" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.04%)</title><rect x="418.3" y="515.0" width="0.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="421.3" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (2 samples, 0.09%)</title><rect x="418.9" y="531.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="421.9" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.09%)</title><rect x="419.9" y="531.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="422.9" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.04%)</title><rect x="420.9" y="563.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="423.9" y="574.0"></text>
</g>
<g>
<title>tcp_push (179 samples, 7.68%)</title><rect x="421.4" y="563.0" width="90.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="424.4" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (178 samples, 7.63%)</title><rect x="421.9" y="547.0" width="90.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="424.9" y="558.0">__tcp_push..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.04%)</title><rect x="421.9" y="531.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="424.9" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.04%)</title><rect x="422.4" y="531.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="425.4" y="542.0"></text>
</g>
<g>
<title>tcp_small_queue_check.isra.32 (2 samples, 0.09%)</title><rect x="422.9" y="531.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="425.9" y="542.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="423.4" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="426.4" y="526.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="423.4" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="426.4" y="510.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="423.4" y="483.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="426.4" y="494.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="423.4" y="467.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="426.4" y="478.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="423.4" y="451.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="426.4" y="462.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="423.4" y="435.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="426.4" y="446.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="423.4" y="419.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="426.4" y="430.0"></text>
</g>
<g>
<title>tcp_write_xmit (174 samples, 7.46%)</title><rect x="423.9" y="531.0" width="88.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="426.9" y="542.0">tcp_write_..</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="425.4" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="428.4" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (162 samples, 6.95%)</title><rect x="425.9" y="515.0" width="82.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="428.9" y="526.0">__tcp_tra..</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="430.0" y="499.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="433.0" y="510.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="430.5" y="499.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="433.5" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (149 samples, 6.39%)</title><rect x="431.0" y="499.0" width="75.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="434.0" y="510.0">ip_queue..</text>
</g>
<g>
<title>__ip_queue_xmit (147 samples, 6.30%)</title><rect x="431.5" y="483.0" width="74.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="434.5" y="494.0">__ip_que..</text>
</g>
<g>
<title>ip_local_out (144 samples, 6.17%)</title><rect x="433.0" y="467.0" width="72.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="436.0" y="478.0">ip_local..</text>
</g>
<g>
<title>ip_output (143 samples, 6.13%)</title><rect x="433.5" y="451.0" width="72.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="436.5" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.04%)</title><rect x="434.0" y="435.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="437.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (141 samples, 6.05%)</title><rect x="434.5" y="435.0" width="71.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="437.5" y="446.0">ip_finis..</text>
</g>
<g>
<title>ip_finish_output2 (137 samples, 5.87%)</title><rect x="436.1" y="419.0" width="69.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="439.1" y="430.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (114 samples, 4.89%)</title><rect x="439.1" y="403.0" width="57.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="442.1" y="414.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.21 (114 samples, 4.89%)</title><rect x="439.1" y="387.0" width="57.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="442.1" y="398.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (114 samples, 4.89%)</title><rect x="439.1" y="371.0" width="57.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="442.1" y="382.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (114 samples, 4.89%)</title><rect x="439.1" y="355.0" width="57.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="442.1" y="366.0">__soft..</text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="440.1" y="339.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="443.1" y="350.0"></text>
</g>
<g>
<title>net_rx_action (110 samples, 4.72%)</title><rect x="440.6" y="339.0" width="55.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="443.6" y="350.0">net_r..</text>
</g>
<g>
<title>process_backlog (108 samples, 4.63%)</title><rect x="441.6" y="323.0" width="54.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="444.6" y="334.0">proce..</text>
</g>
<g>
<title>__netif_receive_skb (107 samples, 4.59%)</title><rect x="442.1" y="307.0" width="54.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="445.1" y="318.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.04%)</title><rect x="442.1" y="291.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="445.1" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (105 samples, 4.50%)</title><rect x="442.6" y="291.0" width="53.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="445.6" y="302.0">__net..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.09%)</title><rect x="442.6" y="275.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="445.6" y="286.0"></text>
</g>
<g>
<title>ip_rcv (101 samples, 4.33%)</title><rect x="443.6" y="275.0" width="51.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="446.6" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.09%)</title><rect x="443.6" y="259.0" width="1.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="446.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (98 samples, 4.20%)</title><rect x="444.7" y="259.0" width="49.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="447.7" y="270.0">ip_rc..</text>
</g>
<g>
<title>ip_local_deliver (96 samples, 4.12%)</title><rect x="444.7" y="243.0" width="48.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="447.7" y="254.0">ip_l..</text>
</g>
<g>
<title>ip_local_deliver_finish (96 samples, 4.12%)</title><rect x="444.7" y="227.0" width="48.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="447.7" y="238.0">ip_l..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (94 samples, 4.03%)</title><rect x="444.7" y="211.0" width="47.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="447.7" y="222.0">ip_p..</text>
</g>
<g>
<title>sock_put (1 samples, 0.04%)</title><rect x="444.7" y="195.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="447.7" y="206.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="445.2" y="195.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="448.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (92 samples, 3.95%)</title><rect x="445.7" y="195.0" width="46.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="448.7" y="206.0">tcp_..</text>
</g>
<g>
<title>__inet_lookup_established (5 samples, 0.21%)</title><rect x="448.2" y="179.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="451.2" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.04%)</title><rect x="450.7" y="179.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="453.7" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.04%)</title><rect x="450.7" y="163.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="453.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (81 samples, 3.47%)</title><rect x="451.2" y="179.0" width="41.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="454.2" y="190.0">tcp..</text>
</g>
<g>
<title>ipv4_dst_check (1 samples, 0.04%)</title><rect x="451.2" y="163.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="454.2" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (80 samples, 3.43%)</title><rect x="451.7" y="163.0" width="40.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="454.7" y="174.0">tcp..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.04%)</title><rect x="452.2" y="147.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="455.2" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.04%)</title><rect x="452.2" y="131.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="455.2" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.04%)</title><rect x="452.2" y="115.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="455.2" y="126.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.04%)</title><rect x="452.2" y="99.0" width="0.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="455.2" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="452.2" y="83.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="455.2" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.04%)</title><rect x="452.8" y="147.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="455.8" y="158.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 0.90%)</title><rect x="453.3" y="147.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="456.3" y="158.0"></text>
</g>
<g>
<title>rb_first (1 samples, 0.04%)</title><rect x="455.8" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="458.8" y="142.0"></text>
</g>
<g>
<title>rb_next (2 samples, 0.09%)</title><rect x="456.3" y="131.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="459.3" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (8 samples, 0.34%)</title><rect x="457.3" y="131.0" width="4.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="460.3" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (3 samples, 0.13%)</title><rect x="457.3" y="115.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.3" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="457.3" y="99.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="460.3" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (1 samples, 0.04%)</title><rect x="457.3" y="83.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="460.3" y="94.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="457.8" y="99.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="460.8" y="110.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.09%)</title><rect x="457.8" y="83.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="460.8" y="94.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.09%)</title><rect x="457.8" y="67.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="460.8" y="78.0"></text>
</g>
<g>
<title>kfree (2 samples, 0.09%)</title><rect x="457.8" y="51.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="460.8" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="458.3" y="35.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="461.3" y="46.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="458.8" y="115.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="461.8" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (3 samples, 0.13%)</title><rect x="459.3" y="115.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="462.3" y="126.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.04%)</title><rect x="460.8" y="115.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="463.8" y="126.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.04%)</title><rect x="461.4" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="464.4" y="142.0"></text>
</g>
<g>
<title>tcp_rack_advance (1 samples, 0.04%)</title><rect x="461.9" y="131.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="464.9" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="462.4" y="131.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="465.4" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (2 samples, 0.09%)</title><rect x="462.9" y="131.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="465.9" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.04%)</title><rect x="463.9" y="147.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="466.9" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (52 samples, 2.23%)</title><rect x="464.4" y="147.0" width="26.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="467.4" y="158.0">t..</text>
</g>
<g>
<title>sock_def_readable (51 samples, 2.19%)</title><rect x="464.4" y="131.0" width="25.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="467.4" y="142.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (48 samples, 2.06%)</title><rect x="465.9" y="115.0" width="24.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="468.9" y="126.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (48 samples, 2.06%)</title><rect x="465.9" y="99.0" width="24.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="468.9" y="110.0">_..</text>
</g>
<g>
<title>_raw_spin_lock_irqsave (1 samples, 0.04%)</title><rect x="465.9" y="83.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="468.9" y="94.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (47 samples, 2.02%)</title><rect x="466.4" y="83.0" width="23.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="469.4" y="94.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="490.2" y="131.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="493.2" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="490.7" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="493.7" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="491.2" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="494.2" y="158.0"></text>
</g>
<g>
<title>tcp_rate_gen (1 samples, 0.04%)</title><rect x="491.7" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="494.7" y="158.0"></text>
</g>
<g>
<title>raw_local_deliver (1 samples, 0.04%)</title><rect x="492.2" y="211.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="495.2" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="492.7" y="211.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="495.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.09%)</title><rect x="493.2" y="243.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="496.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish_core.isra.18 (1 samples, 0.04%)</title><rect x="494.2" y="259.0" width="0.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="497.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.04%)</title><rect x="494.8" y="275.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="497.8" y="286.0"></text>
</g>
<g>
<title>ip_rcv_finish (1 samples, 0.04%)</title><rect x="495.3" y="275.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="498.3" y="286.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.04%)</title><rect x="495.8" y="291.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="498.8" y="302.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.04%)</title><rect x="496.3" y="339.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="499.3" y="350.0"></text>
</g>
<g>
<title>dev_queue_xmit (17 samples, 0.73%)</title><rect x="496.8" y="403.0" width="8.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="499.8" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (17 samples, 0.73%)</title><rect x="496.8" y="387.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="499.8" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (10 samples, 0.43%)</title><rect x="498.3" y="371.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="501.3" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.26%)</title><rect x="498.8" y="355.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="501.8" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.09%)</title><rect x="499.8" y="339.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="502.8" y="350.0"></text>
</g>
<g>
<title>netif_rx (1 samples, 0.04%)</title><rect x="500.8" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="503.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (1 samples, 0.04%)</title><rect x="500.8" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="503.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="500.8" y="307.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="503.8" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="501.3" y="339.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="504.3" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="501.8" y="355.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="504.8" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (2 samples, 0.09%)</title><rect x="502.3" y="355.0" width="1.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="505.3" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.04%)</title><rect x="503.4" y="371.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.4" y="382.0"></text>
</g>
<g>
<title>netdev_pick_tx (1 samples, 0.04%)</title><rect x="503.9" y="371.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="506.9" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (2 samples, 0.09%)</title><rect x="504.4" y="371.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="507.4" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (1 samples, 0.04%)</title><rect x="504.9" y="355.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="507.9" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.04%)</title><rect x="504.9" y="339.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="507.9" y="350.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="505.4" y="419.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="508.4" y="430.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.04%)</title><rect x="505.9" y="483.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="508.9" y="494.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.09%)</title><rect x="506.4" y="499.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="509.4" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.09%)</title><rect x="506.4" y="483.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="509.4" y="494.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="507.4" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="510.4" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="507.4" y="483.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="510.4" y="494.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.04%)</title><rect x="507.9" y="515.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="510.9" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="508.4" y="515.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="511.4" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="508.4" y="499.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="511.4" y="510.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="508.9" y="515.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="511.9" y="526.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.04%)</title><rect x="509.4" y="515.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="512.4" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.09%)</title><rect x="509.9" y="515.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="512.9" y="526.0"></text>
</g>
<g>
<title>tcp_rearm_rto (2 samples, 0.09%)</title><rect x="509.9" y="499.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="512.9" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.09%)</title><rect x="509.9" y="483.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="512.9" y="494.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.09%)</title><rect x="509.9" y="467.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="512.9" y="478.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.04%)</title><rect x="510.9" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="513.9" y="526.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (1 samples, 0.04%)</title><rect x="511.4" y="515.0" width="0.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="514.4" y="526.0"></text>
</g>
<g>
<title>tcp_send_mss (6 samples, 0.26%)</title><rect x="512.0" y="563.0" width="3.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="515.0" y="574.0"></text>
</g>
<g>
<title>ipv4_mtu (2 samples, 0.09%)</title><rect x="512.5" y="547.0" width="1.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="515.5" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (3 samples, 0.13%)</title><rect x="513.5" y="547.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="516.5" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="514.5" y="531.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="517.5" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.04%)</title><rect x="515.0" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="518.0" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.04%)</title><rect x="515.0" y="595.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="518.0" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.04%)</title><rect x="515.0" y="579.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="518.0" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.04%)</title><rect x="515.0" y="563.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="518.0" y="574.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.09%)</title><rect x="515.5" y="739.0" width="1.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="518.5" y="750.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.09%)</title><rect x="515.5" y="723.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="518.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.04%)</title><rect x="516.5" y="787.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="519.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.04%)</title><rect x="516.5" y="771.0" width="0.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="519.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="516.5" y="755.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="519.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (5 samples, 0.21%)</title><rect x="517.0" y="803.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="520.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (2 samples, 0.09%)</title><rect x="517.0" y="787.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="520.0" y="798.0"></text>
</g>
<g>
<title>jbyte_arraycopy (1 samples, 0.04%)</title><rect x="517.0" y="771.0" width="0.5" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="520.0" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="517.5" y="771.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="520.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.09%)</title><rect x="518.0" y="787.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="521.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.04%)</title><rect x="518.0" y="771.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="521.0" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="518.5" y="771.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="521.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="518.5" y="755.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="521.5" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.04%)</title><rect x="519.0" y="787.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="522.0" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="519.0" y="771.0" width="0.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.0" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="519.0" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="522.0" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="519.0" y="739.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (159 samples, 6.82%)</title><rect x="519.5" y="803.0" width="80.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.5" y="814.0">ru/mail/p..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="519.5" y="787.0" width="0.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="522.5" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.04%)</title><rect x="519.5" y="771.0" width="0.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="522.5" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="519.5" y="755.0" width="0.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="522.5" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="519.5" y="739.0" width="0.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="522.5" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="519.5" y="723.0" width="0.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="522.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.04%)</title><rect x="519.5" y="707.0" width="0.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="522.5" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.04%)</title><rect x="519.5" y="691.0" width="0.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="522.5" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (157 samples, 6.73%)</title><rect x="520.1" y="787.0" width="79.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="523.1" y="798.0">ru/mail/p..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (157 samples, 6.73%)</title><rect x="520.1" y="771.0" width="79.4" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="523.1" y="782.0">ru/mail/p..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (4 samples, 0.17%)</title><rect x="520.6" y="755.0" width="2.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="523.6" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095293768.invoke (4 samples, 0.17%)</title><rect x="520.6" y="739.0" width="2.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="523.6" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="521.1" y="723.0" width="0.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="524.1" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (1 samples, 0.04%)</title><rect x="521.1" y="707.0" width="0.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="524.1" y="718.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1004095028.invoke (2 samples, 0.09%)</title><rect x="521.6" y="723.0" width="1.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="524.6" y="734.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (1 samples, 0.04%)</title><rect x="522.1" y="707.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="525.1" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="522.1" y="691.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="525.1" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/CustomNoSuchElementException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="522.1" y="675.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="525.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (21 samples, 0.90%)</title><rect x="522.6" y="755.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.6" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (18 samples, 0.77%)</title><rect x="522.6" y="739.0" width="9.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="525.6" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (18 samples, 0.77%)</title><rect x="522.6" y="723.0" width="9.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="525.6" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (1 samples, 0.04%)</title><rect x="528.7" y="707.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="531.7" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.04%)</title><rect x="528.7" y="691.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="531.7" y="702.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (4 samples, 0.17%)</title><rect x="529.2" y="707.0" width="2.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="532.2" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.getCoder (1 samples, 0.04%)</title><rect x="529.2" y="691.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="532.2" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (3 samples, 0.13%)</title><rect x="529.7" y="691.0" width="1.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="532.7" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="530.2" y="675.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="533.2" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="531.2" y="707.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="534.2" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (3 samples, 0.13%)</title><rect x="531.7" y="739.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.7" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (3 samples, 0.13%)</title><rect x="531.7" y="723.0" width="1.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="534.7" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.13%)</title><rect x="531.7" y="707.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="534.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.04%)</title><rect x="531.7" y="691.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="534.7" y="702.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (1 samples, 0.04%)</title><rect x="531.7" y="675.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="534.7" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="532.2" y="691.0" width="1.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="535.2" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (128 samples, 5.49%)</title><rect x="533.2" y="755.0" width="64.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="536.2" y="766.0">org/roc..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (128 samples, 5.49%)</title><rect x="533.2" y="739.0" width="64.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="536.2" y="750.0">org/roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (124 samples, 5.32%)</title><rect x="533.2" y="723.0" width="62.8" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="536.2" y="734.0">Java_o..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="533.2" y="707.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="536.2" y="718.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.09%)</title><rect x="533.7" y="707.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="536.7" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.09%)</title><rect x="534.7" y="707.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="537.7" y="718.0"></text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.04%)</title><rect x="535.7" y="707.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="538.7" y="718.0"></text>
</g>
<g>
<title>operator delete[](void*) (1 samples, 0.04%)</title><rect x="536.2" y="707.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="539.2" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (3 samples, 0.13%)</title><rect x="536.7" y="707.0" width="1.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="539.7" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (2 samples, 0.09%)</title><rect x="538.3" y="707.0" width="1.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="541.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="539.3" y="707.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="542.3" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (111 samples, 4.76%)</title><rect x="539.8" y="707.0" width="56.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="542.8" y="718.0">rocksd..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="542.3" y="691.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="545.3" y="702.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.09%)</title><rect x="542.8" y="691.0" width="1.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="545.8" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="543.8" y="691.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="546.8" y="702.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="543.8" y="675.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="546.8" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="544.3" y="691.0" width="0.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="547.3" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="544.3" y="675.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="547.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (1 samples, 0.04%)</title><rect x="544.8" y="691.0" width="0.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="547.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (98 samples, 4.20%)</title><rect x="545.4" y="691.0" width="49.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="548.4" y="702.0">rocks..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (94 samples, 4.03%)</title><rect x="546.4" y="675.0" width="47.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="549.4" y="686.0">rock..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (92 samples, 3.95%)</title><rect x="546.9" y="659.0" width="46.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="549.9" y="670.0">rock..</text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="546.9" y="643.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="549.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.04%)</title><rect x="547.9" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="550.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (3 samples, 0.13%)</title><rect x="548.4" y="643.0" width="1.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="551.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (4 samples, 0.17%)</title><rect x="549.9" y="643.0" width="2.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="552.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (74 samples, 3.17%)</title><rect x="551.9" y="643.0" width="37.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="554.9" y="654.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (3 samples, 0.13%)</title><rect x="555.0" y="627.0" width="1.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="558.0" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="556.5" y="627.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="559.5" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="557.0" y="627.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="560.0" y="638.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="558.0" y="627.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="561.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (1 samples, 0.04%)</title><rect x="558.5" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="561.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="559.0" y="627.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="562.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (4 samples, 0.17%)</title><rect x="559.5" y="627.0" width="2.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="562.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="561.0" y="611.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="564.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.09%)</title><rect x="561.5" y="627.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="564.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (3 samples, 0.13%)</title><rect x="562.6" y="627.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="565.6" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="562.6" y="611.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="565.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="563.6" y="611.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="566.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::CompareAndSwap(unsigned int, void*, void*&amp;) (1 samples, 0.04%)</title><rect x="563.6" y="595.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="566.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.04%)</title><rect x="564.1" y="627.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="567.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (34 samples, 1.46%)</title><rect x="564.6" y="627.0" width="17.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="567.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (32 samples, 1.37%)</title><rect x="565.1" y="611.0" width="16.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="568.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (30 samples, 1.29%)</title><rect x="565.1" y="595.0" width="15.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="568.1" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (2 samples, 0.09%)</title><rect x="572.7" y="579.0" width="1.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="575.7" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.09%)</title><rect x="573.7" y="579.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="576.7" y="590.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="574.7" y="579.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="577.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 0.39%)</title><rect x="575.7" y="579.0" width="4.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="578.7" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (4 samples, 0.17%)</title><rect x="577.7" y="563.0" width="2.1" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="580.7" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="579.8" y="563.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="582.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.09%)</title><rect x="580.3" y="595.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="583.3" y="606.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="580.8" y="579.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="583.8" y="590.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="580.8" y="563.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="583.8" y="574.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="580.8" y="547.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="583.8" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="580.8" y="531.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="583.8" y="542.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="580.8" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.8" y="526.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="580.8" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="583.8" y="510.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="580.8" y="483.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.04%)</title><rect x="581.3" y="611.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="584.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="581.8" y="627.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="584.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="582.3" y="627.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="585.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="582.3" y="611.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="585.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (2 samples, 0.09%)</title><rect x="582.8" y="627.0" width="1.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="585.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (1 samples, 0.04%)</title><rect x="583.8" y="627.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="586.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (2 samples, 0.09%)</title><rect x="584.3" y="627.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="587.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (8 samples, 0.34%)</title><rect x="585.3" y="627.0" width="4.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="588.3" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="587.3" y="611.0" width="0.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="590.3" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="587.9" y="611.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="590.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.04%)</title><rect x="588.9" y="611.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="591.9" y="622.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="588.9" y="595.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="591.9" y="606.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="588.9" y="579.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="591.9" y="590.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="588.9" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="591.9" y="574.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="588.9" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="591.9" y="558.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="588.9" y="531.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="591.9" y="542.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="588.9" y="515.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="591.9" y="526.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="588.9" y="499.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="591.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (1 samples, 0.04%)</title><rect x="589.4" y="643.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="592.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="589.9" y="643.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="592.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="590.4" y="643.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="593.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.04%)</title><rect x="591.4" y="643.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="594.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (2 samples, 0.09%)</title><rect x="591.9" y="643.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="594.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="592.9" y="643.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="595.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="593.4" y="659.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="596.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (2 samples, 0.09%)</title><rect x="593.9" y="675.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="596.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.04%)</title><rect x="594.9" y="691.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="597.9" y="702.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.04%)</title><rect x="595.4" y="691.0" width="0.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="598.4" y="702.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="596.0" y="723.0" width="0.5" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="599.0" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (2 samples, 0.09%)</title><rect x="596.5" y="723.0" width="1.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="599.5" y="734.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="597.0" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="600.0" y="718.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="597.0" y="691.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="600.0" y="702.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="597.0" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="600.0" y="686.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="597.0" y="659.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="600.0" y="670.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="597.0" y="643.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="600.0" y="654.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="597.0" y="627.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="600.0" y="638.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="597.0" y="611.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="600.0" y="622.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (1 samples, 0.04%)</title><rect x="597.5" y="723.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="600.5" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/CustomNoSuchElementException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="598.0" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="601.0" y="766.0"></text>
</g>
<g>
<title>java/util/NoSuchElementException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="598.0" y="739.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="601.0" y="750.0"></text>
</g>
<g>
<title>java/lang/RuntimeException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="598.0" y="723.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="601.0" y="734.0"></text>
</g>
<g>
<title>java/lang/Exception.&lt;init&gt; (1 samples, 0.04%)</title><rect x="598.0" y="707.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="601.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Throwable.&lt;init&gt; (1 samples, 0.04%)</title><rect x="598.0" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="601.0" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/CustomNoSuchElementException.fillInStackTrace (1 samples, 0.04%)</title><rect x="598.0" y="675.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="601.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (2 samples, 0.09%)</title><rect x="598.5" y="755.0" width="1.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="601.5" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (1 samples, 0.04%)</title><rect x="599.5" y="787.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="602.5" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (1 samples, 0.04%)</title><rect x="599.5" y="771.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="602.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (1 samples, 0.04%)</title><rect x="599.5" y="755.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="602.5" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (1 samples, 0.04%)</title><rect x="599.5" y="739.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.5" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="599.5" y="723.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="602.5" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.04%)</title><rect x="599.5" y="707.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="602.5" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="599.5" y="691.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="602.5" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (3 samples, 0.13%)</title><rect x="600.0" y="819.0" width="1.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="603.0" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.13%)</title><rect x="600.0" y="803.0" width="1.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="603.0" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (3 samples, 0.13%)</title><rect x="601.5" y="835.0" width="1.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="604.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 0.34%)</title><rect x="603.0" y="851.0" width="4.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="606.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.04%)</title><rect x="603.0" y="835.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.0" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="603.0" y="819.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="606.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="603.0" y="803.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="606.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="603.0" y="787.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="606.0" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.canEncode (1 samples, 0.04%)</title><rect x="603.0" y="771.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="606.0" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.26%)</title><rect x="603.5" y="835.0" width="3.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="606.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (6 samples, 0.26%)</title><rect x="603.5" y="819.0" width="3.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="606.5" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (5 samples, 0.21%)</title><rect x="604.0" y="803.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="607.0" y="814.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (5 samples, 0.21%)</title><rect x="604.0" y="787.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="607.0" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="606.6" y="835.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="609.6" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (9 samples, 0.39%)</title><rect x="607.1" y="851.0" width="4.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="610.1" y="862.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="607.1" y="835.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="610.1" y="846.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.04%)</title><rect x="607.1" y="819.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="610.1" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.04%)</title><rect x="607.1" y="803.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.04%)</title><rect x="607.1" y="787.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="610.1" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (8 samples, 0.34%)</title><rect x="607.6" y="835.0" width="4.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="610.6" y="846.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="609.6" y="819.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="612.6" y="830.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="610.6" y="819.0" width="0.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="613.6" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.04%)</title><rect x="611.1" y="819.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="614.1" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.17%)</title><rect x="611.6" y="851.0" width="2.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="614.6" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.09%)</title><rect x="612.1" y="835.0" width="1.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="615.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="612.1" y="819.0" width="0.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="615.1" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.04%)</title><rect x="612.7" y="819.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="615.7" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="612.7" y="803.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="615.7" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="612.7" y="787.0" width="0.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="615.7" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toLowerCase (1 samples, 0.04%)</title><rect x="612.7" y="771.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="615.7" y="782.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.getProperties (1 samples, 0.04%)</title><rect x="612.7" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="615.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="613.2" y="835.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="616.2" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="613.7" y="851.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="616.7" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (3 samples, 0.13%)</title><rect x="613.7" y="835.0" width="1.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="616.7" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.09%)</title><rect x="614.2" y="819.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="617.2" y="830.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (2 samples, 0.09%)</title><rect x="614.2" y="803.0" width="1.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="617.2" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.09%)</title><rect x="615.2" y="867.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="618.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (71 samples, 3.04%)</title><rect x="616.2" y="867.0" width="35.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="619.2" y="878.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (70 samples, 3.00%)</title><rect x="616.7" y="851.0" width="35.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="619.7" y="862.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.09%)</title><rect x="618.2" y="835.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="621.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.90%)</title><rect x="619.2" y="835.0" width="10.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="622.2" y="846.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 0.90%)</title><rect x="619.2" y="819.0" width="10.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="622.2" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (17 samples, 0.73%)</title><rect x="619.2" y="803.0" width="8.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="622.2" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.09%)</title><rect x="620.2" y="787.0" width="1.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="623.2" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="621.3" y="787.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="624.3" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.09%)</title><rect x="621.8" y="787.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="624.8" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (8 samples, 0.34%)</title><rect x="622.8" y="787.0" width="4.0" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="625.8" y="798.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.04%)</title><rect x="623.3" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="626.3" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (3 samples, 0.13%)</title><rect x="623.8" y="771.0" width="1.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="626.8" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.09%)</title><rect x="625.3" y="771.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="628.3" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.04%)</title><rect x="626.3" y="771.0" width="0.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="629.3" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (2 samples, 0.09%)</title><rect x="626.8" y="787.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="629.8" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="627.8" y="803.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="630.8" y="814.0"></text>
</g>
<g>
<title>recv (3 samples, 0.13%)</title><rect x="628.3" y="803.0" width="1.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="631.3" y="814.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.09%)</title><rect x="629.9" y="835.0" width="1.0" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="632.9" y="846.0"></text>
</g>
<g>
<title>recv (42 samples, 1.80%)</title><rect x="630.9" y="835.0" width="21.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="633.9" y="846.0">r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 1.54%)</title><rect x="633.9" y="819.0" width="18.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="636.9" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (36 samples, 1.54%)</title><rect x="633.9" y="803.0" width="18.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="636.9" y="814.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (35 samples, 1.50%)</title><rect x="634.4" y="787.0" width="17.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="637.4" y="798.0"></text>
</g>
<g>
<title>__sys_recvfrom (34 samples, 1.46%)</title><rect x="634.4" y="771.0" width="17.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="637.4" y="782.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="635.4" y="755.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="638.4" y="766.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.04%)</title><rect x="635.9" y="755.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="638.9" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (25 samples, 1.07%)</title><rect x="636.4" y="755.0" width="12.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="639.4" y="766.0"></text>
</g>
<g>
<title>inet_recvmsg (22 samples, 0.94%)</title><rect x="636.4" y="739.0" width="11.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="639.4" y="750.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="637.4" y="723.0" width="0.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="640.4" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (19 samples, 0.81%)</title><rect x="638.0" y="723.0" width="9.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="641.0" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="641.0" y="707.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="644.0" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="641.0" y="691.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="644.0" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="641.0" y="675.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="644.0" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="641.5" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="644.5" y="686.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="642.0" y="707.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="645.0" y="718.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.09%)</title><rect x="642.5" y="707.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="645.5" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.09%)</title><rect x="642.5" y="691.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="645.5" y="702.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.09%)</title><rect x="642.5" y="675.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="645.5" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (6 samples, 0.26%)</title><rect x="643.5" y="707.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="646.5" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (5 samples, 0.21%)</title><rect x="643.5" y="691.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="646.5" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (5 samples, 0.21%)</title><rect x="643.5" y="675.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="646.5" y="686.0"></text>
</g>
<g>
<title>__check_object_size (4 samples, 0.17%)</title><rect x="643.5" y="659.0" width="2.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="646.5" y="670.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="645.0" y="643.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="648.0" y="654.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.04%)</title><rect x="645.5" y="659.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.5" y="670.0"></text>
</g>
<g>
<title>copyout (1 samples, 0.04%)</title><rect x="645.5" y="643.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="648.5" y="654.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (1 samples, 0.04%)</title><rect x="646.0" y="691.0" width="0.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="649.0" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="646.6" y="707.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="649.6" y="718.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.04%)</title><rect x="647.1" y="707.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="650.1" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.09%)</title><rect x="647.6" y="739.0" width="1.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="650.6" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.09%)</title><rect x="647.6" y="723.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="650.6" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.09%)</title><rect x="647.6" y="707.0" width="1.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="650.6" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.09%)</title><rect x="647.6" y="691.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="650.6" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.04%)</title><rect x="648.6" y="739.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="651.6" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (5 samples, 0.21%)</title><rect x="649.1" y="755.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="652.1" y="766.0"></text>
</g>
<g>
<title>__fdget (5 samples, 0.21%)</title><rect x="649.1" y="739.0" width="2.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="652.1" y="750.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.04%)</title><rect x="649.1" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="652.1" y="734.0"></text>
</g>
<g>
<title>__fget_light (4 samples, 0.17%)</title><rect x="649.6" y="723.0" width="2.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="652.6" y="734.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.09%)</title><rect x="650.6" y="707.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="653.6" y="718.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.04%)</title><rect x="651.6" y="771.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="654.6" y="782.0"></text>
</g>
<g>
<title>[NIO Selector #5 tid=9322] (1,038 samples, 44.51%)</title><rect x="652.1" y="931.0" width="525.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="655.1" y="942.0">[NIO Selector #5 tid=9322]</text>
</g>
<g>
<title>OptoRuntime::new_array_C(Klass*, int, JavaThread*) (1 samples, 0.04%)</title><rect x="652.1" y="915.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="655.1" y="926.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.04%)</title><rect x="652.1" y="899.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="655.1" y="910.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.04%)</title><rect x="652.1" y="883.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="655.1" y="894.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.04%)</title><rect x="652.1" y="867.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="655.1" y="878.0"></text>
</g>
<g>
<title>MemAllocator::mem_allocate(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="652.1" y="851.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="655.1" y="862.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.04%)</title><rect x="652.1" y="835.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="655.1" y="846.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.04%)</title><rect x="652.1" y="819.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="655.1" y="830.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.04%)</title><rect x="652.1" y="803.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="655.1" y="814.0"></text>
</g>
<g>
<title>MutatorAllocRegion::retire(bool) (1 samples, 0.04%)</title><rect x="652.1" y="787.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="655.1" y="798.0"></text>
</g>
<g>
<title>G1CollectedHeap::retire_mutator_alloc_region(HeapRegion*, unsigned long) (1 samples, 0.04%)</title><rect x="652.1" y="771.0" width="0.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="655.1" y="782.0"></text>
</g>
<g>
<title>G1CollectionSet::add_eden_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="652.1" y="755.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="655.1" y="766.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.04%)</title><rect x="652.1" y="739.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="655.1" y="750.0"></text>
</g>
<g>
<title>G1Analytics::predict_young_other_time_ms(unsigned long) const (1 samples, 0.04%)</title><rect x="652.1" y="723.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="655.1" y="734.0"></text>
</g>
<g>
<title>AbsSeq::davg() const (1 samples, 0.04%)</title><rect x="652.1" y="707.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="655.1" y="718.0"></text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.04%)</title><rect x="652.6" y="915.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="655.6" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.04%)</title><rect x="653.1" y="915.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="656.1" y="926.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (1,035 samples, 44.38%)</title><rect x="653.6" y="915.0" width="523.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="656.6" y="926.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="656.2" y="899.0" width="0.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="659.2" y="910.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.04%)</title><rect x="656.7" y="899.0" width="0.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="659.7" y="910.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (179 samples, 7.68%)</title><rect x="657.2" y="899.0" width="90.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="660.2" y="910.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (163 samples, 6.99%)</title><rect x="665.3" y="883.0" width="82.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="668.3" y="894.0">one/nio/n..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (2 samples, 0.09%)</title><rect x="669.3" y="867.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="672.3" y="878.0"></text>
</g>
<g>
<title>[unknown] (147 samples, 6.30%)</title><rect x="670.3" y="867.0" width="74.4" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="673.3" y="878.0">[unknown]</text>
</g>
<g>
<title>Klass::is_klass() const volatile (7 samples, 0.30%)</title><rect x="670.3" y="851.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="673.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.30%)</title><rect x="670.3" y="835.0" width="3.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="673.3" y="846.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 0.30%)</title><rect x="670.3" y="819.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="673.3" y="830.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.09%)</title><rect x="670.3" y="803.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="673.3" y="814.0"></text>
</g>
<g>
<title>__vdso_clock_gettime (4 samples, 0.17%)</title><rect x="671.3" y="803.0" width="2.1" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="674.3" y="814.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.04%)</title><rect x="673.4" y="803.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="676.4" y="814.0"></text>
</g>
<g>
<title>__libc_disable_asynccancel (4 samples, 0.17%)</title><rect x="673.9" y="851.0" width="2.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="676.9" y="862.0"></text>
</g>
<g>
<title>__libc_enable_asynccancel (1 samples, 0.04%)</title><rect x="675.9" y="851.0" width="0.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="678.9" y="862.0"></text>
</g>
<g>
<title>epoll_wait (135 samples, 5.79%)</title><rect x="676.4" y="851.0" width="68.3" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="679.4" y="862.0">epoll_w..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (98 samples, 4.20%)</title><rect x="695.1" y="835.0" width="49.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="698.1" y="846.0">entry..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.04%)</title><rect x="695.1" y="819.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="698.1" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (97 samples, 4.16%)</title><rect x="695.6" y="819.0" width="49.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="698.6" y="830.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (90 samples, 3.86%)</title><rect x="699.2" y="803.0" width="45.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="702.2" y="814.0">__x6..</text>
</g>
<g>
<title>do_epoll_wait (89 samples, 3.82%)</title><rect x="699.2" y="787.0" width="45.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="702.2" y="798.0">do_e..</text>
</g>
<g>
<title>__fdget (2 samples, 0.09%)</title><rect x="699.7" y="771.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="702.7" y="782.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.09%)</title><rect x="699.7" y="755.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="702.7" y="766.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.09%)</title><rect x="699.7" y="739.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="702.7" y="750.0"></text>
</g>
<g>
<title>ep_poll (81 samples, 3.47%)</title><rect x="700.7" y="771.0" width="41.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="703.7" y="782.0">ep_..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (37 samples, 1.59%)</title><rect x="704.2" y="755.0" width="18.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="707.2" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (22 samples, 0.94%)</title><rect x="709.3" y="739.0" width="11.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="712.3" y="750.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (17 samples, 0.73%)</title><rect x="711.3" y="723.0" width="8.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="714.3" y="734.0"></text>
</g>
<g>
<title>sock_poll (15 samples, 0.64%)</title><rect x="711.8" y="707.0" width="7.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="714.8" y="718.0"></text>
</g>
<g>
<title>tcp_poll (6 samples, 0.26%)</title><rect x="715.4" y="691.0" width="3.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="718.4" y="702.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (1 samples, 0.04%)</title><rect x="717.9" y="675.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="720.9" y="686.0"></text>
</g>
<g>
<title>tcp_stream_memory_free (2 samples, 0.09%)</title><rect x="718.4" y="691.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="721.4" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.04%)</title><rect x="719.4" y="707.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="722.4" y="718.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.04%)</title><rect x="719.9" y="723.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="722.9" y="734.0"></text>
</g>
<g>
<title>mutex_lock (3 samples, 0.13%)</title><rect x="720.4" y="739.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="723.4" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.09%)</title><rect x="721.9" y="739.0" width="1.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="724.9" y="750.0"></text>
</g>
<g>
<title>mutex_unlock (2 samples, 0.09%)</title><rect x="723.0" y="755.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="726.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (34 samples, 1.46%)</title><rect x="724.0" y="755.0" width="17.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="727.0" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (34 samples, 1.46%)</title><rect x="724.0" y="739.0" width="17.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="727.0" y="750.0"></text>
</g>
<g>
<title>__schedule (1 samples, 0.04%)</title><rect x="725.5" y="723.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="728.5" y="734.0"></text>
</g>
<g>
<title>schedule (30 samples, 1.29%)</title><rect x="726.0" y="723.0" width="15.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="729.0" y="734.0"></text>
</g>
<g>
<title>__schedule (30 samples, 1.29%)</title><rect x="726.0" y="707.0" width="15.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="729.0" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (29 samples, 1.24%)</title><rect x="726.5" y="691.0" width="14.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="729.5" y="702.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="740.7" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="743.7" y="686.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="740.7" y="659.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="743.7" y="670.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="740.7" y="643.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="743.7" y="654.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="740.7" y="627.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="743.7" y="638.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="740.7" y="611.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="743.7" y="622.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="740.7" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="743.7" y="606.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="740.7" y="579.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="743.7" y="590.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.04%)</title><rect x="741.2" y="755.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="744.2" y="766.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.19 (1 samples, 0.04%)</title><rect x="741.7" y="771.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="744.7" y="782.0"></text>
</g>
<g>
<title>fput (3 samples, 0.13%)</title><rect x="742.2" y="771.0" width="1.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="745.2" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.04%)</title><rect x="743.7" y="771.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.7" y="782.0"></text>
</g>
<g>
<title>fput (1 samples, 0.04%)</title><rect x="744.2" y="787.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="747.2" y="798.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="744.7" y="867.0" width="0.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="747.7" y="878.0"></text>
</g>
<g>
<title>clock_gettime (3 samples, 0.13%)</title><rect x="745.2" y="867.0" width="1.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="748.2" y="878.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.09%)</title><rect x="746.7" y="867.0" width="1.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="749.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (846 samples, 36.28%)</title><rect x="747.8" y="899.0" width="428.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="750.8" y="910.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (845 samples, 36.23%)</title><rect x="748.3" y="883.0" width="427.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="751.3" y="894.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (721 samples, 30.92%)</title><rect x="748.3" y="867.0" width="364.8" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="751.3" y="878.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (688 samples, 29.50%)</title><rect x="750.8" y="851.0" width="348.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="753.8" y="862.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (685 samples, 29.37%)</title><rect x="751.3" y="835.0" width="346.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="754.3" y="846.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_entity.handleRequest (674 samples, 28.90%)</title><rect x="751.3" y="819.0" width="341.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="754.3" y="830.0">RequestHandler0_entity.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (400 samples, 17.15%)</title><rect x="751.3" y="803.0" width="202.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="754.3" y="814.0">one/nio/http/HttpSession.s..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (391 samples, 16.77%)</title><rect x="753.8" y="787.0" width="197.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="756.8" y="798.0">one/nio/http/HttpSession.w..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 0.47%)</title><rect x="753.8" y="771.0" width="5.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="756.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (10 samples, 0.43%)</title><rect x="754.3" y="755.0" width="5.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="757.3" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (7 samples, 0.30%)</title><rect x="754.3" y="739.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.3" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.13%)</title><rect x="757.9" y="739.0" width="1.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="760.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.write (3 samples, 0.13%)</title><rect x="757.9" y="723.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="760.9" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (380 samples, 16.30%)</title><rect x="759.4" y="771.0" width="192.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="762.4" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (380 samples, 16.30%)</title><rect x="759.4" y="755.0" width="192.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="762.4" y="766.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (376 samples, 16.12%)</title><rect x="759.9" y="739.0" width="190.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="762.9" y="750.0">one/nio/net/Session$Array..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (374 samples, 16.04%)</title><rect x="760.9" y="723.0" width="189.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="763.9" y="734.0">one/nio/net/NativeSocket...</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.04%)</title><rect x="762.9" y="707.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="765.9" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.43%)</title><rect x="763.4" y="707.0" width="5.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="766.4" y="718.0"></text>
</g>
<g>
<title>[unknown] (10 samples, 0.43%)</title><rect x="763.4" y="691.0" width="5.1" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="766.4" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (6 samples, 0.26%)</title><rect x="763.4" y="675.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="766.4" y="686.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.04%)</title><rect x="765.0" y="659.0" width="0.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="768.0" y="670.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (2 samples, 0.09%)</title><rect x="765.5" y="659.0" width="1.0" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="768.5" y="670.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="766.5" y="675.0" width="0.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="769.5" y="686.0"></text>
</g>
<g>
<title>__send (2 samples, 0.09%)</title><rect x="767.0" y="675.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="770.0" y="686.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="768.0" y="675.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="771.0" y="686.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.04%)</title><rect x="768.5" y="707.0" width="0.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="771.5" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="768.5" y="691.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="771.5" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="768.5" y="675.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="771.5" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="768.5" y="659.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="771.5" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="768.5" y="643.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="771.5" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="768.5" y="627.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="771.5" y="638.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="768.5" y="611.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="771.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="768.5" y="595.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="771.5" y="606.0"></text>
</g>
<g>
<title>__send (358 samples, 15.35%)</title><rect x="769.0" y="707.0" width="181.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="772.0" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (355 samples, 15.22%)</title><rect x="770.5" y="691.0" width="179.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="773.5" y="702.0">entry_SYSCALL_64_after_..</text>
</g>
<g>
<title>__x64_sys_sendto (1 samples, 0.04%)</title><rect x="770.5" y="675.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="773.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (354 samples, 15.18%)</title><rect x="771.0" y="675.0" width="179.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="774.0" y="686.0">do_syscall_64</text>
</g>
<g>
<title>__sys_sendto (1 samples, 0.04%)</title><rect x="771.5" y="659.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="774.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (352 samples, 15.09%)</title><rect x="772.0" y="659.0" width="178.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="775.0" y="670.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (351 samples, 15.05%)</title><rect x="772.0" y="643.0" width="177.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="775.0" y="654.0">__sys_sendto</text>
</g>
<g>
<title>fput (2 samples, 0.09%)</title><rect x="772.0" y="627.0" width="1.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="775.0" y="638.0"></text>
</g>
<g>
<title>inet_sendmsg (1 samples, 0.04%)</title><rect x="773.1" y="627.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="776.1" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (346 samples, 14.84%)</title><rect x="773.6" y="627.0" width="175.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="776.6" y="638.0">sock_sendmsg</text>
</g>
<g>
<title>inet_sendmsg (336 samples, 14.41%)</title><rect x="774.6" y="611.0" width="170.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="777.6" y="622.0">inet_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (335 samples, 14.37%)</title><rect x="775.1" y="595.0" width="169.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="778.1" y="606.0">tcp_sendmsg</text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="775.1" y="579.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="778.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.04%)</title><rect x="775.6" y="579.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="778.6" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.04%)</title><rect x="776.1" y="579.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="779.1" y="590.0"></text>
</g>
<g>
<title>lock_sock_nested (3 samples, 0.13%)</title><rect x="776.6" y="579.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="779.6" y="590.0"></text>
</g>
<g>
<title>_cond_resched (2 samples, 0.09%)</title><rect x="777.1" y="563.0" width="1.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="780.1" y="574.0"></text>
</g>
<g>
<title>rcu_all_qs (1 samples, 0.04%)</title><rect x="777.6" y="547.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="780.6" y="558.0"></text>
</g>
<g>
<title>release_sock (2 samples, 0.09%)</title><rect x="778.1" y="579.0" width="1.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="781.1" y="590.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (2 samples, 0.09%)</title><rect x="778.1" y="563.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="781.1" y="574.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.09%)</title><rect x="778.1" y="547.0" width="1.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="781.1" y="558.0"></text>
</g>
<g>
<title>sock_zerocopy_put (1 samples, 0.04%)</title><rect x="779.1" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="782.1" y="590.0"></text>
</g>
<g>
<title>tcp_push (1 samples, 0.04%)</title><rect x="779.6" y="579.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="782.6" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (325 samples, 13.94%)</title><rect x="780.1" y="579.0" width="164.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="783.1" y="590.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>__check_object_size (2 samples, 0.09%)</title><rect x="781.7" y="563.0" width="1.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="784.7" y="574.0"></text>
</g>
<g>
<title>__virt_addr_valid (2 samples, 0.09%)</title><rect x="781.7" y="547.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="784.7" y="558.0"></text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.04%)</title><rect x="782.7" y="563.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="785.7" y="574.0"></text>
</g>
<g>
<title>copyin (1 samples, 0.04%)</title><rect x="782.7" y="547.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="785.7" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (11 samples, 0.47%)</title><rect x="783.2" y="563.0" width="5.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="786.2" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (9 samples, 0.39%)</title><rect x="783.7" y="547.0" width="4.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="786.7" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.54 (2 samples, 0.09%)</title><rect x="784.2" y="531.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="787.2" y="542.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (2 samples, 0.09%)</title><rect x="784.2" y="515.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="787.2" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 0.17%)</title><rect x="785.2" y="531.0" width="2.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="788.2" y="542.0"></text>
</g>
<g>
<title>ksize (2 samples, 0.09%)</title><rect x="787.2" y="531.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="790.2" y="542.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.04%)</title><rect x="788.2" y="547.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="791.2" y="558.0"></text>
</g>
<g>
<title>skb_entail (4 samples, 0.17%)</title><rect x="788.7" y="563.0" width="2.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="791.7" y="574.0"></text>
</g>
<g>
<title>tcp_chrono_start (1 samples, 0.04%)</title><rect x="790.3" y="547.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="793.3" y="558.0"></text>
</g>
<g>
<title>tcp_current_mss (2 samples, 0.09%)</title><rect x="790.8" y="563.0" width="1.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="793.8" y="574.0"></text>
</g>
<g>
<title>tcp_push (297 samples, 12.74%)</title><rect x="791.8" y="563.0" width="150.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="794.8" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (295 samples, 12.65%)</title><rect x="792.8" y="547.0" width="149.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="795.8" y="558.0">__tcp_push_pending_..</text>
</g>
<g>
<title>tcp_write_xmit (295 samples, 12.65%)</title><rect x="792.8" y="531.0" width="149.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="795.8" y="542.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.04%)</title><rect x="796.3" y="515.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="799.3" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (265 samples, 11.36%)</title><rect x="796.8" y="515.0" width="134.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="799.8" y="526.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__skb_clone (1 samples, 0.04%)</title><rect x="800.4" y="499.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="803.4" y="510.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.04%)</title><rect x="800.9" y="499.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="803.9" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.09%)</title><rect x="801.4" y="499.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="804.4" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (251 samples, 10.76%)</title><rect x="802.4" y="499.0" width="127.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="805.4" y="510.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (251 samples, 10.76%)</title><rect x="802.4" y="483.0" width="127.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="805.4" y="494.0">__ip_queue_xmit</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.09%)</title><rect x="802.9" y="467.0" width="1.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="805.9" y="478.0"></text>
</g>
<g>
<title>__sk_dst_check (1 samples, 0.04%)</title><rect x="803.9" y="467.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="806.9" y="478.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="804.4" y="467.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="807.4" y="478.0"></text>
</g>
<g>
<title>ip_local_out (243 samples, 10.42%)</title><rect x="804.9" y="467.0" width="123.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="807.9" y="478.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (2 samples, 0.09%)</title><rect x="804.9" y="451.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="807.9" y="462.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.04%)</title><rect x="805.4" y="435.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="808.4" y="446.0"></text>
</g>
<g>
<title>ip_output (241 samples, 10.33%)</title><rect x="805.9" y="451.0" width="122.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="808.9" y="462.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (238 samples, 10.21%)</title><rect x="807.5" y="435.0" width="120.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="810.5" y="446.0">ip_finish_output</text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.04%)</title><rect x="809.0" y="419.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="812.0" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (234 samples, 10.03%)</title><rect x="809.5" y="419.0" width="118.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="812.5" y="430.0">ip_finish_outp..</text>
</g>
<g>
<title>__local_bh_enable_ip (202 samples, 8.66%)</title><rect x="812.0" y="403.0" width="102.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="815.0" y="414.0">__local_bh_e..</text>
</g>
<g>
<title>do_softirq.part.21 (201 samples, 8.62%)</title><rect x="812.5" y="387.0" width="101.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="815.5" y="398.0">do_softirq.p..</text>
</g>
<g>
<title>do_softirq_own_stack (201 samples, 8.62%)</title><rect x="812.5" y="371.0" width="101.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="815.5" y="382.0">do_softirq_o..</text>
</g>
<g>
<title>__softirqentry_text_start (200 samples, 8.58%)</title><rect x="812.5" y="355.0" width="101.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="815.5" y="366.0">__softirqent..</text>
</g>
<g>
<title>__usecs_to_jiffies (2 samples, 0.09%)</title><rect x="814.5" y="339.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="817.5" y="350.0"></text>
</g>
<g>
<title>net_rx_action (193 samples, 8.28%)</title><rect x="815.6" y="339.0" width="97.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="818.6" y="350.0">net_rx_action</text>
</g>
<g>
<title>__kfree_skb_flush (2 samples, 0.09%)</title><rect x="817.1" y="323.0" width="1.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="820.1" y="334.0"></text>
</g>
<g>
<title>process_backlog (188 samples, 8.06%)</title><rect x="818.1" y="323.0" width="95.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="821.1" y="334.0">process_bac..</text>
</g>
<g>
<title>__netif_receive_skb (183 samples, 7.85%)</title><rect x="820.1" y="307.0" width="92.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="823.1" y="318.0">__netif_rec..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.09%)</title><rect x="820.1" y="291.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="823.1" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (179 samples, 7.68%)</title><rect x="821.1" y="291.0" width="90.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="824.1" y="302.0">__netif_re..</text>
</g>
<g>
<title>__netif_receive_skb_core (3 samples, 0.13%)</title><rect x="821.1" y="275.0" width="1.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="824.1" y="286.0"></text>
</g>
<g>
<title>ip_rcv (174 samples, 7.46%)</title><rect x="822.6" y="275.0" width="88.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="825.6" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (3 samples, 0.13%)</title><rect x="822.6" y="259.0" width="1.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="825.6" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (171 samples, 7.33%)</title><rect x="824.2" y="259.0" width="86.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="827.2" y="270.0">ip_rcv_fin..</text>
</g>
<g>
<title>ip_local_deliver (169 samples, 7.25%)</title><rect x="824.7" y="243.0" width="85.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="827.7" y="254.0">ip_local_d..</text>
</g>
<g>
<title>ip_local_deliver_finish (168 samples, 7.20%)</title><rect x="824.7" y="227.0" width="85.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="827.7" y="238.0">ip_local_d..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (164 samples, 7.03%)</title><rect x="824.7" y="211.0" width="83.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="827.7" y="222.0">ip_protoc..</text>
</g>
<g>
<title>raw_local_deliver (2 samples, 0.09%)</title><rect x="826.2" y="195.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="829.2" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (159 samples, 6.82%)</title><rect x="827.2" y="195.0" width="80.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="830.2" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 0.17%)</title><rect x="829.7" y="179.0" width="2.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="832.7" y="190.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="831.7" y="179.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="834.7" y="190.0"></text>
</g>
<g>
<title>__xfrm_policy_check2.constprop.41 (1 samples, 0.04%)</title><rect x="832.3" y="179.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="835.3" y="190.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (3 samples, 0.13%)</title><rect x="832.8" y="179.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="835.8" y="190.0"></text>
</g>
<g>
<title>tcp_parse_md5sig_option (2 samples, 0.09%)</title><rect x="834.3" y="179.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="837.3" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (140 samples, 6.00%)</title><rect x="835.3" y="179.0" width="70.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="838.3" y="190.0">tcp_v4_d..</text>
</g>
<g>
<title>tcp_data_queue (2 samples, 0.09%)</title><rect x="835.3" y="163.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="838.3" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (138 samples, 5.92%)</title><rect x="836.3" y="163.0" width="69.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="839.3" y="174.0">tcp_rcv..</text>
</g>
<g>
<title>__tcp_ack_snd_check (5 samples, 0.21%)</title><rect x="836.3" y="147.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="839.3" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (5 samples, 0.21%)</title><rect x="836.3" y="131.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="839.3" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (5 samples, 0.21%)</title><rect x="836.3" y="115.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="839.3" y="126.0"></text>
</g>
<g>
<title>mod_timer (5 samples, 0.21%)</title><rect x="836.3" y="99.0" width="2.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="839.3" y="110.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (4 samples, 0.17%)</title><rect x="836.8" y="83.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="839.8" y="94.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="838.8" y="147.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="841.8" y="158.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.04%)</title><rect x="839.3" y="147.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="842.3" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.04%)</title><rect x="839.8" y="147.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="842.8" y="158.0"></text>
</g>
<g>
<title>sk_forced_mem_schedule (1 samples, 0.04%)</title><rect x="840.4" y="147.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="843.4" y="158.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.04%)</title><rect x="840.9" y="147.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="843.9" y="158.0"></text>
</g>
<g>
<title>tcp_ack (27 samples, 1.16%)</title><rect x="841.4" y="147.0" width="13.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="844.4" y="158.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.04%)</title><rect x="844.9" y="131.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="847.9" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (15 samples, 0.64%)</title><rect x="845.4" y="131.0" width="7.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="848.4" y="142.0"></text>
</g>
<g>
<title>__kfree_skb (6 samples, 0.26%)</title><rect x="848.4" y="115.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="851.4" y="126.0"></text>
</g>
<g>
<title>kfree_skbmem (2 samples, 0.09%)</title><rect x="848.4" y="99.0" width="1.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="851.4" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (2 samples, 0.09%)</title><rect x="848.4" y="83.0" width="1.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="851.4" y="94.0"></text>
</g>
<g>
<title>skb_release_all (4 samples, 0.17%)</title><rect x="849.5" y="99.0" width="2.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="852.5" y="110.0"></text>
</g>
<g>
<title>skb_release_data (4 samples, 0.17%)</title><rect x="849.5" y="83.0" width="2.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="852.5" y="94.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="850.0" y="67.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="853.0" y="78.0"></text>
</g>
<g>
<title>skb_free_head (2 samples, 0.09%)</title><rect x="850.5" y="67.0" width="1.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="853.5" y="78.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="850.5" y="51.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="853.5" y="62.0"></text>
</g>
<g>
<title>kfree (1 samples, 0.04%)</title><rect x="851.0" y="51.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="854.0" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.04%)</title><rect x="851.0" y="35.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="854.0" y="46.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="851.5" y="115.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="854.5" y="126.0"></text>
</g>
<g>
<title>rb_erase (1 samples, 0.04%)</title><rect x="852.0" y="115.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="855.0" y="126.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.47 (1 samples, 0.04%)</title><rect x="852.5" y="115.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="855.5" y="126.0"></text>
</g>
<g>
<title>tcp_rate_skb_delivered (3 samples, 0.13%)</title><rect x="853.0" y="131.0" width="1.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="856.0" y="142.0"></text>
</g>
<g>
<title>tcp_update_pacing_rate (1 samples, 0.04%)</title><rect x="854.5" y="131.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="857.5" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (3 samples, 0.13%)</title><rect x="855.0" y="147.0" width="1.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="858.0" y="158.0"></text>
</g>
<g>
<title>tcp_data_queue (91 samples, 3.90%)</title><rect x="856.5" y="147.0" width="46.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="859.5" y="158.0">tcp_..</text>
</g>
<g>
<title>sock_def_readable (83 samples, 3.56%)</title><rect x="858.6" y="131.0" width="42.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="861.6" y="142.0">soc..</text>
</g>
<g>
<title>__wake_up_sync_key (82 samples, 3.52%)</title><rect x="859.1" y="115.0" width="41.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="862.1" y="126.0">__w..</text>
</g>
<g>
<title>__wake_up_common_lock (82 samples, 3.52%)</title><rect x="859.1" y="99.0" width="41.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="862.1" y="110.0">__w..</text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (82 samples, 3.52%)</title><rect x="859.1" y="83.0" width="41.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="862.1" y="94.0">_ra..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="900.6" y="131.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="903.6" y="142.0"></text>
</g>
<g>
<title>tcp_queue_rcv (3 samples, 0.13%)</title><rect x="901.1" y="131.0" width="1.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="904.1" y="142.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.04%)</title><rect x="902.6" y="147.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="905.6" y="158.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (2 samples, 0.09%)</title><rect x="903.1" y="147.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="906.1" y="158.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.04%)</title><rect x="903.6" y="131.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="906.6" y="142.0"></text>
</g>
<g>
<title>tcp_rate_gen (2 samples, 0.09%)</title><rect x="904.1" y="147.0" width="1.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="907.1" y="158.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.04%)</title><rect x="905.1" y="147.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="908.1" y="158.0"></text>
</g>
<g>
<title>tcp_urg (1 samples, 0.04%)</title><rect x="905.6" y="147.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="908.6" y="158.0"></text>
</g>
<g>
<title>tcp_v4_fill_cb (1 samples, 0.04%)</title><rect x="906.1" y="179.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="909.1" y="190.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (2 samples, 0.09%)</title><rect x="906.6" y="179.0" width="1.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="909.6" y="190.0"></text>
</g>
<g>
<title>raw_local_deliver (3 samples, 0.13%)</title><rect x="907.7" y="211.0" width="1.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="910.7" y="222.0"></text>
</g>
<g>
<title>tcp_v4_rcv (1 samples, 0.04%)</title><rect x="909.2" y="211.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="912.2" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (1 samples, 0.04%)</title><rect x="909.7" y="227.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="912.7" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (1 samples, 0.04%)</title><rect x="910.2" y="243.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="913.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.09%)</title><rect x="910.7" y="275.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="913.7" y="286.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.09%)</title><rect x="911.7" y="291.0" width="1.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="914.7" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.04%)</title><rect x="912.7" y="307.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="915.7" y="318.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="913.2" y="339.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="916.2" y="350.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="913.2" y="323.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="916.2" y="334.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="913.2" y="307.0" width="0.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="916.2" y="318.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.04%)</title><rect x="913.7" y="355.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="916.7" y="366.0"></text>
</g>
<g>
<title>dev_queue_xmit (27 samples, 1.16%)</title><rect x="914.2" y="403.0" width="13.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.2" y="414.0"></text>
</g>
<g>
<title>__dev_queue_xmit (27 samples, 1.16%)</title><rect x="914.2" y="387.0" width="13.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="917.2" y="398.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (11 samples, 0.47%)</title><rect x="919.3" y="371.0" width="5.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="922.3" y="382.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.04%)</title><rect x="920.8" y="355.0" width="0.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="923.8" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (6 samples, 0.26%)</title><rect x="921.3" y="355.0" width="3.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="924.3" y="366.0"></text>
</g>
<g>
<title>eth_type_trans (2 samples, 0.09%)</title><rect x="921.8" y="339.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="924.8" y="350.0"></text>
</g>
<g>
<title>netif_rx (2 samples, 0.09%)</title><rect x="922.8" y="339.0" width="1.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="925.8" y="350.0"></text>
</g>
<g>
<title>netif_rx_internal (2 samples, 0.09%)</title><rect x="922.8" y="323.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="925.8" y="334.0"></text>
</g>
<g>
<title>enqueue_to_backlog (1 samples, 0.04%)</title><rect x="923.3" y="307.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="926.3" y="318.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.04%)</title><rect x="923.8" y="339.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="926.8" y="350.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.04%)</title><rect x="923.8" y="323.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="926.8" y="334.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.04%)</title><rect x="924.3" y="355.0" width="0.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.3" y="366.0"></text>
</g>
<g>
<title>skb_csum_hwoffload_help (1 samples, 0.04%)</title><rect x="924.9" y="371.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="927.9" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (5 samples, 0.21%)</title><rect x="925.4" y="371.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="928.4" y="382.0"></text>
</g>
<g>
<title>netif_skb_features (2 samples, 0.09%)</title><rect x="926.4" y="355.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="929.4" y="366.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.04%)</title><rect x="927.4" y="355.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="930.4" y="366.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.04%)</title><rect x="927.9" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="930.9" y="478.0"></text>
</g>
<g>
<title>ipv4_dst_check (2 samples, 0.09%)</title><rect x="928.4" y="467.0" width="1.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="931.4" y="478.0"></text>
</g>
<g>
<title>skb_clone (2 samples, 0.09%)</title><rect x="929.4" y="499.0" width="1.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="932.4" y="510.0"></text>
</g>
<g>
<title>__skb_clone (2 samples, 0.09%)</title><rect x="929.4" y="483.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="932.4" y="494.0"></text>
</g>
<g>
<title>__copy_skb_header (1 samples, 0.04%)</title><rect x="929.9" y="467.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="932.9" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.04%)</title><rect x="930.4" y="499.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="933.4" y="510.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (3 samples, 0.13%)</title><rect x="930.9" y="515.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="933.9" y="526.0"></text>
</g>
<g>
<title>jiffies_to_usecs (1 samples, 0.04%)</title><rect x="932.4" y="515.0" width="0.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="935.4" y="526.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="933.0" y="515.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="936.0" y="526.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.04%)</title><rect x="933.0" y="499.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="936.0" y="510.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (11 samples, 0.47%)</title><rect x="933.5" y="515.0" width="5.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="936.5" y="526.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="936.5" y="499.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="939.5" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 0.17%)</title><rect x="937.0" y="499.0" width="2.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="940.0" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.13%)</title><rect x="937.5" y="483.0" width="1.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="940.5" y="494.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.13%)</title><rect x="937.5" y="467.0" width="1.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="940.5" y="478.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (2 samples, 0.09%)</title><rect x="937.5" y="451.0" width="1.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="940.5" y="462.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="938.5" y="451.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="941.5" y="462.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="938.5" y="435.0" width="0.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="941.5" y="446.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="938.5" y="419.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="941.5" y="430.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="938.5" y="403.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="941.5" y="414.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="938.5" y="387.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="941.5" y="398.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="938.5" y="371.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="941.5" y="382.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="938.5" y="355.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="941.5" y="366.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.04%)</title><rect x="939.0" y="515.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="942.0" y="526.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.09%)</title><rect x="939.5" y="515.0" width="1.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="942.5" y="526.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.04%)</title><rect x="940.0" y="499.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="943.0" y="510.0"></text>
</g>
<g>
<title>tcp_update_skb_after_send (2 samples, 0.09%)</title><rect x="940.5" y="515.0" width="1.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="943.5" y="526.0"></text>
</g>
<g>
<title>tcp_v4_send_check (1 samples, 0.04%)</title><rect x="941.6" y="515.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="944.6" y="526.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.04%)</title><rect x="942.1" y="563.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="945.1" y="574.0"></text>
</g>
<g>
<title>tcp_send_mss (4 samples, 0.17%)</title><rect x="942.6" y="563.0" width="2.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="945.6" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (4 samples, 0.17%)</title><rect x="942.6" y="547.0" width="2.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="945.6" y="558.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.04%)</title><rect x="944.1" y="531.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="947.1" y="542.0"></text>
</g>
<g>
<title>security_socket_sendmsg (7 samples, 0.30%)</title><rect x="944.6" y="611.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="947.6" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (7 samples, 0.30%)</title><rect x="944.6" y="595.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="947.6" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (7 samples, 0.30%)</title><rect x="944.6" y="579.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="947.6" y="590.0"></text>
</g>
<g>
<title>_cond_resched (1 samples, 0.04%)</title><rect x="944.6" y="563.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="947.6" y="574.0"></text>
</g>
<g>
<title>aa_sk_perm (6 samples, 0.26%)</title><rect x="945.1" y="563.0" width="3.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="948.1" y="574.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.04%)</title><rect x="947.6" y="547.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="950.6" y="558.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.04%)</title><rect x="948.1" y="611.0" width="0.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="951.1" y="622.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.09%)</title><rect x="948.6" y="627.0" width="1.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="951.6" y="638.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.04%)</title><rect x="949.1" y="611.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="952.1" y="622.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.04%)</title><rect x="949.1" y="595.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="952.1" y="606.0"></text>
</g>
<g>
<title>sock_sendmsg (1 samples, 0.04%)</title><rect x="949.6" y="643.0" width="0.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="952.6" y="654.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.13%)</title><rect x="950.2" y="739.0" width="1.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="953.2" y="750.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="950.2" y="723.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="953.2" y="734.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.09%)</title><rect x="950.7" y="723.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="953.7" y="734.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="951.2" y="707.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="954.2" y="718.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 0.17%)</title><rect x="951.7" y="787.0" width="2.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="954.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (3 samples, 0.13%)</title><rect x="952.2" y="771.0" width="1.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="955.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.09%)</title><rect x="952.7" y="755.0" width="1.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="955.7" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.04%)</title><rect x="953.2" y="739.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="956.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (13 samples, 0.56%)</title><rect x="953.7" y="803.0" width="6.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="956.7" y="814.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (7 samples, 0.30%)</title><rect x="953.7" y="787.0" width="3.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="956.7" y="798.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.09%)</title><rect x="954.2" y="771.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="957.2" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.17%)</title><rect x="955.2" y="771.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="958.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="957.2" y="787.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="960.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="957.2" y="771.0" width="0.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="960.2" y="782.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (1 samples, 0.04%)</title><rect x="957.2" y="755.0" width="0.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="960.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (5 samples, 0.21%)</title><rect x="957.7" y="787.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="960.7" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="959.8" y="771.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="962.8" y="782.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="959.8" y="755.0" width="0.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="962.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.04%)</title><rect x="959.8" y="739.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="962.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.entity (261 samples, 11.19%)</title><rect x="960.3" y="803.0" width="132.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="963.3" y="814.0">ru/mail/polis/se..</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.09%)</title><rect x="961.8" y="787.0" width="1.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="964.8" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.09%)</title><rect x="961.8" y="771.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.8" y="782.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="961.8" y="755.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="964.8" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="961.8" y="739.0" width="1.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="964.8" y="750.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="961.8" y="723.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="964.8" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.get (253 samples, 10.85%)</title><rect x="962.8" y="787.0" width="128.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="965.8" y="798.0">ru/mail/polis/se..</text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.get (253 samples, 10.85%)</title><rect x="962.8" y="771.0" width="128.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="965.8" y="782.0">ru/mail/polis/da..</text>
</g>
<g>
<title>java/lang/invoke/Invokers$Holder.linkToTargetMethod (6 samples, 0.26%)</title><rect x="962.8" y="755.0" width="3.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="965.8" y="766.0"></text>
</g>
<g>
<title>java/lang/invoke/LambdaForm$MH/1095293768.invoke (6 samples, 0.26%)</title><rect x="962.8" y="739.0" width="3.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="965.8" y="750.0"></text>
</g>
<g>
<title>java/lang/invoke/DirectMethodHandle$Holder.invokeStatic (4 samples, 0.17%)</title><rect x="963.8" y="723.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="966.8" y="734.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.newString (3 samples, 0.13%)</title><rect x="963.8" y="707.0" width="1.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="966.8" y="718.0"></text>
</g>
<g>
<title>java/lang/StringConcatHelper.prepend (1 samples, 0.04%)</title><rect x="965.3" y="707.0" width="0.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="968.3" y="718.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="965.3" y="691.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.3" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.toString (26 samples, 1.11%)</title><rect x="965.8" y="755.0" width="13.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="968.8" y="766.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.append (21 samples, 0.90%)</title><rect x="966.3" y="739.0" width="10.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="969.3" y="750.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (21 samples, 0.90%)</title><rect x="966.3" y="723.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.3" y="734.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.ensureCapacityInternal (4 samples, 0.17%)</title><rect x="971.9" y="707.0" width="2.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="974.9" y="718.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (4 samples, 0.17%)</title><rect x="971.9" y="691.0" width="2.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="974.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (3 samples, 0.13%)</title><rect x="972.4" y="675.0" width="1.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="975.4" y="686.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.putStringAt (2 samples, 0.09%)</title><rect x="973.9" y="707.0" width="1.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="976.9" y="718.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.getCoder (1 samples, 0.04%)</title><rect x="973.9" y="691.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="976.9" y="702.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="974.4" y="691.0" width="0.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="977.4" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="974.4" y="675.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="977.4" y="686.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (4 samples, 0.17%)</title><rect x="974.9" y="707.0" width="2.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="977.9" y="718.0"></text>
</g>
<g>
<title>java/lang/StringBuffer.toString (4 samples, 0.17%)</title><rect x="977.0" y="739.0" width="2.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.0" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (4 samples, 0.17%)</title><rect x="977.0" y="723.0" width="2.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="980.0" y="734.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 0.17%)</title><rect x="977.0" y="707.0" width="2.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="980.0" y="718.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.09%)</title><rect x="977.0" y="691.0" width="1.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="980.0" y="702.0"></text>
</g>
<g>
<title>register_finalizer Runtime1 stub (2 samples, 0.09%)</title><rect x="977.0" y="675.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="980.0" y="686.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="978.0" y="691.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="981.0" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (210 samples, 9.01%)</title><rect x="979.0" y="755.0" width="106.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="982.0" y="766.0">org/rocksdb/R..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (210 samples, 9.01%)</title><rect x="979.0" y="739.0" width="106.3" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="982.0" y="750.0">org/rocksdb/R..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (200 samples, 8.58%)</title><rect x="979.0" y="723.0" width="101.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="982.0" y="734.0">Java_org_roc..</text>
</g>
<g>
<title>/usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.25 (1 samples, 0.04%)</title><rect x="979.0" y="707.0" width="0.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="982.0" y="718.0"></text>
</g>
<g>
<title>__libc_free (4 samples, 0.17%)</title><rect x="979.5" y="707.0" width="2.0" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="982.5" y="718.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.09%)</title><rect x="981.5" y="707.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="984.5" y="718.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.04%)</title><rect x="982.5" y="707.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="985.5" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.04%)</title><rect x="983.0" y="707.0" width="0.6" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="986.0" y="718.0"></text>
</g>
<g>
<title>operator delete(void*) (2 samples, 0.09%)</title><rect x="983.6" y="707.0" width="1.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="986.6" y="718.0"></text>
</g>
<g>
<title>operator new(unsigned long) (4 samples, 0.17%)</title><rect x="984.6" y="707.0" width="2.0" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="987.6" y="718.0"></text>
</g>
<g>
<title>operator new[](unsigned long) (1 samples, 0.04%)</title><rect x="986.6" y="707.0" width="0.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="989.6" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (2 samples, 0.09%)</title><rect x="987.1" y="707.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="990.1" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (182 samples, 7.80%)</title><rect x="988.1" y="707.0" width="92.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="991.1" y="718.0">rocksdb_get..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="990.6" y="691.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="993.6" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (3 samples, 0.13%)</title><rect x="991.1" y="691.0" width="1.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="994.1" y="702.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.13%)</title><rect x="992.7" y="691.0" width="1.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="995.7" y="702.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.04%)</title><rect x="993.7" y="675.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="996.7" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (4 samples, 0.17%)</title><rect x="994.2" y="691.0" width="2.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="997.2" y="702.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.04%)</title><rect x="994.7" y="675.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="997.7" y="686.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.09%)</title><rect x="995.2" y="675.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="998.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (162 samples, 6.95%)</title><rect x="996.2" y="691.0" width="82.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="999.2" y="702.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::Cleanable::Cleanable() (3 samples, 0.13%)</title><rect x="996.2" y="675.0" width="1.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="999.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (159 samples, 6.82%)</title><rect x="997.7" y="675.0" width="80.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1000.7" y="686.0">rocksdb::..</text>
</g>
<g>
<title>_init (3 samples, 0.13%)</title><rect x="999.2" y="659.0" width="1.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1002.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (153 samples, 6.56%)</title><rect x="1000.8" y="659.0" width="77.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1003.8" y="670.0">rocksdb::..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (4 samples, 0.17%)</title><rect x="1001.3" y="643.0" width="2.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1004.3" y="654.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1003.3" y="643.0" width="0.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1006.3" y="654.0"></text>
</g>
<g>
<title>_init (4 samples, 0.17%)</title><rect x="1003.8" y="643.0" width="2.0" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1006.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyHandleImpl::cfd() const (1 samples, 0.04%)</title><rect x="1005.8" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1008.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetAndRefSuperVersion(rocksdb::ColumnFamilyData*) (1 samples, 0.04%)</title><rect x="1006.3" y="643.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1009.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::ReadCallback*, bool*) (127 samples, 5.45%)</title><rect x="1006.8" y="643.0" width="64.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1009.8" y="654.0">rocksdb..</text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (5 samples, 0.21%)</title><rect x="1011.4" y="627.0" width="2.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1014.4" y="638.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1013.9" y="627.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.9" y="638.0"></text>
</g>
<g>
<title>__memmove_sse2_unaligned (2 samples, 0.09%)</title><rect x="1014.4" y="627.0" width="1.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1017.4" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (7 samples, 0.30%)</title><rect x="1015.4" y="627.0" width="3.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1018.4" y="638.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1018.5" y="611.0" width="0.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1021.5" y="622.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1018.5" y="595.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1021.5" y="606.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1018.5" y="579.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1021.5" y="590.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1018.5" y="563.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1021.5" y="574.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1018.5" y="547.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1021.5" y="558.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1018.5" y="531.0" width="0.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1021.5" y="542.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1018.5" y="515.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1021.5" y="526.0"></text>
</g>
<g>
<title>_init (4 samples, 0.17%)</title><rect x="1019.0" y="627.0" width="2.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1022.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.04%)</title><rect x="1021.0" y="627.0" width="0.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1024.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (10 samples, 0.43%)</title><rect x="1021.5" y="627.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1024.5" y="638.0"></text>
</g>
<g>
<title>_init (2 samples, 0.09%)</title><rect x="1022.5" y="611.0" width="1.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1025.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.04%)</title><rect x="1023.5" y="611.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1026.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (2 samples, 0.09%)</title><rect x="1024.0" y="611.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1027.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.04%)</title><rect x="1025.0" y="611.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1028.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Swap(void*) (2 samples, 0.09%)</title><rect x="1025.5" y="611.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1028.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (2 samples, 0.09%)</title><rect x="1025.5" y="595.0" width="1.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1028.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (2 samples, 0.09%)</title><rect x="1026.6" y="627.0" width="1.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1029.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1027.6" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1030.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1027.6" y="611.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1030.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) (1 samples, 0.04%)</title><rect x="1027.6" y="595.0" width="0.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1030.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (4 samples, 0.17%)</title><rect x="1028.1" y="627.0" width="2.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1031.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (3 samples, 0.13%)</title><rect x="1030.1" y="627.0" width="1.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1033.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (62 samples, 2.66%)</title><rect x="1031.6" y="627.0" width="31.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1034.6" y="638.0">ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (59 samples, 2.53%)</title><rect x="1032.1" y="611.0" width="29.9" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1035.1" y="622.0">/t..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (55 samples, 2.36%)</title><rect x="1033.6" y="595.0" width="27.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1036.6" y="606.0">r..</text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (3 samples, 0.13%)</title><rect x="1047.3" y="579.0" width="1.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1050.3" y="590.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1048.8" y="579.0" width="0.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1051.8" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (5 samples, 0.21%)</title><rect x="1049.3" y="579.0" width="2.6" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1052.3" y="590.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1051.9" y="579.0" width="0.5" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1054.9" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (18 samples, 0.77%)</title><rect x="1052.4" y="579.0" width="9.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1055.4" y="590.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="1054.9" y="563.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1057.9" y="574.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (3 samples, 0.13%)</title><rect x="1055.4" y="563.0" width="1.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1058.4" y="574.0"></text>
</g>
<g>
<title>__memcmp_avx2_movbe (9 samples, 0.39%)</title><rect x="1056.9" y="563.0" width="4.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1059.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.04%)</title><rect x="1061.5" y="595.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1064.5" y="606.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.04%)</title><rect x="1062.0" y="611.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1065.0" y="622.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.04%)</title><rect x="1062.5" y="611.0" width="0.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1065.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="1063.0" y="627.0" width="1.0" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1066.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::GetFromList(std::list&lt;rocksdb::MemTable*, std::allocator&lt;rocksdb::MemTable*&gt; &gt;*, rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="1063.0" y="611.0" width="1.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1066.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (1 samples, 0.04%)</title><rect x="1064.0" y="627.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1067.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::PackSequenceAndType(unsigned long, rocksdb::ValueType) (1 samples, 0.04%)</title><rect x="1064.5" y="627.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1067.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::PinnedIteratorsManager::~PinnedIteratorsManager() (1 samples, 0.04%)</title><rect x="1065.0" y="627.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1068.0" y="638.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) (2 samples, 0.09%)</title><rect x="1065.5" y="627.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1068.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.04%)</title><rect x="1066.5" y="627.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1069.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (8 samples, 0.34%)</title><rect x="1067.0" y="627.0" width="4.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1070.0" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni5964228789529203781.so (1 samples, 0.04%)</title><rect x="1068.6" y="611.0" width="0.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1071.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::GetContext::GetContext(rocksdb::Comparator const*, rocksdb::MergeOperator const*, rocksdb::Logger*, rocksdb::Statistics*, rocksdb::GetContext::GetState, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*, bool*, rocksdb::MergeContext*, unsigned long*, rocksdb::Env*, unsigned long*, rocksdb::PinnedIteratorsManager*, rocksdb::ReadCallback*, bool*) (2 samples, 0.09%)</title><rect x="1069.1" y="611.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1072.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (2 samples, 0.09%)</title><rect x="1070.1" y="611.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1073.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.04%)</title><rect x="1071.1" y="643.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1074.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::LookupKey::LookupKey(rocksdb::Slice const&amp;, unsigned long) (2 samples, 0.09%)</title><rect x="1071.6" y="643.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1074.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*) (3 samples, 0.13%)</title><rect x="1072.6" y="643.0" width="1.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1075.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::MergeContext::~MergeContext() (2 samples, 0.09%)</title><rect x="1074.1" y="643.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1077.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::PerfStepTimer::Start() (2 samples, 0.09%)</title><rect x="1075.1" y="643.0" width="1.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1078.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (3 samples, 0.13%)</title><rect x="1076.1" y="643.0" width="1.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1079.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::Version::Get(rocksdb::ReadOptions const&amp;, rocksdb::LookupKey const&amp;, rocksdb::PinnableSlice*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, bool*, bool*, unsigned long*, rocksdb::ReadCallback*, bool*) (1 samples, 0.04%)</title><rect x="1077.7" y="643.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1080.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (4 samples, 0.17%)</title><rect x="1078.2" y="691.0" width="2.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1081.2" y="702.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.04%)</title><rect x="1080.2" y="723.0" width="0.5" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="1083.2" y="734.0"></text>
</g>
<g>
<title>__malloc (1 samples, 0.04%)</title><rect x="1080.7" y="723.0" width="0.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1083.7" y="734.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1081.2" y="723.0" width="0.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1084.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::ReadOptions::ReadOptions() (4 samples, 0.17%)</title><rect x="1081.7" y="723.0" width="2.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1084.7" y="734.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (3 samples, 0.13%)</title><rect x="1083.7" y="723.0" width="1.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1086.7" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/CustomNoSuchElementException.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1085.3" y="755.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1088.3" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (10 samples, 0.43%)</title><rect x="1085.8" y="755.0" width="5.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1088.8" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1090.3" y="739.0" width="0.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1093.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/service/vovasq/ServiceImpl.upsert (3 samples, 0.13%)</title><rect x="1090.8" y="787.0" width="1.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1093.8" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.upsert (3 samples, 0.13%)</title><rect x="1090.8" y="771.0" width="1.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1093.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/util/Util.fromByteBufferToByteArray (3 samples, 0.13%)</title><rect x="1090.8" y="755.0" width="1.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1093.8" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.duplicate (2 samples, 0.09%)</title><rect x="1091.3" y="739.0" width="1.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1094.3" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1091.3" y="723.0" width="1.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1094.3" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1091.3" y="707.0" width="1.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1094.3" y="718.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (2 samples, 0.09%)</title><rect x="1091.3" y="691.0" width="1.0" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1094.3" y="702.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (4 samples, 0.17%)</title><rect x="1092.3" y="819.0" width="2.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1095.3" y="830.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (3 samples, 0.13%)</title><rect x="1092.8" y="803.0" width="1.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1095.8" y="814.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (6 samples, 0.26%)</title><rect x="1094.4" y="819.0" width="3.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1097.4" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (6 samples, 0.26%)</title><rect x="1094.4" y="803.0" width="3.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.4" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (4 samples, 0.17%)</title><rect x="1094.4" y="787.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1097.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.equals (2 samples, 0.09%)</title><rect x="1095.4" y="771.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1098.4" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.&lt;init&gt; (1 samples, 0.04%)</title><rect x="1095.9" y="755.0" width="0.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1098.9" y="766.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.04%)</title><rect x="1096.4" y="787.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1099.4" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.04%)</title><rect x="1096.4" y="771.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1099.4" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.04%)</title><rect x="1096.4" y="755.0" width="0.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1099.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.getBytes (1 samples, 0.04%)</title><rect x="1096.4" y="739.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1099.4" y="750.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1096.9" y="787.0" width="0.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1099.9" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.04%)</title><rect x="1097.4" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1100.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.04%)</title><rect x="1097.4" y="803.0" width="0.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.4" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1097.4" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1100.4" y="798.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="1097.4" y="771.0" width="0.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1100.4" y="782.0"></text>
</g>
<g>
<title>java/lang/AbstractStringBuilder.append (1 samples, 0.04%)</title><rect x="1097.4" y="755.0" width="0.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1100.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/RocksDaoImpl.getKeyByteBuffer (2 samples, 0.09%)</title><rect x="1097.9" y="835.0" width="1.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1100.9" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (9 samples, 0.39%)</title><rect x="1098.9" y="851.0" width="4.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1101.9" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (3 samples, 0.13%)</title><rect x="1098.9" y="835.0" width="1.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1101.9" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (2 samples, 0.09%)</title><rect x="1099.4" y="819.0" width="1.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1102.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.04%)</title><rect x="1099.9" y="803.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1102.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.21%)</title><rect x="1100.4" y="835.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.4" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (5 samples, 0.21%)</title><rect x="1100.4" y="819.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1103.4" y="830.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.13%)</title><rect x="1101.4" y="803.0" width="1.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1104.4" y="814.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (3 samples, 0.13%)</title><rect x="1101.4" y="787.0" width="1.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1104.4" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.04%)</title><rect x="1103.0" y="835.0" width="0.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1106.0" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (6 samples, 0.26%)</title><rect x="1103.5" y="851.0" width="3.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.setBody (6 samples, 0.26%)</title><rect x="1103.5" y="835.0" width="3.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1106.5" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.04%)</title><rect x="1105.5" y="819.0" width="0.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1108.5" y="830.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (1 samples, 0.04%)</title><rect x="1106.0" y="819.0" width="0.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1109.0" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.addHeader (1 samples, 0.04%)</title><rect x="1106.5" y="851.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1109.5" y="862.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1106.5" y="835.0" width="0.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1109.5" y="846.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1106.5" y="819.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1109.5" y="830.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1106.5" y="803.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1109.5" y="814.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1106.5" y="787.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1109.5" y="798.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1106.5" y="771.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1109.5" y="782.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1106.5" y="755.0" width="0.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1109.5" y="766.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1106.5" y="739.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1109.5" y="750.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (10 samples, 0.43%)</title><rect x="1107.0" y="851.0" width="5.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1110.0" y="862.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 0.17%)</title><rect x="1107.5" y="835.0" width="2.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1110.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="1107.5" y="819.0" width="0.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1110.5" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.09%)</title><rect x="1108.0" y="819.0" width="1.0" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1111.0" y="830.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="1108.0" y="803.0" width="0.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1111.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toLowerCase (1 samples, 0.04%)</title><rect x="1108.0" y="787.0" width="0.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1111.0" y="798.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1108.5" y="803.0" width="0.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1111.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Character.toUpperCase (1 samples, 0.04%)</title><rect x="1108.5" y="787.0" width="0.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1111.5" y="798.0"></text>
</g>
<g>
<title>java/lang/CharacterDataLatin1.toUpperCase (1 samples, 0.04%)</title><rect x="1108.5" y="771.0" width="0.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1111.5" y="782.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.04%)</title><rect x="1109.0" y="819.0" width="0.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1112.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (4 samples, 0.17%)</title><rect x="1109.5" y="835.0" width="2.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1112.5" y="846.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.04%)</title><rect x="1110.6" y="819.0" width="0.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1113.6" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.04%)</title><rect x="1111.1" y="819.0" width="0.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1114.1" y="830.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.04%)</title><rect x="1111.1" y="803.0" width="0.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1114.1" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (1 samples, 0.04%)</title><rect x="1111.6" y="835.0" width="0.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1114.6" y="846.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.09%)</title><rect x="1112.1" y="851.0" width="1.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1115.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.09%)</title><rect x="1112.1" y="835.0" width="1.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1115.1" y="846.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.09%)</title><rect x="1112.1" y="819.0" width="1.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1115.1" y="830.0"></text>
</g>
<g>
<title>java/lang/String.rangeCheck (2 samples, 0.09%)</title><rect x="1112.1" y="803.0" width="1.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1115.1" y="814.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.13%)</title><rect x="1113.1" y="867.0" width="1.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1116.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (121 samples, 5.19%)</title><rect x="1114.6" y="867.0" width="61.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1117.6" y="878.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (119 samples, 5.10%)</title><rect x="1115.6" y="851.0" width="60.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1118.6" y="862.0">one/ni..</text>
</g>
<g>
<title>[unknown] (35 samples, 1.50%)</title><rect x="1118.7" y="835.0" width="17.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1121.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (35 samples, 1.50%)</title><rect x="1118.7" y="819.0" width="17.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1121.7" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (30 samples, 1.29%)</title><rect x="1118.7" y="803.0" width="15.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1121.7" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.04%)</title><rect x="1120.2" y="787.0" width="0.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1123.2" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (1 samples, 0.04%)</title><rect x="1120.7" y="787.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1123.7" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.297] (2 samples, 0.09%)</title><rect x="1121.2" y="787.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1124.2" y="798.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.13%)</title><rect x="1122.2" y="787.0" width="1.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1125.2" y="798.0"></text>
</g>
<g>
<title>_init (1 samples, 0.04%)</title><rect x="1123.7" y="787.0" width="0.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1126.7" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.09%)</title><rect x="1124.2" y="787.0" width="1.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1127.2" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (14 samples, 0.60%)</title><rect x="1125.2" y="787.0" width="7.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1128.2" y="798.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.09%)</title><rect x="1126.7" y="771.0" width="1.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1129.7" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::trans_and_fence(JavaThreadState, JavaThreadState) [clone .constprop.298] (3 samples, 0.13%)</title><rect x="1127.8" y="771.0" width="1.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1130.8" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (6 samples, 0.26%)</title><rect x="1129.3" y="771.0" width="3.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1132.3" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (3 samples, 0.13%)</title><rect x="1132.3" y="787.0" width="1.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1135.3" y="798.0"></text>
</g>
<g>
<title>__pthread_enable_asynccancel (1 samples, 0.04%)</title><rect x="1133.8" y="803.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1136.8" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.04%)</title><rect x="1134.3" y="803.0" width="0.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="1137.3" y="814.0"></text>
</g>
<g>
<title>recv (3 samples, 0.13%)</title><rect x="1134.8" y="803.0" width="1.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1137.8" y="814.0"></text>
</g>
<g>
<title>recv (78 samples, 3.34%)</title><rect x="1136.4" y="835.0" width="39.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1139.4" y="846.0">recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (67 samples, 2.87%)</title><rect x="1141.9" y="819.0" width="33.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1144.9" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (67 samples, 2.87%)</title><rect x="1141.9" y="803.0" width="33.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1144.9" y="814.0">do..</text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.04%)</title><rect x="1142.9" y="787.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1145.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (64 samples, 2.74%)</title><rect x="1143.4" y="787.0" width="32.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1146.4" y="798.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (63 samples, 2.70%)</title><rect x="1143.4" y="771.0" width="31.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1146.4" y="782.0">__..</text>
</g>
<g>
<title>inet_recvmsg (4 samples, 0.17%)</title><rect x="1145.0" y="755.0" width="2.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1148.0" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (48 samples, 2.06%)</title><rect x="1147.0" y="755.0" width="24.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1150.0" y="766.0">s..</text>
</g>
<g>
<title>inet_recvmsg (34 samples, 1.46%)</title><rect x="1147.0" y="739.0" width="17.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1150.0" y="750.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="1147.0" y="723.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1150.0" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (33 samples, 1.42%)</title><rect x="1147.5" y="723.0" width="16.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1150.5" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.09%)</title><rect x="1149.0" y="707.0" width="1.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1152.0" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.09%)</title><rect x="1149.0" y="691.0" width="1.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1152.0" y="702.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.04%)</title><rect x="1149.0" y="675.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1152.0" y="686.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.04%)</title><rect x="1149.5" y="675.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1152.5" y="686.0"></text>
</g>
<g>
<title>__tcp_select_window (3 samples, 0.13%)</title><rect x="1150.0" y="707.0" width="1.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1153.0" y="718.0"></text>
</g>
<g>
<title>kfree_skbmem (1 samples, 0.04%)</title><rect x="1151.5" y="707.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1154.5" y="718.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.04%)</title><rect x="1152.0" y="707.0" width="0.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1155.0" y="718.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.04%)</title><rect x="1152.0" y="691.0" width="0.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1155.0" y="702.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (21 samples, 0.90%)</title><rect x="1152.6" y="707.0" width="10.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.6" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (20 samples, 0.86%)</title><rect x="1152.6" y="691.0" width="10.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1155.6" y="702.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.04%)</title><rect x="1152.6" y="675.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1155.6" y="686.0"></text>
</g>
<g>
<title>simple_copy_to_iter (19 samples, 0.81%)</title><rect x="1153.1" y="675.0" width="9.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1156.1" y="686.0"></text>
</g>
<g>
<title>__check_object_size (14 samples, 0.60%)</title><rect x="1153.1" y="659.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1156.1" y="670.0"></text>
</g>
<g>
<title>__check_heap_object (6 samples, 0.26%)</title><rect x="1154.6" y="643.0" width="3.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1157.6" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (5 samples, 0.21%)</title><rect x="1157.6" y="643.0" width="2.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1160.6" y="654.0"></text>
</g>
<g>
<title>__virt_addr_valid (1 samples, 0.04%)</title><rect x="1160.1" y="659.0" width="0.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1163.1" y="670.0"></text>
</g>
<g>
<title>_copy_to_iter (3 samples, 0.13%)</title><rect x="1160.7" y="659.0" width="1.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1163.7" y="670.0"></text>
</g>
<g>
<title>copy_user_enhanced_fast_string (3 samples, 0.13%)</title><rect x="1160.7" y="643.0" width="1.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1163.7" y="654.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 0.04%)</title><rect x="1162.2" y="659.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1165.2" y="670.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_r9 (1 samples, 0.04%)</title><rect x="1162.7" y="691.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.7" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.04%)</title><rect x="1163.2" y="707.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1166.2" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.04%)</title><rect x="1163.7" y="707.0" width="0.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1166.7" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.04%)</title><rect x="1163.7" y="691.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1166.7" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.04%)</title><rect x="1163.7" y="675.0" width="0.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1166.7" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (12 samples, 0.51%)</title><rect x="1164.2" y="739.0" width="6.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1167.2" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (10 samples, 0.43%)</title><rect x="1165.2" y="723.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1168.2" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (10 samples, 0.43%)</title><rect x="1165.2" y="707.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1168.2" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (9 samples, 0.39%)</title><rect x="1165.7" y="691.0" width="4.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1168.7" y="702.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.04%)</title><rect x="1166.7" y="675.0" width="0.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1169.7" y="686.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (6 samples, 0.26%)</title><rect x="1167.2" y="675.0" width="3.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1170.2" y="686.0"></text>
</g>
<g>
<title>aa_profile_af_perm (6 samples, 0.26%)</title><rect x="1167.2" y="659.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1170.2" y="670.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.09%)</title><rect x="1170.3" y="739.0" width="1.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1173.3" y="750.0"></text>
</g>
<g>
<title>sockfd_lookup_light (8 samples, 0.34%)</title><rect x="1171.3" y="755.0" width="4.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1174.3" y="766.0"></text>
</g>
<g>
<title>__fdget (8 samples, 0.34%)</title><rect x="1171.3" y="739.0" width="4.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1174.3" y="750.0"></text>
</g>
<g>
<title>__fget_light (8 samples, 0.34%)</title><rect x="1171.3" y="723.0" width="4.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1174.3" y="734.0"></text>
</g>
<g>
<title>__fget (7 samples, 0.30%)</title><rect x="1171.8" y="707.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1174.8" y="718.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1174.8" y="691.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1177.8" y="702.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.04%)</title><rect x="1174.8" y="675.0" width="0.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1177.8" y="686.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.04%)</title><rect x="1174.8" y="659.0" width="0.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1177.8" y="670.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.04%)</title><rect x="1174.8" y="643.0" width="0.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1177.8" y="654.0"></text>
</g>
<g>
<title>run_rebalance_domains (1 samples, 0.04%)</title><rect x="1174.8" y="627.0" width="0.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1177.8" y="638.0"></text>
</g>
<g>
<title>update_blocked_averages (1 samples, 0.04%)</title><rect x="1174.8" y="611.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1177.8" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1174.8" y="595.0" width="0.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1177.8" y="606.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.04%)</title><rect x="1175.3" y="771.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1178.3" y="782.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (3 samples, 0.13%)</title><rect x="1175.8" y="899.0" width="1.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1178.8" y="910.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.04%)</title><rect x="1175.8" y="883.0" width="0.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="1178.8" y="894.0"></text>
</g>
<g>
<title>gettimeofday (2 samples, 0.09%)</title><rect x="1176.3" y="883.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1179.3" y="894.0"></text>
</g>
<g>
<title>[vdso] (2 samples, 0.09%)</title><rect x="1176.3" y="867.0" width="1.0" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1179.3" y="878.0"></text>
</g>
<g>
<title>[tid=9281] (2 samples, 0.09%)</title><rect x="1177.3" y="931.0" width="1.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1180.3" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1177.3" y="915.0" width="1.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1180.3" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1177.3" y="899.0" width="1.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1180.3" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1177.3" y="883.0" width="1.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1180.3" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1177.3" y="867.0" width="1.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1180.3" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.09%)</title><rect x="1177.3" y="851.0" width="1.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1180.3" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1177.3" y="835.0" width="0.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1180.3" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1177.3" y="819.0" width="0.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1180.3" y="830.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::pop_global(StarTask volatile&amp;) (1 samples, 0.04%)</title><rect x="1177.9" y="835.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1180.9" y="846.0"></text>
</g>
<g>
<title>[tid=9285] (2 samples, 0.09%)</title><rect x="1178.4" y="931.0" width="1.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1181.4" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1178.4" y="915.0" width="1.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1181.4" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1178.4" y="899.0" width="1.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1181.4" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1178.4" y="883.0" width="1.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1181.4" y="894.0"></text>
</g>
<g>
<title>ConcurrentGCThread::run() (2 samples, 0.09%)</title><rect x="1178.4" y="867.0" width="1.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1181.4" y="878.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingThread::run_service() (2 samples, 0.09%)</title><rect x="1178.4" y="851.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.4" y="862.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate(HeapRegionClosure*) const (2 samples, 0.09%)</title><rect x="1178.4" y="835.0" width="1.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1181.4" y="846.0"></text>
</g>
<g>
<title>G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1178.4" y="819.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1181.4" y="830.0"></text>
</g>
<g>
<title>G1CollectionSet::update_young_region_prediction(HeapRegion*, unsigned long) (1 samples, 0.04%)</title><rect x="1178.4" y="803.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.4" y="814.0"></text>
</g>
<g>
<title>G1Policy::predict_region_elapsed_time_ms(HeapRegion*, bool) const (1 samples, 0.04%)</title><rect x="1178.4" y="787.0" width="0.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1181.4" y="798.0"></text>
</g>
<g>
<title>G1Analytics::predict_card_num(unsigned long, bool) const (1 samples, 0.04%)</title><rect x="1178.4" y="771.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1181.4" y="782.0"></text>
</g>
<g>
<title>Monitor::unlock() (1 samples, 0.04%)</title><rect x="1178.9" y="819.0" width="0.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1181.9" y="830.0"></text>
</g>
<g>
<title>[tid=9286] (1 samples, 0.04%)</title><rect x="1179.4" y="931.0" width="0.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1182.4" y="942.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1179.4" y="915.0" width="0.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1182.4" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.04%)</title><rect x="1179.4" y="899.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1182.4" y="910.0"></text>
</g>
<g>
<title>do_futex_wait.constprop.1 (1 samples, 0.04%)</title><rect x="1179.4" y="883.0" width="0.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1182.4" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.04%)</title><rect x="1179.4" y="867.0" width="0.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.4" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.04%)</title><rect x="1179.4" y="851.0" width="0.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.4" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.04%)</title><rect x="1179.4" y="835.0" width="0.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1182.4" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.04%)</title><rect x="1179.4" y="819.0" width="0.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.4" y="830.0"></text>
</g>
<g>
<title>[tid=9294] (6 samples, 0.26%)</title><rect x="1179.9" y="931.0" width="3.0" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1182.9" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (4 samples, 0.17%)</title><rect x="1179.9" y="915.0" width="2.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1182.9" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.09%)</title><rect x="1180.9" y="899.0" width="1.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1183.9" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.09%)</title><rect x="1180.9" y="883.0" width="1.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1183.9" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.09%)</title><rect x="1180.9" y="867.0" width="1.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1183.9" y="878.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.09%)</title><rect x="1180.9" y="851.0" width="1.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1183.9" y="862.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.09%)</title><rect x="1180.9" y="835.0" width="1.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1183.9" y="846.0"></text>
</g>
<g>
<title>_raw_spin_lock (1 samples, 0.04%)</title><rect x="1180.9" y="819.0" width="0.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1183.9" y="830.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.04%)</title><rect x="1181.4" y="819.0" width="0.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1184.4" y="830.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.04%)</title><rect x="1181.4" y="803.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1184.4" y="814.0"></text>
</g>
<g>
<title>_raw_spin_unlock_irqrestore (1 samples, 0.04%)</title><rect x="1181.4" y="787.0" width="0.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1184.4" y="798.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1181.9" y="915.0" width="1.0" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1184.9" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1181.9" y="899.0" width="1.0" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="1184.9" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1181.9" y="883.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1184.9" y="894.0"></text>
</g>
<g>
<title>WatcherThread::run() (2 samples, 0.09%)</title><rect x="1181.9" y="867.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1184.9" y="878.0"></text>
</g>
<g>
<title>WatcherThread::sleep() const (2 samples, 0.09%)</title><rect x="1181.9" y="851.0" width="1.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1184.9" y="862.0"></text>
</g>
<g>
<title>Monitor::wait(bool, long, bool) (1 samples, 0.04%)</title><rect x="1182.4" y="835.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1185.4" y="846.0"></text>
</g>
<g>
<title>Monitor::IWait(Thread*, long) (1 samples, 0.04%)</title><rect x="1182.4" y="819.0" width="0.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.4" y="830.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.04%)</title><rect x="1182.4" y="803.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1185.4" y="814.0"></text>
</g>
<g>
<title>[tid=9354] (2 samples, 0.09%)</title><rect x="1182.9" y="931.0" width="1.0" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1185.9" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1182.9" y="915.0" width="1.0" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1185.9" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1182.9" y="899.0" width="1.0" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1185.9" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1182.9" y="883.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1185.9" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1182.9" y="867.0" width="1.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1185.9" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.09%)</title><rect x="1182.9" y="851.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1185.9" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1182.9" y="835.0" width="0.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1185.9" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1182.9" y="819.0" width="0.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1185.9" y="830.0"></text>
</g>
<g>
<title>G1RemSet::scan_rem_set(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1183.4" y="835.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.4" y="846.0"></text>
</g>
<g>
<title>G1CollectionSet::iterate_from(HeapRegionClosure*, unsigned int, unsigned int) const (1 samples, 0.04%)</title><rect x="1183.4" y="819.0" width="0.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1186.4" y="830.0"></text>
</g>
<g>
<title>G1ScanRSForRegionClosure::do_heap_region(HeapRegion*) (1 samples, 0.04%)</title><rect x="1183.4" y="803.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1186.4" y="814.0"></text>
</g>
<g>
<title>G1CodeRootSet::nmethods_do(CodeBlobClosure*) const (1 samples, 0.04%)</title><rect x="1183.4" y="787.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.4" y="798.0"></text>
</g>
<g>
<title>nmethod::fix_oop_relocations(unsigned char*, unsigned char*, bool) (1 samples, 0.04%)</title><rect x="1183.4" y="771.0" width="0.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1186.4" y="782.0"></text>
</g>
<g>
<title>[tid=9355] (2 samples, 0.09%)</title><rect x="1183.9" y="931.0" width="1.0" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="1186.9" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1183.9" y="915.0" width="1.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1186.9" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1183.9" y="899.0" width="1.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1186.9" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1183.9" y="883.0" width="1.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1186.9" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1183.9" y="867.0" width="1.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1186.9" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1183.9" y="851.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1186.9" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1183.9" y="835.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1186.9" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1183.9" y="819.0" width="0.5" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1186.9" y="830.0"></text>
</g>
<g>
<title>ParallelSPCleanupTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1184.4" y="851.0" width="0.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1187.4" y="862.0"></text>
</g>
<g>
<title>Threads::possibly_parallel_threads_do(bool, ThreadClosure*) (1 samples, 0.04%)</title><rect x="1184.4" y="835.0" width="0.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1187.4" y="846.0"></text>
</g>
<g>
<title>JavaThread::nmethods_do(CodeBlobClosure*) (1 samples, 0.04%)</title><rect x="1184.4" y="819.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1187.4" y="830.0"></text>
</g>
<g>
<title>frame::sender(RegisterMap*) const (1 samples, 0.04%)</title><rect x="1184.4" y="803.0" width="0.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1187.4" y="814.0"></text>
</g>
<g>
<title>CodeBlob::is_deoptimization_stub() const (1 samples, 0.04%)</title><rect x="1184.4" y="787.0" width="0.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.4" y="798.0"></text>
</g>
<g>
<title>[tid=9356] (2 samples, 0.09%)</title><rect x="1184.9" y="931.0" width="1.1" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1187.9" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1184.9" y="915.0" width="1.1" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1187.9" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1184.9" y="899.0" width="1.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="1187.9" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1184.9" y="883.0" width="1.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1187.9" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1184.9" y="867.0" width="1.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1187.9" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.09%)</title><rect x="1184.9" y="851.0" width="1.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1187.9" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.09%)</title><rect x="1184.9" y="835.0" width="1.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1187.9" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1184.9" y="819.0" width="0.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1187.9" y="830.0"></text>
</g>
<g>
<title>TaskQueueSetSuper::randomParkAndMiller(int*) (1 samples, 0.04%)</title><rect x="1185.4" y="819.0" width="0.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1188.4" y="830.0"></text>
</g>
<g>
<title>[tid=9357] (2 samples, 0.09%)</title><rect x="1186.0" y="931.0" width="1.0" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1189.0" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1186.0" y="915.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1189.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1186.0" y="899.0" width="1.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1189.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1186.0" y="883.0" width="1.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1189.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1186.0" y="867.0" width="1.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1189.0" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.09%)</title><rect x="1186.0" y="851.0" width="1.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.0" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.09%)</title><rect x="1186.0" y="835.0" width="1.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1189.0" y="846.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::pop_global(StarTask volatile&amp;) (1 samples, 0.04%)</title><rect x="1186.0" y="819.0" width="0.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1189.0" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1186.5" y="819.0" width="0.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1189.5" y="830.0"></text>
</g>
<g>
<title>[tid=9358] (2 samples, 0.09%)</title><rect x="1187.0" y="931.0" width="1.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1190.0" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1187.0" y="915.0" width="1.0" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1190.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1187.0" y="899.0" width="1.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1190.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1187.0" y="883.0" width="1.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1190.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1187.0" y="867.0" width="1.0" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1190.0" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.09%)</title><rect x="1187.0" y="851.0" width="1.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1190.0" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (2 samples, 0.09%)</title><rect x="1187.0" y="835.0" width="1.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1190.0" y="846.0"></text>
</g>
<g>
<title>GenericTaskQueue&lt;StarTask, (MemoryType)5, 131072u&gt;::pop_global(StarTask volatile&amp;) (1 samples, 0.04%)</title><rect x="1187.0" y="819.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1190.0" y="830.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1187.5" y="819.0" width="0.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1190.5" y="830.0"></text>
</g>
<g>
<title>[tid=9359] (2 samples, 0.09%)</title><rect x="1188.0" y="931.0" width="1.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1191.0" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1188.0" y="915.0" width="1.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1191.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1188.0" y="899.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1191.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1188.0" y="883.0" width="1.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1191.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1188.0" y="867.0" width="1.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.0" y="878.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (2 samples, 0.09%)</title><rect x="1188.0" y="851.0" width="1.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1191.0" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1188.0" y="835.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.0" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1188.0" y="819.0" width="0.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1191.0" y="830.0"></text>
</g>
<g>
<title>G1RootProcessor::evacuate_roots(G1ParScanThreadState*, unsigned int) (1 samples, 0.04%)</title><rect x="1188.5" y="835.0" width="0.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1191.5" y="846.0"></text>
</g>
<g>
<title>G1RootProcessor::process_java_roots(G1RootClosures*, G1GCPhaseTimes*, unsigned int) (1 samples, 0.04%)</title><rect x="1188.5" y="819.0" width="0.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1191.5" y="830.0"></text>
</g>
<g>
<title>ClassLoaderDataGraph::roots_cld_do(CLDClosure*, CLDClosure*) (1 samples, 0.04%)</title><rect x="1188.5" y="803.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1191.5" y="814.0"></text>
</g>
<g>
<title>G1CLDScanClosure::do_cld(ClassLoaderData*) (1 samples, 0.04%)</title><rect x="1188.5" y="787.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1191.5" y="798.0"></text>
</g>
<g>
<title>ClassLoaderData::oops_do(OopClosure*, bool, bool) (1 samples, 0.04%)</title><rect x="1188.5" y="771.0" width="0.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1191.5" y="782.0"></text>
</g>
<g>
<title>G1ParCopyClosure&lt;(G1Barrier)1, (G1Mark)0&gt;::do_oop(oopDesc**) (1 samples, 0.04%)</title><rect x="1188.5" y="755.0" width="0.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1191.5" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.04%)</title><rect x="1188.5" y="739.0" width="0.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1191.5" y="750.0"></text>
</g>
<g>
<title>void OopOopIterateBackwardsDispatch&lt;G1ScanEvacuatedObjClosure&gt;::Table::oop_oop_iterate_backwards&lt;InstanceMirrorKlass, unsigned int&gt;(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*) (1 samples, 0.04%)</title><rect x="1188.5" y="723.0" width="0.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1191.5" y="734.0"></text>
</g>
<g>
<title>void G1ScanEvacuatedObjClosure::do_oop_work&lt;unsigned int&gt;(unsigned int*) (1 samples, 0.04%)</title><rect x="1188.5" y="707.0" width="0.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1191.5" y="718.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.04%)</title><rect x="1188.5" y="691.0" width="0.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1191.5" y="702.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.04%)</title><rect x="1188.5" y="675.0" width="0.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1191.5" y="686.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.04%)</title><rect x="1188.5" y="659.0" width="0.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1191.5" y="670.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.04%)</title><rect x="1188.5" y="643.0" width="0.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1191.5" y="654.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.04%)</title><rect x="1188.5" y="627.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1191.5" y="638.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.04%)</title><rect x="1188.5" y="611.0" width="0.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1191.5" y="622.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.04%)</title><rect x="1188.5" y="595.0" width="0.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1191.5" y="606.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.04%)</title><rect x="1188.5" y="579.0" width="0.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1191.5" y="590.0"></text>
</g>
<g>
<title>[tid=9360] (2 samples, 0.09%)</title><rect x="1189.0" y="931.0" width="1.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1192.0" y="942.0"></text>
</g>
<g>
<title>start_thread (2 samples, 0.09%)</title><rect x="1189.0" y="915.0" width="1.0" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1192.0" y="926.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (2 samples, 0.09%)</title><rect x="1189.0" y="899.0" width="1.0" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1192.0" y="910.0"></text>
</g>
<g>
<title>Thread::call_run() (2 samples, 0.09%)</title><rect x="1189.0" y="883.0" width="1.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1192.0" y="894.0"></text>
</g>
<g>
<title>GangWorker::loop() (2 samples, 0.09%)</title><rect x="1189.0" y="867.0" width="1.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.0" y="878.0"></text>
</g>
<g>
<title>G1FreeCollectionSetTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1189.0" y="851.0" width="0.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1192.0" y="862.0"></text>
</g>
<g>
<title>HeapRegionRemSet::clear_locked(bool) (1 samples, 0.04%)</title><rect x="1189.0" y="835.0" width="0.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1192.0" y="846.0"></text>
</g>
<g>
<title>OtherRegionsTable::clear() (1 samples, 0.04%)</title><rect x="1189.0" y="819.0" width="0.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1192.0" y="830.0"></text>
</g>
<g>
<title>SparsePRT::clear() (1 samples, 0.04%)</title><rect x="1189.0" y="803.0" width="0.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1192.0" y="814.0"></text>
</g>
<g>
<title>RSHashTable::clear() (1 samples, 0.04%)</title><rect x="1189.0" y="787.0" width="0.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1192.0" y="798.0"></text>
</g>
<g>
<title>G1ParTask::work(unsigned int) (1 samples, 0.04%)</title><rect x="1189.5" y="851.0" width="0.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1192.5" y="862.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.04%)</title><rect x="1189.5" y="835.0" width="0.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1192.5" y="846.0"></text>
</g>
<g>
<title>SpinPause (1 samples, 0.04%)</title><rect x="1189.5" y="819.0" width="0.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1192.5" y="830.0"></text>
</g>
</g>
</svg>
